{"version":3,"mappings":"wlEACAA,MCDA,8HAEAC,oJAqCAC,0DAKA,MAJAC,qBAEAA,qBAEAF,sDACA,EAEAG,gBACAF,mBACA,EAEA,qBAEA,GAEAF,MCvDA,sEAEAK,sEAqBA,UACAC,yCAGA,OAFAC,eACAC,6CACAC,aACAF,yDAEA,SACA,EASAG,yCAGAD,KACAE,UACAC,UAJAL,GACAM,QAKA,SACA,0EAGAA,0BAEA,EACAD,WACAL,iBACAF,yBACAO,UACAD,aACAF,WAEAG,QAEA,SACA,EAUAE,mEAGAH,WACAF,IACAG,UAJAL,GACAM,QAKA,SACA,0EAGA,WACA,iEAGAA,kCACAE,gDAEAC,SACAA,cACAC,0BACAA,+BACAA,sBACAF,YACAJ,eAIA,EACAC,WACAL,iBACAM,cACAD,UACAD,aACAF,WAEAG,QAEA,SACA,EAEAM,mFACA,eAMA,GAJAb,8BACAc,mCAGAd,2BACAA,gDAEA,uBACAA,qDACAe,gCACA,GACA,yCAEAC,MACAC,wCAKAjB,gCACA,4BACAiB,+BACAA,OACA,QAGA,IAEAA,cAGA,OAEA,oFAGA,YACA,EACAC,gEACAC,KACAC,sFACA,mBACAC,IAEAC,UACAC,UACA,2BACA,GACAH,QAEAA,MACA,EACAI,8DACA,uDACA,EACAC,iEACA,kBAKA,MAJAL,yEAEA,MADAM,qBACA,kBACA,GACA1B,kBACA,CACA,EAEA,WAEA,GAEAL,MC3LA,2FAEAK,sEACA2B,sEAEA,0BAEAC,uCACA,aACAC,QACAC,iBACAC,YACAC,aACA,EAkBA,MAhBAhC,2BACAiC,MACAA,eACAnC,qBACAmC,6BACAnC,wBACAE,gBACAF,qBACAE,qBACAF,iBAEAoC,oCAGA,GAEApC,OACA,CA3BA,EA6BA,2BAEA,GAEAH,MCtCA,6NAEAgC,sEACA3B,sEACAmC,kIACAC,qFACAC,0IAqBAC,eAKAC,wDAEAC,sBACAC,YACAC,UACAC,iBACAC,sCAiBA,GAfA,mBAGA,iBAGA,6BACAC,kBACAH,WAGAA,SACAA,4CAGAA,kEACA,0DAGA,uBACAJ,wBACA,mBACA,uCAEA,kEAGA,uCACA,qCAEA,oCACA,iBAEA,EACAQ,yBACA,+BACA,EACAhB,mCACA,2BACA,EACAiB,+BACA,kBACA,EACAC,oDACAxC,YACAyC,iCACA,sBACAjC,aACAd,0BACAA,KAEAM,gBAEA,CACA,cACA,EAMA0C,iCACA,eAOA,MANAlD,qDACA,sBACAE,6BACAM,gBAEA,GACAA,OACA,EAEA2C,+BACA,QACA,kBACA,gCAEA,6BACA,qBACA,2BACA,IACA,gCACA,uCAGA,sBAKA,WACA,EACAtB,+BACA,QACA,kBACA,0BACAF,qFAEA,6BACA,qBACA,2BACA,IACA,gCACA,qCAGA,oBAKA,WACA,EACAyB,qCAEA,MADA,4BACA,IACA,EACAC,qCACA,kCACA,EACAC,iDAKA,MAJAtD,8BACAuC,mDAEA,2BACA,IACA,EACAgB,uCACA,+BACA,EACAC,sDAIA,YAHA,6BACAC,uBAEAA,UACA,qCAEA,WACA,EACAC,qDAEA,yBACAT,kCACAA,kDACA,CAJA,YAsBA,MAjBA,uCACAU,uBAEA,oCACAA,yBAEA3D,iCACAwC,4BACAmB,UACA3D,cACAA,qBACAwC,6BACAmB,SAEA,EAEA,GACAV,IACA,EACAW,yCACA,wBACAC,0CAMA,MAJA7D,oCACA8D,sBACA,GAEA9D,WACA,EACA+D,8BACA9C,YACA+C,YAkBA,MAhBA,qCACAA,wBACAA,yBACA/C,uDAIAA,+CACAgD,oBAEAhD,MADAgD,qBACA,2CAEA,kCAIAhD,KACA,EACAiD,yBACA,+BACA,SACA,sCACA,SACA,mBAEA,CACA,WACA,EAIAC,6CACA5B,kDACA,yBACA,EACA6B,6CACA,oBAEA,sCAGA,QAFA,uBACAP,0CACAA,cACAA,qCAGA,EAIAQ,yCAEA,MADA9B,mDACA,qBACA,EACA+B,yCACA,aAIA,MAHA9B,kDACAsB,sBAEAA,GACA,EACAS,2CACA,kCACA,uBACA,qCACA,uBACAtB,kCAEA,KACA,oCAEA,EACAuB,mCACA,oBACA,EAUAC,4BACAC,wDACAC,4CAGAC,WACAC,aACAC,kBACApC,mBACAG,+BACA,EAPAkC,UASA,cACA,4FAqBA,MAlBA,wCAEAF,uDAEA,qCACAA,oBACAhC,sCACA,EACAgC,mFAGAD,2CACAA,sDACAG,0DACAL,kBACAA,wCAGAK,SACA,EACAC,8DACAC,kBACAN,uCAOA,GALA,wCAEAM,2DAGAN,UACAM,qEAEA,qFAGA,+BACA,EACAC,oDACA,gCACA,YACA,mDAEA,qFAEA,EACAC,2BACA,SACAzC,mBACA0C,mBACAvC,+BACA,EASA,MAPA,wCACAwC,mCAEA,qCACAA,kCAGAA,GACA,EACAC,2BAEA,QACA,EACAC,sCACA,iCACAC,gCACA,wDAEA,EACAC,sCACA,kDACA,EACAC,4CACA,iCACA,UACA,wDACAC,sCAEAA,MACA,yBAEA,wBAEA,CACA,EAQAC,wDACA,wBACAC,2DAGA,yBACA,4BAEA,wBACA,EACAC,uBACA,wCACA,EACAC,uBACA,wCACA,CACA,GAEAP,4DACA,2DACA,2CACA,EAmCA,MAhCAhD,2CACA,6DACA,EAEAA,4CACA,yBACA,EAEAA,sCACA,0BACA,EAOAA,sCACA,+CAEA,YACA,qDAMA,MALAxC,wCACA,6BACA,GACA,oCAGA,CACA,QACA,EAEAwC,OAEA,GAEA7C,MCvdA,2IAEAK,sEACA2B,sEACAa,uGAqBAwD,gBACAC,uBAQAC,+CACAxD,4BACAyD,4CAQA,MANA3D,+BACA2D,wCACA3D,qCACA2D,8CAGAA,QACA,EAMAC,iBAKAC,uCACAJ,yBACA,EAMAK,iCACA,yBACA,EAQAC,iCACA,qCAEAC,oCAEAA,mCACAP,2DAEAA,gDACAD,kDAEAA,8CAGAA,oBACA,EAMAS,8BACAC,+DACAV,oDAEA,EAKAW,uBACAX,eACAC,sBACA,EAQAW,iDACAC,YACAhF,yBACAA,aAEA,0CAEA,EAOAiF,sFACA,2CACA,CACAC,wBACAC,kCACA,EACAC,UACA,CACA,EAMAC,6CACAC,sCACAC,mBACA,8BACAC,4BACAC,0BAEA,EACA,CACA,EAEA,sBAEA,GAEA3H,MC9JA,6JAgoBA4H,sBAwEAA,WAtsBA5F,sEACA3B,sEACAwH,oGACAC,gIAEAC,QACAC,iBACA,iBACA,sBACA,0BACAC,eACA,kBACAC,gBACA,EACAC,OACAH,iBACAC,eACA,iBACA,EACAG,YACA,uBACAJ,iBACAC,eACA,iBACA,EACAI,QACAL,iBACA,sBACAC,eACA,iBACA,EACAK,OACAN,iBACA,sBACA,kBACAC,cACA,EACAM,SACAP,iBACA,sBACAC,eACA,iBACA,EACAO,OACAP,eACAQ,UACAP,gBACA,EACAQ,SACA,kBACAV,iBACA,sBACAC,eACAC,gBACA,EACAS,QACAC,wzBACAX,eACAY,QACA,iBACAX,gBACA,EACAY,OACA,iBACA,yBACAZ,gBACA,EACAa,OACAH,yhDACAX,eACAY,QACAJ,UACA,iBACAP,gBACA,EACAc,QACAjB,YACAI,YACAC,sBACAC,cACAC,YACAC,gBACAC,YACAE,gBACA,wBACAT,eACAD,iBACA,iBACA,0BACAE,gBACA,EACA,2BACAD,eACAD,iBACA,iBACA,0BACAE,gBACA,EACA,gBACAA,gBACA,EACA,cACAD,eACAD,iBACA,kBACA,2BACA,qBACA,eACAE,gBACA,EACA,sBACAF,iBACA,kBACA,2BACA,uBACA,eACAE,gBACA,EACA,cACAF,iBACA,kBACA,2BACA,uBACA,eACAE,gBACA,EACA,cACAF,iBACA,kBACA,2BACA,uBACA,eACAE,gBACA,EACA,kBACAF,cACA,kBACA,2BACA,uBACA,cACA,EACAW,cACA,gBACAV,eACA,gBACA,EACA,kBACAA,eACA,gBACA,EACAa,YACA,eACA,kBACAZ,iBACA,kBACA,EACA,gBACAD,cACA,EACAc,YACA,YACAd,eACAD,cACAE,iBACAO,SACA,EACA,gBACAR,YACAD,iBACA,gBACA,CACA,EAqBAiB,UACAC,eACAC,WACA,EAGAC,iBACAC,OACAC,UACAC,SACAJ,OACAD,SACA,EAGAM,sBAMAH,2BACA,mEACA,EAOAH,iCACA,oCACA,EAOAC,8BAEAM,oBADAC,EAYA,IARAC,yDACAA,uBACAA,wBAIAA,wBAEAD,eACA,SACAC,yBAIA,wBACA,CACA,EAGAC,sBAMAP,yBACA,0DACA,EAOAE,6BACA,8BACA,EAOAD,+BACA,uCACA,EAOAJ,gCACA,sBACA,EAOAN,4BACAO,SACA1I,EAEA,wBACA,+BACA,0BACA0I,2BACAA,4BAKA,WACA,CACA,EAMAU,eAKAC,cAOAC,yCACAhD,uBACAA,0BAEA,EAeAiD,4DAyCA,mCACA,mDAEAvC,GACAA,oBAGAwC,uBACAC,qCAEA,yCACA,kCACAA,0BACAA,0BACAA,yBAGAC,+BACAC,iCAEA,kBACAC,uDAGA,mCACAlK,uCAGAqH,wCACA,IAnEAA,kDACA8C,sCACAC,0CACAC,mCAEAC,gDACAC,mDARAL,YAuEA,MA5DAA,2CACAM,sDACAA,iCACAN,yCAEAG,UAGAxI,cACAwB,yCACAoH,mBAEA,sBAEA5I,kDAEAwF,mDACAxF,wDAEAwF,mDACA,mCACArH,4BAuCAkK,KACA,EAgBAQ,mEACAC,WAEAC,wDACAC,gFAFAjE,QAIA,6BACAA,wCACAA,UACA5G,aACA4G,uBAGA5G,eACA4G,oCAGAA,uDAGA/E,+CAEA,oBACA+E,cACA,WACAA,kBACA+D,qCAEA,EACA,WACA/D,kBACA+D,wBACA,KACA,0DAGA,EACA,CAGA,0BACA/D,8BACA+D,+CACA,QAIA,4DAGA,cACA,EAcAG,kDACA,kFA+EA,MA7EA9K,qBAEA2K,UACAI,+BACAf,yCACAhC,yDAEAgD,YACAC,gBACAC,eACAC,eACAC,iCAGA5C,aACAC,yBACA4C,sCACAhI,oBACAA,yCAGArD,WACAwI,sBAEA8C,QACApB,gCACAtD,wBACA0E,OAEA,GACA9C,2BAGA+C,uBAGAlD,YACAa,+CACA7F,mBACAmI,oBACApL,cACAqL,qBAEAvL,8BACAF,8BAGAE,+BACA,cACAsI,gBACAxI,qBAEA,GAEAgI,OACAK,YACA,WACAG,iBACAmC,oCAEA,EACA,WACAnC,iBACAmC,sCAEA,EACA,CAGAtC,4BACAA,0BACAG,4BAEAtI,8BACAF,uBAGAwI,MACA,EASAkD,wDACA,gBAQA,GANAxL,qBACAsJ,+CACA,yBACA,IAGA,wDACA,6EAkBA,MAbAqB,aADA,SADAvF,KAEA+D,kCAEA,YAJA/D,KAKA+D,iDAEA,SAPA/D,KAQA+D,kCAGAG,OAIAqB,WACA,EASAc,qDACAC,2CACAC,UACA7B,oCAQA,MANA9J,wBACA2L,8EACA,+BACA,cAGAA,MACA,EAQAC,4DACAC,sDACAC,sEAEAA,qCAEA9L,mBACA8L,uDACAA,gBACA,EACA,EACA,EAiBAC,iDAEAC,oBACAC,qBACAC,4BACAC,kCACAC,wBACAC,wCACAvC,SAPAwC,6BAuCA,MA9BAtC,wBACAF,4BAGAyC,4CACAzM,aACAyM,oBAGAzM,cACAyM,YAGAA,yBAEAF,eACAE,gDAGA,yCACAD,6CACAE,6CAEAD,uCAGAH,OACA,6BAGAG,IACA,EAgBAE,iEACAhC,WACAiC,qBAEAH,qBACAvC,MACAhK,QACA,CACAiM,yBACAD,wBACA,EACAlM,QACA,CACA,CAQA,MANAA,qBACAyM,sBACA9B,2BACA,GAGA8B,IACA,EAiBAI,mEACAC,8CACAC,kBAEAC,gBACAC,eACAC,yBACAC,0BAEAC,wBACAC,uBACAC,iBACAC,kBAEAC,gBAGAtE,WACAA,kBACA7F,sFAGAmH,wEA6BA,MA3BAxK,iBACAwN,SACAtE,WACAR,QACA+E,UACAC,SACA,GACA,CAGAF,qBAUAA,wCACAG,sDACAzM,4BAEA,MADAsJ,0EACAgD,GACA,EAEAA,GACA,EAQAI,oEACAhH,2BACAA,sDACAA,4BAGA/E,8CACA,GAEAyK,OACA,gCAGA,EAOAuB,gDACAjH,wBAEA1G,gDACA,wCACA0G,+BAEA,GAGAA,4BAEA,EAOAkH,8DACA,cACAlH,UACAA,oBACA+D,yCACAzK,mBACAyK,wDACA/D,mBACA,OAEA,EAQAE,wCACA,6CACAiH,iDACAA,+DAEA,EAUAC,sDACAjD,yCACA7B,+CACAc,0BAKA,MAHAe,oCACAA,mCAEAA,KACA,EAQAkD,gDACAC,sCACAC,mCACAC,qCACAC,oCAEA,OACAlC,eACAD,aACA,CACA,EAQAoC,oDAEAC,4BADArD,IAWA,MARAsD,2BACAtD,0BACAC,2BACAqD,gCACAtD,yFACAC,uFAGA,SACA,CACA,EAEA,oBAEA,GAEAtL,MCp8BA,8MAuJA,+CACA,gCACA,gCACA,CAxJAK,sEACAoC,qFACAmM,mHACAC,2EACAC,8GAsBA,mCAEAC,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAuBA,MAZAF,uBACAG,uEACAA,iHACAH,iCACA,oDACAI,iMACAA,sCACAJ,+FACAG,wEACAA,kHACAH,iCACA,oBACAA,MACA,GAMAK,yDAEAC,+DACA,6BACA,gCACA,uBACA,kBACA,6CACA,uBACA,eACA,aACA,EAkGA,MAhGAA,0CACA,8CACA,EAEAA,+CACA,gBACA,EAEAA,iDACA,yBACA,EAEAA,uCACA,kBACA,EAEAA,kDACA1I,kBACA2I,gBACAC,4BACArN,kBACA,GACA,CAEA,0CACA,EAEAmN,+CACA,kDACAE,oDACAC,mDACAC,mEACAC,gEAgBA,GAdAC,yCACA,0EACA,UACApM,cACA2B,gCACAH,wBACA,kBAGAwK,UACA,qDACA,6BAGAC,SACA,eACAC,OACAA,kBAEAG,kCACAF,MACAA,iBAEAE,gBACA,UACA,CACA,EAEAP,uDACA,aACAM,WACA,EAEAH,UACAlQ,kCACAA,wBACA,qBACA,GAGA,oBACA,EAEA+P,0CACA,iBACA,EAEAA,2DACA,8CACA,EAEAA,uCACA,wDACA,aACA,EAEAA,8CACA,kCACA,6BAEA,EAEAA,WAEA,GAEAlQ,MC7QA,yUA+JA,yCACA,gCACA,gCACA,CAhKAK,sEACAqQ,gFACA7B,2EACApI,4IACAyJ,wHACAtB,mHACAE,8GAsBA,mCAEAC,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,iJA6BA,MAlBAF,yCACAG,sEACAA,gHACAH,iCACA,uBACAI,iMACAA,sCACAJ,wCACAG,sEACAA,gHACAH,iCACA,+CACAG,wEACAA,kHACAH,iCACA,gCACAC,kMACA,8DACAD,MACA,GA0BAe,iBAQAC,oBAMAC,iEACA,+BACAF,uBACAtQ,mDACAyQ,8BACA,EAEA,EASAC,+EACA,+BACAD,8DASA,MAPAH,yBACAA,0BAEAA,uDAEAG,+EAEAA,WACA,EAMAE,wDACAL,sCACAlK,gBACAG,aACAxC,+BACA6M,OACA,EAMAC,sDACA,+BACAP,uBACAtQ,mDACAyQ,mBACA,EAEA,EAYAK,gFACA,cACAC,mBACAC,mBACAC,gCACAC,kCACAC,uEACAC,qBACAC,IAEA,8BACA,qCAIA,6CACAL,WACAI,qBACAC,IACA,OACA7C,4CACAA,6CAEA/D,sDACAwG,sCACA,yBACA,8BACA,aACAd,gBACAJ,sCACAC,YACAC,uBACAiB,aACA,EACAhB,qBACA,0CACA,CACA,GAEA,4BAEA,YAEA,IACAc,UACAK,IACA,OACA7C,2CACAA,4CACA/D,sDACAwG,sCACA,yBACA,+CACA,8BACA,aACAd,gBACAH,YACAC,uBACAiB,aACA,EACAhB,qBACA,qBACA,CACA,GAGA,4BAEA,YAEA,KAIA,iEACAmB,IACA,OACA7C,6CACAA,8CACA/D,kDACAwG,qCACA,yBAEA,YAEA,GAEA,EASAK,sEAGA,GAFAnB,oBAEAN,iCACA,4CAEA1I,mDACAoK,UACApB,YACAJ,eACA,GACA,IAEAyB,oDACAC,2BACAD,gBACA,EAKA,MAHAA,mDACAE,wBAEAF,MACA,CACA,EAMAG,0DACAvL,gBACAG,aACAxC,2BACA6N,QACA,CACA,EAEA,yBAEA,GAEAjS,MChZA,6GAEAgC,sEACA3B,yEAqBA6R,yBACA,WACAlQ,uDACA,EACA,GACA,aACA,CAQAmQ,oCACA,oBAGAC,eACAA,iBAIA/R,4CACA,eAGAgS,0BACAC,6BAGA5K,wBAGA4K,2CAEAD,4BACAC,2CAGAD,6BACAC,6CAGAA,+CAEA,EACA,EAOAC,oCACAlS,4CACAgS,mBACArQ,yDAEA,EACA,EAKAwQ,uBACAL,cACAI,aACA,EAEA,4BAEA,GAEAvS,MClGA,kFAoBAyS,0CACAC,+GAEAC,mBAQAC,iDACA,oCACA,YAEA,mBAEA,2CAEA,gCACA5G,UAEA,IAEA,oBAKA,0CAEA,gCACAA,UAEA,IAEA,CACA,WAEA,EAOA6G,wDACA,6GACA,EAOAC,wDACA,wCACA,CACA,EAEA,wBAEA,GAEA9S,MCpFA,2FAoEA,mCACA,aACA+S,gBAIA,GAFAC,gDAEAD,KAUA,MATA1S,kDACA,2BAIA,MAHA4S,sCACAA,mCAIA,GAEAA,KAEA,CASA,mCACA,aACAC,gBAIA,GAFAF,gDAEAE,KAqBA,MApBA7S,kDACA,2BAeA,MAdA4S,sCAEAA,WAEA5S,sCACA4S,4BACA,GAEA5S,yBACA4S,yCAGAA,aAIA,GAEAA,KAEA,CAQA,kCACA9D,qBACA,yCAEA,EACA,CAvIA9O,yEAoBA8S,cACAC,gCACA,2BACA,EACAC,gCACA,YACA,EACAC,4BACA,YACA,EACAC,8BACA,uCACA,EACArI,4BACA,oCACA,EACAsI,0BACA,oCACA,EACAC,0CACA,oCACA,EACAC,kCACA,YACA,EACAC,0BACA,mBACA,EACAC,wBACA,YACA,EACAC,gDACA,YACA,EACAC,sCACA,YACA,CACA,EAgFAC,gBACAC,oBACAC,oBACAC,uBACA,EAEA,qBAEA,GAEAlU,MCrJA,6JAEAK,sEACA8T,0IAoBAC,oCACAC,cACAC,gBACAC,eACAC,eACA,EAEAC,aASAC,uDACA,WACAC,yDACAC,8CACAC,oDACAC,kBAEA,mDACAA,iEACA,+CAEA,yBACA3Q,WACA,gCAQA,0FAPA,sCACAA,6BACAA,iCAEA,iCAKA,KACA,0EAGA,UACA,EAWA4Q,yDACA,8BACA,0DAGA,gBACAJ,yDACAC,8CACAC,oDACAC,kBAMA,GAJAE,oDACA,+CACA,GAEAZ,+CACAU,iEACA,2BACA,0BAEAzN,oBAEAA,iBACAA,4CAGAA,+BACAA,0DAGA,0EAGA,eACA,EACA1B,mCACA,MACA,kBACAtF,qBACA,sBACAA,oDACAA,sDAEA,EAQA4U,2CACA,aAEA,qCAEAhC,iDACA,sCAEAA,iDACA,wCAEAA,mDAEA,sCAGA,YACA,CACA,EAEA,kBAEA,GAEAjT,MCzJA,mFAkCA,8CAGA,MAFAkV,eAEAA,qDACA,yCACA,qBACA,EACA,IAjBAC,uDAsBAC,iBACAC,2CACA,EAEA,sBAEA,GAEArV,MCtDA,mJAEAgC,sEACAsT,sHAqBAC,4EAEAC,aAMAF,wCACAG,WACAjO,WAEA,WAEA,0CACAiO,gGACAjO,6BACA,MAGA,QACAiO,iBACAjO,0CAGAA,mCAGAuK,sBACAuD,6BAGAI,0BACA,OACA,YACAjO,uCACA6N,4BAEA,KAGA,IACA,EACA,EAOAK,qCACAL,6GACA,CACA,EAEA,kBAEA,GAEAtV,MCnFA,uIAEAK,sEACAwO,2EACA+G,iHAoBAC,cAEAC,YAMAC,qCACA,4BACA,EAQAC,8DACA,0CACAC,yEACA7O,kCACAA,+BAEA8O,QAIA,iBAEA,uBACA9O,mCAKAA,iBACA,QACA/G,SACA6V,MACA,2BACA,8DACA,EACAD,QACA,QACA,CAEA7O,0CAEA,EASA+O,8EACAC,gBACAF,SACAG,MAiBA,MAfAjP,4BACA8O,2CAIA,0BACAG,gCACAhW,+BACA,uCACAiW,2CACAF,qDAEA,IAGA/V,0BACA,CACA,EAEA,iBAEA,GAEAL,MC9GA,8NAuJA,oCACA,gCACA,gCACA,CAxJA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAuBA,MAZAF,iEACAC,0KACA,qBACAE,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,4CACAC,0KACA,yDACAD,MACA,GAyBA2G,KACAzT,eACAyC,iCACAiR,YACA,EAEA,UAEA,GAEAxW,MCzLA,iOAuKA,oCACA,gCACA,gCACA,CAxKA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,kBACAC,0KACA,MACAD,MACA,CApBA,iCACAE,6DACA,qGAuCA,MAnBAF,6EACAC,0KACA,qBACAE,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,+BACAC,4NACA,2BACAA,6NACA,2BACAA,8NACA,kBACAG,iMACAA,sCACAJ,8BACAA,MACA,GAyBA6G,QACA3T,kBACAyC,iCACAiR,YACA,EAEA,aAEA,GAEAxW,MCzMA,kOAyJA,oCACA,gCACA,gCACA,CA1JA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAyBA,MAdAF,uDACAC,0KACA,qBACAE,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,qBACAG,qEACAA,gHACAC,sCACAJ,oBACAA,MACA,GAyBA8G,SACA5T,mBACAyC,iCACAiR,YACA,EAEA,cAEA,GAEAxW,MC3LA,kOA2JA,oCACA,gCACA,gCACA,CA5JA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGA2BA,MAhBAF,6EACAC,0KACA,qBACAE,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,oGACAC,0KACA,sHACAE,qEACAA,gHACAC,sCACAJ,6BACAA,MACA,GAyBA+G,SACA7T,mBACAyC,iCACAiR,YACA,EAEA,cAEA,GAEAxW,MC7LA,uOA2JA,oCACA,gCACA,gCACA,CA5JAK,sEACAuO,mHACAC,2EACAC,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGA2BA,MAhBAF,sCACAC,0KACA,qBACAE,uEACAA,iHACAH,iCACA,cACAC,0KACA,KACAG,iMACAA,sCACAJ,qBACAG,qEACAA,+GACAH,iCACA,gBACAA,MACA,GAyBAgH,cACA9T,wBACAyC,iCACAiR,aACAK,sCAEA,MADA3U,iCACAA,IACA,CACA,EAEA,mBAEA,GAEAlC,MCjMA,sQAyJA,oCACA,gCACA,gCACA,CA1JA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAyBA,MAdAF,uDACAC,0KACA,qBACAE,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,qBACAG,qEACAA,gHACAC,sCACAJ,oBACAA,MACA,GAyBAkH,6CACAhU,uDACAyC,iCACAiR,YACA,EAEA,kDAEA,GAEAxW,MC3LA,kQAyJA,oCACA,gCACA,gCACA,CA1JA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAyBA,MAdAF,uGACAC,0KACA,qBACAE,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,qBACAG,qEACAA,gHACAC,sCACAJ,oBACAA,MACA,GAyBAmH,yCACAjU,mDACAyC,iCACAiR,YACA,EAEA,8CAEA,GAEAxW,MC3LA,sRAmMA,oCACA,gCACA,gCACA,CApMA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IACAuQ,yGAsBA,mCAEAjI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,qBAMA,MALAA,wGACAC,uKACA,iCACAA,0KACA,0HACAD,MACA,CAEA,+BAEA,qBAMA,MALAA,2GACAC,uKACA,iCACAA,0KACA,6HACAD,MACA,CAEA,+BAEA,6BAIA,MAHAA,sEACAC,wLACA,2GACAD,MACA,CA1CA,iCACAE,6DACA,yIAkEA,MAxBAF,wEACAC,0KACA,qBACAE,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,4GACAI,oJACAA,sCACAJ,6JACAC,uKACA,IACAA,0KACA,2BACAE,qEACAA,gHACAC,sCACAJ,kTACAI,0IACAA,sCACAJ,wBACAA,MACA,GAyBAqH,gCACAnU,0CACAyC,iCACAsR,sCAGA,MAFA3U,kEACAA,4GACAA,IACA,EACAsU,YACA,EAEA,qCAEA,GAEAxW,MC1OA,wPAyJA,oCACA,gCACA,gCACA,CA1JA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAyBA,MAdAF,uDACAC,0KACA,qBACAE,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,qBACAG,qEACAA,gHACAC,sCACAJ,oBACAA,MACA,GAyBAsH,+BACApU,yCACAyC,iCACAiR,YACA,EAEA,oCAEA,GCvKAxW,uIACA,gBAEAmX,2BACAC,wBACAC,SACA,EAEAC,qDACA,+CACAC,yBAEAC,cACAC,WAFAC,cAIAC,iCAIAD,yBAEArX,oEACAA,sDACAA,sBACAmX,+CAEAI,eACAH,qDACAG,gBACAJ,mDAGA,GAGAK,8BAEA,sBAEAN,sDAEA,4BAEAE,8CACA,qCACA,WAEApX,0DACAyX,6DACAC,yBAEA,GAEAN,wCAEApX,qCACAyX,qCACAP,oDACA,2CACA,EACA,IAGAS,6BAEA,WAjDAC,0BAoDA,EACA,EAOAC,uEACA,4CACA,EAEA,oDAEAC,YACAC,eAMA,0CACAC,aAQAzR,yCAEA,wCAEA0R,SACAjY,yDAGAA,sCAGA,EAQAkY,gEAGA,MAFAH,2EACAD,WACA,IACA,EAMAK,yCAGA,MAFAJ,gBACAD,WACA,IACA,EAQAM,iDACA3N,WACA4N,YAyBA,MAtBAA,aADAP,yBACAQ,oBAEA,qCACA,4BACAtY,0CACA,iBACAuY,6BAEA,GACAzB,2CACA9W,mDACA6X,sCACAE,mDAEA,GACAJ,qBACAG,WACArN,2CACA,SACA,GAGA4N,WACA,EAMAG,yCACA,WAIA,MAHAxY,8CACAyY,iCACA,GACAA,GACA,EAQAC,uDACA,2DACAC,iBACA3Y,kCACAE,kCACA0Y,4BACAvB,gCACAwB,2BACA,OAEA,uBACA9I,4CACA+I,8BACAb,eACA,EAEA,EAQAc,uDACA,2DACAJ,0CACA3Y,kCACAE,kCACA0Y,4BACAvB,gCACArQ,kCACA6R,4BACAG,2BACA,OAEA,uBACAjJ,4CACA+I,8BACAb,eACA,EAEA,EAMAgB,+CACA,WASA,MARAjZ,8CACA,iCAGAkZ,qEACAT,oBAEA,GACAA,GACA,EAQAU,uDACA,mDACAC,SACAA,gBAEA,EACA,EAUAC,+CACA5O,WACA4N,YAsDA,MApDAvY,wDAEAuY,iEAEA,iBASA,MAPArY,wCACAsZ,UACAC,+BAEA,GAGAjB,8CAEA,0BAeA,MAZA7N,qDACA,yBACA,sBAGAzK,kEACAA,8EAGAwZ,oEACA,GAEAlB,6DACA,oEACA,yBACA,MAIAxB,+CACA,EACA,EAEA,GAGAuB,YACAoB,gBACAhP,8BACA,GACAiP,oBACAjP,yBACA,GAEA4N,WACA,EAUAsB,+CAEAlP,WADA4N,YA0DA,MAvDAvY,wDAEAuY,uDACA,kCAEArY,0DACA,kDACA,oEACA,iCACA,2EACA,SACA,KAEA,6EACA,SAGA4Z,gFACA,CACA,GAEAA,4BACA,qCAEA9C,2CACA,gBACA9W,0CACAE,oCACA2Z,kCACAzZ,yEACA,IACAqK,8FAEAA,iDACAqP,yBAEA,GACAnC,iBACA,SACA,GAEAW,mBAGA,GAEAD,YACAoB,wBAEA,MADAhP,yCACAqP,QACA,GACAJ,oBACAjP,yBACA,GAEA4N,WACA,EAQA0B,+CACA,qDAIA,MAHApB,mBACAA,4BAEA,IACA,EAQAqB,iDACA,qDAIA,MAHArB,mBACAA,4BAEA,IACA,EAQAsB,qDACA,qDACA,oDACA,CACA,GACA,CACA,GCrbAta,kIACA,aAEA,iBACAiW,SAEAsE,kEACAC,aACAC,mDACAC,oBACAC,WACA,EACAC,cACAH,oDACAC,oBACAC,WACA,EACAE,gGACAC,cACAL,oDACAC,oBACAC,WACA,EACAI,0CACAC,4CACAC,8CACAC,0CACAC,kEAEAC,+DACAC,uCACAC,6DACAC,oFACAC,wFACAC,wDACAC,sDACAC,iEACAC,oEACAC,wDACAC,iFACAC,iFACA1X,8FACA2X,wCACAC,OACAxB,mDACAC,8DACAwB,QACA,EACAC,yDACAC,yDACAC,yDACAC,oCACAC,oCACAC,6DACA9S,sCACA+S,yCACAC,4CACAC,sCACAC,wCACAC,yCACAC,yCACAC,wCACAC,uCACAvc,sCACAwc,wCACAC,sCACAC,yCACAC,0CACAC,yCACAC,2CACAC,wCACAC,wCACAC,uCACAC,wCACAC,8CACAC,2CACAC,sCACAC,sCACAC,sCACAC,sCACAC,sCACAC,sCACAtS,qCACAuS,uCACAC,6FACAC,uCAEAC,wEACAC,uDACAC,mEACAC,+CACAC,6CACAC,iEACAC,mEACAC,sCACAC,iFACAC,8FACAC,kEACAC,iDACAC,eACAzE,uDACAC,yBACAyE,MACA,EACAC,gBACA3E,wDACAC,0BACAyE,MACA,EACAE,wDACAC,2DACAC,uDACAC,uDACAC,yDACAC,0DACAC,uDACAC,wDACAC,wDACAC,yDACAC,yDACAC,2DACAC,oEACAC,gEACAC,mEACAC,+DACAC,gFACAC,kFACAC,+DACAC,6DACAC,kEACAC,qCACA,EAEAC,8CAEAC,2FACA3K,oDACA4K,cACA,qBACA5K,iBAEA4K,wCAQA,MAJAA,cACAA,wDAGA7e,+EACA,EAEA8e,6DACA,QACA,2CACA3c,gDACA,CACAA,OACA,sDACA,uCACA,sCACA,mBACA,qDACA4c,mBACA,iBACA5c,iBAEAA,wDAEA,CACA,CACA6c,2CACA,CAEA,UACA,EAEAC,2EACA,WACAC,oBAEA,wCACA,yBACA,6BACA,8BACA,sBACAA,oBAGA/c,kBAGA,qDACA,uBACA,sBACA+c,iBACAA,kBAEA/c,gBAGAgd,YACAhd,mEAGA,CAGAgd,YACAhd,oEAEA,CACA,CAIA,sDACA,sBACAA,+EAGA,qBACA,EAEAid,0EACA,qEACA,mDACA,EAEAC,+DACA,QACA,kDACAld,4CACA,CAEA,GADAA,OACA6c,gCACA7c,0CACAgd,YACA,iBACAhd,gEAEAA,kBACA,CAEA6c,uCACA,CAEA,UACA,EAEAM,qEAEAC,2BADApd,IAEA,oGACAA,wDACA,CAEA,iBADAA,QACA6c,qBACA,sCACA,uCACAvb,KACAyT,aACA/U,iBAGAA,iBAEAgd,YACAhd,qEAGA,CACA6c,uCACAA,yCAEAA,mDACA,CAEA,UACA,EAEAQ,mCACA,uCACA,EAEAC,qCACA,wCACA,EAEAte,kCACA,uBACA,SAEA,sDACA,qCAEA,EAOAue,6CACA,uCACAC,mJAEA,iCACAA,wGAGA,EAOAC,uEAmMA,OAlMAC,YACAC,6CACAC,6CACAC,8CACA,EAEAC,mBACA5C,mBACApG,+BACAiJ,eACA,8FACA,CACAC,mBACAC,mBACAtf,6BACAuf,0CACAC,2BACA,EACA/C,kBACAtG,8BACAkJ,kBACAD,kEACAE,kBACAtf,4BACAuf,+CACAC,2BACA,EACAhD,sBACArG,kCACAkJ,sBACAD,2DACAE,sBACAtf,gCACAuf,kDACAC,2BACA,EACA9C,kBACAvG,8BACAkJ,kBACAD,eACA,2FACA,CACAE,kBACAtf,4BACAuf,kDACAC,2BACA,EACA7C,oBACAxG,gCACAkJ,oBACAD,yEACAE,oBACAtf,8BACAuf,2CACAC,2BACA,EACA5C,qBACAzG,kCACAkJ,sBACAD,qEACAE,sBACAtf,+BACAuf,yDACAC,2BACA,EACA1C,mBACA3G,+BACAkJ,mBACAD,2DACAE,mBACAtf,6BACAuf,8CACAC,2BACA,EACAhC,yBACArH,sCACAkJ,0BACAD,eACA,0FACA,CACAE,0BACAtf,mCACAuf,2CACAC,2BACA,EACAzC,mBACA5G,oCACAkJ,mBACAD,2EACAE,wBACAtf,6BACAuf,8CACAC,2BACA,EACA3C,kBACA1G,8BACAkJ,kBACAD,eACA,+HACA,CACAE,kBACAtf,4BACAuf,4CACAC,2BACA,EACA5B,YACAzH,uBACAkJ,iBACAD,eACA,wHACA,CACAE,kBACAtf,sBACAuf,2CACAC,2BACA,EACA/B,yBACAtH,sCACAkJ,0BACAD,yDACAE,0BACAtf,mCACAuf,gEACAC,2BACA,EACAjC,sBACApH,mCACAkJ,uBACAD,eACA,oFACA,CACAE,uBACAtf,gCACAuf,iEACAC,2BACA,EACA9B,uBACAvH,oCACAkJ,wBACAD,uDACAE,wBACAtf,iCACAuf,4EACAC,2BACA,EACAtC,oBACA/G,gCACAkJ,oBACAD,+EACAE,oBACAtf,8BACAuf,2CACAC,4BACA,EACApC,yBACAjH,sCACAkJ,0BACAD,qEACAE,kBACAtf,mCACAuf,gDACAC,4BACA,EACArC,6BACAhH,0CACAkJ,8BACAD,yFACAE,sBACAtf,uCACAuf,mDACAC,4BACA,EACAnC,4BACAlH,0CACAkJ,wBACAD,6EACAE,sBACAtf,sCACAuf,mDACAC,4BACA,EACAlC,wBACAnH,qCACAkJ,yBACAD,+FACAE,yBACAtf,kCACAuf,qCACAC,4BACA,CACA,EAGAC,2CACAC,gMACA,4BACAD,qCAEA,CACA,wBACA,CACA,EAEA,kBACA,GC7gBAviB,gEACA,SACA,OACA,qDACA,2CACA,oDACA,aAQA,4CACA,gCASAyiB,iIACAtiB,8DACAuiB,mDACA5f,8DACA,GACA4f,UACAA,kBACAA,uBACAA,wBACAA,yEAEA,OACAzJ,qBACAkJ,gGACAC,qBACAF,iCACApf,kBACAuf,wDACAC,2BACA,CAEA,CACA,kCACA,sCACAjiB,oDACAsiB,kEACAlI,8BACA0E,MACA,CACA,EACA,EACA,CACA,GCxDAnf,iKACA,gBAGA4iB,uBACAC,aACAC,uBAYA,MAVAA,4BACAD,4BAGAxiB,oCACAsZ,gCACAiJ,0CAEA,GAEAA,QACA,GCnBA5iB,gEACA,SACA,qDACA,qCACA,aAOA,sCACA,gCACA,CAEA,GCfAA,iKACA,gBAGA4iB,uBACAC,aACAC,uBAYA,MAVAA,4BACAD,4BAGAxiB,oCACAsZ,gCACAiJ,0CAEA,GAEAA,QACA,GCnBA5iB,gFACA,gDACA,gDACA,iCACA,aAEA,sDACA+iB,gCACAA,sCAEAC,+BACAA,sCAEA7J,cACA,CAIA,OACA8J,+BACAC,mDAEA,uBACA,wCASA,MARAC,2BACAA,iGACA,iEACAC,iBACAA,4BAEAC,SACA,SAEA,CACA,CACA,GACArjB,MCtDA,mUAEAK,sEACAijB,oGACAC,+FACAC,gKACAC,4IACAC,+FACAC,6KAoBAC,gCACAC,6BAGAC,iCACA,CACA,CACAb,aACAC,iCACA,GACAU,YACAT,WACAA,uFAEA,sCAEA,CACA,EACAM,yBACAA,yBACAA,uBACAA,+BACAA,wBACAE,sBACA,CACA,aACA,CAGAI,WACAC,6DACAtD,8DACAuD,uBACAC,0DACA7R,+DACA8R,sBACAxP,uBACAyP,sBACAC,uDACAjG,iDACAkG,+DACA1I,mDACAvX,uDACA4X,qDACA8C,yEACAL,iEACA6F,qEACAvF,oEACAK,0FACAiB,sGACAf,wFACAD,gGACAE,wFACAa,gGACAT,0FACAW,sGACA,iHACA,+GACAzB,iEACAD,yDACA2F,iEACA,0CACA,yFACA,8CACA,6FACAC,2EACAhF,4FACAO,4FACA0E,iBACAhF,8FACAU,oGACAF,sGACAP,wFACAE,0FACAM,4GACAwE,+DACA1E,8GACA2E,qBACAnE,kGACAnC,yEACAuG,yDACArE,iGACA,EAEAsC,QACAG,sBACAc,oBACA5jB,SACA2jB,0BACAP,kBACAuB,mBACAC,8CACAC,4CACAC,0DACAC,qCACA,EACAC,8BACA,CACA,EAEA,aAEA,GAEAnlB,MCpIA,2JAkKA,oCACA,gCACA,gCACA,CAnKA4O,mHACAC,2EACAxO,sEACAyO,8GAsBA,mCAEAC,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,4BASA,MARAC,oCACAI,iMACAA,sCACAJ,aACAG,qEACAA,gHACAC,sCACAJ,iBACAA,MACA,CACA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,4BAIA,OAHAG,qEACAA,gHACAC,sCACAJ,MACA,CAjCA,iCACAE,6DACA,6IAiCAE,0TACAA,0BACA,EACA,GAwBAoV,WACAtiB,sBACA0T,YACA,EAEA,gBAEA,GAEAxW,MClMA,4JAkJA,oCACA,gCACA,gCACA,CAnJA4O,mHACAC,2EACAxO,sEACAyO,8GAsBA,mCAEAC,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAmBA,MARAF,uBACAI,iMACAA,sCACAJ,aACAG,qEACAA,gHACAC,sCACAJ,wBACAA,MACA,GAwBAyV,YACAviB,sBACA0T,YACA,EAEA,iBAEA,GAEAxW,MClLA,yNAkKA,oCACA,gCACA,gCACA,CAnKA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,qBACAC,wKACA,KACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CApBA,iCACAE,6DACA,qGAkCA,MAdAF,mCACAG,uEACAA,iHACAH,iCACA,KACAI,8LACAA,sCACAA,iMACAA,sCACAJ,aACAG,qEACAA,gHACAC,sCACAJ,oBACAA,MACA,GAwBA0V,QACAxiB,kBACAyC,iCACAiR,aACA1R,kCACAygB,qCACAC,yBACAA,cAEAD,wCACAC,0BAEA,CACA,EAEA,aAEA,GAEAxlB,MC5MA,qPA+QA,oCACA,gCACA,gCACA,CAhRA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,wKACA,KACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,qBACAC,sKACA,MACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,qKACA,MACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,gCAEA,qBAIA,MAHAA,gCACAC,mLACA,KACAD,MACA,CAEA,gCAEA,qBAIA,MAHAA,2BACAC,8KACA,KACAD,MACA,CAEA,gCAEA,qBAIA,MAHAA,0BACAC,6KACA,KACAD,MACA,CAEA,gCAEA,qBAIA,MAHAA,+BACAC,kLACA,KACAD,MACA,CAEA,gCAEA,qBAIA,MAHAA,yBACAC,4KACA,KACAD,MACA,CAEA,gCAEA,qBAIA,MAHAA,oBACAC,oKACA,KACAD,MACA,CArGA,iCACAE,6DACA,qGA+IA,MA1CAF,uCACAG,uEACAA,iHACAH,iCACA,iDACAC,mKACA,mBACAA,mKACA,aACAG,wLACAA,sCACAJ,mBACAI,8LACAA,sCACAJ,mBACAI,4LACAA,sCACAJ,mBACAI,2LACAA,sCACAJ,mBACAI,iMACAA,sCACAJ,mBACAI,2MACAA,sCACAJ,mBACAI,sMACAA,sCACAJ,mBACAI,qMACAA,sCACAJ,mBACAI,0MACAA,sCACAJ,mBACAI,oMACAA,sCACAJ,mBACAI,4LACAA,sCACAJ,yBACAA,MACA,GAwBA6V,KACA3iB,eACA0T,aACAjR,iCACAT,iCACA,4CACA2B,8CACA,EACA,CACA,EAEA,UAEA,GAEAzG,MCrTA,yJAmJA,oCACA,gCACA,gCACA,CApJA4O,mHACAC,2EACAxO,sEACAyO,8GAsBA,mCAEAC,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAGA,MAFAC,aACAC,wKACAD,MACA,CAVA,iCACAE,6DACA,qGAoBA,MAVAF,oCACAI,8LACAA,sCACAJ,0BACAC,oKACA,eACAE,qEACAA,gHACAC,sCACAJ,yBACAA,MACA,GAwBA8V,SACA5iB,mBACA0T,YACA,EAEA,cAEA,GAEAxW,MCnLA,2hBA2MA,oCACA,gCACA,gCACA,CAmCA,wCACA,kCACA,gCACA,CAlPA0Q,gFACArQ,sEACAwO,2EACA8W,0FACA/W,mHACAE,8GACArI,4IACAmf,uIACAC,wHACArQ,wHACAsQ,yGACAC,kIAsBA,mCAEAhX,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,2BAEA,mFAKA,+BAEA,qBAIA,MAHAE,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CAEA,+BAEA,iBACAA,iEACAA,0BACA,EACA,CA7CA,iCACAF,6DACA,2JAoEA,MAvBAF,wBACAI,wLACAA,sCACAJ,wFACAI,8LACAA,sCACAJ,oCACAG,uEACAA,iHACAH,iCACA,4DACAI,iMACAA,sCACAJ,wBACAI,gIACAA,sCACAJ,iKACAzP,gFACA4P,4DACAA,sGACAD,yIACAE,sCACAJ,8JACAA,MACA,GAMAF,yBACAA,qBACAA,8BAEAsW,kFAKA,+BAGA,8BACA,CAEA,+BAEA,qBAIA,MAHApW,oBACAC,2KACA,KACAD,MACA,CAjBA,iCACAE,6DACA,8FAwBA,MAPAF,wBACAI,+HACAA,sCACAJ,aACAI,iMACAA,sCACAJ,yGACAA,MACA,GAyBAqW,6DACAze,6CACA0e,oCACAC,2CACAC,+BAEA,iBACA,uCAIAA,QACAC,4BAEA,qCACAC,QACApkB,4BACAgT,qBACAtP,mBAEA,2FACAygB,+BAEA,EAEA,kDACAE,4CACAC,uBACAC,qEACAC,yBAGAH,YACAI,WACAC,WACAC,gBACA,6CACA,0BACA,0FACA,6DAEA,MADAH,iCAGA,CACA,GAEA,+BAEAI,aAGArgB,wDACAhB,aACA+gB,YACAO,sBACA,GAEAnB,kFAEAxe,sFACAof,qCAGA,mDACAD,wCACAA,+DACAZ,gBACA,OAOAe,oDACAJ,uDACAU,eACAC,yBACA,GACAlV,sBACA2U,uCACAJ,yCACA,OAEA,KACAQ,aAEA,EAEAI,qFACA1f,6CACA0e,0CACAG,uEACAc,+BACAC,yBACA,kFACA,CACAC,gFACAjB,+BAGAA,QAEAC,uDAEAiB,cACAvhB,sBACAtC,qBACAwN,QAEA7J,uBACA,qBAEAX,wDACAhB,eACA+gB,4BACA,GACAZ,mEAKAyB,+BACAD,2EAIA,+GAEA,uCACAG,QACAJ,oDACAzW,kBACA,GAEAyW,kBAKA,EAEAK,wDACAhgB,6CAGA2e,qDACA,WACA,0EAEA,0EACA,EAEAsB,2DACAjgB,6CACA6J,kDACAkV,2CAEA,4CACAA,wCACAZ,yDAEA,uBACAY,6BAGA,EAOAmB,uEAQA,+BACAC,sBACAC,UACAC,UACAC,SACAC,QACA,CAGA,yBACA1c,GACAC,EACAqc,mBACAC,eACAC,eAEA,0BACAD,wBACA,0BACAC,yBAEAC,sBACAC,uBAEAzc,6EACAD,6EAGAsc,sGAGAA,0CACAA,0CAEA,IAzCAA,uBACAC,UACAC,UACAC,SACAC,SAuDA,MAfAC,mEACAC,eACAC,wBACA,mCAEA,MADAF,wBAGA,GAGAlC,yBAKA,CAKAqC,iDACA,uBACA,EAMA7X,qCACA8X,sBACAT,oFACAK,sEACA,EAKAzX,qBACAyX,wCACAI,qBACA,CACA,CACA,EACAC,yDACAhhB,aACAG,4CAeA,MAdAkJ,mDACA,YACAA,UACAtM,YACAyiB,gBACA,oCACA,8DACArT,6CAEA,GACA,iBACAnM,mBAEA,GACAA,QACA,EACAihB,2DACAlX,sDACAC,qDAGA,WACA,SACAuU,4GAEA,CACA,SACAA,oGAGA,mCACAlU,yFACAkU,4DACAyC,yCACA,yBAEA,YAEA,EACA,CACA,EAQAvjB,oCACA,cAEA,qCA+NA,kDACAihB,yCACA,gDACAwC,oBACAzC,+BACArgB,YACAkD,yBACA6f,oBACA,GAEAD,4CACAA,oBACAzC,wCACArgB,YACAkD,yBACA6f,oBACA,GAEA1C,kCACArgB,eACAkD,aACA,EACA,EACA,IArPAnB,6CACAihB,4CACAlC,4CAEAmC,mBACAC,oBAOAC,wEAEAC,2CACAC,+CACAC,kDAEAC,uCACA,mDACA,EAQAlC,gDACAb,uCACAzQ,sBACA9E,uFAEA,EAEAuY,2CACAP,gBACAnC,4CACAmC,oCACAlhB,+CACAkhB,mBAEA,EAEAQ,4CACAhC,oCACA1R,sBACA9E,uFAEA,EAEAyY,6CACA,sDACA,EAEAC,yCACA,uDACA,EACAC,kDACAJ,kBACAP,sBACArC,2BACAE,iDACA,EAEA+C,8DACAhD,kCAIA8C,kBAEAhiB,wBACA8hB,4BACApC,kCACAmC,kBACA7hB,yBAEAkf,2BACA2C,kBAEAI,yBAGA,EACAE,kDACA,wCAEAb,sBACAA,iCAEAnC,YACAniB,oBACAolB,kBACA,8CACA,GACA5jB,kBAEA6iB,YACArkB,8BACAolB,kBACA,8CACA,GACA5jB,iBACA,EAEA6jB,8DACA,GACAC,qCADAxD,aAGAiD,oBACAjD,0CAEAwD,8BACApD,6BACAlf,yBAGAsiB,cACAR,sBAEApC,kCAGA1f,yBAGA6hB,mBACAG,kBACAlD,0CAEAwD,+BACApD,6EACAlf,yBAGA8hB,4BACAQ,eAEAR,sBACApC,oDAEAA,6CAGA1f,yBAGA6hB,mBACAS,eACAH,yBACAjD,qBAEA,EAlJAqD,qBACAC,YACAC,YACAC,cAmJAhE,mDAGApV,qBACAqZ,qBACAjkB,mCAKAmjB,iBACA,GAEAnD,2DACA,iCAGAQ,iEAIA7e,oBACA6hB,+BACA7hB,mBACA,GAEAqe,+DACA,iCAGAQ,iEAIA7e,oBACAgiB,+BACAhiB,mBACA,GAEAqe,2CAGApV,qBACAqZ,qBACAjkB,oCAKA2B,oBACAyhB,4BACAD,kBACAxhB,mBACA,GAEAL,iCACAkhB,8BAKAxd,qGACA6e,oEA4BAA,uBACAhB,iDACAiB,aACAI,WACAC,YACAC,oDACA,EACAC,UACAC,+BACAC,WACAC,2CACA,CACA,EAGAxE,8CACAyE,UACAlqB,WACA,CACAmqB,+BACAlE,uBACAmE,MACAnE,4BACA+C,yBACAqB,6DACAD,6CACAX,gBACAa,gBAEAhC,mCACA,EACAiC,0BACA7E,2DACA,EACA8E,wBACA,0BACAvE,+BAEAjmB,mBACA4oB,iBACA,GACAlD,+CACAA,iCAEA4C,qBACA,CACA,EACAiB,YACA,CACA,CACAkB,gBAGAhF,mCACAyE,UACAlqB,WACA,CACAmqB,+BACAlE,uBACAmE,MACAnE,4BACA2C,kBACAM,yBACAmB,kDACAD,6CACAX,gBACAa,gBAEAhC,mCACA,EACAiC,0BACA7E,2DACA,EACA8E,wBACA,0BACAvE,+BAEAP,+CAEA2C,eACAQ,4BAEAD,kBAEAlD,iCAEA4C,qBACA,CACA,EACAiB,YACA,CACA,CACAkB,gBAEAjB,aACAkB,YACAC,oCACAta,mCACAA,0CACA,EACAua,oCACAva,sCACAA,6CACA,CACA,EAGAoV,kCACAzlB,WACA,CACA6qB,0BACA,oBACAzB,oCACA,CACA,EACAI,YACA,CACA,CAGA/D,2CACAzlB,WACA,CACA6qB,0BACA,oBACA5B,oCACA,CACA,EACAO,YACA,CACA,EAKApC,8BAEAjS,wFAEAwC,SACA,EACA,EAEAmT,kDACA,gDAGA3jB,wDACAue,yBACA,GAEArV,sDACAwW,wCACA,GAEAzgB,wDACAmf,gDACA,EAEAwF,mDACA5jB,6CACA6jB,aACAC,mDAiBA,MAhBAC,4FACAA,eAEAlrB,4BACA,sBACA,qCACA4lB,oEACAA,oEACAoF,aACAC,gCACA,KAEA,SAEA,GAEAD,UACA,EAcAG,uDACAJ,oEACA,EAcA9Z,8CACA,sEACA,EAMAma,sCACA,gDAGA3F,sCACAA,kEACAA,sEACAA,6DAGAF,+CAEAlV,uCAGAjK,kCACA,EAQAilB,8CACA,eAEArrB,oBACA6F,iBACAkB,4BACAA,yCAIA/G,gFACAmH,4CAEAkJ,2CACAib,sBACAC,yDACAC,8DACAD,eACA,EAEAA,cACA,GAEA,CACA,GACArZ,SACAuZ,0CAGA,EAQAC,2CAEA7lB,UACAmB,mCAFAG,WAiBA,MAbAH,YACAnB,yBAIA,mCACAsB,4CAEAtB,eACAwK,2DACAxK,8CACA,IAEAA,KACA,EAMA8lB,sBACAlpB,gCACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,kBAEAtE,iCACA,EAEA,2BAEA,GAEAznB,MC/nCA,0gBA2OA,oCACA,gCACA,gCACA,CA5OAK,sEACAqQ,gFACA7B,2EACAD,mHACAE,8GACArI,4IACAmf,uIACAC,wHACArQ,wHACAF,8GACA0B,yGAsBA,mCAEAjI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAGA,kCACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CAEA,gCAGA,mBACA,CAEA,gCAEA,yBACAD,0EACAA,oHACAC,0BACA,EACA,CAEA,gCAEA,iBACAA,iEACAA,0BACA,EACA,CAlEA,iCACAF,6DACA,2JAqGA,MAnCAF,sBACAI,wLACAA,sCACAJ,mFACAI,8LACAA,sCACAA,iJACAA,sCACAJ,kCACAG,uEACAA,iHACAH,iCACA,qDACAI,iMACAA,sCACAJ,sBACAI,gIACAA,sCACAJ,0HACAI,sIACAA,sCACAJ,YACAI,qIACAA,sCACAJ,wCACAG,yEACAA,mHACAH,iCACA,sBACAzP,kFACA4P,4DACAA,sGACAD,2IACAE,sCACAJ,sFACAA,MACA,GAyBAqc,kBACAC,kBACAC,iBACAC,eACAC,kBACAC,iBASAC,0DACAC,yFACAC,mDAEAD,gBAIA,sBACAtmB,+BAGAsmB,6BACAA,yBAEAC,0CACAA,aACAroB,sBACAwiB,kBACAA,iBACAnM,uBACA7U,0BACA,EAUA8mB,2DACA,kBACA,oHACAllB,kCAEAA,WACAoD,6KACA+hB,6CACAC,uCAEAA,gDACAnlB,mBACAA,oBACAklB,WACAE,oBACAzoB,mCACAwiB,kBACAA,iBACAkG,UACAF,qDACAnlB,mBACAA,oBACAklB,WACAI,oBACA3oB,mCACAwiB,kBACAA,iBACAkG,QAEA,GACAliB,wKACA,4CAEAgiB,sDACAnlB,mBACAA,oBACA8kB,gDAEA,GAEA/kB,kEACAwlB,sBAEAC,yDACAC,gDAFAhnB,MAKAuB,0DAKAulB,oEAIAvlB,mBACAA,oBAEA,6BACAvB,SACA,wBACA,qCAIAqmB,gCAEA,sCACAW,0CAEAA,kCAGAtH,qEACAnf,wDACAiK,mBACA,EACA,EAQA2X,yDACA8E,WACA3lB,4CAIA,MAHAkJ,0GACAyc,4BACA,GACAA,MACA,EAOA7E,2DACAlX,oCACAC,mCAEAG,6CAEA4b,iEACAZ,4CACAa,mCACAC,wFACAjd,iDAEAA,SACAkd,sBAEAld,8BACAmc,0BACAa,wBACAC,+CACAD,oCACA5mB,uDACA,OACAW,gDACA,EApBAsK,IAyBA,gEAGAA,gDACAkU,4DACA,uCACA,yBAEA,YAEA,IACA,2BAEAlU,4DACAkU,gEACAyC,mFACA,aACA,0BACAA,0CACA,+CACA,8BACA,aACA7X,gBACAH,YACAC,uBACApO,mBACAkrB,kCAEA,EACA7c,qBACA,qBACA,CACA,GAEA,4BAEA,YAEA,IACA,kBAEAmB,4CACAkU,gEACAyC,0CACA,yBACAA,0CACA,+CACA,aACA7X,gBACAH,YACAC,uBACApO,mBACAkrB,kCAEA,EACA7c,qBACA,qBACA,CACA,GACA,4BAEA,YAEA,IACA,4DAEAmB,+CACAkU,gEACAyC,0CACA,+CACA,8BACA,aACA7X,gBACAH,YACAC,uBACApO,mBACAkrB,kCAEA,EACA7c,qBACA,qBACA,CACA,GAEA,4BAEA,YAEA,IACA,4CAEAmB,sDACAkU,4DACAyC,yCACA,yBAEA,YAEA,GAKA,EASAvjB,oCACA,gDAMA,GAJA4nB,qCAEApE,8BAEA,gDACA,4FACA9S,iCAEA9E,iGACA,CACA,EAOAya,kDACA,gDAEAza,wDACA,EAeA8a,uDACA,gDAEA,IACAnrB,6EACA,+FACAmsB,6DACA,GACA5G,gDACA,UACA,yDACA,CACA,EAcAtU,8CACA,sEACA,EAQAkc,gDACA,uDACA,EAQAC,0DACAC,iGACAC,4EACA,yBACAC,0DACAC,mDACAC,qCACAC,6GACA,EACA,EAMAtC,yCACAjkB,6CAEA6I,iDAEAA,SACAkd,sBAIA/lB,kCACAkJ,+DAGAkV,+CAGAnf,kCACA,EAQAilB,8CACA,sBACAxlB,iBACAkB,4BACAA,yCAGA,gDAGA/G,+EACAqQ,oCACAib,sBACAC,yDACAC,8DACAD,eACA,EAEAA,cACA,GAEA,CACA,GACArZ,SACAuZ,yCAIA0B,iFACAntB,gDACAmH,+FACA,EAEA,CACA,EAQAukB,2CACAvkB,6CACAtB,SACAmB,mCAsBA,MApBAA,YACAnB,yBAIA,mCACAA,eACAwK,oDACAxK,8CACA,IAIAsnB,4BACAtnB,oBACAsB,gEACAtB,mDACA,IAGAA,KACA,EAMA8nB,mBACAlrB,6BACA0T,aACAK,sBACA/R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,wBAEA,GAEA/rB,MC3vBA,oTAsJA,oCACA,gCACA,gCACA,CA4BA,qCACA,gDAGAwH,iDAGAxF,mBACA+nB,qBACAjkB,oCAIA0B,mBAEAf,wDAEAe,0EACA,EACA,CAcA,2CACAymB,qEACA,CAcA,kCACA,+CAEA,MADAC,mCACArI,wCACA,CAOA,oCACAoI,uBACA,CAQA,qCACA5tB,mBACA6F,iBACAkB,4BACAA,wCAGA,CAQA,kCACAlB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,CAOA,kCACAO,gBACAG,iBACAsnB,SACAC,QACA,CAOA,8BAEA1nB,uDACA,CASA,yCAIA,MAHAvE,yBACAA,yCAEAA,IACA,CApTA7B,sEACAuO,mHACAC,2EACAC,8GACArI,4IACAof,wHAsBA,mCAEA9W,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAqBA,MAVAF,sIACAG,uEACAA,iHACAH,iCACA,2HACAI,iMACAA,sCACAJ,wBACAC,qKACA,eACAD,MACA,GAmKAwe,uBACAtrB,iCACA0T,aACAK,sBACA/R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,4BAEA,GAEA/rB,MC1UA,mmBA8VA,yCACA,gCACA,gCACA,CAuBA,yCACA,kCACA,gCACA,CAqCA,6BACA,+CAGAwH,6CAEA8M,kCACA+Z,kCAEAC,oDAEAC,8CACAC,uDACAC,4CAKA,MAJAA,cACAD,8DACAC,6CAEAA,UACA,EAEAC,2BACAC,WACAC,kBACAC,oCACAC,qBACAC,0BACA,EAzBA9G,iEACA+G,yCA0BA1a,UAmFA2T,6BACAgH,0CACAC,kDACAC,4CAGAF,aAEAG,iDACA,UAOA,MANAC,0BACA,sBACAC,KAEA,GAEAA,GACA,EAEAL,mCACA,cACAhH,wCACAlW,sBAKA,mDACA6T,kCACAxe,sBACAyH,kEACA,UAGA,MACA,IAKAqgB,iBACAA,2CAEA,kBACAjH,oBACAvX,qDACA,IAKAye,aACAlH,oBACAsH,kCACA,GAIAjB,kBAOAkB,wBAEA,6BACAvH,oBACAvX,6CACA,GACA,0BACAuX,iDAGAjQ,YA7JAiQ,gCACAqG,iBACArG,wCAEA,mCAEAwH,gDACAjoB,wCAGAioB,uBACApB,oBAGAW,uCACA,qCAEAU,kBACAC,gCACAC,oEAGAC,YADAH,0CACAhf,4BAEAA,iCAGAmf,iBACA,iCACA7I,wBACA,GAEA,EACA8I,mCACAd,eACA,EAEAU,6CACA,SACAzX,yCAGAyX,qCACAV,gBAGAU,sCACAhf,sDAIArQ,oBACA,IACA,oDACAA,iBAEAqvB,oCACAA,qEAEArB,iBACAA,yBAEA,GACAqB,8BACAjpB,0DACA,GAEAiK,0DAEAuX,+DACAxhB,0DACA,GAEA4nB,iBACAA,0BAGArW,WAkFA,EACA,CAMA,oCACA,kCACA+X,sCAEAtpB,gEAEA,CAcA,8CACAupB,4DACA5oB,kEACA,EAEAwN,+DAMA,GAJA,yDACAvN,6BAGAA,2DACA4oB,iDACA,2CACA,sCACA,+EACAD,2EACA,KAEA,sDAEA,CAcA,qCACAxoB,6CACAtE,uCACAyR,yDACAC,8CACAsb,gCACA5b,YACApR,wBACA,sDACA,qDACA,CACAiB,iCAEAgL,SADAge,OAyCA,MAtCA7Y,WACA6Y,UAEA3lB,0CACA,kBAEAtE,mEACAiqB,aAEA,sBACAA,0CACAA,yCACA,oBACAA,gCACAA,yCACA,sBACAA,oBAGA,GAEAhpB,4BAEAjB,wFACAiM,SAEA,qBACAA,2DACA,mBACAA,iDACA,sBACAA,yCAIAhL,kEAGAA,GACA,CAOA,sCACAqD,6CACA0nB,kDACAiB,gDACAhB,4CACAiB,wCAGAC,WAFAC,aACAC,6FAGArB,8CACAmB,WACAE,4CACAC,6CACAC,6CACAC,sDACAC,oDAEA,mBACAC,0EACAC,2EACAD,sCACAC,yCACA,wBACAP,sCAEAI,kCACAC,kCAOA,aAIAN,gBAKAS,2DACAC,gBACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAGA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,CACAC,eACA,GACA,GACA,QACA,CACAC,eACAC,2BAEAC,yFACAC,wFACAC,wDACAC,gGACAC,kFACAC,8HACAC,oCAOA,MANAhqB,UACAA,YAEAA,mBACAA,gCAGA,EACAiqB,yEACAtjB,kBACAnH,gBACA,GACA0qB,0CACA,wCAGA,YADAT,4BAIA,iBACA,aASA,GANAU,SAFAxB,MAEA,eAGA3oB,sBAGA,UACA,SAEApH,sBACAiwB,6BAMA9oB,kCACAkqB,0BANAlqB,+BACAA,kBACAkqB,qBACAjrB,wDAKA,QACA,CACA,EAQAorB,4CACA,iBAIA,gBACAX,+BAGAtE,uCACAkF,4CACAC,6CAEA,mCACA,sBAEA,aACArC,kCACAsC,0BACAC,yBAKA,GAHAA,uEACA3lB,sEAEA,OACA,iCACA,sBACA,wBACAA,0CACA,KACAA,SAEA,CAKA,GAHA2lB,mEACAC,kEAEA,QACA,8BAEAA,MADAV,mBACAD,gCAEA,GAEA,CAEAY,4BACA,MACA,qIACA7lB,yCACA4lB,uCACAC,mDACA,CAUA,oGACAf,wFACA,qBAEA,CAEA,8DACA,iCACA,0BACAgB,qDACAA,gBACA,CACA,qBACA,CAEA/xB,mDACA,EAOAgyB,kDACA,aAmBA,GAhBAT,SADA,sDACAlhB,qCACA0f,MAEA3oB,iBAGAA,8BACAA,8CACAA,8CACAA,oDACA,GAIAgqB,eAEA,UACA,SAWA,GAPAb,SACAgB,+EACAf,YACAe,iFAIAxB,MACAL,mDACA,IACAuC,4DACAC,eACAjiB,0DACAgiB,+EACAC,WACAA,wCACAA,iCACA,CAEAlyB,kDACA,EAEAmyB,0DAEA,MADAvB,gBACAxpB,CACA,EAEAgrB,sDAIA,GAHAxB,eACAC,2BAEA,qDACA,oCACAX,sDACA,CAEA,MADAlwB,oDACAoH,CACA,EAEAirB,gDAEA,MADAryB,oDACAoH,CACA,EAEA,sCACA,qCAEA,cACA,0CAEAioB,2BACA,6BACA,8CACA,6BAIA,MAHAiD,uCACAV,qDACAvC,4CAEA,CACAkD,qCACA,EACA,CACAlD,iCACAA,iCACAiC,oBACAtxB,kDACA,GACAqvB,qCAGA,KACAa,WACA3lB,mDACAA,qCACAvK,kDACA,GACAuK,6DACAA,yDACAA,0CACAA,6CACAA,iEAEA,EAMAioB,uCACA,mDACAxyB,kBACA,EAGA8O,mDACA,EAMA2jB,uCACA,6CAEA,oFACA,EAKAC,uCACAvC,yCACAC,wCACA,EAEAI,mBACA,EAEA,cACA,CAQA,kDACA,kCACAmC,+BAEAvsB,uDAEA,CAOA,uCACA,6BAIA4oB,8CACAA,oCACA4D,2BACA5D,gCAEA,EACA,CASA,qCACAnsB,wCACAmE,8CACA,SACAnE,wBACA,qFAEA,CASA,gDACAsE,6CACAkoB,2EACA,UAEA,MADAloB,uCACAkoB,MAEA,CAOA,0CACAloB,6CACAyb,+BACAyM,OACAzM,OACAyM,iCAEAA,SACAA,iBACAloB,gCAEA,CAOA,sCACAA,6CACAyb,+BAEA,+BACA,CAQA,2CACAyM,kCACAxtB,kCAMA,MAJAgxB,OACAhxB,uBAGAA,IACA,CAOA,yBACA,2CAEA,MADAixB,wBACAA,oBACA,CAOA,iCACA,4CACA9yB,qDACA+yB,OAEA,OACA,CAEA,gCACA5rB,6CACAkoB,OAEAloB,0DAEA,oCACAkoB,iCACAA,SACA,wBACAA,uBAEAA,oBAIA,CAEA,iCACAloB,6CACAkoB,OAEAloB,+DAEA,oCACAkoB,iCACAA,SACA,wBACAA,uBAEAA,oBAIA,CAEA,gCACAO,uBACA,CAEA,mCACA,sCACA,qCACA,IACAF,kDACA1B,iBACAA,uBAEA,EACA,UACAzrB,2CACA,KAEA6D,6DACA4nB,iBACAA,uBAGA,CAMA,iCACA7mB,6CACAygB,uCAEA,mCACAoL,8BAIApL,2BACAvX,qCAGAkV,+CAGAnf,kCACA,CAQA,qCACA,sBACAP,eACA,IACAkB,uCACA,UAEA,KADAA,6BACAK,CACA,CAGA,CAQA,kCACAvB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,CASA,sCACAotB,yCACA1C,sEACAC,uEACAV,6DACAjB,oCAEAqE,gDADA,gBACA,CAIAC,kDACAC,kDACAC,kFACAC,mEACAC,gEAEA,yBACAhD,oCACAC,uCACA3tB,uEAGA2wB,iBACA3E,qFACA2B,uEACAD,+DACA,CACA,EACA,CA92CAlgB,gFACArQ,sEACAwO,2EACAmI,yGACA8c,mHACAllB,mHACAE,8GACArI,4IACAmf,uIACAmO,yGACA3zB,uIACAuS,sJACAqhB,oGACAxxB,kIAsBA,mCAEAuM,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,2BAEA,mFAKA,+BAEA,qBAIA,MAHAE,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CAEA,+BAEA,oCAKA,MAJAJ,wBACAI,8ZACAA,sCACAJ,mBACAA,MACA,CACA,gCAEA,qBAKA,MAJAA,4BACAI,wIACAA,sCACAJ,uBACAA,MACA,CACA,gCAEA,qBAWA,MAVAA,iEACAC,sKACA,SACAG,gMACAA,sCACAJ,qBACAC,0KACA,IACAA,2EACA,4CACAD,MACA,CACA,gCAGA,yBACA,CAEA,gCAEA,qBAKA,MAJAA,4BACAI,wIACAA,sCACAJ,uBACAA,MACA,CACA,gCAEA,4BAkBA,MAjBAA,6FACAC,sKACA,SACAG,gMACAA,sCACAJ,4CACAC,0KACA,IACAA,2EACA,6BACAG,mMACAA,sCACAJ,sDACAG,yEACAA,mHACAH,iCACA,qDACAA,MACA,CACA,gCAEA,qBAIA,MAHAA,sBACAC,2KACA,KACAD,MACA,CAEA,gCAEA,oCAKA,MAJAA,wBACAI,wbACAA,sCACAJ,mBACAA,MACA,CACA,gCAEA,qBAOA,MANAA,yDACAC,sKACA,SACAG,gMACAA,sCACAJ,gDACAA,MACA,CAEA,gCAEA,4BAcA,MAbAA,qFACAC,sKACA,SACAG,gMACAA,sCACAJ,iCACAI,mMACAA,sCACAJ,kDACAG,yEACAA,mHACAH,iCACA,6CACAA,MACA,CAEA,gCAEA,oCAKA,MAJAA,4BACAI,yWACAA,sCACAJ,uBACAA,MACA,CAEA,gCAEA,oCAcA,MAbAA,8DACAI,sIACAA,sCACAJ,YACAI,+VACAA,sCACAJ,oEACAI,qIACAA,sCACAJ,YACAI,6VACAA,sCACAJ,8BACAA,MACA,CACA,gCAGA,gCACA,CA9LA,iCACAE,6DACA,yIAqNA,MAvBAF,iBACAI,wLACAA,sCACAJ,oFACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,gDACAI,iMACAA,sCACAJ,oBACAI,gIACAA,sCACAJ,sEACAI,wJACAA,sCACAJ,2DACAI,4NACAA,sCACAJ,uCACAA,MACA,GAMAF,yBACAA,qBACAA,8BAEAsW,kFACA,iCACAlW,6DACA,2FAYA,MATAF,2BACAG,qEACAA,+GACAH,iCACA,OACAG,sEACAA,gHACAH,iCACA,cACAA,MACA,GA4BAhN,uGAEA6sB,kHACAwE,0HAg+BAC,yBACApxB,mCACAyC,iCACAiR,kBACA1R,cACA0mB,wBACAla,wBACAuF,gBACAsU,4BACAM,gBACAM,kBACAL,kBACAtR,cACAC,gBACA8Z,oBACAlE,gBACAmE,yBACA,EAEA,8BAEA,GAEAp0B,MC74CA,oXA4MA,oCACA,gCACA,gCACA,CA7MAK,sEACAwO,2EACA6B,gFACA9B,mHACAE,8GACArI,4IACAof,wHACAC,yGACAC,kIAsBA,mCAEAhX,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CAEA,+BAEA,iBACAA,iEACAA,0BACA,EACA,CA7CA,iCACAF,6DACA,2JAwEA,MA3BAF,iBACAI,wLACAA,sCACAJ,gFACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,4CACAI,iMACAA,sCACAJ,oBACAI,gIACAA,sCACAJ,oGACAzP,gFACA4P,4DACAA,sGACAD,yIACAE,sCACAJ,sHACAG,qEACAA,gHACAC,sCACAJ,+BACAA,MACA,GA6BAykB,iBAEApO,0DACA,wCACAE,2CAEAkO,8BACAA,+BAEAA,8BAEA/N,QACApkB,4BACAgT,qBACAtP,mBAGA,kCACAugB,yBACAkO,sDAEAhO,oCAGA5f,uDACA,EAEAygB,yDACAnkB,+BACAyE,4CAEAA,WACApD,8CACA2B,cACAH,uBAEAyuB,wBAEAhO,QACAtgB,sBACAtC,qBACAwN,QAEA7J,sBAEAX,uDAEA,EAEA+gB,qDACA,gDACA,0EACA,EAEA8M,+CACA,gDACA,iFACA,EASAxvB,oCAsDA,kDACAihB,yCACAwC,aACAzC,4BACArgB,YACAkD,yBACA6f,oBACA,GAEA1C,kCACArgB,eACAkD,aACA,EACA,EACA,CAoIA,sCACA+f,6EAGAO,kBAEAP,yCACAhY,mCACA,CAEA,yCACAgY,sBACAhY,mCACA,CAEA,mCACA,8BAEAyY,oBACAjD,0CACAwD,oCAEAA,8BAEAA,cACAR,sBAGApC,mCAGA4B,oCACAlhB,+CACAkhB,oBACAU,kBACAlD,0CACAwD,oCAEAA,8BACAR,4BACAQ,eAEAR,sBACApC,oDAEAA,8CAGAmC,mBACA3C,qDACAoD,oCAEAhB,sBACAA,iCAEA6L,eACAnwB,gBACAolB,kBACA,4CACA,GACA5jB,kBAEA6iB,YACArkB,8BACAolB,kBACA,4CACA,GACA5jB,kBAGA0gB,qBAEA,IA/QA9e,6CACAihB,4CACA8L,sDAEA7L,mBACAH,iBAMAK,wEAEAC,mDACA2L,yDACAC,wCACA1L,kDAEAC,uCACA,mDACA,EAEAlC,gDACA,6CACA,EAEAmC,2CACAP,gBACA6L,+CACA7L,gDACAlhB,+CACAkhB,mBAEA,EAEAQ,4CACA,uCACA,EAEAC,6CACA,uDACA,EAEAC,yCACA,sDACA,EAtCAO,qBACAC,YACAE,cAwCA,oGACAH,mEAmBAA,uBACAC,aACAI,WACAC,cACAE,UACAC,+BACAC,WACAC,2CACA,CACA,EAGAxE,yBACAyE,UACAlqB,yBACAmqB,+BACAlE,uBACAmE,MACAnE,4BACAoO,6BAEAhK,wCACAD,6CACAX,gBACAa,eACA,EACAC,0BACA7E,2DACA,EACA8E,wBACA,0BACAvE,+BAEAP,+CACAA,gCACA,CACA,GACA,CACA+E,gBAGAhF,4BACAyE,UACAlqB,yBACAmqB,+BACAlE,uBACAmE,MACAnE,4BACAqO,gCAEAjK,2CACAD,6CACAX,gBACAa,eACA,EACAC,0BACA7E,2DACA,EACA8E,wBACA,0BACAvE,+BAEAP,+CAEA2C,gBACAQ,4BACAD,mBAEAlD,gCACA,CACA,GACA,CACA+E,gBAGAhF,gCACAiF,YACAC,oCACA,0BACA4J,8BAEArM,oBACAjC,6BACAsO,8BACA,EACA1J,0BACA2J,gCAEA,mBACA,EACA5J,oCACA,0BACA2J,8BAEAtO,gCACAsO,kCAEArM,gBACA,CACA,IAKAzC,mDACAre,oBACAwhB,iBACA,GAEAnD,8CACAre,oBACAitB,0CACAjtB,kBACA,GAEAqe,2CACAre,oBACAotB,uCACAptB,kBACA,GAEAqe,2CACAre,oBACAyhB,4BACAD,kBACAxhB,kBACA,EA6EA,EAEA0jB,kDACA,gDAEAza,iEACAA,oDACAwW,kCACA,EACA,EAEAkE,+CACA5X,mBACAyS,2GAEA,EAcAuF,uDACAL,2BACA,wDACA9qB,sCACAA,oEAEA+qB,4BAEA,EAEA/C,yDACAhhB,aACAG,4CAcA,MAbAkJ,qDACA,0CACA8C,QAEA0S,cACA1S,kEAEAA,wCAEA,iBACAnM,mBAEA,GACAA,QACA,EAcAiK,8CACA,sEACA,EAEAma,sCACA,gDAGA3F,sCACAA,0EACAA,uFACAA,6DAGAte,6CACAA,iDACAA,2CACAA,+CAGAf,kCACA,EAQAilB,8CACA,eAEArrB,oBACA6F,iBACAkB,4BACAA,yCAIA/G,gFACAmH,4CAEAkJ,2CACAib,sBACAC,yDACAC,8DACAD,eACA,EAEAA,cACA,GAEA,CACA,GACArZ,SACAuZ,0CAGA,EAQAC,2CAEA7lB,UACAmB,mCAFAG,WAiBA,MAbAH,YACAnB,yBAIA,mCACAsB,4CAEAtB,eACAwK,2DACAxK,8CACA,IAEAA,KACA,EAMA4uB,qBACAhyB,+BACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,0BAEA,GAEA/rB,MC7uBA,odA8LA,oCACA,gCACA,gCACA,CA/LA0Q,gFACArQ,sEACAwO,2EACAD,mHACAE,8GACAimB,oGACAlP,wHACApf,4IACAmf,uIAsBA,mCAEA7W,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CArCA,iCACAF,6DACA,qGA0DA,MArBAF,iBACAI,wLACAA,sCACAJ,wHACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,oBACAI,gIACAA,sCACAJ,4IACAG,uEACAA,iHACAH,iCACA,gEACAA,MACA,GAiCA9K,oCACA,cAEA,wCACA0C,6CACAwtB,yCACA5tB,sBAEAI,uFAEAJ,kGACAyB,uBACAosB,yBACA7W,qCACA8W,qCACAhL,oBACA,GAGA7pB,yEAGA80B,4BAGAvP,qDACAxU,wCACAC,wCACAC,4BACAC,+BACArP,mBACA6yB,mCAEA,CACA,EACA,EACA,EASAK,4DACAC,4BACA1rB,6BACA2rB,oDAEAC,iBACA1qB,8CACAtK,iBACAkM,oDACA,GACAvK,oCACAA,mBACAuB,qBACAkI,oBACAb,WACAzC,oBAGA,0EACAmtB,qCACA5P,oFAGAvd,sCACA,iBACAA,SAEAA,kDACA,8CAGAotB,iCACAA,yBACAptB,6BAGAqtB,wDAEArtB,kDACAyC,8CAGAzC,oEAEA5B,wDACAmf,4EACA,IAEA4P,kCACA,YACAA,iCACAG,qBACAttB,QACAmtB,iCAEAT,yFACA,eACAa,qCAGAnvB,wDACAmf,6EACA,EACA,EAOAuP,uDACA3tB,6CACAmD,gEACAA,OACAA,uBACA6qB,iCACAhuB,+CACA,EAEA,EAQAquB,0DACA,WAQA,MAPAx1B,qDACA,qDACA,gCAEA,MADAgI,kBAGA,GACAA,MACA,EAWAqtB,8EAsEA,sBACAI,SACAC,UACAxO,0BACA5b,iBACAqqB,OACAD,UACAxO,yBACA5b,gBACA,CAEA,sBACAmqB,0BACAA,SACAvO,mCACAuO,iBACA,GACAG,UACAD,OACAzO,mCACAyO,eACA,GACAC,UAEA,CAGA,qBACA51B,wBACA+G,sDACA,6BACA8uB,UAEA,IAtGA1uB,6CAGA2uB,QAGAC,yBACAC,qBACAC,sBAGAC,2BACAC,uBACAC,wBAGAC,iFAEAC,kFAEA/tB,uBACAA,kCACApF,2BACA+jB,gDAGA/e,8FAGAouB,yDAGAd,2BACAvsB,8BACA/F,iCACAqzB,SAGAb,yBACAptB,gCACApF,2BACAgI,+CACAhI,yCACAqzB,SAGAC,qBACAC,sBAGAZ,uDACA/uB,8BAGA/G,sCAGAmI,mCACA,yBACAwuB,aAEAC,YAEA,GAEAzvB,qDACAyvB,YACA,EAoCA,EAQArB,oEACAH,kCACA1O,iCACAmQ,gCAGA72B,sCACA0G,SACAowB,cACA92B,iCACA0G,iDACAowB,yCAEA,iBACApwB,wBACA4uB,uBACA,+CACA5uB,sBACAguB,kDAGA,EACA,EAOAS,8DACAn1B,oDACA,qDACA0G,UACAA,sBACAA,kBACAguB,4CAEA,EACA,EAQAY,+CACAyB,cACAC,kBAMA,MALAtwB,WACAuwB,gCACAD,qCACAD,2CAEAA,SACA,EAQA/O,sDACA,iBAYA,MAXAhoB,wDACA0G,kDACA0uB,8BACA1uB,kBACAwwB,2BACAl3B,0BACA,sBACA,GACA,CAEA,GACAk3B,SACA,EAgBA/L,0DACAxW,gBACAwiB,IACA,gCACA,IACAxiB,6DACA,gGACAA,gCAEA,WAEA3U,4BAEAm3B,8DACAC,yDACA,GACAp3B,iDACA,YACAA,qDACAq3B,0BACAC,0BACAD,WACA3C,6BACAA,8BAGA,GAEA,CACA,EAgBA5J,kDACA,gBAGA9qB,oDACA,qDACA0G,SACAA,cACAsK,4BACAgmB,WACA5B,SACA,EAEA,GAEAruB,gCAEAA,wCACA/F,wBACAu2B,kBAEA,GAEAv3B,2BACA,EAcAiR,iDACA4hB,kCACA7rB,gDACA,eACA,EAMAokB,sCACA,eACArkB,oBACAI,4CAEAkJ,yDACAlJ,wDAEAJ,0BACAwe,+CAEApe,oCAEAkJ,kCACAO,QACAvN,oBACAgN,oDACAA,8BAIAjK,kCACA,EAQAilB,8CACArrB,mBACA6F,iBACAkB,4BACAA,wCAGA,EAQA2kB,2CACA7lB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,EAMA2xB,6BACA/0B,uCACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,kCAEA,GAEA/rB,MC7uBA,qjBA+MA,oCACA,gCACA,gCACA,CAhNA0Q,gFACArQ,sEACAwO,2EACA6U,+FACA9U,mHACAE,8GACAimB,oGACAlP,wHACApf,4IACAmf,uIACAE,yGACAC,kIAsBA,mCAEAhX,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CAEA,+BAEA,iBACAA,iEACAA,0BACA,EACA,CA7CA,iCACAF,6DACA,2JAwEA,MA3BAF,iBACAI,wLACAA,sCACAJ,uHACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,oBACAI,gIACAA,sCACAJ,4IACAG,uEACAA,iHACAH,iCACA,6JACAzP,gFACA4P,4DACAA,sGACAD,yIACAE,sCACAJ,wDACAA,MACA,GA8BAkoB,gBAMAzD,iBAQA0D,uDAQApC,+CACAyB,cACAC,kBAMA,MALAtwB,WACAuwB,gCACAD,sCACAD,kDAEAA,SACA,EAOAxB,0DACA,kDAGAv1B,oDACA,qDACAs1B,wBACA5uB,sBACAguB,uCACAA,qCAEA,GAGA10B,qDACA23B,oCACAjD,oCACA,EACA,EACA,EAOAS,8DACAn1B,oDACA,qDACA0G,UACAA,sBACAguB,kCACAA,yDAEA,GAGA10B,qDACA23B,oCACAjD,yCACA,EACA,EACA,EAOAI,uDACA3tB,6CACAywB,qCACAC,kEACAA,SACApS,2CACA0P,iCACAyC,gCACA,EAEA,EAQAnR,uDACAZ,qCACAC,2CACAmR,SACAa,OAEA9D,8BACAA,+BAGAA,8BAGA,4DACAiD,kCACAa,oCAGA,iCACArS,uCACAO,6BACAA,mCAGA,EAQA6C,wDACA,wCAEAmL,8BAEAhO,gCACAA,+BACAP,sCACA,EASAsS,yEAIA5wB,6CACA6wB,8BACAC,uCACAC,4CACAC,6BAPAhT,6EASA8S,iBAEA/3B,8BACA82B,sCACAA,kBACAtwB,kCACA0xB,6BAGAjT,yBAGAgQ,iCACA6C,0CAEAvR,gCAEA4R,oBACAC,uCACAC,8BAEAF,YACAtqB,oBACAyqB,gBACA,cACApwB,WACA4D,mCACAC,qCACA,GAEAosB,2BACAA,eACA,CACArsB,kCACAC,oCACA,EACA,IACA,wBACA,mBAEAosB,gBAGA3rB,uBAGAirB,kBACAhrB,uCACAmW,qBACA7W,+BACAD,8BACAxD,sCACAosB,wCACAhoB,UACAga,UACA6R,SACA,GACA52B,sBACA6zB,UAEAgD,iCACAjT,iDACAnd,wBACA4sB,qDAEA9tB,mBACAA,oBAGA,kCACAse,mCAKAhf,aACA,WACA1G,oEACA,CAGA+G,mEAEA4wB,mBAEA9O,kCAEAziB,wDAEA,GAEAW,uCAEAX,uDACA,EACA,CAEA,EAUA2uB,yDAwCA,6BAEAO,kDACAyC,kCAEA,CA3CA,qBACAvtB,4EACAtK,iBACAkM,kCACAtE,QACA,GACAjG,oCACAA,oBAEA4jB,yDACAkT,mBACA,GAEArP,sBACA7D,kCACAiF,YACAC,mCACA2K,yBACAZ,mCACA+C,yBAEA,EACA5M,yBACAyK,yBACAZ,wCACAiE,oBACAlB,gBAEA,EACA7M,mCACA0K,yBACAZ,wCACA+C,gBAEA,CACA,EASA,EAEApN,iEACA3E,yCACA+R,YACAhS,2BACArgB,YACAkD,kBACA6f,oBACA,GAEA1C,kCACArgB,eACAkD,aACA,EACA,EACA,EAQAswB,6DAuDA,uCACA3S,+BACAA,2BACA4S,8BAEAC,4BAGA,CAEA,qCACAd,8CACA/R,2BACAsP,8BACA,CAEA,uCACAtP,8BACAkP,gCACA,IAzEA4D,4CACAxP,YACAE,cAEAhE,gEACAre,oBACAA,mBACA4xB,0CACA,GAEA1P,uBACAC,aACAI,WACAC,cACAE,UACAC,+BACAC,WACAC,2CACA,CACA,EAEA5Z,iDACAoV,cACAyE,UACAlqB,yBACAmqB,+BACAlE,uBACAmE,MACA0O,4BACA7S,4BAEAoE,4CACAD,6CACAX,gBACAa,eACA,EACAC,0BACA7E,2DACA,EACA8E,wBACAxqB,mBACA,0BACA64B,8BACA5S,+BACAP,+CACAA,gCACA,EACA,CACA,GACA,CACA+E,eACA,GAuBA,EAUAhmB,oCACA,cAEA,wCACA0C,6CACA6wB,qCACArD,yCAEA5tB,0BAGA0D,gBACAA,qCACAA,sDAEA6e,0EAGAniB,uFAGAJ,kGACAyB,uBACAosB,yBACA7W,qCACA8W,qCACAhL,qBACAoP,uCACAjB,uCACA,YACAA,qCACA,mBACA7S,sCACAA,uCACA,EAEA,CACA,GAGAnlB,yEAGA44B,qCAGA9D,2BACA,EACA,EAQA9M,sDACA,aAcA,MAbAhoB,qDACA,qDACA0G,8CACA1G,oDAEA03B,sBACAxM,iCAEAA,gCAEA,EAEA,GACAlrB,qBACA,EAgBAmrB,0DACAhkB,6CACAwN,eACA,gCACA,IACAA,4DACA,UACAA,mBACA,CAEA3U,2BACAA,oDACA,qDACA0G,SACA1G,2CACAk5B,gBACAC,YACA,kBAEAD,qDACAC,kDACAD,+BACA7oB,2EACA0nB,mCAGA,EAEA,EAEA,CACA,EAeAjN,kDACAqK,iCAEAn1B,qDACA0lB,0CACA,EACA,EAcAzU,8CACA,qCACA,6CACA,EAMAma,sCACA,eACArkB,oBACAI,4CAEAkJ,yDACAlJ,wDAEAJ,0BACAwe,+CAEAlV,kCACAO,QACAvN,oBACAgN,oDACAA,6BAEAoV,2DACAA,oEAGArf,kCACA,EAQAilB,8CACArrB,mBACA6F,iBACAkB,4BACAA,wCAGA,EAQA2kB,2CACA7lB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,EAMAuzB,4BACA32B,sCACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,kBACAgM,2CACA,EAzpBApO,qBA2pBA,iCAEA,GAEA3pB,MCt4BA,gdA8LA,oCACA,gCACA,gCACA,CA/LA0Q,gFACArQ,sEACAwO,2EACAD,mHACAE,8GACAimB,oGACAlP,wHACApf,4IACAmf,uIAsBA,mCAEA7W,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CArCA,iCACAF,6DACA,qGA0DA,MArBAF,iBACAI,wLACAA,sCACAJ,oHACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,oBACAI,gIACAA,sCACAJ,4IACAG,uEACAA,iHACAH,iCACA,gLACAA,MACA,GAgCA9K,oCACA,cAEA,+CACA0C,6CACAkyB,gCACA1E,yCAEAxtB,uFAGAJ,kGACAyB,uBACAosB,yBACA7W,qCACA8W,qCACAhL,oBACA,GAGAyP,yCAGAt5B,oFAGAulB,qDACAxU,mCACAC,mCACAC,4BACAC,+BACAwjB,mCACA,CACA,EACA,EACA,EAUAK,oEACA,qBACAvqB,4EACAtK,iBACAkM,4BACA,GACAd,kBAGA+E,qBACAqZ,qBACAjkB,oCAIA,YACA8zB,kDAEAxB,gDAEA3xB,wDACAmf,iEACA,EACA,EAQA+T,sEAEAlwB,uCACA2H,mCACAC,mCAHAwoB,UAMA,iBACApwB,SACA,mBACAA,UAIApJ,gCACA+N,kBACA0rB,wFACA,WACAA,4BAEAJ,2BACA,GAGAK,qCAGAF,oCACAA,4BACApyB,mBACA,uBAEAqyB,6DACAD,gCACAC,4BAEA,EACA,EASA1B,6DAEA,6CACAE,2CAEAvxB,8CACAA,kBACAizB,yBACAjF,6CAGAuD,QACAryB,+BACAg0B,4BACAC,QACAj0B,sBAEA,EASA2zB,oEACAO,+BACAC,sBAEAV,WACA/S,4BACAE,gBACAuT,2CACA,GAEA,2DAGArzB,kBACAszB,yBACAtzB,6BACAguB,4CAGA2E,WACA/S,WACA5gB,sBACAyjB,mCACAzjB,wBAGA2zB,WACAt1B,6CACAwB,kBACA,EAWAm0B,+CACA,aAcA,MAbA15B,iCACA85B,gBACAvtB,+BACArM,kBACAgM,eACAE,mBACAD,mBACA8tB,QACA5tB,gBACA,GAEA6tB,gBACA,GACAA,KACA,EASAP,+CACAjtB,wBAIAH,mDAHA4tB,OAIA5tB,OAEA4tB,4DACA5tB,uBACA6tB,OACA1E,UAEA,EAQAsE,4CACA,uDACAztB,MACAA,WAEA,EAQAyb,sDACA,gBAUA,MATAhoB,qDACA,iDACAgB,yBACAgG,eACAqzB,yBACAn6B,cACA,EAEA,GACAF,YACAs6B,gBACAnD,UACAroB,OACA,EAgBAqc,0DAEAhkB,6CACAkyB,gCAFA1kB,eAGA,gCACA,IAEAA,4DACA,WAEA3U,2BACAA,0DAEA85B,gBAGAhU,mCACAyU,+CACAV,QANAnzB,QAOAof,SACApf,iDACAA,UAEA2yB,mEAGAtB,oDAGA,EAEA,CACA,EAgBAjN,qDACA3jB,6CACAkyB,gCAEAr5B,oDACA,qDACA0G,SACA6yB,oDAEA,GAEAF,WACA/S,eACA5gB,+BACAm0B,QACAt0B,kBACA,EAcA0L,8CACA,sEACA,EAMAma,sCACA,eACArkB,oBACAI,4CAEAkJ,yDACAlJ,wDAEAJ,0BACAwe,+CAEAlV,kCACAO,QACAvN,oBACAgN,oDACAA,8BAIAjK,kCACA,EAQAilB,8CACArrB,mBACA6F,iBACAkB,4BACAA,wCAGA,EAQA2kB,2CACA7lB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,EAMA20B,yBACA/3B,mCACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,8BAEA,GAEA/rB,MCnpBA,2cA8LA,oCACA,gCACA,gCACA,CA/LA0Q,gFACArQ,sEACAwO,2EACAD,mHACAE,8GACAimB,oGACAlP,wHACApf,4IACAmf,uIAsBA,mCAEA7W,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CArCA,iCACAF,6DACA,qGA0DA,MArBAF,iBACAI,wLACAA,sCACAJ,+GACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,oBACAI,gIACAA,sCACAJ,4IACAG,uEACAA,iHACAH,iCACA,gEACAA,MACA,GAgCA9K,oCACA,cAEA,+CACA0C,6CACAwtB,yCAEAxtB,uFAEAJ,kGACAyB,uBACAosB,yBACA7W,qCACA8L,oBACA,GAGA7pB,yEAGAulB,qDACAxU,mCACAC,mCACAC,4BACAC,+BACArP,qBACAA,sBACA6yB,gEACAA,oCACAtuB,wDACAe,0EAEA,CACA,EACA,EACA,EASA4tB,4DACA5tB,6CACA+tB,iBACA1qB,4EACAtK,iBACAkM,4BACA,GACAd,iBACA,aACAopB,gEACA,eACAvtB,gEAEAutB,sEACA,eACAvtB,6DAEAf,wDACAmf,4EACA,EACA,EAQAyC,sDACA,mCACAmP,qBACA,sDACA,qDACA,GACAhO,mBACAra,OACA,EAgBAqc,uDACA,mBACA,gCACA,IACAxW,4DACA,WAEA3U,2BACAA,oDACA,aACAA,0DACAk1B,kDACAA,WACAA,mBACAR,0EACAnP,kFAGA,EAEA,CACA,EAgBAuF,kDACA9qB,oDACA,qDACA0G,UACAA,kBACAguB,4CAEA,GACAnP,6CACA,EAcAtU,iDACA4hB,kCACA7rB,yEACA,eACA,EAMAokB,sCACA,eACArkB,oBACAI,4CAEAkJ,yDACAlJ,wDAEAJ,0BACAwe,+CAEAlV,kCACAO,QACAvN,oBACAgN,qDAIAjK,kCACA,EAOAilB,8CACArrB,mBACA6F,iBACAkB,4BACAA,wCAGA,EAQA2kB,2CACA7lB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,EAMA40B,oBACAh4B,8BACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,yBAEA,GAEA/rB,MC3cA,oZA6LA,oCACA,gCACA,gCACA,CA9LA0Q,gFACArQ,sEACAuO,mHACAC,2EACAC,8GACArI,4IACAmf,uIACAC,wHAsBA,mCAEA9W,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CArCA,iCACAF,6DACA,qGA0DA,MArBAF,iBACAI,wLACAA,sCACAJ,+EACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,2CACAI,iMACAA,sCACAJ,kBACAI,gIACAA,sCACAJ,qGACAG,qEACAA,gHACAC,sCACAJ,+BACAA,MACA,GA6BAmrB,iDACAvzB,6CAEAye,kDACA,iCAEA,uDACA+U,8BACA,IACAC,qDACAC,8DAEAA,4CACAF,yBAEA,CACAv0B,wDACAmf,iEACA,EAEAlV,kDACAjJ,mBACAwe,gCACA,EACA,EASAnhB,oCACAi2B,yBAGAnV,qDACAxU,mCACAC,mCACAC,4BACAC,+BACA,yBACArP,kCACAmkB,sCACAmG,6BACAc,8DAEAvb,sBACAya,0BACAnG,6BACAiH,gCACA,OAEA,CACA,EACA,EAEAnC,kDACA,gDACAza,0CACA,EAcA8a,uDACA,gDAEA,IACAnrB,0EACAmH,qEACA,GACAoe,gDACA,UACA,yDACA,CACA,EAEAyC,yDACA8E,WACA3lB,4CAIA,MAHAkJ,iDACAyc,4BACA,GACAA,MACA,EAcA7b,8CACA,sEACA,EAMAma,sCACA,gDAGAjkB,yCAGAf,kCACA,EAQAilB,8CACArrB,mBACA6F,iBACAkB,4BACAA,wCAGA,EAQA2kB,2CACA7lB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,EAEAi1B,oBACAr4B,8BACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,yBAEA,GAEA/rB,MCxYA,gcA4LA,oCACA,gCACA,gCACA,CA7LA0Q,gFACArQ,sEACAwO,2EACAD,mHACAE,8GACArI,4IACAmf,uIACAC,wHACAmO,oGAsBA,mCAEAjlB,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,iBACAI,iEACAA,0BACA,EACA,CApCA,iCACAF,6DACA,2JAwDA,MApBAF,oBACAI,wLACAA,sCACAJ,qFACAI,8LACAA,sCACAJ,wCACAG,uEACAA,iHACAH,iCACA,4GACAI,iMACAA,sCACAJ,0GACAzP,gFACA4P,4DACAA,sGACAD,yIACAE,sCACAJ,4BACAA,MACA,GA6BAwrB,oBAEAC,iBACAC,cACAhN,qCACA,EASAxpB,+CACAy2B,+BACAC,wCAEAh0B,4CADAi0B,cAGAp7B,uBAEAk7B,2BACA/zB,iFAEAA,6DAGAk0B,qCACAnhB,+BACAohB,oCACA,cACA,EAEAC,sBACAp0B,oBACAqB,gBACA1G,iCACA05B,2BACAC,sCACAC,yEACA,GAEA,wCAEAP,WAEAC,mEAEA,uBACAA,sBAIAj0B,WACAoD,wBAGA,GACA8F,qBACAqZ,qBACAjkB,kCACA,CACA,iEACA4K,8CACA,KACAlJ,kDACAC,mBACA,GACAD,WACApD,eACA43B,mBACA/0B,gBACA,CAEAu0B,iCACAC,qBAGAh1B,uDACA,GACAmE,6BACA4wB,UACAC,oBAEA,GACA7wB,8BACA4wB,iCACAC,oBAEA,EACA,EAEAtQ,kDACA8C,gCACA,EAEAA,uDACAxnB,gBACAG,iBACAsnB,sBACA+N,+BACA,EAcAzQ,uDACAyC,qEACA,EAEA5F,sDACA,iDACA,4CACA,EAcA/W,8CACA,sEACA,EAMAma,sCACA,gDAGA/a,qCAEAlJ,8BAGAoe,+CAGAnf,kCACA,EAQAilB,8CACA,eAEArrB,oBACA6F,iBACAkB,4BACAA,yCAIA/G,gFACAmH,4CAGAA,+CAEAkJ,0CACAib,sBACAC,yDACAC,8DACAD,eACA,EAEAA,cACA,GAEA,CACA,GACArZ,SACAuZ,qBAEAtkB,8BAGA,EAQAukB,2CAEA7lB,UACAmB,mCAFAG,WAiBA,MAbAH,YACAnB,yBAIA,mCACAsB,4CAEAtB,eACAwK,0DACAxK,8CACA,IAEAA,KACA,EAMAg2B,yBACAp5B,mCACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,8BAEA,GAEA/rB,MCldA,kZA+NA,oCACA,gCACA,gCACA,CAhOA0Q,gFACArQ,sEACAwO,2EACAD,mHACAE,8GACArI,4IACAmf,uIACAC,wHAsBA,mCAEA9W,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CAEA,+BAEA,iBACAA,iEACAA,0BACA,EACA,CAEA,uCAEA,qBAQA,MAPAJ,sCACAI,iEACAA,sCACAJ,uBACAI,oIACAA,sCACAJ,oCACAA,MACA,CACA,gCAGA,qMACA,CA/DA,iCACAE,6DACA,2JA4FA,MA7BAF,iBACAI,wLACAA,sCACAJ,6EACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,yCACAI,iMACAA,sCACAJ,kBACAI,gIACAA,sCACAJ,yMACAzP,gFACA4P,8DACAA,wGACAD,2IACAE,sCACAJ,uEACAzP,kGACA4P,8DACAA,wGACAD,6JACAE,sCACAJ,yHACAA,MACA,GAiCAusB,aASAr3B,oCACA,gDAGAwjB,8BAEA9gB,wEACA40B,kCACA,GAEAxW,gDACA,EAcA4F,uDACA,gDACAnkB,mCAEA,mFACAhH,gEACAgL,2EACAC,gEACA/G,SACAm2B,QAEAhqB,qCACAsrB,MACA53B,6BACA43B,MACAK,kBACA,GAGAzW,gDACA,EAcAtU,8CACA,6EACA,eACA,EAEA6Z,kDACA,gDACAza,+DACAA,4BACA,GAEAkV,gDACA,EAEA0W,mDACA,sCAEA,qCAEA,6EACA,CAEA,wBACA,+BACA,kDAEA,+EAEA,yDAEA,MACA,mDAEA,8EAEA,gBAEA,EAEAjU,yDACA7gB,6CACA2lB,UAMA,MAJA3lB,iEACA2lB,8BACA,GAEAA,MACA,EAEAoP,6CACAlN,uBACA7nB,uDACA8D,iCACAD,iCACAmxB,6CACAR,MACA95B,mBACAu6B,8CACAT,MACA95B,mBACA,wBACA,EAEAk6B,mEAEAM,8CACAC,oDACArH,oDAHAnP,OAKA,sBACAmP,4CAGAj1B,yCAEAoH,mBACAme,kDACA,sDAMAnf,2DACAmf,mDAJAne,mBACAme,wDAKA,EAEAgX,iEACAC,gCACAC,YAaA,MAXAz8B,gDACA8lB,iEACA4W,oCACAzF,oCACAxuB,6CAEA,6BACAg0B,gBAEA,GAEAA,QACA,EAEAE,sEACAC,0CACAxxB,QASA,MANApL,4CACAgH,yFACAoE,OAEA,GAEAA,KACA,EAEAyxB,kDACA,gDACA,qDACA,EAEAC,mGACA,2CACA,6BACA,EAEAC,oDACA,kBAQA,MANA/8B,mDACAA,qCACAg9B,+CACA,EACA,GAEAA,UACA,EAEA/U,2DAEAqU,qDACArH,oDACA9jB,uCAKA8rB,wCACAC,8DACA,iBACApB,aAEAqB,eACAhtB,gBACAJ,iDACAC,YACAE,qBACAitB,6CACArB,YACA,CACA,GAEA,EAEAsB,kFACA,gDAEA,mBACAtB,gBAEA9V,yBACA,oFACA,CACAqX,wDACAC,mCAEAH,eACAhtB,gBACAJ,wFACA,KACA+V,2BACA,CACA9V,YACAC,uBACA+V,gBACA,CACAuX,uBACA5W,eACA,EACA,IACA,WACAX,gBACA,CACAuX,0BACA5W,YACA,EACA,IAEA,EAEA,EACAzW,qBACA8V,gBACA,CACAuX,wCACA5W,mBACA,EACA,IACA,CACAwW,yCACArB,YACA,CACA,EACA,CACA,EAEA,wCAEAzqB,yEAEAkU,kEACA,uDAGAO,QACAA,mBACA,8BACA6W,kEAEAS,+DACAI,+BACA,yBACAA,8BACAN,8BAEA,YAEA,IACA,0CAEA7rB,qEAEAkU,kEAEAO,QACAA,mBACA,8BACA6W,kEAEAS,+DAEA,wBAEA,IACA,wCAEA/rB,gDACAA,wCACAA,oCAEAkU,kEACA,uDAGAO,QACAA,mBACA,8BACA6W,kEAEAS,+DACAI,8BACA,sBACAA,0BACAN,8BAEA,wBAEA,IACA,uCAEAZ,mCAKAjrB,gDACAA,wCALAA,gDACAA,wCACAA,yCAMAkU,kEACA,uDAGAO,QACAA,mBACA,8BACA6W,kEAEAS,+DACAI,8BACA,sBACAA,8BACAN,8BACAM,gEACA,wBAEA,GAEA,EAzKAnsB,IA2KA4rB,cACA,EAEA7R,sCACA,gDACAjkB,kCAEAoe,+CAGAnf,kCACA,EAQAilB,8CACA,eAEArrB,oBAEAA,iDACAmH,4CAEAkJ,oCACAib,sBACAC,4DACAC,iEACAD,eACA,EAEAA,cACA,GAEA,CACA,GACArZ,SACAuZ,qCAEApb,oCACAib,sBACAC,4DACAC,iEACAD,eACA,EAEAA,cACA,GAEA,CACA,GACArZ,SACAsU,yBACAnW,wDACA,IAGAxK,iBACAkB,4BACAA,yCAGA,EAQA2kB,2CAEA7lB,UACAmB,mCAFAG,WAoBA,MAhBAH,YACAnB,yBAIA,mCACAsB,4CAEAtB,oBACAwK,oDACAxK,iDACA,GACAwK,oDACAxK,iDACA,IAEAA,KACA,EAMA43B,kBACAh7B,4BACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,kBACAgS,sBACA,EAEA,uBAEA,GAEA/9B,MCrvBA,yVAyLA,yCACA,gCACA,gCACA,CAuCA,sCACAg+B,oDACAC,sBACA,kDACA,CAYA,6CACA,wCACAz2B,sCACA02B,yBACAC,sCACAC,sDAGAC,8GAOA/E,6BAGA,qCACA,2EACArE,qDACApsB,kDAEAzB,6CACA,CACA,OAGAk3B,2CACA,iCACA74B,wCACA84B,gCACApb,0CACAqb,kCAEAp3B,sCACA+b,QACA1d,UACA+4B,gBACAC,sCACAL,kBACAM,kBACA71B,0BACAosB,4BACA0J,WACAC,yDACAC,gCACAC,2CACA,GACAl0B,uBACA0uB,SAEA5oB,YACAquB,+BACAn0B,qCAEAuzB,0DAIA32B,oCACA,GACAoD,sBAIApD,kCAEA62B,eACA,eAIA/E,SAGAthB,SACA,GACApN,wGACAA,sBACApD,gEACAf,wDAEA43B,eACA,cAEA,EACA,CACA,EAIA72B,gCACAA,iCAIAA,6CAGA82B,iBACA,EACA,CAMA,8BACA,yCAEAl3B,2BACAA,mCACAA,+BAGAsJ,iDACAA,2CAEAlJ,qCAEAkJ,gCAGAjK,kCACA,CAQA,sCACA,wDACA,CAgBA,2CACA,YACA,OACA23B,uDACAppB,6DACAgqB,8CACAz5B,0DAEA6B,2BACA,oCACAA,mCACAA,yCACAA,kCAGA,UAEA,CAEA,CAeA,oCACA7B,+CACA,CAcA,wCACAA,+CAIAsgB,gEAHA,WAIA,CAQA,qCASA,gEACAoZ,wCAEA5+B,gCACA+G,uDAIA/G,iCACA+G,iDACAA,uDAIA63B,+CACA73B,oDACA,gCACAA,kCAIA,EAEA/G,oBACA6F,iBACAkB,4BACAA,yCAGA/G,0DACA+G,qCACA83B,iCAEA93B,qDACAA,4CACA83B,gCACA,IAIA,CAQA,kCACAh5B,UACAmB,mCAcA,MAZAA,YACAnB,yBAIAkB,2BACAlB,cACAkI,gDACA+wB,2CACAR,2CACA,GAEAz4B,KACA,CAlhBAwK,gFACArQ,sEACAuO,mHACAC,2EACAC,8GACA+W,wHACApf,4IACA24B,wHAsBA,mCAEArwB,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CArCA,iCACAF,6DACA,qGAsDA,MAjBAF,iBACAI,wLACAA,sCACAJ,6EACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,oBACAI,gIACAA,sCACAJ,yHACAA,MACA,GAyBA9M,4BACAyC,iCAGA85B,UACA55B,gBACA,EAGA65B,mBACAC,+CA+TAC,kBACA18B,kBACA0T,kBACA1R,cACAS,0BACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,uBAEA,GAEA/rB,MC3iBA,igBAiRA,oCACA,gCACA,gCACA,CAlRAK,sEACAqQ,gFACA7B,2EACAmI,yGACApI,mHACAE,8GACArI,4IACAmf,uIACAC,wHACAC,yGACAC,kIAsBA,mCAEAhX,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAGA,uBACA,CAEA,+BAGA,qBACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAGA,kBACA,CAEA,gCAGA,gBACA,CAEA,gCAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,gCAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CAEA,gCAEA,iBACAA,iEACAA,0BACA,EACA,CAEA,gCAGA,iBACA,CAEA,gCAGA,kBACA,CAEA,gCAGA,eACA,CAEA,gCAGA,iBACA,CA7FA,iCACAF,6DACA,2JA2IA,MA9CAF,iBACAI,wLACAA,sCACAJ,6EACAI,wJACAA,sCACAA,8LACAA,sCACAJ,qCACAG,uEACAA,iHACAH,iCACA,6EACAI,0JACAA,sCACAJ,aACAI,mMACAA,sCACAJ,oBACAI,kIACAA,sCACAJ,kLACAI,oIACAA,sCACAJ,8BACAzP,kFACA4P,4DACAA,sGACAD,2IACAE,sCACAJ,4HACAI,4JACAA,sCACAJ,8EACAI,4JACAA,sCACAJ,mLACAI,oIACAA,sCACAJ,mHACAI,4JACAA,sCACAJ,4EACAI,4JACAA,sCACAJ,gIACAA,MACA,GAyBA6vB,4GAEAC,6CACA,0DACAC,sCACA,EAEArX,2DACA9gB,6CACAihB,2CACAlC,2CACAnV,gDACAC,gDAYA,GAVAD,KACAwU,mGACAW,oCACA,yBAEA,YAEA,GAGAlV,2CACA,oDACAjK,YACAyH,yCACA,WACA0X,qCACAkC,gDACA,iDAEAA,mDACA,aAEA,EACA,CAEA3C,kFACA,iCACAQ,8BACAsZ,uCACA7tB,sBACAuU,gCACA,MACA,GAIAR,6DACAyE,WACAC,4BACA,0BACAlE,8BACAsZ,kCACA,EACA/U,wBACA,0BACAvE,iCACAsZ,+BACA,CACA,GACA9U,eACA,CACA,EAEAK,qDACA3jB,6CACAq4B,8CACApX,qFACAqX,6CAEAt4B,uEACAue,yBACA,GAEA+Z,iDACA,8GACA,GACArX,6BACA,EASA3jB,oCAmLA,kDACAihB,yCACAga,sBACAja,qCACArgB,YACAkD,8BACA6f,oBACA,GAEA1C,kCACArgB,eACAkD,aACA,EACA,EACA,CA4HA,8BACA,8DACA,CAEA,sCACAq3B,sCACAC,gBACA50B,IACAC,GACA,EACA40B,eAGAxvB,yCACA,0CAEA,+BACA,qEAEA,MADAwvB,yBAGAD,gCACA,MACA,qEAEA,MADAC,yBAGAD,gCACA,CACA,GAEA,mCAIA1Z,qCAHA7V,gEAOAyvB,2CACAA,kDACA,CAEA,2CACA,uDACAC,iDACAC,iDACAC,+DACAC,+DAEA,4BAQAD,0CACAF,qCAEAG,2CACAF,sCAXAC,yCACAF,qCAEAG,4CACAF,oCAUA,CAEA,gCACA,uDACA,OACAh1B,qCACAC,oCACA,CACA,IArYA9D,6CACAihB,4CACAlC,4CACAia,mDACAC,2DACAC,iDACAC,+CACA9X,wEACAC,sDACA8X,kDACAC,oHAEAnY,mBAOAoY,2CACAN,8BACAC,uDACAC,uDACAC,qDACA,EAEAI,yCACAP,iCACAC,uDACAC,uDACAC,qDACA,EAEAK,8CACAtY,eACAA,oCAEAA,sBACAA,gCACA,EAEAO,2CACAP,gBACAA,oCACAA,oBAEAqY,gBACA,EAEAE,uEACA,iCACAhY,kBAGA,uDACAiY,sCAEA3a,4BAGA9f,wDAGAmf,gDACA,EAEAub,gEACA7a,2BACA2C,mBAEA+X,uBACAF,kBAEA,EAEAM,uCACA1Y,gBAEAD,kCACAhiB,wDAGAmf,kDAGAqD,iBACA,EAEAoY,+CACA,+BAEAC,eACAA,4BACA76B,wDAEA,EAEA86B,6CACA,+BAEAC,eACAA,2BACA/6B,wDAEA,EA3FAqjB,OACAa,OACAhB,qBACAC,YACAuW,iBA2FAra,kDACAmD,iBACA,GAEAnD,8CACA,iCAGAQ,iEAIA7e,oBAEA+4B,+BACAzuB,sBACAyuB,iCACA,OAEAS,+BACA,GAEAnb,8CACA,iCAGAQ,iEAIA7e,oBACA05B,gCACA,GAEArb,oDAEApV,8EAIAjJ,oBACA25B,gBACA,GAEAtb,oDAEApV,8EAIAjJ,oBACA45B,oBACA,GAEAvb,mDAEApV,8EAIAjJ,oBACA85B,mBACA,GAIA,iGACA5X,gEAmBAA,uBACAwW,2DACAzvB,4DAEAkZ,aACAI,WACAC,cACAE,UACAC,+BACAC,WACAC,2CACA,CACA,EAGAxE,yBACAyE,UACAlqB,yBACAmqB,+BACAlE,uBACAmE,MACAnE,4BAEAoE,wCACAD,6CACAX,gBACAa,eACA,EACAC,0BACA,0BACA7E,4DACAga,sBACA0B,gCAEA,EACA5W,wBACA,0BACAvE,+BAEAP,+CACAA,gCACA,CACA,GACA,CACA+E,gBAGAhF,yBACAyE,UACAlqB,yBACAmqB,+BACAlE,uBACAmE,MACAnE,4BAEA0a,uBAGAJ,sBACAA,wCACA,2BACAA,mDAEAA,+CAEAA,+BAEAlW,wCACAD,6CACAX,gBACAa,eACA,EACAC,0BACA,0BACA7E,4DACAga,sBACA0B,gCAEA,EACA5W,wBACA,0BACA6W,wDAEApb,+BACAsa,sBAEAc,4BACAN,gBAGArb,+CACAA,gCACA,CACA,GACA,CACA+E,gBAGAhF,yCACAiF,WACAC,oCACA,kCACA2W,0BACA/M,8BACA,EACA1J,0BACA,kCACA0W,0DAEA,oBAEAX,8CACAlb,+CACA,EACAkF,oCACA,kCACAkV,0BACAvL,iCACA,CACA,IAgFAtM,8BAGA5X,8EACAxO,qDACA,oDACA0jB,+CACA0C,8BACA1C,iDAGA,GAEA8Z,uBACA,EAgBAlU,0DACAhkB,6CACAihB,2CACAlC,2CAEA,wCACA4E,+BAEA,KACA9qB,0EACAkmB,oFACA,EACA,UACA,iEACA,CAGAX,gDACA,EAEAyC,yDACA7gB,6CACAH,YAIA,MAHAqJ,mDACArJ,2CACA,GACAA,QACA,EAcAiK,8CACA,sEACA,EAQAmc,uDACA,yBACAG,sFACA,EACA,EAMAnC,yCACAjkB,6CAGAq6B,WACA,qCACA,mBACA,yBACA,8BACA,oBACA,mBACA,CACAA,0DACA/b,oDACA,GAEApV,qCAEAlJ,+DAEAoe,+CAGAnf,kCACA,EAQAilB,8CACA,uBACAxlB,iBACAkB,4BACAA,yCAIA/G,gFACA,gDAEAqQ,2CACAib,sBACAC,yDACAC,8DACAD,eACA,EAEAA,cACA,GAEA,CACA,GACArZ,SACAuZ,wCACA,CAEA,EAQAC,2CACA7lB,UACAmB,mCAOA,GALAA,WACAnB,yBAIA,kCACA,gDAEAA,eACAwK,2DACAxK,8CACA,EACA,CACA,YACA,EAMA47B,kBACAh/B,4BACA+T,sBACAL,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,uBAEA,GCj8BA/rB,4DACA,aAUA,MAPA2H,uCAOA,CAQAo6B,oCACA,mBACA,gGACA,kBACAp6B,6CAEA,oCAEA,EAOAq6B,8CAEA,EAOAC,4CAEA,EAEAC,kDAEA,EACAC,gEAEA,EAQAC,gEACA,sDAEA,kBACA,4FAGA,iCACA,CACA,CACA,GAEApiC,MC1FA,2JAEAqiC,wMAqBA,kBAQAC,uCAEAC,6BADAC,kBAGA,QAGA,GAFAA,6CACAD,qEACAA,IAEAn7B,4BACAm7B,0CAEA,qFAIA,UACA,EAOAE,6CACAr7B,gCACA,CACA,EAEA,mBAEA,GAEApH,MChEA,2PAyBA,oCACA,OACA0iC,iDACA,sBAaA,MAXAjpB,eACAkpB,sDAGAtiC,0CACAsiC,4CACA,GAEAtiC,mDACAsiC,2DACA,GACAA,cACA,EACAC,+DACAriC,2CACAgiC,qCACAM,2CACA/e,kCACAgf,iBACA9qB,sCACA,yEACA+qB,yCACAjf,0BAEAif,QAEA,CACA,EAUA,MATAR,gBACAhiC,GACAkG,gBACAG,iBACA+f,WACA/f,OACAi8B,WACAC,gBACA,CACAnqB,oBACA,EAMA8S,sCACA,iDACA,EACAC,8CACAsX,0DACA,EACAjX,wCACA,4DACA,CACA,CACA,CAEA,MApFA1rB,uEACAoG,4IACAu8B,6HAkFAC,iBAEA,GAEAjjC,MC1FA,4SAuCA,qCACA,OACA0iC,iDACA,sBAKA,MAHAriC,iDACAsiC,yBACA,GACAA,cACA,EAMAO,yEACA97B,iDACA,EAKA+7B,0DACA,yCACA,EACAP,+DACAQ,oDAGAC,wEACAC,yHACAvU,uCACAwU,iDAEAV,mGAGAO,iBACAA,gDACA,oDAIA/iC,8CACAwiC,2FACA,MAGAW,4CACAC,wBACA,GAEA3gB,QACA+f,sBACAa,qBACAC,6BACAzB,yBACAC,uBACAyB,oBACA,EAZAH,iBAgBA,MAFAL,0FAEAI,qCAEA,MADAR,2CACAa,QACA,EACA,EACApY,sCACAuX,8CACA,EAQAc,0DAEA,MADA,2BACA,qEACA,EACApY,gBACAK,wCACA,kDACA,CACA,CACA,CA5HA1rB,sEACAmC,kIACAiE,4IACAu8B,6HACAe,qIAqBAnhC,qFAEAohC,8CAEAphC,gEACA,EAKAqhC,uCA2FA,yBAEA,GAEAjkC,MCpIA,qpBA6JA,oCACA,gCACA,gCACA,CA9JAK,sEACAuO,mHACAC,2EACAC,8GACArI,4IACA2O,4IACA4tB,6HACAC,sJACAiB,uIACAzhC,qFACAsgB,mHAsBA,mCAEAhU,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,2BACAC,2KACA,MACAD,MACA,CAXA,iCACAE,6DACA,qGAuBA,MAZAF,gFACAG,uEACAA,iHACAH,iCACA,MACAI,iMACAA,sCACAJ,qBACAG,uEACAA,kHACAC,sCACAJ,qBACAA,MACA,GAyBAu0B,wDACA,gBAEAC,YADA,yBACAF,wBAEAjB,2BAEA77B,4CACAA,4CACA,EAEAi9B,sDACA,uCACA,EAeAv/B,4CACA,cAGA,MADA3E,qBACA,wCACAI,2CACA4Y,0CACA2K,oCAEAzc,YADAnB,MAGA/F,mCACA+F,yBAEAmB,yBAEA0b,WACArJ,yCACAI,mBAEAL,+CADA2qB,kBAGA3qB,cAIA0qB,kCAEAC,yCAEAz8B,eACAy8B,iCACA,WACA,yCACA7B,IACA6B,wCACA/8B,kBACAnB,YACA4d,yBACA,2BAEAzjB,2BACA+G,8CACAX,uDACA,GAEAuR,SACA,GAEAC,6CAEA,EACAA,OACA,EA9BAA,mEA+BA,GACA8B,sBACA9B,kDACA,EACA,EACA,EASAuT,uDACAwX,sDACA,EASA1xB,8CACA,qDACA,EAQA6Z,kDACA6X,gDACA,EAUAvX,sCACA,wDACA,EAQAC,wDACA2Y,kEACA,EASAtY,wCACA,yDACA,EAEAlV,iDAEA,uBAKA,MAJApV,4CACAA,0DACAS,mBAEAA,IACA,EAEAoiC,2BACAxhC,6BACA0T,aACAK,gBACA/R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAM,kBACAL,iBACA,EAEA,gCAEA,GAEA1rB,MC3WA,sOA2JA,oCACA,gCACA,gCACA,CA5JA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGA2BA,MAhBAF,0FACAI,iMACAA,sCACAJ,iEACAG,uEACAA,iHACAH,iCACA,sCACAG,uEACAA,iHACAH,iCACA,OACAG,qEACAA,gHACAC,sCACAJ,+BACAA,MACA,GAyBA20B,QACAzhC,kBACA0T,aACAjR,gCACA,EAEA,aAEA,GAEAvF,MC7LA,+cA8LA,oCACA,gCACA,gCACA,CA/LA0Q,gFACArQ,sEACAuO,mHACAC,2EACAC,8GACAimB,oGACAlP,wHACApf,4IACAmf,uIAsBA,mCAEA7W,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CArCA,iCACAF,6DACA,qGA0DA,MArBAF,iBACAI,wLACAA,sCACAJ,mHACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,oBACAI,gIACAA,sCACAJ,4IACAG,uEACAA,iHACAH,iCACA,gEACAA,MACA,GA8BA40B,0DACAp9B,qEACA/G,+CACA,uBACA,GAEA,EACA,EAOAokC,iDACAxJ,2CAEAyJ,mCACAj+B,wDACAmf,gDACA,EAEA,6DACAA,kDAEA,uCACAxe,6BAGA2tB,wCACA7pB,YACAy5B,+BACAv9B,6CACA2tB,8DAGA3tB,qCAEAs9B,aACA,EACAzyB,yBACA5R,yCAEAqkC,aACA,CACA,GAEA,EAMAE,yDACAp9B,6CACA+wB,6CACAsM,+CACAl6B,gEAEAvD,6BAGAuD,4BACAvD,6BACAuD,oBACA,GAGAA,yCACA85B,sFACA,EACA,EASA3/B,oCACA,cAEA,wCACA0C,6CACAwtB,yCAEAxtB,uFAGAJ,kGACAyB,uBACAosB,yBACA7W,qCACA8W,qCACAhL,oBACA,GAGA0a,6BAGAhf,qDACAxU,mCACAC,mCACAG,eACAF,2BACAC,+BACArP,MACA6yB,6CAEA,CACA,EACA,EACA,EAcAvJ,uDACA,mBAEA,+BACA,IACAxW,6DAEA,sEACAA,iCAEA3U,kBACAmpB,uBACA,yCACA,GACAsb,wBACAL,sBACAp5B,WACAC,UACA,EACA,EACA,YACA,MACA,CAEA,EAeA6f,kDACA/jB,iCACAA,4BAEAA,4CACA,gCACA,2BACA2tB,gCAEA,GAEA,EAcAzjB,8CACA,qEACA,EAMAma,sCACA,eACArkB,oBACAI,4CAEAkJ,yDACAlJ,wDAEAJ,0BACAwe,+CAEAlV,kCACAO,QACAvN,oBACAgN,qDAIAjK,kCACA,EAQAilB,8CACArrB,mBACA6F,iBACAkB,4BACAA,wCAGA,EAQA2kB,2CACA7lB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,EAMA6+B,wBACAjiC,kCACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,6BAEA,GAEA/rB,MC5eA,qVAwLA,oCACA,gCACA,gCACA,CAzLA0Q,gFACArQ,sEACAwO,2EACAD,mHACAE,8GACArI,4IACAof,wHAsBA,mCAEA9W,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CArCA,iCACAF,6DACA,qGAsDA,MAjBAF,iBACAI,wLACAA,sCACAJ,8EACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,0CACAI,iMACAA,sCACAJ,qBACAI,gIACAA,sCACAJ,4EACAA,MACA,GAyBAo1B,oCACA7kC,6EACAA,sCACA,EASA2E,uCACA5B,wCACAsE,sCACAy9B,sFACAhd,wGACAid,+DACAC,yCACA5kC,oEACA6kC,4BACA,GACAC,6IAGAxE,yBACAyE,uEACAl0B,oCACAC,oCACAk0B,sFACAC,qBAGAL,oBACAnhC,4FACAA,uDAIA,4CACA,mEAEA68B,oCAGA,sBAGA4E,eADA,yBACAH,QAEA,wDAGAJ,cACAlhC,+EACAA,+EAEAoD,YACA7B,eACAvB,YACAA,sBACAA,4BACAA,qBAGA,iBAEA,8BACAwD,iDACA,CACA,kBACAk+B,oBACAA,iBACAA,gBAEAl+B,2CACAygB,uCACAid,gDACA,CAGA,mEACA,iCACAS,gCACAC,4DAEA,2BACAV,cACA9gC,oBACAyhC,8GAEAX,cACA9gC,oBACAyhC,2GAEA,CAGA5d,gBACA3X,sBACA2hB,OACA7gB,QACAC,OACA,EACAk0B,UACA1E,wBACAoE,mBACA,yBACA,kCACA79B,8BACA8mB,iBAEAA,4BACA8W,UACA71B,UACA22B,yBACAC,sCACA,GAEAt/B,uDACA,GAEAu+B,UACA71B,UACA22B,yBACAC,sCACA,GAGAr1B,8EACA,uDACA,6CACA,8CAEAlJ,oGACAA,wHACAA,+GACA,CAEA,EACA,EAEA2jB,kDACA,2CACA3jB,sCACAygB,6EACAod,4FACAF,uGACA/zB,oCACAC,oCACAi0B,uEACAU,2BAEAhB,UACA71B,UACA22B,yBACAC,sCACA,GAEA9d,mBACA,EAcAuD,0DACAtoB,wCACAsE,sCACA69B,4FACAF,uGACAld,6EACA7W,oCACAC,oCACAlC,MAEAA,uDAEA61B,UACA71B,YACA22B,yBACAC,sCACA,GAEA9d,wDACA,EAEAI,yDAEAnlB,wCACA0R,+DACAxD,oCACA5J,sCACA69B,4FALAl2B,MAaA,MANA,qBACAA,mCACA,qBACAA,sCAGA82B,sBACA,EAcA30B,8CACA,wEACA,EAEAma,sCACA,0CAEAjkB,mBAGAf,kCACA,EAQAilB,8CACArrB,mBACA6F,iBACAkB,4BACAA,wCAGA,EAQA2kB,2CACA7lB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,EAEAggC,mBACApjC,6BACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,wBAEA,GAEA/rB,MC7eA,qgBAoKA,oCACA,gCACA,gCACA,CArKA0Q,gFACArQ,sEACAwO,2EACAD,mHACAE,8GACArI,4IACAmf,uIACAC,wHACAlT,sJACAwzB,+FACAnS,oGAsBA,mCAEAjlB,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,iBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CAnBA,iCACAE,6DACA,qGA8BA,MAXAF,8BACAI,wLACAA,sCACAJ,6FACAI,8LACAA,sCACAJ,wCACAG,uEACAA,iHACAH,iCACA,sFACAA,MACA,GA6BAw2B,yCACA5Z,yBACAA,8BAEA,EAQA6Z,uDACA,2BACA7Z,wDACA,CACA,oDACA8Z,YACAr/B,gBACA,GAEAulB,wCACA,CAEAA,8BACA,EASA1nB,oCACA,2CACA8P,+DACA4X,kCAIA2C,4CACAoX,0EAJArX,eACAsX,sBACAC,yBAMA,YADA7xB,SAEA4X,mCAEA,UAJA5X,SAKA4X,mCAGAA,gCAIAtpB,4BAEAgsB,qDACA1C,wCACAA,6CAIAtpB,4BACAspB,sDAGA+Z,UACAC,0DACA/6B,2BACA2E,oBAGAA,QADA3E,MACAoD,2BAEAA,qCAGApD,iBACA+gB,yBACAka,wBAEAla,4BACAka,oBAGAL,wCACA56B,gCACA26B,mBAEA,EAEA5Z,OACAhpB,2BACAoH,qCACA47B,uBACA,GACA57B,qCACA47B,wBACA//B,uDACA,GACAmE,oCACAw7B,mBACA,IACAljC,wBACAujC,6DACA,6CAEAL,oBAEA5Z,eACAma,yBACAna,+BAEAA,2BACA6Z,8DAGA,EAEA7Z,OACA5hB,qCACA67B,0BACA,GACA77B,qCACA67B,2BACAhgC,uDACA,GACAmE,oCACAw7B,mBACA,IAEA5Z,4CACA/lB,uDACA,EAEA,EAEA0kB,kDACA/jB,kCACA,EAgBAokB,uDACA,kBAEA,IACAob,2DACA,WAEAA,qCACAx/B,gDAEA,EAcAkK,8CACA,kBAEAkb,kCACAtpB,uCACA0R,+DACAsb,gCAJA/gB,MAqBA,MAfAqd,mGAEArd,SAEA,qBACAA,gDACA,mBACAA,sCACA,sBACAA,oBAIAhL,iEAEAA,GACA,EAEAsnB,sCACA/a,8DACA,mBACA8b,0BACAA,kCACAA,8BAEA,GAGA9b,qCACAjK,wDAGAmf,+CAGAnf,kCACA,EAQAilB,8CACArrB,mBACA6F,iBACAkB,4BACAA,wCAGA,EAQA2kB,2CACA7lB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,EAEA2gC,sBACA/jC,gCACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,iBACA,EAEA,2BAEA,GAEA/rB,MCpdA,+hBAgVA4H,qBA2CAA,WApMA,oCACA,gCACA,gCACA,CA6MA,+BACA,gDACAJ,2DACAA,kDACA,CACA,mCACA,uCACAnH,iCACAgC,8BAEA,CASA,gCAEAyI,WAEAtD,4CAHAs/B,eAEAta,OAuBA,GArBAua,0BAEAnhB,mEAGAxe,0CAEA0/B,0CACA,2BAIA,0BACAE,kFAEA,EAEAxa,gCAEAhlB,8CAEA,mBACA,iFAEAglB,qCAGAA,oCAGA,MAFA/kB,oBACAiJ,mBAEA,EACA,CA7bAA,gFACArQ,sEACAwO,2EACAo4B,yGACAr4B,mHACAE,8GACArI,4IACAmf,uIACAshB,6HAsBA,mCAEAn4B,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,yBACAG,uEACAA,iHACAC,0BACA,EACA,CAEA,+BAEA,4BAMA,MALAJ,sBACAG,uEACAA,iHACAH,iCACA,KACAA,MACA,CA/BA,iCACAE,6DACA,iJAmDA,MApBAF,qGACAG,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,kBACAI,gIACAA,sCACAJ,gNACAC,wLACA,2EACAA,sMACA,2CACAG,gIACAA,sCACAJ,6KACAC,8MACA,gKACAD,MACA,GAyBAu3B,iFAEAC,gEAQAC,gEACAC,6DACAC,2CACAD,sBACA,oCAGA,EAUAE,mGACAtxB,kDACAuxB,sDACA,+DACAC,MACAA,WAEAjiC,IAEA,SAEAkiC,kDACAA,kBACAC,kCACA1xB,wBACA,GAEArH,GACA,8EACA44B,oCACAG,iBAGA,EAEAZ,yFAEAx/B,6CAGAqgC,mBACAN,oCALAO,aAMAliB,gDACAA,mEAEAyhB,wCAcA7/B,WACApD,mBACA6M,QACAjN,iBAGA8jC,sBAIAA,0BACA,oDAEAliB,+CACAA,2EACA,wBACA,GACAA,iDAEApe,yDAEAugC,2BACAC,sCAGAC,gDACA7gC,yFAEA8gC,qDACAA,wBACA/kB,eACAF,cACAykB,aACA,GAGAQ,qCACA,0CACAC,gDACAhK,uBACAiK,wBACAC,gCACAC,gCACAC,gBACAC,YACAC,WAEAC,sBAIAH,6CACAC,sCACAC,8CAEAP,kDAEAM,aAIAN,mCACA,eAEAx3B,oCAGAi4B,6CACAA,gDAEAR,cACAv9B,6BAEA8F,kEAEAy3B,mBACAt/B,iBACAosB,kBACA3oB,iCACA,EACA,GACA1B,6BAEA8F,+DACA,GACAk4B,wDACA,GACA,EACA,EAEAd,0CACAliB,+CACApe,sDACA,EAEAsgC,uDACAlgC,sFACAJ,oEACA,EAEAsgC,6BAjHAliB,+CACAA,iCACAxe,YACAogC,2DACA,WACA,sBAEA,EACA,KACA5hB,kDAyGA,EAgEAuF,kDACA4b,yBACA,EAcAvb,uDACA,GACAhkB,6CADAqgC,SAGA,uBACAA,SACA,+FACArgC,WACApD,mBACA6M,QACArE,gBAGAxF,sCACA,EAcAkK,8CACA,oCACA,EAEAma,sCAEA/a,qCACAjK,wDAGAmf,+CAGAnf,kCACA,EAQAilB,8CACArrB,mBACA6F,iBACAkB,4BACAA,wCAGA,EAQA2kB,2CACA7lB,UACAmB,mCAKA,MAHAA,YACAnB,yBAEAA,KACA,EAUAunB,uDACA,yBACAob,8DACA,EACA,EAEAC,mBACAhmC,6BACA0T,aACA1R,cACAS,iCACAimB,wBACAla,wBACA6Z,4BACAM,gBACAC,kBACAK,kBACAlV,sBAGAkyB,iBACA,EAEA,wBAEA,GAEA/oC,MC9jBA,0SAiLA,oCACA,gCACA,gCACA,CAlLA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IACA+L,0KAsBA,mCAEAzD,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,kBACAC,kKACA,KACAD,MACA,CAEA,+BAEA,qBAGA,MAFAA,aACAC,wKACAD,MACA,CA5BA,iCACAE,6DACA,qGAgDA,MApBAF,qEACAG,uEACAA,iHACAH,iCACA,wBACAC,0KACA,KACAG,iMACAA,sCACAJ,wBACAI,wLACAA,sCACAJ,iCACAI,8LACAA,sCACAJ,eACAG,qEACAA,gHACAC,sCACAJ,wEACAA,MACA,GAwBAo5B,MACAlmC,0BACA0T,aACAjR,iCAMAT,6BAEA2B,uDAGA+L,8CACA,EAMAiZ,+BAEAhlB,wBAGAwiC,kBACAz2B,8CAEA,CACA,EAEA,WAEA,GAEAxS,MC5OA,yOAiLA,oCACA,gCACA,gCACA,CAlLA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IACAyiC,oGAsBA,mCAEAn6B,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,2BAEA,mFAKA,+BAEA,4BAaA,MAZAE,iCACAG,uEACAA,iHACAH,iCACA,6BACAI,iMACAA,sCACAJ,qCACAG,oEACAA,+GACAC,sCACAJ,yBACAA,MACA,CACA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,4BAaA,MAZAA,iCACAG,uEACAA,iHACAH,iCACA,6BACAI,iMACAA,sCACAJ,mBACAG,oEACAA,+GACAC,sCACAJ,yBACAA,MACA,CA9CA,iCACAE,6DACA,0FA8CAE,mJACAA,0BACA,EACA,GA2BA,uCACAk5B,mCAGA,WACApmC,gBACA0T,aACAjR,iCACAT,6BACA,qCACA,oCACA,sCAEA,kBACA6C,wBAGAwhC,cACAD,oDACAA,4BAEAlxB,WAGAA,SAEA,EACA,CACA,EAEA,YAEA,GAEAhY,MC7OA,sFAoCA,sCACA,mEACA,SAEA,6CAEA,CASA,8BACA,gCACA,kBACAkV,qBACA9Q,sBAEA,CAUA,qDACA,uDACA,6CAEAglC,yCAEAriC,6BACA,CACA,CAUA,kDACA,6CACAsiC,kBAEAC,oDACAD,0CAEAE,UACAF,+BAEAG,UACAH,2BAEA,CAWA,kEACAD,wGACA,CASA,qDACAK,iBACA,4BAEA,EACA,CAUA,mDACA,8CACA,wBACA1iC,QACA2iC,yCACAA,yCAEA,CASA,6CACA,8CACAD,oBACAE,qEAEA,CAUA,gDACA,wCACAp/B,uCACAA,qDAGA,CASA,6CAEAA,4BADAo8B,cAEA,wDACAA,yDACAiD,yCACAA,SACA,iBAGA,CA7LAvpC,sEACA2B,yEAwBA6nC,kBAyKA3f,WACA4f,8BACAC,8BACAC,8BACAC,oCACAC,uCACA,EAEA,gBAEA,GAEAlqC,MChNA,0UAuLA,oCACA,gCACA,gCACA,CAxLAK,sEACAuO,mHACAC,2EACAC,8GACArI,4IACA0jC,gKAsBA,mCAEAp7B,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAGA,cACA,CAEA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,gDACAC,qKACA,QACAD,MACA,CA1BA,iCACAE,6DACA,qGAsDA,MA5BAF,uBACAG,uEACAA,iHACAH,iCACA,qBACAG,uEACAA,iHACAH,iCACA,wBACAC,0KACA,cACAG,iIACAA,sCACAJ,8BACAG,8EACAA,wHACAH,iCACA,KACAI,iMACAA,sCACAJ,oBACAI,2LACAA,sCACAJ,8CACAG,qEACAA,gHACAC,sCACAJ,2BACAA,MACA,GAyBAw6B,uBACAtnC,yBACA0T,aACAjR,iCACAsD,UACAgO,kCAEA,MADA3U,2EACAA,IACA,EACA4C,2CACA,8CAEAulC,+BAEAA,OACAz/B,gCAEA0/B,yFACAC,gEACAA,mCACAD,gCAEA,GACA1/B,6BACA1I,cAEA7B,6BACA6B,wBAEA,GACA0mC,OACA4B,eACAC,0CACA5hC,iCACA,EACA,EACA,CACA,EAEA,4BAEA,GAEA7I,MC1PA,kPAmJA,oCACA,gCACA,gCACA,CApJA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAmBA,MARAF,+DACAG,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,2BACAA,MACA,GAwBA86B,SACA5nC,kBACA0T,aACAjR,iCACAT,+BACA0C,qCACAmjC,gBACAxnB,8CACAukB,qBACA,EACAkD,qBACAD,0CAEAC,oBACAD,wCAEAA,yCACAnjC,oCAEA,CACA,EAEA,cAEA,GAEAxH,MCpMA,uCAGA2H,sCAOA,8BAQAo6B,oCAEAp6B,qDACA,EAOAq6B,8CAEA,EAOAI,6DAEA,qCAEA,gBACAyI,uCAEA,sBAGAhH,eAFA,+BAEAgH,YACA,oDAEAA,0BAGAA,YAIA,eAEA,CACA,sEAEA,CACA,EAGA,+BACA,GAEA7qC,MCrEA,4bAsKA,oCACA,gCACA,gCACA,CAvKAK,sEACAuO,mHACAC,2EACAC,8GACArI,4IACA2O,4IACA01B,0KACAroC,qFACAugB,mHAsBA,mCAEAjU,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAGA,MAFAC,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CAnBA,iCACAE,6DACA,qGAkCA,MAfAF,wCACAI,8LACAA,sCACAJ,6BACAG,uEACAA,iHACAH,iCACA,KACAI,iMACAA,sCACAJ,qBACAG,uEACAA,kHACAC,sCACAJ,qBACAA,MACA,GAgCAm7B,sCACA,GACAC,qCADA7xB,eAGA,QAIA,GAHAA,0CACA6xB,4DAEAA,IAEA1sB,4BACA0sB,oCAEA,sEAIA,UACA,EAgBAlmC,4CACA,cACA,+CACAoB,UACA3F,0BACA4Y,0CACA2J,8BACAmoB,iDACAnnB,oCAEAd,WACAtJ,eACAI,mBACA6oB,mBACAlpB,oDAEAA,cAKAA,cACAkpB,sDAIAtiC,6CACAsiC,+CACA,GAGAtiC,mDACAsiC,2DACA,GAGAh7B,4CACAqjC,0BACAE,iBACAlzB,8BACA,yEACA+qB,gBACAjf,sCAEAif,QAEA,CACA,QAEAiI,MAEAA,kDAEAA,8BAEAhzB,WAGAC,wCACA,WA1CAA,mEA2CA,GACA8B,sBACA9B,qCACA,EACA,EACA,EASAwT,sCACAsf,8BACA,EAQArf,8CACAqf,8CACA,EASAhf,wCACA,gDACA,EAEAof,qBACAroC,uBACA0T,aACAK,2CAEA,uBAIA,MAHApV,4CACAA,0DACAS,mBACAA,IACA,EACA4C,cACAS,iCACAkmB,gBACAM,kBACAL,iBACA,EAEA,0BAEA,GAEA1rB,MChWA,kOAuJA,oCACA,gCACA,gCACA,CAxJA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAuBA,MAZAF,iCACAG,uEACAA,iHACAH,iCACA,wCACAI,iMACAA,sCACAJ,qBACAG,sEACAA,gHACAH,iCACA,cACAA,MACA,GAwBAw7B,iBACAtoC,2BACA0T,aACAjR,gCACA,EAEA,sBAEA,GAEAvF,MCxLA,6IAqFA4H,WAnFAvH,sEACAwC,oGAKA,uBACAwoC,2DACA,WACA56B,WAmBA,MAjBApQ,4BACAwC,wBAEA,WADAyoC,WAEAnnC,wBAEA,eAJAmnC,WAKAnnC,iBAGAA,YAEA9D,cACA8D,4CAEA,GAEAA,GACA,EACAonC,gEACA,WACA96B,WAyBA,MAvBApQ,4BACA,WACAA,cACA,sBACA8lB,gCACAA,QACAhiB,kBAEA,0BACAgiB,4CACAA,QACAhiB,kBAGAA,YAEA9D,aACA8D,qDAEAA,WAEA,GAEAA,GACA,EACAqnC,gDACA,SACAC,KACAC,IAEA,qBACA,qCACA,sBACAvlB,uBACAslB,aAEAE,eACAD,GACA,KACA,sDAIA,6BACA,UAGA,SACA,EACAE,mDACAH,MACA,aACAE,UACAA,SAGA,QACA,EACAE,yEACA,qDACA1lB,QACAA,YAEA,EAEA,CACA,EAEA,wBAEA,GAEAnmB,MC5GA,8SAkKA,8BACA,0GACA,CAlKAK,sEACA2B,sEACAa,oGACAipC,sJACAC,wHACAC,6HACAC,6HACAr9B,mHAwBA,kBACA,gCACAG,6BAGAm9B,qBACA,aACA,iBACA,aACA,sBACA,qBACA,qBACA,sBACA,WACA,SACA,MACA,aACA,OACA,SACA,QACA,gBACA,cACA,uBACA,oBACA,0BACA,sBACA,8BACA,6BACA,0BACA,qBACA,qBACA,0BACA,mBACA,mBACA,mBACA,yBACA,oBACA,uBACA,oBACA,wBACA,oBACA,SACA,oBACA,MACA,SACA,UACA,gBACA,UACA,eACA,yBACA,eACA,cACA,UACA,kBACA,CAKAC,eACAnoB,oEACAtF,2BACAY,gDACAD,mCACAK,sCACAO,kDACAE,0DACAD,0CACAF,qCACAP,+BACAc,yCACAf,4CACAD,iCACA,EAKA6sB,uBACAC,mEACAC,qDACA,EAKAC,WACAf,iBACA,EAEAgB,qDACA,aAEA,gCACA,SAGA,oBACA,qBACA,sDACAC,oBACA,CACA,uCACA,aACA3pC,yCACA4pC,wCACAN,0FACAK,gBAEA,CACA,CAEA,iBAEA,KADAE,UACA,iFAGA,sBAEA,KADAA,UACA,2EAGA,YACA,EAoBAC,oCA8CA,8CACA,eASA,MARA,2BAEAC,wBACAtkC,YACAukC,uBACA55B,gCACA3K,YAEAA,OACA,IArDAukC,eAKAD,cAEA1sC,0CAEA,mBAEA,aAGA,wBAMA,2DACA,aACA,wBACAgE,6BACA,CACA,8BACA,QACArB,+BACA+pC,uBACA1oC,0BAGA,CACA,UACA,EA2BA,mCAIA,MAHA,uBACAhE,oBAEA,IACA,EAOA,+BAEA,MADAA,gCACA,IACA,EAOA,mCACA,mCACAA,aAEA,IACA,EAEA,wEACA,8CACAglB,6FAEApW,8CAEA,IAEA,EAMA,gDACA,2BACA,EAMA,8CACA,uBACA,EAUA,qDAEA5K,QACArB,uCACAT,qCACA0qC,wCAJAtV,IAMA,+CACA,gFAiCA,MA7BAp3B,2DAOAo3B,2CACAp3B,kBACA8D,WAKAA,6BAGA9D,yDAOAo3B,0CACAp3B,kBACA8D,WAGAA,GACA,EAEA,mDACAA,UACArB,uCACAT,qCAQA,MANAA,WACA,sCACA8B,8CAIAA,GACA,EAEA,qCACA,4BACA,EAEA,6DACAA,UACArB,0CACAT,qCAEA,YACA8B,iDAEA,2EAEA,UACA,EAEA,yDACArB,2CACAT,qCAEA,gDACA,iDAEA,EAEA,kEACA8B,QACArB,8CACAT,qCAEA,aASA,yEARA,6CACA8B,4DACA,+DACAqD,4CACAA,2DAEA,CAIA,UACA,EAEA,yDACArD,QACArB,8CACAT,qCAEA,YACA,0CACA8B,wDAGA,sEAEA,UACA,EAEA,2DACAA,QACArB,8CACAT,qCAEA,YACA,4CACA8B,0DAGA,sEAEA,UACA,EAYA,sDACAA,QACArB,8CACAT,qCAEA,YAEA8B,IADA9D,gCACAgC,4CAEAA,mDAGA,sEAEA,UACA,EAYA,4DACAS,+CACAT,qCAEA,YACAhC,gCACAgC,mDAEAA,iDACAA,0DAGA,qEAEA,EAQA,qDACA8B,QACArB,8CACAT,qCAEA,YACAhC,iCACA8D,oDAGA,sEAEA,UACA,EAEA,mCACA,iBACA,EAEA,2CACA9D,uCACA,EAEA,gDACAyK,WACA0wB,YAEAwR,6CAaA,GAZAA,YACA7sC,0BAEAA,iBAEAA,yDACAE,yDACAF,gEACA,GACA,qEAGA8sC,gBAyCAzR,kCAxCA,+BAEAyR,mEAGA5sC,0CACA,iCACA6sC,OACAD,8CAEA,GAEA5sC,6CACA,uBACA,mCACA8sC,mFACA9sC,6CACA,GACA,wDACA,0CAEA,gBACAyK,UACA,8CACAhI,SACA,eACAV,SAGA,OAEA,8CACA,iFAGA,OAEA,qFAqBA,MAfA6pC,uCACAmB,8EACAC,OACAvzB,sBACAwzB,+BACAd,0BACAK,iCAGA,GACA,6BACAU,8BAEA,GAEA,IACA,EAKA,8BAIA,MAHA,mBACAxB,qCAEA,IACA,EASA,yEACAlpC,yCACA,sDACAipC,sEACA,SACA,CAEA,EAUA,wEACA/kB,YACAhkB,SAEA,2CAIA,GAHAA,+BAGA,yCAcAF,4CACAxC,yCACA,SACAA,iEACA8lB,gDACA,EAEA,GAEA9lB,8DACA0mB,iDACA,OAxBA,gDAEA,IADA,gCACAtmB,YACAsmB,uEACA,6DACA,IAEAA,oEACA,uDAkBA,MAGA,qDACA+kB,uDAIAzrC,gBACA,CAEA,QACA,EAEA,6BACA,iBACA,EAEA,6BACA,iBACA,EAOA,+CACAF,sBAGA,mCACAA,yCAHAgjB,GAKA,EAKA,qCAKA,GAHA5gB,+DAGA,kCACA,mCAGA,+FAEA,cAoBA,GAlBAirC,WACAC,oDAWA,GATAA,4CACAptC,kEACA,sCAEA,MADAmtC,yDAGA,GAGAA,OACA,cAEA,4DACA,qBAGA,EAEA,sDACA,2BACA,EAEA,4CACA,oBACA,uBAEA,EAEA,8CACA,oCACA,CACA,EAMAE,YAOAC,6DACA,uCACA,0DAEAf,qBAEA,kCACA,mBACA,uDACA,EAEA,MADAgB,0CACAA,WACA,CACA,EAEA,iBAEA,GAEA5tC,MCjxBA,mLAEA0tC,mHACA5qB,+FAoBA,2EAEA,eAEA,GAEA9iB,MC7BA,kJAEA6tC,wHAwBA,sBACA5qB,sBACAhgB,uBACA4B,sDACA,EAEA,uBAEA,GAEA7E,MCpCA,8NAgKA,oCACA,gCACA,gCACA,CAjKA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,4BAeA,MAdAC,mEACAC,mKACA,qBACAE,uEACAA,iHACAH,iCACA,oCACAI,iMACAA,sCACAJ,2FACAG,qEACAA,gHACAC,sCACAJ,6CACAA,MACA,CACA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CA9BA,iCACAE,6DACA,0FA8BAE,gIACAA,0BACA,EACA,GAwBA89B,aACAhrC,uBACAyC,iCACAiR,aACAK,sCAIA,MAHAk3B,oBACA7rC,eAEAA,IACA,CACA,EAEA,kBAEA,GAEAlC,MCvMA,6NAuJA,oCACA,gCACA,gCACA,CAxJA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,oBACAC,qKACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAuBA,MAZAF,iCACAC,oKACA,qBACAA,oKACA,wDACAE,uEACAA,iHACAH,iCACA,cACAI,2LACAA,sCACAJ,qBACAA,MACA,GAwBAo+B,YACAlrC,sBACA0T,aACAjR,gCACA,EAEA,iBAEA,GAEAvF,MCxLA,wNA8KA,oCACA,gCACA,gCACA,CA/KA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IAsBA,mCAEAsI,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAGA,MAFAC,aACAC,wKACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,sBACAC,uKACA,KACAD,MACA,CAEA,+BAEA,qBAIA,MAHAA,oBACAC,2KACA,KACAD,MACA,CA5BA,iCACAE,6DACA,qGA8CA,MAlBAF,2CACAI,8LACAA,sCACAJ,oEACAG,uEACAA,iHACAH,iCACA,aACAI,6LACAA,sCACAJ,mBACAI,iMACAA,sCACAJ,6BACAG,qEACAA,gHACAC,sCACAJ,2BACAA,MACA,GAwBAq+B,OACAnrC,iBACAyC,iCACAiR,YACA,EAEA,YAEA,GAEAxW,MC/MA,+OAwJA,oCACA,gCACA,gCACA,CAzJA4O,mHACAC,2EACAxO,sEACAyO,8GACArI,4IACAutB,oGAsBA,mCAEAjlB,qCACA,cACA,GASAA,gDACA,kCACA,GAUAA,yEACA,iBAwBA,MAtBAC,gEACAC,4DACAC,8CAEA7O,gCACA,gBACA,6BACA,wBACA8O,2BACA,4BACAA,iCAGAA,SAEA,wBACAC,4BAEAA,gCACAC,wBACA,GAEAA,4BACA,GAIAN,yEACA,WACAO,gCACAC,8BACAC,8BAEA,8CACArL,yCAGA,UACA,GAEA4K,4DACAU,YACAtP,iBAEAA,qBAEA,GAIA4O,oDACA,wBACA,GAIAA,+DACA,+BACA,uBAEA,EACA,EAEAW,yBACAA,qBACAA,8BAEAC,gFAKA,+BAEA,qBAIA,MAHAC,mBACAC,2KACA,KACAD,MACA,CAXA,iCACAE,6DACA,qGAuBA,MAZAF,wCACAG,uEACAA,iHACAH,iCACA,oFACAI,iMACAA,sCACAJ,yBACAG,qEACAA,gHACAC,sCACAJ,0BACAA,MACA,GAwBAs+B,SACAprC,oBACA0T,aACAjR,iCACAT,sCACA0C,4CACA2mC,gEACA7H,gBACA8H,eACA,GAEA5mC,8BACAA,sCACAA,mCAEAA,2CACA,CACA,EAEA,cAEA,GAEAxH,MCtMA,sJAEA6C,oGACAJ,qFAwBA,sCAOA3B,8DACAmoC,4BACA1oC,8DAIA,MAHAA,KACA,2BAEA,IACA,EAOAA,sBAIA,MAHA4O,iCACA,uCAEA,6BACA,CACA,GAEA,wBAEA,GAEAnP,MC5DA,iIAEAquC,sJAEA,qCACAprC,sCACA,8BACA,EACAE,yBACA,gDACA,EACAmrC,yCACA,GACAnqC,UACA8kC,2BAFA3nC,MASA,MANA2nC,QACA3nC,6BACAA,QACA6C,mBAGAA,GACA,CACA,GAEA,aAEA,GAEAnE,MC7BA,uHAEAuuC,8GAEA,oCAEA,iBAEA,GAEAvuC,MCVA,mIAEAwuC,mHAEA,4CACA1rC,4BACA,GAEA,2BAEA,GAEA9C,MCZA,6DAGA,WACAyuC,sDACA,+DACA,8BACA,4DACAC,0DAEA,6BACA,8CACAA,6CAEA,MADAC,2CACAC,6BACA,CACA,CAIA,CACA,EAEA,YAEA,GAEA5uC,MC3BA,wLAEAgC,sEACA3B,sEACAwC,oGACAH,uIAoBA,8BACAI,sBACAG,yBAEA,GADA,cACAqB,4BACA,gDAEA,kBACA,gBACA,EACAA,0BACA,6BACA,gBAEA,0BACA,eACAtC,2CACAsC,WACA4lB,eACA3lB,oBACA,OAEA,6BAGA,EACAsqC,gDACA,mBAEA,uBACA,oBACA,0BACAvqC,oBACA,uCACAA,yBAGAjD,gDACA,mCACAW,6CACA+E,YACAmjB,cACA,GAEA4kB,mBAGA,MADAA,gBACA,wBAEA,CAIA,MAFA,iBAEAA,WACA,EACAC,6CACA,uCACA,EACAC,8CACA,cAQA,MAPA,yBACAjsC,eACAgE,6BACAhE,4BAEA,6BACA,oDACA,IACA,EACAksC,2CACA,YACA,6BACA,gCACApsC,8CACAS,oCAEA,IAEAA,6BAEA,WACA,EACA4rC,uCACA,uDACA,EACAnrC,wDACAuuB,6BACAhvB,QACA,2BACAA,8BACAA,4DAEA,WACA,EACAwB,yBACA,2DACAzC,2CACA8sC,gBACAC,gBAEA,iCACA,8BACA,iCACA,4BAEAA,yDAEAA,sDACAD,+CAGA,4DAEA,CAEA,uBACA,mBACA,CACA7qC,6CACA+qC,sCACA,EACAhtC,SACA0C,iBACA,CAEA,6CAEA,EACAM,2DACAhD,sCAEA,yBACAmnB,qBACA,uCACA,GACAgO,kBACA,uCACA,GACA8X,YACAngC,QACAogC,gDACA,UACA,EACA/pC,2BACA,SACAzC,mBACAuB,cACAguB,WACA,EAEA,gCACA5sB,qDAGA,UACA,EACAtB,kCACA,eAaA,MAXA,uBACA9C,0EAEAjB,mCAEA,GADAiB,uBACAA,MACA,QAEA,GAGAA,KACA,EACAqE,2BACA,eACA,CACA,GAEA,gBAEA,GAEA3F,MC9MA,sJAEAwvC,0FACAC,2HAEAd,UACAe,2CACA,mCACA,qDACA,mCACA,EACAC,2BACA,eACA,EACArrC,2BACA,8BACA,sBACA,EACAyqC,6CAEA,MADA,mCACA,IACA,EACAC,8CACA,sCACA,EACAC,2CACA,qCACA,EACAC,uCACA,kCACA,CACA,EAEA9pB,WACAqpB,sCACAe,kCACA,EACAb,eACA,EAEA,gBAEA,GAEA3uC,MC5CA,2KAEA4vC,+FACAxqB,8GAEA,mCACAniB,sCACA,8BACA,EACAE,yBACA,yDACA,CACA,GAIA,MAFAiiB,oCAEAyqB,eAEA,GAEA7vC,MCpBA,mHAEAuuC,8GAEA,6BACAzrC,cACA,GAEA,aAEA,GAEA9C,MCZA,0KAEA6C,oGACAxC,sEACAqC,uIAEA,8BACAI,kBACAgtC,wCACArqC,kBACAwhC,2BAcA,MAbAA,YACA,8BACAxhC,aACA,8BACAA,aACA,8BACAA,aACA,kCACAA,YAEAA,eAGAA,IACA,EACAX,yBACA,2DACAzC,2CACA6C,eAEA,4BACA,YACAA,qBACA,MACA,YACAA,qBACA,MACA,WACAA,oBACA,MACA,YACA,QACAA,uBAMA,MAHAA,sEACAA,2BAEA,mFACA,EACAS,2BACA,wBACA,CACA,GAEA,gBAEA,GAEA3F,MC5DA,iKAEAuuC,8GACAwB,8GAEA,gCACAjtC,kBAEAktC,uCACA,iCACA,EACAC,+BACA,kBACA,CAEA,GAEA,gBAEA,GAEAjwC,MCrBA,yIAEAkwC,2JAoBA,0CACAptC,kBACA,GAEA,iBAEA,GAEA9C,MC9BA,+HAEAwuC,mHAEA,wCACA1rC,wBACA,GAEA,uBAEA,GAEA9C,MCZA,sKAEAwvC,0FACApqB,8GACA/kB,sEAEA,eACAA,oCACAA,kBACAqvC,2CACAtqB,gDACA,oCACA,CACA,GAEA,qBACAqpB,sCACAe,kCACA,EACAb,eACA,EAEA,sBAEA,GAEA3uC,MC1BA,yKAEA4vC,+FACAxqB,8GAEA,2BACAtiB,kBACA,GAIA,MAFAsiB,4BAEAzO,OAEA,GAEA3W,MCfA,kNAEAgC,sEACA3B,sEACAkuC,8GACA7rC,uIAEA,4CACAO,2CACA,+BACA,kBACA,EACAE,yBACA,4DACA,EACA+qB,uBACA,4BACA,iBAEA,yBACA,eACAlsB,wCACAmkB,YACAvZ,SACA,OAEA,8BAGA,WACA,EACA9H,yBACA,2DACAzC,2CACA6C,aACAZ,cACA,EAEA,0FACA,CACA,GAEA,4BAEA,GAEAtE,MC9CA,oJAEAmwC,0KAEA,kDACArtC,uBACA,GAEA,sBAEA,GAEA9C,MCZA,wJAEAkwC,2JAEA,yDACAptC,iCACA,GAEA,gCAEA,GAEA9C,MCZA,8IAEAkwC,2JAEA,+CACAptC,uBACA,GAEA,sBAEA,GAEA9C,MCZA,iJAEAmwC,0KAEA,+CACArtC,oBACA,GAEA,mBAEA,GAEA9C,MCZA,qIAEAquC,sJAEA,uCACAlrC,yBACA,kDACA,CACA,GAEA,eAEA,GAEAnD,MCdA,kIAEAowC,yGAEA,sCAEA,oBAEA,GAEApwC,MCVA,mIAEAowC,yGAEA,uCAEA,qBAEA,GAEApwC,MCVA,yLAEAquC,sJACAjpB,8GAEA,4CACAtiB,yBACAK,yBACA,kDACA,CACA,GAIA,MAFAiiB,kCAEAirB,aAEA,GAEArwC,MClBA,0KAEAwvC,0FACApqB,8GACA/kB,sEAqBA,eACAA,oCACAA,kBACAqvC,2CACAtqB,gDACA,kCACA,CACA,GAEA,yBACAqpB,sCACAe,kCACA,EACAb,eACA,EAEA,0BAEA,GAEA3uC,MC7CA,yHAEAwvC,0FACAnvC,yEAqBAsuC,UACA2B,wCACAC,aACAxuC,WACAP,GAEA,wCACA,wBAGA,GADA+uC,kCACAA,aAEA,SADAxuC,wCACAA,WACA,gDACA,OACAkhB,QACArP,kBACA,EAKA,MADA28B,8DACA,CACAttB,wBACArP,qBACA,CACA,CAGA,QACA,EACA48B,6CACA,SACAvtB,UACArP,OACA,CACA,CACA,EAEA68B,mBACAhC,sCACAe,kCACA,EACAb,eACA,EAEA,wBAEA,GAEA3uC,MC1EA,iOAEA6C,oGACAuiB,8GACAqrB,sJAqBA,+BACA3tC,sBACA4tC,oBACAC,kEACAC,sCACA3tC,sCACA,8BACA,EACAE,yBACA,oDACA,CACA,GAKA,MAHAiiB,+BACAqrB,sCAEAprB,UAEA,GAEArlB,MC7CA,sKAEAwvC,0FACApqB,8GACA/kB,sEAqBA,eACAA,oCACAA,kBACAqvC,2CACAtqB,gDACA,8BACA,CACA,GAEA,qBACAqpB,sCACAe,kCACA,EACAb,eACA,EAEA,sBAEA,GAEA3uC,MC7CA,yNAEA6C,oGACAuiB,8GACAqrB,sJAqBA,2BACA3tC,kBACA4tC,oBACAC,kEACAC,sCACA3tC,sCACA,8BACA,EACAE,yBACA,gDACA,EACAwC,2BACA,gDACAkrC,iDACAruB,uCAIA,CACA,GAIA,MAHA4C,2BACAqrB,kCAEAnrB,MAEA,GAEAtlB,MCpDA,uKAEA6C,oGACAxC,sEACAqC,uIAEA,wBACAI,eACAgC,yBACA,2DACAzC,2CACA6C,eAMA,MAJAA,yBACAkxB,yCACA,EAEA,mFACA,EACAzwB,2BACA,uBACA,CACA,GAEA,UAEA,GAEA3F,MC5BA,0NAEA6C,oGACAuiB,8GACAqrB,sJAEA,4BACA3tC,mBACA4tC,mBACAC,+CACAC,yBACAjrC,2BACA,kDACA,CACA,GAIA,MAHAyf,4BACAqrB,mCAEA/qB,OAEA,GAEA1lB,MCtBA,kOAEA6C,oGACAxC,sEACAqC,uIACAD,qFAEA,mCACAQ,sCACA,+BACA,eACA,EACAE,yBACA,qDACA,EACA2tC,qCAGA,MAFA3qB,oDACA,wCACA,IACA,EACA4qB,iCACA,eACA,0BAEAhqB,2BAEA,cACA,EACAS,qCACA,aAIA,MAHA,wBACArjB,0BAEAA,GACA,EACA6sC,iEACA,0BACA,qCACA,uBAGA,WACA,EACAjtC,qDACA,uBAEA,+BACAlB,6CACAS,kCACAA,iEAGA,WACA,EACAc,2BACA,8BAIA,MAHA9C,SACAA,oDAEAA,KACA,EACA2vC,4DACA5pC,eACA6pC,2CACA,eACA,+BACA,QACA7pC,qDAEA,qEAEA,CACA,eACA,EAKAvC,yBACA,2DACAzC,2CACA6C,aACAisC,oDACA,0BACA,GACApqB,WACAqqB,gBACA,EAEA,aACA,4DACA,GAEArqB,SACA,2DACA1kB,kCACA,kBACAgvC,8EACA5gC,WACApQ,gCACA,gCACA,IACA,iCACAA,4BACA,KACA8lB,mCACA9jB,SACA,CACA6C,wCACA,UAEA,CAEA,GAEA,wEAEA,oFACA,EACAG,2DACA,cAGA,MAFAhD,uCAEAhC,qBACAmpB,qBACA,gCACA,GACAgO,qBACA,uEACA,GACAroB,QACAogC,+CACA,EACA/jB,4CACArnB,UACA9B,4BACA,YACA8B,0CAEA,6DAEA,UACA,EACAmN,sCACAnN,UACA9B,4BACA,YACA8B,mCAEA,6DAEA,UACA,EACAgnB,0CACAhnB,UACA9B,4BACA,YACA8B,qCAEA,6DAEA,UACA,EASA4nB,gCACA5nB,UACA9B,4BACA,YACAhC,kCACA8D,iCAGA,6DAEA,UACA,EASAunB,kCACA,gCACA,YACArrB,iCACAgC,kCAGA,4DAEA,EASA2E,uBACA,gCACA,4CACA,6BAEA,EAEAxB,2BACA,sBAEA,iBADAE,gBACA,aACA7C,6CACA6C,oDAGA,UACA,EAEA4rC,6CAEA,QACA,CACA,GAEA,qBAEA,GAEAtxC,MC7OA,uKAEA6C,oGACAuiB,8GAEA,+CAGA,MAFAA,2BAEAmf,MAEA,GAEAvkC,MCZA,2QAEAuxC,wHACAhN,+FACAlkC,sEACAqC,uIAEA,yCACAO,sCACA,+BACA,0BACA,EACAE,yBACA,0DACA,EACAY,qDACA,uBAGA,MAFAT,wDACAA,0CACAA,IACA,EACAc,2BACA,oDACA,EACAU,yBACA,2DACAzC,2CACA6C,aACAssC,mDACAxyB,mCACA,EAEA,0FACA,EACA3Z,2DAEA,MADAhD,uCACA,iGACA,EACAmD,2BACA,sBAEA,MADAE,kCACAA,GACA,CACA,GAEA,uBAEA,GAEA1F,MCjDA,sEAoBA,mBACAyxC,kFACA3uC,6BACA4uC,YACA5uC,sBACA6uC,YACA7uC,iBACA8uC,aACA,CACA9uC,oBACAI,YACA4Q,6BACA,CACA,EACA,CACAhR,mBACAI,YACA4Q,6BACA,CACA,EAEA,EACA+9B,eACA,CACA/uC,2BACAI,YACA4Q,4BACA,EACA69B,YACA7uC,eACA8uC,aACA,CACA9uC,oBACAI,YACA4Q,4BACA,CACA,EACA,CACAhR,qBACAI,YACA0R,kBACA,EACAzF,SACA,EAEA,CACA,EAEA,CACA,GACA2iC,gFACAhvC,6BACA4uC,YACA5uC,sBACA6uC,YACA7uC,eACA8uC,aACA,CACA9uC,kBACA8uC,cACA9uC,oBACAI,YACA4Q,6BACA,CACA,EACA,EAEA,EACA+9B,eACA,CACA/uC,2BACAI,YACA4Q,4BACA,EACA69B,YACA7uC,eACA8uC,aACA,CACA9uC,oBACAI,YACA4Q,4BACA,CACA,EACA,CACAhR,uBACAI,YACA4Q,6BACA,CACA,EAEA,CACA,EAEA,CACA,GACAi+B,4FACAjvC,6BACA4uC,YACA5uC,sBACA6uC,YACA7uC,eACA8uC,aACA,CACA9uC,kBACA8uC,cACA9uC,oBACAI,YACA4Q,6BACA,CACA,EACA,EAEA,EACA+9B,eACA,CACA/uC,2BACAI,YACA4Q,4BACA,EACA69B,YACA7uC,eACA8uC,aACA,CACA9uC,oBACAI,YACA4Q,4BACA,CACA,EACA,CACAhR,4BACAI,YACA4Q,6BACA,CACA,EAEA,CACA,EAEA,CACA,EACA,EAEA,oBAEA,GAEA9T,MCtKA,wIAEAK,sEACA2xC,mKAqBAC,iBACAR,qFACAK,mFACAC,+FACAG,6BACA,EAGA7qC,UACA8qC,gEACA9xC,kBACA+uC,kEAMA,EACAgD,0DACA,4CACA,EACAC,gEACA,kCACA,EACAC,+DACA,eASA,MAPAjyC,2CACA,gBAEA,MADAkyC,gBAGA,GAEAA,OACA,EACAC,6GACA,kBACA,aAGA,0BAIAX,cAHAH,WAGA,qDADA,yBAHA,iDAEAG,cAEA,uDAFA,4OAOAY,aAHAvvC,gEAEA,yBAHA,GAEAwvC,oDAEA,MAEAA,mBAIAlwB,sCACA,8GACA,CALA,EAMA,CACA,EAEA,eAEA,GAEAxiB,MC1FA,gJAEAquC,sJAyBA,kDACAprC,sCACA,+BACA,sBACA,EACAE,yBACA,6DACA,EACAqC,2BACA,sBAEA,MADAE,oCACAA,GACA,EACAitC,gDACA,uBACA,EACAC,2CACA,wBACA,CACA,GAEA,0BAEA,GAEA5yC,MCpDA,6JAEA6yC,gKAEA,mDACA/vC,6BACA,GAEA,yBAEA,GAEA9C,MCZA,2OAyPA4H,SAvPAvH,sEACAyyC,qFACAC,uIACAC,8JAqBAC,yDACA,mBAGA7xC,iEACA,EAEA8xC,UAKAC,iDACA,GACAC,kDADAC,cAIAD,mGACAC,uBACApK,uBACA,0BACA,+DACA5oC,iCACAyyC,iCAIA,EACA,EACA,CAEAzyC,0BACA+yC,iDAEAA,yCAGA,EAMAE,uCACA,6BACAF,iDACAG,eACAL,SACAM,gBAGAJ,mGACAF,kBACAjK,uBACA,0BACA,6DACA5oC,iCACAyyC,mCAEAW,yBACAC,IAEA,EACA,EACA,CAEAH,8DACA,uDACA,GAEAA,wBACAL,qDACA,iEACA,aAGAM,wDACA,iDACA,mBAEAA,wCACA3+B,qBACAD,gBACA,GAGAq0B,4CACAuK,gDAEAA,2CAIAC,yCACAD,sEACAnzC,6CACAmzC,mCAGAvK,gCAIA,EAOA0K,+EACA,2BACAnc,qBACA,kDAIA,MAHAn3B,qBACAi3B,YAEA,CACAA,mCACA/2B,cACA,CACA,GACAo6B,mBACA2K,UACAsO,SACA,EAOAC,+EACAl/B,0DACAm/B,6EACAt9B,6EACAnF,IACA0iC,UACAC,UACAC,UACAC,oBACAC,wBACAC,iBACAC,iBAKA,GAHAl0C,4DACA4zC,0EACAC,YACAD,0CACA,SAGA,8BAQA1iC,IANA0iC,WACA1zC,iDACAsU,sDACAA,sDAGA,EAEAA,sCACA,6FAKA,EAFA,MAIA,+BAEA,4EACA,SAIAu/B,8BACAC,oDAGAF,mDACAG,8BACA5c,gBACA,oBACA,GACAmD,SACA2K,UACApL,+BAGAma,mDACAh0C,oCACA+zC,iCACA,GAGAN,2BAEAO,iBADAN,UACAA,kCAEA1zC,yDAEA,oBACAA,oCACA+zC,iCACA,IAKA/iC,4CACA,YAMA,MALA,mCAEAijC,SAEAJ,sBACApB,mBACA,KAGAn+B,mDACAtD,mFAEA,uCAEAA,OAEA,UACA,EAOAkjC,qEACAP,aACAD,yDACAp/B,yDACA6B,6EACAnF,UAEA0iC,2BACA,GAGA,2BAEA1zC,gDACA0zC,kEACA,CAGA1iC,MAEAsD,sCACA,6FAKAtD,MAFAA,OAIA,8DAEAA,OAEAA,IACA,EAOAmjC,qFACA7/B,0DACA6B,6EACAi+B,6DACAC,WACAZ,6EACAziC,IACAsjC,cACAR,wBACAS,YACAC,mBACAT,iBACA3zC,EACAq0C,sBACAC,oBAIA,GAFA50C,wEAEAs0C,sCACA,SAGA,8BAEA,sCACAp0C,iDACA,6CACAo0C,+DACAC,UAGArjC,OAEAA,MAGAwjC,sBACAx0C,6DACA,YACAA,mBAGA0mB,+BACA1mB,yCACAw0C,2CACAA,4CAEA,GAGAx0C,sEAEA8lB,sDADAmR,eAEAnR,SAIAmR,8CACAA,2BACAjmB,kBALAA,SAQA,QAEA,+BAMA,GALAsjC,uBACAR,kDACAS,eAGA,yEACA,SAiFA,GA9EAE,8DACAhB,0BACAzzC,oDACA4yC,yCACA6B,sDAEA,GAIAV,0CACA5c,yBACA,OACA8c,wBACA9gC,SACA,CACA,GACAmnB,gBACA2K,UACA9b,6BACAhW,oBACAuT,qCAEA,qBACA,SAKA,GADAA,+BACA1mB,wCAIA,IAFA20C,sCAEAv0C,aAIA,GAHAw0C,oBAGA,yBAEA,GADA9uB,mDACA,QAEA,SAEA6uB,wBACAE,OACA7jC,wCACA,CACA,CACA,GACA2jC,4BACAA,yDAGA,SAEAA,6BAEA,CAYA,MATAD,qBACAA,qBACA50C,2BACA,kBACA,kCACA,iCAGAE,qCAEA,CAEA,QAEA,GACA65B,+BAGA6a,oBACA,SAIA1jC,4CACA,kBAMA,MALA,+BAEAijC,SAEAK,gBACA7B,mBACA,KAGAn+B,mDACAtD,mFAEA,uCACAA,OAEA,UACA,EAOA8jC,2EACAxgC,0DACA6B,6EACAs9B,6EASAH,+EACA,2BACAnc,qBACA,OACAF,oEACA/2B,cACA,CACA,GACAo6B,mBACA2K,UACAsO,SACA,EACAwB,+EAEA7pB,UACA8pB,sEACAC,mEAQA,MANAj1C,uCACAA,sCACAkrB,mCACA,EACA,GAEAA,KACA,EAjCAla,IACAkkC,uBACApB,wBACAS,YACAY,SACAC,OACAC,OACAZ,sBA4BA,8BAEAngC,sCACA,8FAKAtD,MACAokC,UACAC,UACAr1C,6DACA,YACAA,mBAGA0mB,+BACA1mB,yCACAo1C,+BACAC,gCAEA,GAEAr1C,0DACA8lB,sDACAmR,8CACA,4BAEA,MADAjmB,SAGA,GAEAhR,4CACA,eACA,WAEA,MADAgR,SAGA,IAhCAA,UAkCA,+BAOA,GANAkkC,2BACApB,4BACAS,eACAY,YAGA,yEACA,SAGAV,8DACAhB,0BACAzzC,kEACA4yC,yCACA6B,sDAEA,GAGAzjC,6BACAmmB,yBACA,OACA8c,wBACA9gC,SACA,CACA,GACAmnB,gBACA2K,UACA9b,6BACAhW,oBACAwhC,sCACAjuB,8BAEA,qBACA,SAIA,GADAA,+BACA1mB,wCAGA,GAFA40C,oBACAU,iBACA,yBAEA,GADAxvB,mDACA,QAEA,SAEA6uB,wBACAE,OACA7jC,wCACA,CACA,SACA2jC,wFAIAA,8BAEAQ,kBACAA,iBACAN,OACA7jC,KACA,KAEAmkC,oEAIAA,uBAGAn1C,sCAEA,CAEA,QAEA,GACA65B,+BACA0b,uBACA,wBACA,UACAlC,UACA,0BACA6B,yBACA7B,KAEAA,SAEA,KAKA/+B,mDACAtD,mFAEA,uCACAA,QAEA,UACA,EAOAwkC,iFACA9B,uDACAp/B,yDACA6B,6EACAnF,yDAEA,sDAEA,GACA,kCAEAkkC,2BACApB,oDAEA9iC,sCACAmmB,gBACA,gCACA,GACAmD,SACA2K,UACApL,+BACA0b,6BACA,MACAlC,MACA,0BACA6B,yBACA7B,KAEAA,KAEA,KACAriC,oBAGAsD,mDACAtD,qFAGAA,IACA,EAOAykC,uEACAnhC,0DACA6B,6EACAnF,cAEA,8BAQAA,IANAsD,sCACA,6FAKA,EAFA,MAIA,+BAEA,4EACA,SAIAs/B,mDACA5iC,iBACAmmB,gBACA,oBACA,GACAnmB,MACAA,oBAGAsD,mDACAtD,mFAEA,uCACAA,OAEA,UACA,EAOA0kC,6EACAphC,0DACA6B,6EAQAw/B,sDACA,uDACA7mB,aACA,sCAKA,EAfA9d,cAiBA,8BAQAA,IANAsD,sCACA,6FAKAqhC,+DAFA,MAIA,+BAEA,4EACA,SAIA/B,mBACA5zC,4DACA,8BACA,GACA,CACAgR,iBACAmmB,gBACA,oBACA,GACAnmB,MACAA,oBAGAsD,mDACAtD,mFAEA,uCACAA,OAEA,UACA,EAOA4kC,uEACAthC,0DACA6B,6EACAnF,IACA,8BAKAA,IAHA6kC,oDACAvhC,2CAEA,EAEA,MAEA,+BAEA,4EACA,SAGA,oDACA6iB,gBACA,oBACA,GACAnmB,kBAGAsD,mDACAtD,mFAEA,KACAA,OAEA,UACA,CACA,EAEA,eAEA,GAEArR,MCp2BA,6MAEAm2C,iJACAjD,yGAqBA,kDACApwC,gCACAwuC,6CACA,oFAGA/lB,UACAxE,8EAHAtmB,EACAirC,EAGA,6BACA,6BACAngB,0CAGA,YACA,EACA,4FACA,CACA,GAEA,2BAEA,GAEAvrB,MC/CA,0MAEAm2C,iJACAjD,yGAqBA,+CACApwC,6BACAwuC,6CACA,4CACA,CACA,GAEA,wBAEA,GAEAtxC,MCnCA,8MAEAm2C,iJACA/wB,8GAEA,qDAGA,MAFAA,yCAEAgxB,oBAEA,GAEAp2C,MCZA,qHAEAwvC,0FACAnvC,yEAEAsuC,UACAtS,+BACA,QACA,kBACA,gCAEA,6BACA,qBACA,2BACA,IACA,gCACA,uCAGA,sBAKA,WACA,EACAga,0CACA,eAOA,MANA,6BACAC,uBAEAj2C,oCACA,iCACA,GACA,IACA,EACAk2C,uCACA,+BACA,EACAC,iDACA,wDACA,8BAEA,4CACAjG,cAEAA,yEACA,CACAttB,8BACArP,2BACA,GAIA,EACA,EACA6iC,yDACA,eACAxzB,UACArP,OACA,CACA,CACA,EAEA8iC,eACAjI,sCACAe,kCACA,EACAb,eACA,EAEA,oBAEA,GAEA3uC,MC3EA,2XAEAK,sEACAkxC,wHACAmF,kIACAjG,sJACA/tC,uIACAwwC,yGAEA,0CACApwC,6BACA4tC,oBACAC,sEACAC,0CACA+F,4BACAC,2BACA3zC,sCACA,+BAEA,uBACA,eACA,mBACA,kBACA,mBAIA,iBAEA,yBACA,EACAE,yBACA,2DACA,EACA2B,yBACA,2DACAzC,2CACA6C,aACAiU,mCACA1X,mBACAohC,2BACAgU,yBACAC,2BACAt1C,IACA+gC,gCACA,CACA,EAEA,0FACA,EACA/8B,2BACA,sBAGA,MAFAE,wBACAA,+BACAA,GACA,EACA8wC,iDACA,wDACA,8BAEA,4CACAjG,cAEAA,yEACA,CACAttB,8BACArP,2BACA,GAIA,EACA,EACA6iC,yDACA,eACAxzB,UACArP,OACA,CACA,EACAmjC,yCACA,sCAEA,kBAEA,sBAEA,EACAC,2CACA,eACAzU,qBAEA,OACAliC,2CACA42C,kBACA,GAGA,0BAGA,6BAEA,oFAEA,EACAC,qCAQA,MAPA,+BACA,wBACA3U,2BAEA,gDAEA,GACA,IACA,EACA4U,8BAQA,MAPA,+BACA,yBACA5U,mBAEA,iDAEA,GACA,IACA,EACA6U,2CAQA,MAPA,+BACA,yBACA7U,4BAEA,iDAEA,GACA,IACA,EACA+O,6CACA,4CACA,CACA,GAMA,MAHAoF,0CACAjG,6CAEA4G,iBAEA,GAEAr3C,MCpJA,kJAEAuxC,wHAqBA,0CACApuC,yBACA,2DACA,CACA,GAEA,wBAEA,GAEAnD,MCjCA,kKAEAs3C,sJAEA,oDACAx0C,gCACA,GAEA,4BAEA,GAEA9C,MCZA,qRAEAK,sEACA81C,iJACAzzC,uIACAwwC,yGAqBA,qDACApwC,mCACAgC,yBACA,GACAC,wDACA1C,2CACA6C,aACAoP,YACAijC,gBACA,EACAlwC,uCAPA5G,EASA,GACA,0BACA,qFAGA,IADAyE,wBACAzE,kCACAyE,qCAIA,0FACA,EACAosC,6CACA,+CACA,CACA,GAEA,8BAEA,GAEAtxC,MC3DA,oNAEAo2C,qKACAlD,yGAqBA,qDACApwC,+BACA00C,2BACA,wCACA,EACAlG,6CACA,8CACA,CACA,GAEA,0BAEA,GAEAtxC,MCtCA,0MAEAy3C,gKACA1H,8GAEA,qDAEAC,uCACA,iCACA,EACAC,+BACA,kBACA,CAEA,GAEA,2BAEA,GAEAjwC,MCpBA,uOAEA03C,qKACAr3C,sEACAqC,uIAEA,uDACAoC,yBACA,2DACAzC,2CACA6C,aACAyyC,4CACAtzC,mCACA,EAEA,0FACA,CACA,GAEA,4BAEA,GAEArE,MCvBA,wNAEA43C,2JACA1E,yGAqBA,2DACApwC,uCACAwuC,6CACA,oFAGA/lB,UACAxE,8EAHAtmB,EACAirC,EAGA,6BACA,6BACAjrC,OACA8qB,0CAIA,YACA,EACA,4FACA,CACA,GAEA,kCAEA,GAEAvrB,MCjDA,sUAEA43C,2JACA/0C,oGACAxC,sEACAqC,uIACAwwC,yGAqBA,0DACApwC,sCACAG,sCACA,+BACA,eACA,EACA40C,qCACAh1C,+BACA8hB,mDACA,wCAEA,EACAmzB,2CACA,cAOA,MANA,wBACA/0C,cACAF,+BACAE,2BAEA,4BACA,IACA,EACAg1C,iCACA,4BACA,EACAC,qCACA,2BACA,EACAhH,iEACA,mCAOA,MANA7qB,UAEAA,yCACA,iCACA,IAEAA,MACA,EACApiB,qDACA,GACAT,oBADAP,OAGA,2BACAO,kCACAA,gEAEA,WACA,EACAc,2BACA,8BAMA,MALA,QACA,uBACA9C,kDAGAA,KACA,EACAwD,4BAEAC,wDACA1C,2CACA6C,aACA+yC,UACA,EAGAA,0BARAl1C,OASA,sBACAF,uCACAqC,sEAIA,0FACA,EACAM,2BACA,GAEAE,mBAFA3C,OACAk1C,QAIA,aAFAvyC,gBACAuyC,0BACAA,QACAvyC,8CAEA,UACA,EACA4rC,6CACA,qFACA/lB,UACA8pB,iFACAC,iFAQA,MANAj1C,uCACAA,sCACAkrB,mCACA,EACA,GAEAA,KACA,EACA,gDACA2sB,2CACAC,oBACA,EACA,CACA,GAEA,iCAEA,GAEAn4C,MC1IA,oNAEA43C,2JACA1E,yGAqBA,uDACApwC,mCACAwuC,6CACA,2CACA,CACA,GAEA,8BAEA,GAEAtxC,MCnCA,+MAEA43C,2JACA1E,yGAqBA,kDACApwC,8BACAwuC,6CACA,4CACA,CACA,GAEA,yBAEA,GAEAtxC,MCnCA,6PAEAo2C,qKACAvzC,oGACAqwC,yGAqBA,oDACApwC,8BACAiuC,iCACA,4CACA,EACAvpB,qCACA,8CACA,iDACA,EACA8pB,6CACA,4CACA,CACA,GAEA,yBAEA,GAEAtxC,MC3CA,kNAEAs3C,sJACApE,yGAqBA,sDACApwC,mCACAwuC,6CACA,2DACA,CACA,GAEA,8BAEA,GAEAtxC,MCnCA,oYAEAm2C,iJACAiC,+KACA/3C,sEACAqC,uIACAD,qFACAywC,yGAqBA,8CACApwC,4BACAG,sCACA,+BACA,oBACA,EACA6tC,8CACAuH,4BACA,yBACAlyB,mDACA,kDAEA,EACA4qB,+CACAsH,6BACA,uBACAh4C,gCAEAA,qBAEA,EACAmnB,qCACA,6DACA,EACAwpB,iEACA,sBAEA,gBAEA,aADAqH,6BACAA,SACA,yFACA,wBAIA,WACA,EACAt0C,wDAEAT,oBADA7C,kBAGA,gBAEA,aADA43C,6BACAA,SACAA,oDACA/0C,8BACAA,6DAKA,WACA,EACAc,2BACA,8BAIA,MAHA9C,SACAA,oEAEAA,KACA,EACAwD,4BACAC,wDACA1C,2CACA6C,aACAmwC,aACAC,YACA,EAEAjE,8EADAtqB,0BAGA,aACA,4DASA,IALAA,QADA,2DACA1kB,kCAEA,kBAGA5B,YAEA,aADA43C,qBACAA,SACAA,mDACAnzC,mCACAmzC,wBACAh4C,4BACA,KACA,0CACAgC,SACA,CACA,CAIA,0FACA,EACAgD,2DAEA,MADAhD,uCACAhC,qBACAm3B,sBACA,kBACAhO,wBACA,+CACA,GACAgO,qBACA,+EACA,GACAroB,OACA,GACAmgC,YACAngC,QACAogC,+CACA,EACA/pC,8BAEAE,mBADAjF,kBAGA,IADAiF,wBACAjF,YAEA,aADA43C,6BACAA,SACAA,oDACA3yC,mDAIA,UACA,EACA4rC,6CACA,gFAEA/lB,UACA8pB,6EACAC,6EAQA,MANAj1C,uCACAA,sCACAkrB,mCACA,EACA,GAEAA,KACA,EACA,4FACA,CACA,GAEA,uBAEA,GAEAvrB,MCnLA,kOAEAK,sEACAi4C,sJACA51C,uIAoBA,+CACAI,4BACAgC,yBACA,2DACAzC,2CACA6C,aACAb,8CACA,EAEA,0FACA,EACAitC,6CACA,QACA,CACA,GAEA,uBAEA,GAEAtxC,MC5CA,yMAEAm2C,iJACAjD,yGAqBA,8CACApwC,4BACAwuC,6CACA,2CACA,CACA,GAEA,uBAEA,GAEAtxC,MCnCA,mNAEA43C,2JACA1E,yGAqBA,sDACApwC,kCACAwuC,6CACA,iDACA,CACA,GAEA,6BAEA,GAEAtxC,MCnCA,0MAEAm2C,iJACAjD,yGAqBA,+CACApwC,6BACAwuC,6CACA,4CACA,CACA,GAEA,wBAEA,GAEAtxC,MCnCA,+MAEAs3C,sJACApE,yGAqBA,mDACApwC,gCACAwuC,6CACA,+CACA,CACA,GAEA,2BAEA,GAEAtxC,MCnCA,6JAEAs3C,sJAEA,gDACAx0C,4BACA,GAEA,wBAEA,GAEA9C,MCZA,wKAEAwvC,0FACApqB,8GACA/kB,sEAEA,eACAA,oCACAA,kBACAqvC,2CACAtqB,gDACA,gCACA,CACA,GAEA,uBACAqpB,sCACAe,kCACA,EACAb,eACA,EAEA,wBAEA,GAEA3uC,MC1BA,oRAEA6C,oGACAwrC,sJACAjpB,8GACA/kB,sEACA2B,sEACAS,qFAqBA,mCACAK,0BACAG,sCACA,+BACA,sBACA,oBACA,kBACA,iBACA,uBACA,mBACA,wBACA,6BACA,2BACA,EACAs1C,8CACAC,iBACAl1C,iCACA,uBACAT,yCACA21C,gCAGA,mBACA,EACAC,iEACA,+CACApxC,8BACA,kDAEA,0CAEA,WACA,EACA4pC,mEACA,4BACA,qDACA,yBAGA,WACA,EACAyH,8DACA,6CACAC,6BACA,+CAEA,yCAEA,WACA,EACAC,iEACA,UAOA,MANAv4C,2CACA,6BAEA,MADAiB,iBAGA,GACAA,KACA,EACAu3C,mCACA,6BACA,EACAC,iDACA,mDACAH,UACA,wDAEA,EACAI,qDACA,yCACAC,8BACA,uDAEA,oCAEA,WACA,EACAj1C,qDACA,uBACA0M,WAWA,MAVApQ,+FACA,uCACA,oCACAiD,YACAA,8CACA,CACA,GACA,6CACAA,mEAEAA,IACA,EACAc,2BACA,8BAMA,MAJA9C,SACAA,kGAGAA,KACA,EACA23C,qCACA,8BACA,EACAt0C,yCACA,WACA,EACAu0C,6CACA,yBACA,EACAC,iDACA,0BACA,EACAC,uCACA,+BACA,EACAC,0DACA,8BACA,EACAC,iDACA,oCACA,EACAC,yDACA,iCACA,EACAC,qDACA,6BACA,EACAC,iDACA,wCACApnC,gCACA,wDAEA,4CAEA,WACA,EACAqnC,uDAEA,MADA,iDACA,IACA,EACAC,iDACA,cAOA,MANAt5C,iDACA,kCAEA,MADAO,aAGA,GACAA,MACA,EACAg5C,yDACA,wCACAC,wBACA,+BAEA,qCAEA,WACA,EACAr0C,8BACAE,mBACAF,8BACA,oBACA,EAQA,MAPAE,gCACAA,yCACAA,0CACAA,4CACAA,gDACAA,sDACAA,yDACAA,GACA,EACAC,2BACA,4BAEA,SAEA,iCACAm0C,qCAEA,kDAKA,CACA,QAEA,EAMA9yC,uBACA,gCACA3E,UACAhC,gCACAgC,sBAGA,CACA,GAIA,MAFA+iB,yBAEA4jB,IAEA,GAEAhpC,MCjPA,iEAEA,gBACA0gB,+CACAsD,8CACAI,gEACAH,0EACA5R,gDACAuJ,oCACAyI,wCACAjG,kCACAkG,gDACAjgB,wCACA8f,0EACAxP,4EACA+J,kDACAkG,sEACA/F,0CACA8F,gDACAH,kDACAE,8DACA5F,kDACA2F,4DACA4nB,gFACAC,4DACAhtB,iFACAD,2EACAmB,mFACAF,uFACAZ,+EACAO,+FACAE,6FACAD,uFACAF,6EACAP,6EACAc,uFACAf,yEACAG,yEACAJ,yEACAP,qDACAoB,qFACAR,2EACAS,iFACAR,2EACApB,gEACAD,kEACA+F,gEACA9D,2EACAnC,0DACAuG,0CACA5I,sCACA8C,0DACAmF,0CACA,EAEA,iBAEA,GAEAlkB,MC3DA,qEAuCA,uCACA,QACA,sBACA,6BACA,WAGA,WACA,IAjBA+5C,iFAmBAC,cAMAC,kCACA3mB,6FACA4mB,iGACAC,qGACA,gEACA,EASAC,0HACAC,YACAC,eAGAD,sEAEAE,sKACAC,8KACAC,8BACAC,sCACAC,wCACA35C,qCACA45C,6CACAn6C,6BAEA,aACA,WACA,KAEAA,MACA,sCACAo6C,gBACAJ,YACAK,YACA,2CACA,gCAEA,CAcA,MAXAL,gDACAI,iEAIAA,uFACAA,gBACA,gEACA,uFACA,CAEAA,GACA,CACA,EAEA,mBAEA,GAEA76C,MCvHA,kEA2BA,sDACA,kFACA8C,oBACAI,YACA4Q,6CACA,CACA,IAEA,OACAhR,2BACAI,YACA4Q,kBACA,EACA69B,YACA7uC,eACA8uC,8BACA,CACA,CACA,EAEA,gBAEA,GAEA5xC,MCnDA,gXAEAK,sEACA06C,mHACAl4C,oGACAm3C,6HACA/N,6HACA8G,uIACAiI,+IAwBAC,iHACA,kBAEA56C,2CACA,IACAwiC,iCACA,UACAA,qBACA,CACA,GACA7pB,qCACA,EAEAkiC,2FACAliC,mDACAA,mCACAA,2CACAA,yCACAA,4CAEAiiC,oEACA,EAEAE,qBACAl4C,yCACA,YACA,wBACA,qBAEA,oDACA,EACAm4C,+DAGA,MAFA/6C,+CAEA,IACA,EACAg7C,qDACA,WAEA,kBACA,yDAEAl3C,kBACA,mDAEAA,mDAIA,UACA,EACAm3C,uFAEArO,qDACAzR,YAFA+f,cAIA,6BAEA,GADAA,iCACA,oCACA/f,eACA9X,2CACA83B,cACA,OAEA,oFAIAvP,uFACAwP,oCACA,gDACA,GACAlO,gCACA,EACA,EACAmO,6CACA,uBACA,EACAC,kEACA,4CACA,uEASA,YAPAz5C,cACAW,kCAGA,oEACA,sDAEAX,eACA,kDAEAy2C,SACA,0CAEA,CAEA,+BACA,sDAEAK,UACA,sCAEA,CAEA,iCACA,0DAEA3mC,YACA,qCAEA,IAGAw/B,iGACA3vC,uCACA,wBACAzB,QACAm7C,mDACAC,0IAIA,6DAHAlK,gEAEA,0EADAC,6RAEAD,wBACAA,uDAEAA,wBACAA,2BACAA,sCACAA,oEACA,EACA,OACA,2BAEA,GADAE,6CACA,+BAFAiK,sBAIAz0C,8BACAnF,oBACA45C,aACA,CAEA,aACA,6CAEA,oDAEAC,eACA17C,8CACA,UAIA6B,iEAHAgB,WAGA,2CADA,oBAHA,GAEA84C,uDAGA30C,+EAGA,qEAIA,4BAHAqqC,sDAEA,+DADAG,uTAGAoK,8IACAvJ,wCAEA,sDACA,4BACA,GAEA,gCACAb,iDAEA,EAEA,GAxDA,yCA2DA,+DACAra,4FAEA,4BACA,6BAEA,wBACA,EACA,0BACAn3B,UACAwxC,iBACAmJ,gBACAkB,oBACA,CACA,CACA,EAGA,uBACA15B,mCACA25B,+EACA,CAEA,mHACA,CACA,2CACA,qDACA,4DAGA,6BACA5O,iCAEA,EACA,EACA6O,gFACA,yCACA,sCAEA,6BACA7O,6BAEA,EACA,EACA8O,wEACA,yCACA,qCAEA,6BACA9O,6BAEA,EACA,EASA+O,kEACA,cACA,kEAGA,yCACA,mDAEA,mBACA,wBAEAC,uDAEAC,iCACA,mEAGA,CAEA,6BACAjP,iCAEA,EACA,EACAkP,wDACA,qCAqBA,MAnBAp1C,yDACA0rC,8EACA,EACA7wC,eACA,KAEAmF,8CACAA,qDAGAA,oBADAhH,qBACA6B,aACA7B,yBACA6B,iBAEA,GAGAmF,sDAEAA,QACA,EACAq1C,wEACA,yCAEAC,4EAGAA,4EACAA,4EACAA,4EAGA,iDAUA,MARAA,4BACAA,kEAGAA,2BACAA,kEAGAA,YACA,EACAC,yCACA,oCAGA,MAFAjE,8CAEAA,OACA,EACAkE,wFACA,+BASA,MAPAC,2BACAjD,iBACAA,4BAEAA,mCAGAA,EACA,EACAkD,0DACA,yCACA,sDAGA,sFACA,yCAGA,6EAGA,iBAFAC,sCAEAC,sBACAC,mCACAn2C,mCAGAA,SACAi2C,4CAEA,CAEAA,oDACA,EACAG,gDACA,4DACA,4CAGA,mCAEA,wBACA,4EAGA,oDAGA,MAFA,uCAEA97C,GACA,EACA+7C,uDAEA,sEA2BA,MA1BAr2C,mCAEAA,yBACAA,aACA,gDAIAA,6BACAA,gBACA,gDAIAlE,mCACA,uCACAA,8BACA,kCACAA,4BACA,gCACAA,mCACA,+BACAA,iCACA,mCAGAkE,OACA,EACAs2C,mEACAx6C,6CACAX,aACA,6DAIA,+CAEAW,8CACA,kCAEA,EACAy6C,2EAEA,iBACA,+CACA,2BACA,sBACA,mDAGA,+BAEA,4BACA,+CAEAn3B,QACA/e,iCAEA,CACA,KAEA,kCACA,qDAEA+e,SACA/e,8BAEA,CAGA,0DACAlF,aACA,kCACA,qDAEAyiB,QACAvd,6BAEA,CAGA,CACA,EACAm2C,oDACA,4CACAp3B,0BACA,wEAEAA,eACAA,2BAEA,2CACA,EACAq3B,oDACAn5C,sCAGAnC,YACA,8BACAmC,2CAEAA,sBAGA,EACAo5C,8CACA7hC,oBACAA,gCACAvb,sDACAub,kCACA,EACA,EACA8hC,uDACA1pB,6BACA,EACA2pB,2CACAzC,uCACA,EACA0C,2CACA1C,uCACA,CACA,GAEA,aAEA,GAEAl7C,MChhBA,kPAiBA,uCACA,sEACA,cACAiB,kBACAA,2BACAA,0BACA,CASA,wCACA,yDACA,kCACA,CAQA,iCACA,GAEA48C,eAFAC,MACAC,SASA,MANAC,2BACAF,8BACAC,sBACAF,oDAGA,WACA,CArDA77C,sEACA3B,sEACAwC,oGACAH,uIACA+tC,sJAEA,SAiDA7oC,qBACA9E,gBACA4tC,kBACAC,kDACAC,uBACA3tC,sCACA,+BACA,aACA,eACA,mBACA,EACAg7C,qDACA,4CACA,EACAC,+CACA,iCACA,EACAC,qDACA,iCACA,EACAC,qCACA,2BACAC,kCAEAC,qCACA98C,KACA88C,uCAEA,kBACA,EACAC,+BACA,kBACA,EACAz5C,yBACA,2DACAzC,2CACA8C,kBACA+tB,gBACA5uB,SACA9C,uBACAg9C,eACAC,SACAv5C,YAEA,iCACAs5C,aACA,8FA2BA,MAxBAA,eACA,8BACAtrB,2DAEAA,kDAIA1xB,cACA8C,uDACAa,qBAGAb,oCACAA,0CAEAY,aACAw5C,qCACAp6C,UACA4uB,QACA/tB,QACA3D,KACA,EAEA,mFACA,EACAmE,2BACA,6FACA,CACA,GAEA8qC,gCAEA,gBAEA,aAEA,GAEAzwC,MCjJA,6SAEAK,sEACAwC,oGACA6zC,kIACAjG,sJACA/tC,uIAEA,wCACAI,uBACA4tC,oBACAC,gEACAC,oCACA+F,4BACAC,2BAEA3zC,sCACA,+BAEA,uBACA,eACA,mBACA,kBACA,mBAIA,iBAGA,kBACA,EAEAE,yBACA,qDACA,EAEA2B,yBACA,2DACAzC,2CACA6C,aACAiU,mCACA1X,mBACAohC,2BACAgU,yBACAC,2BACAt1C,IACAwpC,gCACA,CACA,EAEA,0FACA,EAQAjf,gCACA5nB,UACA9B,4BAIA,MAHAA,6CACA8B,6BAEAA,GACA,EAQAunB,kCACA,gCACArpB,2CACAA,6BAEA,EAEAmD,2BACA,sBAGA,MAFAE,wBACAA,+BACAA,GACA,EAMAi5C,6BACA,yBAGA,uCACA,mBAEA,EAKAC,qCACA,cACAv+C,uCACAw+C,8BACA,GAGA,mBAGA,sBACA,CACA,GAMA,MAHAnI,4CACAjG,+CAEAtF,mBAEA,GAEAnrC,MC/HA,8GAEA6C,oGAoBA,oCACAC,0BACA,GAEA,sBAEA,GAEA9C,MC9BA,qIAEA6C,oGACAxC,sEAqBA,uCACAyC,+BACAC,UACAC,iBACAC,qEACA,uBAEA,yBACA,0BACA,qBAEA,qCAEA,kBADAJ,qCACAi8C,aAEA,KAGA,kBADAj8C,qCACAi8C,aAEA,IAEA,EACAC,4EACA,uBACA,sDACA,kBACA,cACA,gBACA,sDACA,qCACA,6BAEA,4DAEA,MACA,SACA,UACA,YACA,UACA,SACA,gDACA,qCACA,yBACA,qCAEA,wCAEA,MACA,cACA,GACAl8C,oDACA,sBACAxC,yBACA,CACA,oEACA,qCACA,yBACAA,iCACA2+C,qBACAC,wBACA5+C,eACAA,2BACA,4BAEA,MADA4+C,2BAGA,EAEA,GAEA,kCACA,KACA,wCAEA,MACA,QACA,4CACA,IAEA,4DAGA,WACA,EACAC,mDACAr8C,mCACA,2BAEA,EACA2C,8BACA0oB,wBACAixB,sCACAjxB,wBACAA,uBAEAA,MAEA,EAMA,MAJAA,KADA7tB,eACAA,qBAEA8+C,YAEA,CACAC,yBACAC,0CACAC,iBACA,CACA,CACA,GAEA,yBAEA,GAEAt/C,MC5IA,iHAEA6C,oGAEA,uCACAC,8BACAy8C,kBACA1E,OACAr1C,2BACA,sBAGA,MAFAE,wCACAA,iBACAA,GACA,CACA,GAEA,yBAEA,GAEA1F,MCpBA,yJAEA6C,oGACAuiB,8GAEA,gCACAtiB,uBACA6C,2BACA,kCACA,CACA,GAIA,MAFAyf,gCAEA0oB,WAEA,GAEA9tC,MClBA,8KAEA6C,oGACAxC,sEACAqC,uIAEA,+BACAI,sBACAgC,yBACA,2DACAzC,2CACA6C,eAIA,MAFAA,sEAEA,mFACA,CACA,GAEA,iBAEA,GAEAlF,MCvBA,qKAEAwvC,0FACApqB,8GACA/kB,sEAoBA,eACAA,oCACAA,kBACAqvC,2CACAtqB,gDACA,6BACA,CACA,GAEA,oBACAqpB,sCACAe,kCACA,EACAb,eACA,EAEA,qBAEA,GAEA3uC,MC5CA,mKAEAK,sEACAwC,oGACAuiB,8GAoBA,0BACAtiB,gBACA,GAEAsiB,yBAEA6oB,oBAEA3pC,4BAIA,MAHAjE,uBACAm/C,8DAEA,oBACA,CACA,GAEA,kBAEA,cAEA,GAEAx/C,MC9CA,sOAEAK,sEACAwC,oGACA48C,4IACA/8C,uIAoBA,4BACAI,oBAEAG,iDACA,+BACA,4BACA,EAOAsJ,qCACA,kCACA,2BAEA,+BACA,mCAEA,gDAGA,WACA,EAKAzH,yBACA,2DACAzC,2CACA6C,aACAqH,2BACA,EAEA,0FACA,CACA,GAIA,MAFAkzC,kCAEAvR,OAEA,GAEAluC,MCvEA,yKAEA6yC,gKACAxyC,sEAqBA,oDACAyC,+BACAG,sCACA,+BAGA,iBAGA,0BACA,mBAGA,0BAGA,qBACA,EACAy8C,6CACA,mCACA,EACA37C,qDACA,uBAEA,MADAT,wCACAA,IACA,EACAkC,2BACA,sBAQA,MAPAE,4BACAA,0CACAA,4BACAA,6CACAA,0DACA,qBACA,GACAA,GACA,EACA4oC,4CACAlnC,kBACA8pC,qBACAjI,2BACAuP,oCAOA,MANAn4C,iCACA,gDAEA,MADA+G,iBAGA,GACAA,WACA,EACAu4C,oDACA,eACA,4BACAC,6BACA,8BACAC,kCAEA,UAEA,wDACA,CACA,GAEA,0BAEA,GAEA7/C,MC3FA,0EAKA,oBACA,cAEA,+BACA2O,sBACAtO,uBAEA,EAEA,EAEA,iCACA,4BACA,cACA,wBACAy/C,8BACAA,mBACAt+C,UACA+rC,iBACA,EACA,CACA,EAEA,yBACA5+B,uBACAmxC,iBAEA,EAEA,kCACAA,eACAz/C,iCAEAoH,iBACA,CACAhC,WACAjE,KACA,EACAU,KAEA,EAEA,CACA,CAEA,MAhDA7B,uEAgDA0/C,QAEA,GAEA//C,MCtDA,qEAEAK,sEAEA,SACA2/C,2CACA,4BACA,wBACA,6BACA,eACA,4BAEA,CACA,wBACA,CACA,EAEA,UAEA,GAEAhgD,MCrBA,oLAEAgC,sEACA3B,sEACAkiC,gFACA97B,+IA4BAw5C,4EACA,kDACAC,cACAC,OACAl/C,uCACA,EASAm/C,+DACAC,kDACAzE,0DACA0E,iCAeA,MAbAl5C,sCACAm5C,yFACAD,6DACA,kBAEAA,mDACAC,gEAGAD,kCACAC,yCAGA,CACA3E,sCACA4E,2CACAC,mCACAH,8BACAp7B,QACA,CACA,EAQAw7B,wEACAC,4BACAC,mCACAC,mBAsBA,MAnBAxgD,yDACA0G,2BACA45C,yDAEA,GAGAC,wDACA,cACAvgD,6DACA,mDAEA,MADAygD,2CAGA,GACAD,kBACA,GACAF,kEAEAA,uBACA,EASAI,wDACA57B,aACAy7B,mCACAtW,4CACAqW,yDACAK,kBAiDA,MA/CA3gD,qDAEAqyC,sDACAxtB,SAFA+7B,sFAKA,mCAGA,GADAA,6DACA,uCACA,SAoBA,GAhBA7wC,8CACAivC,0EACA6B,qFACA7B,kCACA73C,4CACA25C,sDACAj8B,8BAEA1d,qBACA25C,mCAGAh8B,mCACAA,qCAGA9kB,qDACA,SAEA8kB,+CAIA67B,qBACAhI,kBACAxxC,sBACA0d,WACA,EACA,CACA,GAEA87B,gDAEAA,cACA,EAKAz8B,eACAw8B,yBACA,EAEA,oBAEA,GAEA/gD,MCvLA,wEAEAgC,sEAOA,6BACA,eACA,2BACAo/C,qBACA,EACA,uBACA,YACA,CACA,EAEA,aAEA,GAEAphD,MCvBA,uKAmDA,0CACA,iDACA,CAEA,sCACA,iDAKA,MAFA8C,qCAEAu+C,0DACA,CAEA,+BACAv+C,sCAEAzB,KACAyB,kBACAC,sCACAG,aACA,EAUA,MARAlB,sCACA,aACA,iBACAs/C,mDACAjgD,oCAEA,GAEAA,GACA,CAEA,iCACA,2BAsBA,MAnBAA,oBACAkgD,gFACAC,qBACA/C,sCACAA,WACAp9C,0DAEAmgD,oBACA,GAGAngD,uBAGAA,QACA4hB,SACArP,wCACA,EAEAvS,GACA,CAEA,wDACA,wBAEA,OACAixB,YACAxvB,oBACAC,qCACAG,YACA,4BACA,EACAqJ,oBACAjI,MACAguB,YACAvvB,qCACAuB,eACA,CACA,CACA,CAEA,sCACAjD,UACAiD,QACAguB,WACA,EAEA,8CAGA,MAFAjxB,iCACAA,wCACAA,GACA,CAEA,uCACAA,UACAiD,QACAguB,WACA,EAEA,+CACAjxB,iCACAA,yCACA,mFACA,uBACA,sCACA0F,cACAzC,wBACAguB,WACA,EACAjxB,0CACAogD,8CACA,CAEA,MADApgD,2BACAA,GACA,CAEA,4CACA,SACA0B,uCACAuB,QACAguB,WACA,EAoEA,MAlEA9qB,6CACAk6C,qBACA36C,kCAEAA,gDACA5C,qCACAu9C,8CACA,GAGAl6C,oFACAk6C,qBACA36C,kCAEAA,iDACA5C,qCACAu9C,8CACA,GAEAl6C,gFACAk6C,qBACA36C,uCAEA5C,qCACAu9C,8CACA,GAEAl6C,sFACAk6C,qBACA36C,kCAEA5C,qCACAu9C,8CACA,GAEAl6C,kEACA,GACA8e,iBAEAq7B,2CAHA56C,QAEA66C,SAEAC,YAEAF,YACAC,wCACAA,kBACAC,4BAEA96C,2DAEA5C,qCACAmiB,2CACAs7B,mBAGA,GAEAvhD,4CACAmH,6CACAk6C,qBACA36C,kCACA5C,qCACAu9C,8CACA,EACA,GAEAv9C,2BACAA,GACA,CAEA,+BACA,8BACA,CAhPA9D,sEACA2B,sEACAS,qFACA04C,kGAoBA2G,sDACAT,gBACAU,0BACAC,iCACA,EACAC,qBACAC,sBACAC,mCACA,EAEA9mB,iBACA75B,IACAoa,QACAiJ,aACA5I,cACAtR,YACAtG,UACAggB,aACAC,gBACA,EACAgpB,YACAp0B,UACA,EAEAkpC,OAmMAA,QACAC,qCACAliD,oDAEAqH,qBAEAT,iCAEA7E,wCAEAogD,OAWA,MATAjiD,4BACA0G,mBAGA1G,8CACAiiD,sDACAA,oDAGAv7C,OACA,CACA,EAEA,oBAEA,eAEA,GAEA/G,MCnRA,yLAOA,yCACA,+BACA,kBACA,iDAEA6X,uBAEAA,2CACAyxB,kCACAiZ,qCACAC,oDACAC,WACAvgD,mCACAV,IACAoa,WACA,CACA,GAEA,kDACA,2BACA,0CACA8mC,iCACAnV,qCACA,CACA,EACA,aAEAA,wBACA,EACA,CACA,CAnCAvrC,sEACA3B,sEACAsiD,6HACAxH,+FAkCA,oBACA9N,SACA,EAEA,qBAEA,GAEArtC,MC/CA,0IAEAgC,sEACA3B,sEACAwC,uGAwBA+/C,aAQA3/C,6BASA,MARAJ,kCACA,eAGAA,qCACA,iBAGA,IACA,EAOAggD,yBACA,gBACA,EAOAC,2BACA,iBACA,EAMA1/C,+BACA,kCACA,EAMA2/C,+CACA,0CACA,EAMAC,yBACA,kBACAjgD,yBACAioC,SAEAjoC,SACAioC,sCACAA,aACAiY,2CAEA,eACAA,6BAGA,WACAjY,QACAiY,UACAC,gCACAC,uBACA,GAGA,CAEA,gBACA,EAOA/oC,yBAEA,sBAUA,MATAgpC,OAEAA,mCACAA,mDAEA,iBACA,wBAGA,IACA,EAOA/oC,8BAEA+oC,mBACAF,OAkBA,MAjBAE,OAEAF,uCAEAlhD,sGACA8pB,mBACApd,wBACA7F,2BACAosB,6BAGAmuB,sFAEA,iBACA,yBAGA,IACA,EAOA3oB,qBACA,sBAOA,MANA2oB,OACAA,gBAEA,sBAGA,IACA,EAOA9oB,qBACA,sBAOA,MANA8oB,OACAA,gBAEA,sBAGA,IACA,EAOAn8C,uCACAm8C,mBACAr+C,yBAYA,MAVAA,oBAEAq+C,MAEAA,iCACAA,YACAA,iCAIA,IACA,CACA,EAMAC,sBAOApgD,yBAKA,MAJAJ,sCACA,iBAGA,IACA,EAQAygD,gCACA,cAoBA,OAjBAC,sBACAz4C,aACAA,cACAA,YACAzK,qDACA,YAEAwC,qCACA2gD,2CACA14C,yBACAA,kCACAA,0CAEA,IAIA,UACA,EAQA+3C,8BAEA,MADA,gBACA,gBACA,EAQAY,uCACA,2BACA,oBACA,iDAEA,EAQAC,iDACA3+C,0BACA85C,GAgBA,MAbAA,IADA,0BACA,iBACAr1B,mCACAwhB,2BAEA,EAEA,iBACAA,aACAA,2BAEA,EAGA,aACA,EAOAnkB,uBAEA,MADAxmB,8BACA,IACA,EAQAsjD,oCAEA,MADA,8BACA,IACA,EAQAC,sCAEA,MADA,+BACA,IACA,EAQAC,gCAEA,MADA,4BACA,IACA,EAQAC,gCAEA,MADA,4BACA,IACA,EAQAC,qCAEA,MADA,kCACA,IACA,EAQAC,uCAEA,MADA,mCACA,IACA,EAQAC,iCAEA,MADA,gCACA,IACA,EAQAC,iCAEA,MADA,gCACA,IACA,CACA,EAQAC,iDACA,mCACA,6BACA,EAOAC,mDACA,gDACA,4BACA,EAEAC,cACAjjD,6BACAoiD,sBACA,EAEA,mBAEA,GAEAxjD,MC9bA,sGAEAK,sEACAqjB,+FAoBA,iBAMA2pB,gCACA,iCAEAiX,uCACAxhC,0DACAwhC,+BAEAA,gBAGAA,mBAGA,qCACA38C,sCACAtH,yCACAkkD,2CACAA,iBAEA,GACAvsC,SACA,gBACAC,mBACA,EACA,GAbAU,iBAcA,CACA,EAEA,kBAEA,GCzCA3Y,8FACA,aAUA,6DAEA,+BAEA,OAMAwkD,qCAEA,MADAnsC,+BACA,IACA,EAMAg1B,qBACA,gBACA,CACA,CACA,CACA,GACArtC,MCtDA,gUAEAK,sEACAijB,oGACAC,+FACAC,gKACAC,4IACAC,+FACAC,6KAqBAC,gCACAC,6BAGAC,iCACA,CACA,CACAb,aACAC,4BACA,GACAU,YACAT,WACAA,uFAEA,sCAEA,CACA,EACAM,yBACAA,yBACAA,uBACAA,+BACAA,wBACAE,sBACA,CACA,aACA,CAGAI,WACAC,6DACAtD,8DACAuD,uBACAC,0DACA7R,+DACA8R,sBACAxP,uBACAyP,sBACAC,uDACAjG,iDACAkG,+DACA1I,mDACAvX,uDACA4X,qDACA8C,yEACAL,iEACA6F,qEACAvF,oEACAV,yEACAuG,yDAIAxF,uFACAiB,mGACAf,qFACAD,6FACAE,qFACAa,6FACAT,uFACAW,mGACA,8GACAzB,8DACA2F,2EACAhF,4FACAO,yFACA0E,iBACAE,qBACAlF,2FACAU,iGACAF,mGACAD,2GACAE,yGACAN,uFACAY,+FACAd,qFAIAd,yDACA2F,iEACA,+GACA,0CACA,yFACA,8CACA,6FACAG,+DACAnE,iGACA,EAEAsC,QACAG,sBACAc,oBACA5jB,SACA2jB,0BACAP,kBACAuB,mBACAC,8CACAC,4CACAC,0DACAC,qCACA,EACAC,8BACA,CACA,EAEA,aAEA,GAEAnlB,MC3IA,6KAEA0tC,mHACA5qB,+FAqBA,2EAEA,eAEA,GAEA9iB,MC9BA,+IAEAykD,uIAwBA,sBACAxhC,sBACAhgB,uBACA4B,yDACA,EAEA,uBAEA,GAEA7E,MCpCA,kRA0DA,+BACA,+DAEA6iB,0BACAI,KAGAyhC,YACAA,aAGAzhC,MACArgB,kEAGA+hD,gBACA,CAUA,6CACAC,4CACAjrC,sDACAtX,UAKAY,qBAEA,MADA0W,0BACA,IACA,EAMAkrC,2BACA,oBACA,EAMAhgD,mCACA,6BACA,CACA,EAEA,sBACA,CAjHArC,kIACAsiD,iJACAC,wHACAC,0IAqBApiD,8DAMA+hD,iCAUAD,OACAO,wBACAC,2BACAC,4BACAC,2BACAC,iCACAC,yBACA,EAyEA,MALAR,sCAEAS,kEACAA,wEAEAA,kBAEA,GAEAvlD,MC9HA,msBAEAgC,sEACA3B,sEACAwO,2EACAyU,oGACAkiC,8GACA3iD,oGACAkgB,mHACAC,mHACAyiC,mMACAF,2JACA3C,mHACA0B,wHACAoB,gKACAvf,kGAqBA91B,sDAKAs1C,wBACA1iD,qCACA6H,WAEA86C,wBACA,CACA9hC,8BACA,EACAzjB,iDACA,CAEAusC,gEAEA,6CAEA,2BAEA,wDACA3D,WAIAn+B,gBACAA,+BACAA,6BAEA+6C,MACA,4BARA/6C,oEASA,EACA,EAEAhG,yCACA,cAIA,GAFA3E,2CAEA,YACA,IAEAkB,uCAGA88B,gCACAmM,sCACA3O,8BACA,aACA,gCACA2O,2DACA,CACA,UACAx/B,qEACA,CACA,IACA3K,2BAEAA,+BACA4iB,4BACAA,4BACA,sBACA0iC,yDACA,EAEAtlD,+BACA6iB,4BACAA,4BACA,sBACAyiC,yDACA,GAMA9sC,cACAA,4CACA,qCACAtY,QACA4X,OACA5H,QACA,4HAEA,GACA,EACAyJ,gBA0BA,MAzBA9X,QACA+8B,sBACAn0B,+BACAE,4CACAA,kDACA,GACAi0B,kBACAn0B,+CACAE,qEACA,GACAi0B,mBACAn0B,uCACA,gDACAk7C,4CACA/Z,aACAA,6BAEA,GAMAjhC,0DAEAw5C,6BACA,GACAvqC,+BACA8rC,UACAE,0CACAC,uBACAA,eACA19C,4DACAA,uBACAwC,2BACA,EACA,YACAA,mEACA,CACA,CACA,EAKA9D,+BACA,cAEA8D,WACA6N,YACA,uDACA,0BACA,GACA,CACAmB,gBACAhP,mBAEA9I,0FAEA8I,gBACAA,wBAGAA,eACA,GACAgP,WACAC,oBACAjP,gGACA,GAEA+6C,MAEA,EAMA95B,6BACA,aAeA,MAdA,cAEA1rB,6DACA6F,oEACA,GAGA7F,qDACAwC,yDACAqD,wBACAA,iDAEA,IAEAA,KACA,EAMAwlB,kCACA,oBAEArrB,6DACA,8CACAE,eACA6G,+BAEA,GAGAlB,WACA7F,qDACAwC,mEACAkE,+CAEA,GAGA,EAEAkyC,qCACA,iBAWA,MAVA,aACA54C,SACA,6BACA,0BAEA,MADAk3B,6EACAA,SACA,EACAA,UACA,CAEAA,SACA,EAEA0uB,wEACAn7C,WAEA9F,mCACAkhD,kCAGAA,8CACAlhD,0BACA,sEAEA6gD,oBACA,0BACA,EACA,CACA,EAEA,6BAEA,GAEA7lD,MC3RA,4JA2BA,MAzBAmmD,oHACAC,2JAsBAD,8CAEAA,UAEA,GC5BAnmD,qEACAA,MCFA","names":["define","ckConfigurator$1","getConfig","options","ckConfigurator","_","buildSerial","id","chars","i","buildId","suffix","exists","usedIds","buildIdentifier","useSuffix","prefix","replace","findInCollection","collectionNames","collection","elt","found","addMarkupNamespace","ns","markup","$0","$1","$3","removeMarkupNamespaces","getMarkupUsedNamespaces","namespaces","$","getOptionsFromArguments","data","placeholder","subclass","renderer","arg","console","loggerFactory","util","rendererConfig","_instances","logger","Element","qtiClass","serial","rootElement","init","attributes","is","getSerial","getUsedIdentifiers","elts","getUsedIds","attr","removeData","removeAttr","setAttributes","getAttributes","removeAttributes","attrNames","getComposingElements","append","getUsedClasses","composingElts","ret","find","object","body","parent","setRelatedItem","setRootElement","getRelatedItem","getRootElement","setRenderer","getRenderer","render","args","_renderer","tplData","defaultData","tag","rendering","postRender","postRenderers","getContainer","toArray","type","arr","isEmpty","addClass","_containClass","hasClass","removeClass","clazz","toggleClass","state","isset","unset","_containers","_$containerContext","_getSelector","selector","containerHelper","setContext","getContext","get","$scope","reset","element","clear","trigger","eventType","triggerResponseChangeEvent","interaction","response","extraData","targetBlank","$container","e","href","window","Math","raphael","scaleRaphael","basic","stroke","fill","cursor","hover","selectable","active","error","success","layer","opacity","creator","target","path","width","assoc","close","gstyle","shapeMap","default","poly","coordsValidator","rect","ellipse","circle","qti2raphCoordsMapper","size","a","coords","raph2qtiCoordsMapper","GraphicHelper","_style","setStyle","responsivePaper","maxWidth","containerWidth","factor","containerHeight","paper","$editor","$body","resizer","imgWidth","imgHeight","image","on","createElement","self","shaper","shapeCoords","createTarget","point","baseSize","half","x","y","targetSize","transform","count","tBBox","click","p","raphaelCoords","qtiCoords","mapper","result","createTouchCircle","radius","tCircle","createText","top","left","content","style","title","disableEvents","fontSize","text","scaledFontSize","createShapeText","bbox","createBorderedImage","padding","halfPad","rx","ry","rw","rh","ix","iy","iw","ih","set","offsetx","offsety","animation","updateElementState","updateTitle","highlightError","evt","getPoint","position","pw","cw","ph","ch","clickPoint","offset","event","Handlebars","__","DOMPurify","hb","keyValueGlue","fragmentGlue","wrapper","value","fragment","fragments","startIndex","stopIndex","increment","var1","Helpers0","Template","buffer","escapeExpression","helpers","helper","stack1","_notificationLevels","Instruction","instructionTpl","message","timeout","start","stop","level","_this","$$1","_instructions","instructionManager","validateInstructions","instruction","appendInstruction","removeInstructions","empty","resetInstructions","minMaxChoiceInstructions","min","max","getResponse","onError","choiceCount","minInstructionSet","msg","appendNotification","notifTpl","$notif","_remove","setTimeout","removeNotifications","remove","informLoaded","attach","$head","stylesheet","$link","detach","itemStylesheetHandler","regexChar","regexWords","patternMaskHelper","parsePattern","createMaxWordPattern","createMaxCharPattern","base","withType","print","list","_formatters","boolean","integer","float","string","pair","directedPair","duration","file","uri","intOrIdentifier","identifier","PciPrettyPrint","printBase","printList","printRecord","pciPrettyPrint","_qtiModelPciResponseCardinalities","single","multiple","ordered","record","PciResponse","unserialize","responseDeclaration","baseType","cardinality","mappedCardinality","serialize","responseValues","prettyPrint","html","imgSrcPattern","PortableElement","fixMarkupMediaSources","adaptSize","itemSelector","sizeAdapter","$elements","document","resetSize","mimeTypes","delimetr","uploadMime","getMimeTypes","setExpectedTypes","classes","types","getExpectedTypes","equivalents","mimes","mimeData","Gap","template","GapImg","GapText","Hottext","InlineChoice","getData","SimpleAssociableChoice_AssociateInteraction","SimpleAssociableChoice_MatchInteraction","features","SimpleChoice_ChoiceInteraction","SimpleChoice_OrderInteraction","_requirejs","_defaultLoadingOptions","reload","loadModuleConfig","requireConfigAliases","reqConfigs","modules","baseUrl","manifest","pciConfig","require","paths","runtimeModules","resolve","reject","isPortableElementProvider","_loaded","__providers","_registry","version","registerProvider","resetProviders","loadProviders","loadPromise","Promise","providerLoadingStack","getAllVersions","all","getRuntime","portableElement","label","model","typeIdentifier","getCreator","xmlns","getLatestCreators","lastVersion","getBaseUrl","runtime","loadRuntimes","provider","loadStack","configLoadingStack","then","catch","loadCreators","requiredCreatorHooks","portableElementModel","creators","enable","disable","isEnabled","itemBody","atomicBlock","parents","contains","abstract","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","col","colgroup","div","dl","dt","dd","hr","math","li","ol","ul","param","table","xhtml","tbody","tfoot","thead","td","th","tr","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","pre","img","br","infoControl","textRun","feedbackInline","feedbackBlock","rubricBlock","blockInteraction","inlineInteraction","gap","hottext","printedVariable","prompt","templateElement","templateBlock","qti","templateInline","choiceInteraction","associateInteraction","orderInteraction","matchInteraction","hottextInteraction","gapMatchInteraction","mediaInteraction","sliderInteraction","uploadInteraction","drawingInteraction","graphicInteraction","hotspotInteraction","graphicAssociateInteraction","graphicOrderInteraction","graphicGapMatchInteraction","selectPointInteraction","textEntryInteraction","extendedTextInteraction","inlineChoiceInteraction","endAttemptInteraction","customInteraction","_container","cache","getAllowedContainersElements","jqSelector","getAllowedContainers","intersect","QtiElements","getAllowedContents","checked","recursive","isAllowedClass","getParentClasses","getChildClasses","cacheType","isBlock","isInline","isVisible","featuresService","getAvailableAuthoringElements","tagTitles","commonInteractions","inlineInteractions","graphicInteractions","authoringElements","description","icon","short","tags","group","availableElements","Object","getAuthoringData","pciModel","qtiElements","registry","providers","config","ciRegistry","icRegistry","name","handle","url","runtimeLocation","fullmatch","context","themes","assetManagerFactory","assetStrategies","module","portableAssetStrategy","itemThemes","moduleConfig","assetManager","locations","assessmentItem","_simpleFeedbackRule","_tooltip","outcomeDeclaration","responseProcessing","figure","figcaption","modalFeedback","gapText","inlineChoice","hotspotChoice","gapImg","associableHotspot","include","enableDragAndDrop","associate","gapMatch","graphicGapMatch","order","messages","Container","Figcaption","Figure","$figure","$img","Img","Include","hider","instructionMgr","pciResponse","interact","interactUtils","Template$1","setChoice","choiceSerial","choice","usage","$choice","$target","$resultArea","$pair","thisPairSerial","$otherRepeatedPair","children","not","each","_setChoice","choices","color","border","unsetChoice","$parent","$sibling","isNumberOfMaxAssociationsZero","$filledChoice","animate","getChoice","renderEmptyPairs","scrollObserverFactory","currentDraggable","beforeY","beforeX","afterY","afterX","$scrollContainer","$el","ovf","getScrollContainer","resetScrollObserver","_getRawResponse","_setInstructions","$activeDrop","relatedTarget","$choiceArea","$activeChoice","scrollObserver","$bin","choiceSelector","resultSelector","binSelector","_getChoice","_resetSelection","_unsetChoice","_isInsertionMode","_isModeEditing","_activateChoice","_handleChoiceActivate","_activateResult","filter","_handleResultActivate","targetSerial","isDragAndDropEnabled","dragOptions","dropOptions","scaleX","closest","inertia","autoScroll","container","restrict","restriction","endOnly","elementRect","draggable","onstart","scale","_iFrameDragFix","scaleY","onmove","onend","styleCursor","overlap","ondragenter","ondragleave","ondrop","resetResponse","_setPairs","addedPairs","$emptyPair","pairs","setResponse","destroy","setState","sort","aIndex","bIndex","appendTo","getState","AssociateInteraction","KEY_CODE_SPACE","KEY_CODE_ENTER","KEY_CODE_LEFT","KEY_CODE_UP","KEY_CODE_RIGHT","KEY_CODE_DOWN","_triggerInput","$input","$choiceBoxes","_pseudoLabel","$qtiChoice","keyCode","prev","focus","next","$choiceBox","eliminator","input","values","highlightInvalidInput","$li","$icon","clearTimeout","isEliminable","getCustomData","listStyleVisible","listStyles","horizontal","listStyle","eliminable","allowEliminationVisible","ChoiceInteraction","_setVal","val","change","EndAttemptInteraction","limiter","placeholderText","getItemLanguage","itemLang","itemLocale","toolbarType","ckOptions","resize_enabled","secure","forceCustomDomain","language","_styleUpdater","minStrings","expectedLength","patternMask","_getNumStrings","$element","num","_setPattern","placeholderType","hideXhtmlConstraints","editor","qtiItem","qtiItemStyle","$editorBody","themeLoaded","_getCKEditor","_setMultipleVal","setText","numericBase","expectedLines","isCke","enabled","patternRegEx","$textarea","$charsCounter","$wordsCounter","$maxLengthCounter","$maxWordsCounter","maxWords","maxLength","listenTextInput","ignoreKeyCodes","spaceKeyCodes","isComposing","hasCompositionJustEnded","acceptKeyCode","emptyOrSpace","hasSpace","getCharBefore","getCharAfter","noSpaceNode","cancelEvent","invalidToolip","patternHandler","newValue","keyLimitHandler","wordsCount","charsCount","sel","range","right","middle","textarea","nonKeyLimitHandler","elements","el","handleCompositionStart","handleCompositionEnd","handleBeforeInput","editable","previousSnapshot","getWordsCount","getCharsCount","updateCounter","_ckEditorData","patt","raw","tempNode","format","_destroyCkEditor","pattern","parseInt","countChars","countWords","countExpectedLength","countMaxLength","countMaxWords","constraintHints","strLimiter","ckEditor","tooltip","hideXhtmlRecommendations","ExtendedTextInteraction","clearText","inputLimiter","_choiceUsages","getGap","$flowContainer","gapSelector","filledGapSelector","_handleChoiceSelect","_handleFilledGapSelect","$dragged","_handleGapSelect","GapMatchInteraction","graphic","background","height","imgId","_paperUnSelect","_renderChoice","shape","maxAssociations","rElement","_shapesUnSelectable","assocs","_createPath","_isMatchable","_shapesSelectable","_getActiveElement","closerBg","toFront","closer","unclick","onRemove","vset","src","sx","sy","dest","dx","dy","srcBullet","destBullet","midPath","toBack","srcElement","destElement","showCloser","hideCloser","activeChoice","assocsElement","matchable","matching","matchMax","responses","map","res","el1","el2","toRemove","GraphicAssociateInteraction","activeDrop","isDirectedPairFlipped","gapFiller","$gapImages","bgImage","usages","_selectShape","$gapList","$active","$imageBox","boxOffset","currentCount","$clone","shapeOffset","activeOffset","display","shadow","gapFillerImage","handleShapeSelect","_renderGapList","_setInactiveGapState","_setActiveGapState","gapFillersSelector","toggleActiveGapState","resize","responseChoice","responseGap","GraphicGapMatchInteraction","$orderList","_renderOrderList","_unselectShape","$orderers","$orderer","_createTexts","_showText","siblings","first","number","unsetNumbers","_hideText","hide","texts","transf","show","index","sortBy","where","GraphicOrderInteraction","HotspotInteraction","pseudoLabel","$inupt","maxChoices","currentChoices","HottextInteraction","_emptyValue","_defaultOptions","allowEmpty","opts","required","choiceTooltip","getItemDir","itemDir","dirClass","minimumResultsForSearch","containerCssClass","dropdownCssClass","eq","select2","InlineChoiceInteraction","inWarning","_onCheckboxSelected","prop","_filterResponse","_inferValue","firstId","secondId","currentResponse","minAssociations","_maxMatchReached","association","overflow","matchMin","_countAssociations","rawResponse","_countChoices","_getChoiceDefinitionByIdentifier","_getRawChoices","rawChoices","superClosure","onMaxChoicesReached","report","onMatchMaxReached","originalBackgroundColor","originalColor","backgroundColor","responseCount","MatchInteraction","inferValue","firefox","webm","media","$item","maxPlays","canBePlayed","initMediaPlayer","mediaUrl","preview","canPause","canSeek","volume","autoStart","loop","renderTo","off","timesPlayed","playerState","restorePlayerState","muted","mediaplayer","defaults","reWebM","reFirefoxVersion","MediaInteraction","orientationSelectionEnabled","_freezeSize","$orderArea","instructionMax","initialOrder","$choices","_isDropzoneVisible","draggedMiddle","previousMiddle","insertPosition","$dropzoneElement","$prevResult","$nextResult","prevMiddle","nextMiddle","$iconAdd","$iconRemove","$iconBefore","$iconAfter","$dragContainer","orientation","_activeControls","_resetControls","_setSelection","_addChoiceToSelection","$results","_toggleResultSelection","_removeChoice","_moveResultBefore","$prev","_moveResultAfter","$next","_adjustDropzonePosition","hasBeenDroppedInResultArea","_insertDropzone","dropzoneIndex","selectors","OrderInteraction","register","notifyReady","notifyDone","onready","ondone","createPciInstance","qtiCustomInteractionContext","getPci","pci","pciTypeIdentifier","setPci","getRequiredModules","requireEntries","createInstance","properties","pciAssetManager","resolved","instanciator","commonPciRenderer","setPCIConstructor","getPCIConstructor","pciConstructor","contentLanguage","itemLanguage","userLanguage","readyPromise","pciReadyCallback","templateVariables","boundTo","status","instance","setReviewState","sharedContext","pciDoneCallback","pciConstructorDataKey","imsPciRenderer","_setPciModel","pciRenderer","_getPciRenderer","PortableCustomInteraction","Prompt","getRawResponse","addPoint","pointChange","create","enableSelection","isResponsive","forEach","SelectPointInteraction","_slideTo","direction","$sliderLabels","$sliderCurrentValue","class","$sliderValue","reverse","step","steps","reversedLabels","sliderSize","leftOffset","middleValue","after","sliderValue","sliderCurrentValue","startValue","isNaN","SliderInteraction","locale","hideTooltip","showTooltip","theme","maxChars","updateMaxCharsTooltip","updatePatternMaskTooltip","messageType","regex","responseValue","TextEntryInteraction","changeListener","callResetGui","_handleSelectedFiles","mimetype","uploadHelper","_initialInstructions","_readyInstructions","validateFileType","expectedTypes","filetype","getMessageWrongType","expectedTypeLabels","mime","messageWrongType","userSelectedType","filename","reader","base64Data","commaPosition","base64Raw","$previewArea","$largeDisplay","itemWidth","winWidth","fullHeight","imgNaturalWidth","isOversized","modalWidth","$originalImg","$modalBody","modal","accept","UploadInteraction","resetGui","Item","item","MathJax","$self","_setDomClass","$bodyDom","$wrapper","oldClass","newClass","dataName","_getEncodedDataString","_setBodyDomClass","matches","_prefix","setEncodedData","hasEncodedData","getEncodedData","removeEncodedData","setEncodedDataToDom","coreContainerHelper","modalFeedbackRenderer","$modal","$itemBody","requiredHeight","startClosed","minHeight","_Object","previewOptions","obj","proto","qtiInfoControlContext","_getPic","pic","$dom","picAssetManager","PortableInfoControl","PrintedVariable","convertChoices","outputType","findChoices","shuffleChoices","f","j","r","k","serialToIdentifier","interactionHelper","themeLoader","themesHelper","moduleLoader","_renderableClasses","_dependencies","_renderableSubclasses","simpleAssociableChoice","simpleChoice","_defaults","_isValidRenderer","classCorrect","subClass","valid","Renderer","_renderers","_locations","decorators","themeData","requiredClasses","deps","requiredSubClasses","addList","load","loaded","callback","absUrl","runtimeLocations","Renderer$1","build","NewRenderer","QtiRenderer","RubricBlock","rubric","Stylesheet","Table","Tooltip","renderedTooltip","placement","IdentifiedElement","getInteraction","QtiChoice","QtiHotspot","augment","targetClass","methods","_parent","setElements","returnValue","setElement","removeElement","getElements","getElement","elementsData","tpl","contentModel","flatten","concat","Mixin","Container$1","initContainer","getBody","Choice","ContainerChoice","getMediaType","QtiObject","initObject","getObject","QtiContainerChoice","QtiTextVariableChoice","Feedback","ModalFeedback","getNamespace","relatedItem","setNamespace","NamespacedElement","defaultNsName","defaultNsUri","nsUriFragment","imgElements","addChoice","getChoices","getChoiceByIdentifier","getResponseDeclaration","responseId","_type","choiceShuffle","interactionData","getNormalMaximum","Interaction","promptId","MATCH_CORRECT","responseIf","expression","expressions","responseRules","MAP_RESPONSE","MAP_RESPONSE_POINT","responseRulesHelper","_templateNames","NONE","isUsingTemplate","isValidTemplateName","getTemplateUriFromName","getTemplateNameFromUri","tplName","getTemplateNameFromResponseRules","outcomeRules","outcomeIdentifier","setDefaultValue","getDefaultValue","VariableDeclaration","gamp","responseHelper","OutcomeDeclaration","pairExists","maxScore","setNormalMaximum","scoreOutcome","normalMaximum","setMaxScore","customOutcomes","maxScoreOutcome","hasInvalidInteraction","acc","getMatchMaxOrderedChoices","valueOf","choiceInteractionBased","mapDefault","maxChoice","minChoice","scoreMaps","requiredChoiceCount","totalAnswerableResponse","sortedMapEntries","missingMapsCount","score","orderInteractionBased","associateInteractionBased","maxAssoc","minAssoc","requiredAssoc","usedChoices","choicesIdentifiers","allPossibleMapEntries","infiniteScoringPair","_usedChoices","choiceId","used","gapMatchInteractionBased","calculatePossiblePairs","matchSet1","matchSet2","skippableWrongResponse","usedGaps","group1","group2","gapId","reduce","selectPointInteractionBased","sliderInteractionBased","textEntryInteractionBased","isPossibleResponse","customInteractionBased","Array","BlockInteraction","ContainerInteraction","removeProp","propNames","getProperties","getMarkupNamespace","setMarkupNamespace","CustomElement","defaultMarkupNsName","defaultMarkupNsUri","libraries","entryPoint","onPciReady","triggerPciReady","fn","onPci","offPci","triggerPci","CustomInteraction","InlineInteraction","maxStringLoop","getGaps","QtiBlockInteraction","QtiObjectInteraction","backgroundImage","GraphicInteraction","addGapImg","removeGapImg","getGapImgs","getGapImg","gapImgs","possiblePairs","checkInfinitePair","SimpleAssociableChoice","matchSet","ObjectInteraction","getInteractions","interactions","addResponseDeclaration","addOutcomeDeclaration","outcome","getOutcomeDeclaration","getOutcomes","removeOutcome","addModalFeedback","feedback","getResponses","addNamespace","setNamespaces","getNamespaces","setSchemaLocations","getSchemaLocations","setApipAccessibility","getApipAccessibility","addStylesheet","removeStyleSheet","stylesheetExists","setResponseProcessing","rp","$children","prefixed","xmlNsHandler","stripNs","openRegEx","closeRegEx","restoreNs","xmlCopy","ignoreMarkup","xmlRe","tagRe","xmlMatch","imsXsd","html5Ns","prefixAtt","xml","tagMatch","qtiClasses","itemScoreHelper","loadPortableCustomElementProperties","loadPortableCustomElementData","Loader","setClassesLocation","getRequiredClasses","loadRequiredClasses","requiredClass","category","loadeded","getLoadedClasses","loadItemData","responseIdentifier","responseRuleItemIndex","responseRule","feedbackRules","feedbackOutcomeIdentifier","setOutcomeResponseRule","responseIdentifiers","some","loadAndBuildElement","loadElement","loadElements","elementData","allElements","buildResponse","buildSimpleFeedbackRule","feedbackRule","buildOutcome","buildResponseProcessing","customResponseProcessing","loadContainer","bodyObject","bodyData","eltData","buildElement","loadElementData","loadInteractionData","buildInteractionChoices","loadChoiceData","loadObjectData","loadMathData","loadTooltipData","loadPciData","loadPicData","hasContent","$math","mathText","mathStr","setAnnotation","getAnnotation","removeAnnotation","setMathML","nsName","mathML","getMathML","annotations","encoding","block","onReady","triggerReady","cb","feedbackThen","setCondition","v","_comparedValues","setFeedbackElse","_toString","condition","comparedOutcome","comparedValue","processingType","newBody","ContainerInline","getFeedbackRules","isCardinality","comparison","cardinalities","events","EventMgr","getRawValues","getFeedbackMessageSignature","toLowerCase","trim","extractDisplayInfo","$interactionContainer","messageGroupId","$displayContainer","interactionContainer","displayContainer","getInteractionsDisplayInfo","interactionsDisplayInfo","$itemContainer","interactionOrder","_interactionInfo","getFeedbacks","renderingQueue","feedbackIds","interactionInfo","_currentMessageGroupId","_$xml","_qtiClassNames","attrName","$elt","$annotation","$figcaption","$qtiElement","contentId","$content","contentHtml","_parsableElements","rubricblock","printedvariable","_qtiAttributesNames","powerform","mappingindicator","parser","parse","loader","$sampleXMLrootNode","$stimulus","mathNs","loadedClasses","simpleParser","picManager","getPic","getItem","getTypeIdentifier","getDom","tool","button","broken","dom","picManagerCollection","getList","force","manager","execute","executeAll","enablePic","disablePic","showPic","hidePic","enableAll","disableAll","showAll","hideAll","managerFactory","collectionFactory","picManager$1","userModules","dependency","add","ReviewRenderer","alias","defaultRenderer","providerName","getName","providerRegistry","qtiRenderer","reviewRenderer","author","candidate","proctor","scorer","testConstructor","tutor","rendererStrategies","QtiLoader","sideLoadingProviderFactory","modalFeedbackHelper","qtiItemRuntimeProvider","rendererOptions","done","themeName","errorMsg","renderingError","renderFeedbacks","_loader","itemRunner","qtiRuntimeProvider"],"sources":["/github/workspace/tao/views/build/config-wrap-start-default.js","../qtiCommonRenderer/helpers/ckConfigurator.js","../qtiItem/helper/util.js","../qtiItem/helper/rendererConfig.js","../qtiItem/core/Element.js","../qtiCommonRenderer/helpers/container.js","../qtiCommonRenderer/helpers/Graphic.js","../qtiCommonRenderer/helpers/instructions/Instruction.js","../qtiCommonRenderer/helpers/instructions/instructionManager.js","../qtiCommonRenderer/helpers/itemStylesheetHandler.js","../qtiCommonRenderer/helpers/patternMask.js","../qtiCommonRenderer/helpers/PciPrettyPrint.js","../qtiCommonRenderer/helpers/PciResponse.js","../qtiCommonRenderer/helpers/PortableElement.js","../qtiCommonRenderer/helpers/sizeAdapter.js","../qtiCommonRenderer/helpers/uploadMime.js","../qtiCommonRenderer/renderers/choices/Gap.js","../qtiCommonRenderer/renderers/choices/GapImg.js","../qtiCommonRenderer/renderers/choices/GapText.js","../qtiCommonRenderer/renderers/choices/Hottext.js","../qtiCommonRenderer/renderers/choices/InlineChoice.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction.js","../portableElementRegistry/factory/factory.js","../qtiCreator/helper/qtiElements.js","../portableElementRegistry/factory/ciRegistry.js","../portableElementRegistry/ciRegistry.js","../portableElementRegistry/factory/icRegistry.js","../portableElementRegistry/icRegistry.js","../portableElementRegistry/assetManager/portableAssetStrategy.js","../qtiCommonRenderer/renderers/config.js","../qtiCommonRenderer/renderers/Container.js","../qtiCommonRenderer/renderers/Figcaption.js","../qtiCommonRenderer/renderers/Figure.js","../qtiCommonRenderer/renderers/Img.js","../qtiCommonRenderer/renderers/Include.js","../qtiCommonRenderer/renderers/interactions/AssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/ChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/EndAttemptInteraction.js","../qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js","../qtiCommonRenderer/renderers/interactions/GapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction.js","../qtiCommonRenderer/renderers/interactions/HotspotInteraction.js","../qtiCommonRenderer/renderers/interactions/HottextInteraction.js","../qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/MatchInteraction.js","../qtiCommonRenderer/renderers/interactions/MediaInteraction.js","../qtiCommonRenderer/renderers/interactions/OrderInteraction.js","../../qtiCustomInteractionContext.js","../qtiCommonRenderer/renderers/interactions/pci/instanciator.js","../qtiCommonRenderer/renderers/interactions/pci/common.js","../qtiCommonRenderer/renderers/interactions/pci/ims.js","../qtiCommonRenderer/renderers/interactions/PortableCustomInteraction.js","../qtiCommonRenderer/renderers/interactions/Prompt.js","../qtiCommonRenderer/renderers/interactions/SelectPointInteraction.js","../qtiCommonRenderer/renderers/interactions/SliderInteraction.js","../qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js","../qtiCommonRenderer/renderers/interactions/UploadInteraction.js","../qtiCommonRenderer/renderers/Item.js","../qtiCommonRenderer/renderers/Math.js","../qtiItem/helper/container.js","../qtiCommonRenderer/renderers/ModalFeedback.js","../qtiCommonRenderer/renderers/Object.js","../../qtiInfoControlContext.js","../qtiCommonRenderer/renderers/PortableInfoControl.js","../qtiCommonRenderer/renderers/PrintedVariable.js","../qtiItem/helper/interactionHelper.js","../qtiRunner/core/Renderer.js","../qtiCommonRenderer/renderers/Renderer.js","../qtiCommonRenderer/renderers/rendererProvider.js","../qtiCommonRenderer/renderers/RubricBlock.js","../qtiCommonRenderer/renderers/Stylesheet.js","../qtiCommonRenderer/renderers/Table.js","../qtiCommonRenderer/renderers/Tooltip.js","../qtiItem/core/IdentifiedElement.js","../qtiItem/core/choices/Choice.js","../qtiItem/core/choices/Hotspot.js","../qtiItem/core/choices/AssociableHotspot.js","../qtiItem/mixin/Mixin.js","../qtiItem/core/Container.js","../qtiItem/mixin/Container.js","../qtiItem/core/choices/ContainerChoice.js","../qtiItem/core/choices/Gap.js","../qtiItem/core/Object.js","../qtiItem/core/choices/GapImg.js","../qtiItem/core/choices/GapText.js","../qtiItem/core/choices/HotspotChoice.js","../qtiItem/mixin/ContainerInline.js","../qtiItem/core/choices/Hottext.js","../qtiItem/core/choices/TextVariableChoice.js","../qtiItem/core/choices/InlineChoice.js","../qtiItem/core/choices/SimpleAssociableChoice.js","../qtiItem/core/choices/SimpleChoice.js","../qtiItem/core/choices/TextEntry.js","../qtiItem/core/feedbacks/Feedback.js","../qtiItem/core/feedbacks/FeedbackBlock.js","../qtiItem/core/feedbacks/FeedbackInline.js","../qtiItem/core/feedbacks/ModalFeedback.js","../qtiItem/mixin/ContainerFigcaption.js","../qtiItem/mixin/NamespacedElement.js","../qtiItem/core/Figcaption.js","../qtiItem/mixin/ContainerFigure.js","../qtiItem/core/Figure.js","../qtiItem/core/Img.js","../qtiItem/core/Include.js","../qtiItem/core/interactions/Interaction.js","../qtiItem/core/interactions/Prompt.js","../qtiItem/core/interactions/BlockInteraction.js","../qtiItem/helper/responseRules.js","../qtiItem/helper/response.js","../qtiItem/core/variables/VariableDeclaration.js","../qtiItem/core/variables/OutcomeDeclaration.js","../qtiItem/helper/maxScore.js","../qtiItem/core/interactions/AssociateInteraction.js","../qtiItem/core/interactions/ChoiceInteraction.js","../qtiItem/core/interactions/ContainerInteraction.js","../qtiItem/mixin/CustomElement.js","../qtiItem/core/interactions/CustomInteraction.js","../qtiItem/core/interactions/InlineInteraction.js","../qtiItem/core/interactions/EndAttemptInteraction.js","../qtiItem/core/interactions/ExtendedTextInteraction.js","../qtiItem/core/interactions/GapMatchInteraction.js","../qtiItem/core/interactions/ObjectInteraction.js","../qtiItem/core/interactions/GraphicInteraction.js","../qtiItem/core/interactions/GraphicAssociateInteraction.js","../qtiItem/core/interactions/GraphicGapMatchInteraction.js","../qtiItem/core/interactions/GraphicOrderInteraction.js","../qtiItem/core/interactions/HotspotInteraction.js","../qtiItem/core/interactions/HottextInteraction.js","../qtiItem/core/interactions/InlineChoiceInteraction.js","../qtiItem/core/interactions/MatchInteraction.js","../qtiItem/core/interactions/MediaInteraction.js","../qtiItem/core/interactions/OrderInteraction.js","../qtiItem/core/interactions/SelectPointInteraction.js","../qtiItem/core/interactions/SliderInteraction.js","../qtiItem/core/interactions/TextEntryInteraction.js","../qtiItem/core/interactions/UploadInteraction.js","../qtiItem/mixin/ContainerItemBody.js","../qtiItem/core/Item.js","../qtiItem/core/qtiClasses.js","../qtiItem/helper/xmlNsHandler.js","../qtiItem/helper/itemScore.js","../qtiItem/core/Loader.js","../qtiItem/core/Math.js","../qtiItem/core/PortableInfoControl.js","../qtiItem/core/PrintedVariable.js","../qtiItem/core/response/SimpleFeedbackRule.js","../qtiItem/core/ResponseProcessing.js","../qtiItem/core/RubricBlock.js","../qtiItem/core/Stylesheet.js","../qtiItem/mixin/ContainerTable.js","../qtiItem/core/Table.js","../qtiItem/core/Tooltip.js","../qtiItem/core/variables/ResponseDeclaration.js","../qtiItem/helper/EventMgr.js","../qtiItem/helper/pci.js","../qtiItem/helper/modalFeedback.js","../qtiItem/helper/Parser.js","../qtiItem/helper/simpleParser.js","../qtiItem/helper/xincludeLoader.js","../runner/provider/manager/picManager.js","../runner/provider/manager/userModules.js","../portableElementRegistry/provider/sideLoadingProviderFactory.js","../reviewRenderer/renderers/config.js","../reviewRenderer/renderers/Renderer.js","../reviewRenderer/renderers/rendererProvider.js","../runner/rendererStrategies.js","../runner/provider/qti.js","../runner/qtiItemRunner.js","module-create.js","/github/workspace/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","define('taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator'], function (ckConfigurator$1) { 'use strict';\n\n    ckConfigurator$1 = ckConfigurator$1 && Object.prototype.hasOwnProperty.call(ckConfigurator$1, 'default') ? ckConfigurator$1['default'] : ckConfigurator$1;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    /**\r\n     * Generate a configuration object for CKEDITOR\r\n     *\r\n     * @param editor instance of ckeditor\r\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\r\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\r\n     *        Note that it's here you need to add parameters for the resource manager.\r\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\r\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\r\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\r\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\r\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\r\n     * @param {Boolean} [options.underline] - enables the underline plugin\r\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\r\n     *\r\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\r\n     */\r\n    var getConfig = function(editor, toolbarType, options) {\r\n        options = options || {};\r\n\r\n        options.underline = true;\r\n\r\n        return ckConfigurator$1.getConfig(editor, toolbarType, options);\r\n    };\r\n\r\n    var ckConfigurator = {\r\n        getConfig: getConfig\r\n    };\n\n    return ckConfigurator;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/util',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    var util = {\r\n        buildSerial: function buildSerial(prefix) {\r\n            var id = prefix || '';\r\n            var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n            for (var i = 0; i < 22; i++) {\r\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n            }\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Generates an id for a Qti element (the generation is different from identifier)\r\n         * @param {Object} item - the element related item\r\n         * @param {String} prefix - identifier prefix\r\n         * @returns {String} the identifier\r\n         * @throws {TypeError} if there is no item\r\n         */\r\n        buildId: function buildId(item, prefix) {\r\n            var id;\r\n            var usedIds;\r\n            var i = 1;\r\n            var suffix = '';\r\n            var exists = false;\r\n\r\n            if (!item) {\r\n                throw new TypeError('A item is required to generate a unique identifier');\r\n            }\r\n\r\n            usedIds = item.getUsedIds();\r\n\r\n            do {\r\n                exists = false;\r\n                id = prefix + suffix;\r\n                if (_.contains(usedIds, id)) {\r\n                    exists = true;\r\n                    suffix = '_' + i;\r\n                    i++;\r\n                }\r\n            } while (exists);\r\n\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Generates an identifier for a Qti element\r\n         * @param {Object} item - the element related item\r\n         * @param {String} prefix - identifier prefix\r\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\r\n         * @returns {String} the identifier\r\n         * @throws {TypeError} if there is no item\r\n         */\r\n        buildIdentifier: function buildIdentifier(item, prefix, useSuffix) {\r\n            var id;\r\n            var usedIds;\r\n            var suffix = '';\r\n            var i = 1;\r\n            var exists = false;\r\n\r\n            if (!item) {\r\n                throw new TypeError('A item is required to generate a unique identifier');\r\n            }\r\n\r\n            if (!prefix) {\r\n                throw new TypeError('Prefix is required to build an identifier');\r\n            }\r\n\r\n            usedIds = item.getUsedIdentifiers();\r\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\r\n\r\n            if (prefix) {\r\n                prefix = prefix\r\n                    .replace(/_[0-9]+$/gi, '_') //detect incremental id of type choice_12, response_3, etc.\r\n                    .replace(/[^a-zA-Z0-9_]/gi, '_')\r\n                    .replace(/(_)+/gi, '_');\r\n                if (useSuffix) {\r\n                    suffix = '_' + i;\r\n                }\r\n            }\r\n\r\n            do {\r\n                exists = false;\r\n                id = prefix + suffix;\r\n                if (usedIds[id]) {\r\n                    exists = true;\r\n                    suffix = '_' + i;\r\n                    i++;\r\n                }\r\n            } while (exists);\r\n\r\n            return id;\r\n        },\r\n\r\n        findInCollection: function findInCollection(element, collectionNames, searchedSerial) {\r\n            var found = null;\r\n\r\n            if (_.isString(collectionNames)) {\r\n                collectionNames = [collectionNames];\r\n            }\r\n\r\n            if (_.isArray(collectionNames)) {\r\n                _.each(collectionNames, function(collectionName) {\r\n                    //get collection to search in (resolving case like interaction.choices.0\r\n                    var collection = element;\r\n                    _.each(collectionName.split('.'), function(nameToken) {\r\n                        collection = collection[nameToken];\r\n                    });\r\n                    var elt = collection[searchedSerial];\r\n\r\n                    if (elt) {\r\n                        found = { parent: element, element: elt };\r\n                        return false; //break the each loop\r\n                    }\r\n\r\n                    //search inside each elements:\r\n                    _.each(collection, function(elt) {\r\n                        if (_.isFunction(elt.find)) {\r\n                            found = elt.find(searchedSerial);\r\n                            if (found) {\r\n                                return false; //break the each loop\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (found) {\r\n                        return false; //break the each loop\r\n                    }\r\n                });\r\n            } else {\r\n                throw new Error('invalid argument : collectionNames must be an array or a string');\r\n            }\r\n\r\n            return found;\r\n        },\r\n        addMarkupNamespace: function addMarkupNamespace(markup, ns) {\r\n            if (ns) {\r\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4) {\r\n                    if ($2.indexOf(':') > 0) {\r\n                        return $0;\r\n                    }\r\n                    $1 = $1 || '';\r\n                    $3 = $3 || '';\r\n                    return '<' + $1 + ns + ':' + $2 + $3 + $4 + '>';\r\n                });\r\n                return markup;\r\n            }\r\n            return markup;\r\n        },\r\n        removeMarkupNamespaces: function removeMarkupNamespace(markup) {\r\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\r\n        },\r\n        getMarkupUsedNamespaces: function getMarkupUsedNamespaces(markup) {\r\n            var namespaces = [];\r\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node) {\r\n                namespaces.push(ns);\r\n                return '<' + slash + node + '>';\r\n            });\r\n            return _.uniq(namespaces);\r\n        }\r\n    };\n\n    return util;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    var rendererConfigHelper = {};\r\n\r\n    rendererConfigHelper.getOptionsFromArguments = function(args) {\r\n        var options = {\r\n            data: {},\r\n            placeholder: null,\r\n            subclass: '',\r\n            renderer: null\r\n        };\r\n\r\n        _.each(args, function(arg) {\r\n            if (arg) {\r\n                if (arg.isRenderer) {\r\n                    options.renderer = arg;\r\n                } else if (arg instanceof $ && arg.length) {\r\n                    options.placeholder = arg;\r\n                } else if (_.isString(arg)) {\r\n                    options.subclass = arg;\r\n                } else if (_.isPlainObject(arg)) {\r\n                    options.data = arg;\r\n                } else {\r\n                    console.log('invalid arg', arg, args);\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    };\n\n    return rendererConfigHelper;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'lodash', 'class', 'core/logger', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, _class, loggerFactory, util, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    var _instances = {};\r\n\r\n    /**\r\n     * Create a logger\r\n     */\r\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\r\n\r\n    var Element = Class.extend({\r\n        qtiClass: '',\r\n        serial: '',\r\n        rootElement: null,\r\n        init: function(serial, attributes) {\r\n            //init own attributes\r\n            this.attributes = {};\r\n\r\n            //system properties, for item creator internal use only\r\n            this.metaData = {};\r\n\r\n            //init call in the format init(attributes)\r\n            if (typeof serial === 'object') {\r\n                attributes = serial;\r\n                serial = '';\r\n            }\r\n\r\n            if (!serial) {\r\n                serial = util.buildSerial(this.qtiClass + '_');\r\n            }\r\n\r\n            if (serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))) {\r\n                throw 'invalid QTI serial : (' + typeof serial + ') ' + serial;\r\n            }\r\n\r\n            if (!_instances[serial]) {\r\n                _instances[serial] = this;\r\n                this.serial = serial;\r\n                this.setAttributes(attributes || {});\r\n            } else {\r\n                throw 'a QTI Element with the same serial already exists ' + serial;\r\n            }\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                this.initContainer(arguments[2] || '');\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                this.initObject();\r\n            }\r\n        },\r\n        is: function(qtiClass) {\r\n            return qtiClass === this.qtiClass;\r\n        },\r\n        placeholder: function() {\r\n            return '{{' + this.serial + '}}';\r\n        },\r\n        getSerial: function() {\r\n            return this.serial;\r\n        },\r\n        getUsedIdentifiers: function() {\r\n            var usedIds = {};\r\n            var elts = this.getComposingElements();\r\n            for (var i in elts) {\r\n                var elt = elts[i];\r\n                var id = elt.attr('identifier');\r\n                if (id) {\r\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\r\n                    usedIds[id] = elt;\r\n                }\r\n            }\r\n            return usedIds;\r\n        },\r\n\r\n        /**\r\n         * Get the ids in use. (id is different from identifier)\r\n         * @returns {Array} of the ids in use\r\n         */\r\n        getUsedIds: function getUsedIds() {\r\n            var usedIds = [];\r\n            _.forEach(this.getComposingElements(), function(elt) {\r\n                var id = elt.attr('id');\r\n                if (id && !_.contains(usedIds, id)) {\r\n                    usedIds.push(id);\r\n                }\r\n            });\r\n            return usedIds;\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name) {\r\n                if (value !== undefined) {\r\n                    this.attributes[name] = value;\r\n                } else {\r\n                    if (typeof name === 'object') {\r\n                        for (var prop in name) {\r\n                            this.attr(prop, name[prop]);\r\n                        }\r\n                    } else if (typeof name === 'string') {\r\n                        if (this.attributes[name] === undefined) {\r\n                            return undefined;\r\n                        } else {\r\n                            return this.attributes[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        data: function(name, value) {\r\n            if (name) {\r\n                if (value !== undefined) {\r\n                    this.metaData[name] = value;\r\n                    $(document).trigger('metaChange.qti-widget', { element: this, key: name, value: value });\r\n                } else {\r\n                    if (typeof name === 'object') {\r\n                        for (var prop in name) {\r\n                            this.data(prop, name[prop]);\r\n                        }\r\n                    } else if (typeof name === 'string') {\r\n                        if (this.metaData[name] === undefined) {\r\n                            return undefined;\r\n                        } else {\r\n                            return this.metaData[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        removeData: function(name) {\r\n            delete this.metaData[name];\r\n            return this;\r\n        },\r\n        removeAttr: function(name) {\r\n            return this.removeAttributes(name);\r\n        },\r\n        setAttributes: function(attributes) {\r\n            if (!_.isPlainObject(attributes)) {\r\n                logger.warn('attributes should be a plain object');\r\n            }\r\n            this.attributes = attributes;\r\n            return this;\r\n        },\r\n        getAttributes: function() {\r\n            return _.clone(this.attributes);\r\n        },\r\n        removeAttributes: function(attrNames) {\r\n            if (typeof attrNames === 'string') {\r\n                attrNames = [attrNames];\r\n            }\r\n            for (var i in attrNames) {\r\n                delete this.attributes[attrNames[i]];\r\n            }\r\n            return this;\r\n        },\r\n        getComposingElements: function() {\r\n            var elts = {};\r\n            function append(element) {\r\n                elts[element.getSerial()] = element; //pass individual object by ref, instead of the whole list(object)\r\n                elts = _.extend(elts, element.getComposingElements());\r\n            }\r\n            if (typeof this.initContainer === 'function') {\r\n                append(this.getBody());\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                append(this.getObject());\r\n            }\r\n            _.each(this.metaData, function(v) {\r\n                if (Element.isA(v, '_container')) {\r\n                    append(v);\r\n                } else if (_.isArray(v)) {\r\n                    _.each(v, function(v) {\r\n                        if (Element.isA(v, '_container')) {\r\n                            append(v);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return elts;\r\n        },\r\n        getUsedClasses: function() {\r\n            var ret = [this.qtiClass],\r\n                composingElts = this.getComposingElements();\r\n\r\n            _.each(composingElts, function(elt) {\r\n                ret.push(elt.qtiClass);\r\n            });\r\n\r\n            return _.uniq(ret);\r\n        },\r\n        find: function(serial) {\r\n            var found = null;\r\n            var object, body;\r\n\r\n            if (typeof this.initObject === 'function') {\r\n                object = this.getObject();\r\n                if (object.serial === serial) {\r\n                    found = { parent: this, element: object, location: 'object' };\r\n                }\r\n            }\r\n\r\n            if (!found && typeof this.initContainer === 'function') {\r\n                body = this.getBody();\r\n                if (body.serial === serial) {\r\n                    found = { parent: this, element: body, location: 'body' };\r\n                } else {\r\n                    found = this.getBody().find(serial, this);\r\n                }\r\n            }\r\n\r\n            return found;\r\n        },\r\n        parent: function() {\r\n            var item = this.getRootElement();\r\n            if (item) {\r\n                var found = item.find(this.getSerial());\r\n                if (found) {\r\n                    return found.parent;\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        /**\r\n         * @deprecated - use setRootElement() instead\r\n         */\r\n        setRelatedItem: function(item) {\r\n            logger.warn('Deprecated use of setRelatedItem()');\r\n            this.setRootElement(item);\r\n        },\r\n        setRootElement: function(item) {\r\n            var composingElts, i;\r\n\r\n            if (Element.isA(item, 'assessmentItem')) {\r\n                this.rootElement = item;\r\n                composingElts = this.getComposingElements();\r\n                for (i in composingElts) {\r\n                    composingElts[i].setRootElement(item);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * @deprecated - use getRootElement() instead\r\n         */\r\n        getRelatedItem: function() {\r\n            logger.warn('Deprecated use of getRelatedItem()');\r\n            return this.getRootElement();\r\n        },\r\n        getRootElement: function() {\r\n            var ret = null;\r\n            if (Element.isA(this.rootElement, 'assessmentItem')) {\r\n                ret = this.rootElement;\r\n            }\r\n            return ret;\r\n        },\r\n        setRenderer: function(renderer) {\r\n            if (renderer && renderer.isRenderer) {\r\n                this.renderer = renderer;\r\n                var elts = this.getComposingElements();\r\n                for (var serial in elts) {\r\n                    elts[serial].setRenderer(renderer);\r\n                }\r\n            } else {\r\n                throw 'invalid qti rendering engine';\r\n            }\r\n        },\r\n        getRenderer: function() {\r\n            return this.renderer;\r\n        },\r\n        /**\r\n         * Render the element. Arguments are all optional and can be given in any order.\r\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\r\n         * @param {Renderer} renderer - specify which renderer to use\r\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\r\n         * @param {Object} data - template data for the rendering\r\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\r\n         * @returns {String} - the rendered element as an HTML string\r\n         */\r\n        render: function render() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments);\r\n            var _renderer = args.renderer || this.getRenderer();\r\n            var rendering;\r\n\r\n            var tplData = {},\r\n                defaultData = {\r\n                    tag: this.qtiClass,\r\n                    serial: this.serial,\r\n                    attributes: this.getAttributes()\r\n                };\r\n\r\n            if (!_renderer) {\r\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\r\n            }\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                //allow body to have a different renderer if it has its own renderer set\r\n                defaultData.body = this.getBody().render(args.renderer);\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                defaultData.object = {\r\n                    attributes: this.object.getAttributes()\r\n                };\r\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\r\n            }\r\n\r\n            tplData = _.merge(defaultData, args.data || {});\r\n            tplData = _renderer.getData(this, tplData, args.subclass);\r\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\r\n            if (args.placeholder) {\r\n                args.placeholder.replaceWith(rendering);\r\n            }\r\n\r\n            return rendering;\r\n        },\r\n        postRender: function(data, altClassName, renderer) {\r\n            var postRenderers = [];\r\n            var _renderer = renderer || this.getRenderer();\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                //allow body to have a different renderer if it has its own renderer set\r\n                postRenderers = this.getBody().postRender(data, '', renderer);\r\n            }\r\n\r\n            if (_renderer) {\r\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\r\n            } else {\r\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\r\n            }\r\n\r\n            return _.compact(postRenderers);\r\n        },\r\n        getContainer: function($scope, subclass) {\r\n            var renderer = this.getRenderer();\r\n            if (renderer) {\r\n                return renderer.getContainer(this, $scope, subclass);\r\n            } else {\r\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\r\n            }\r\n        },\r\n        toArray: function() {\r\n            var arr = {\r\n                serial: this.serial,\r\n                type: this.qtiClass,\r\n                attributes: this.getAttributes()\r\n            };\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                arr.body = this.getBody().toArray();\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                arr.object = this.object.toArray();\r\n            }\r\n\r\n            return arr;\r\n        },\r\n        isEmpty: function() {\r\n            //tells whether the element should be considered empty or not, from the rendering point of view\r\n            return false;\r\n        },\r\n        addClass: function(className) {\r\n            var clazz = this.attr('class') || '';\r\n            if (!_containClass(clazz, className)) {\r\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\r\n            }\r\n        },\r\n        hasClass: function(className) {\r\n            return _containClass(this.attr('class'), className);\r\n        },\r\n        removeClass: function(className) {\r\n            var clazz = this.attr('class') || '';\r\n            if (clazz) {\r\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\r\n                clazz = clazz.replace(regex, ' ').trim();\r\n\r\n                if (clazz) {\r\n                    this.attr('class', clazz);\r\n                } else {\r\n                    this.removeAttr('class');\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Add or remove class. Setting the optional state will force addition/removal.\r\n         * State is here to keep the jQuery syntax\r\n         *\r\n         * @param {String} className\r\n         * @param {Boolean} [state]\r\n         */\r\n        toggleClass: function(className, state) {\r\n            if (typeof state === 'boolean') {\r\n                return state ? this.addClass(className) : this.removeClass(className);\r\n            }\r\n\r\n            if (this.hasClass(className)) {\r\n                return this.removeClass(className);\r\n            }\r\n            return this.addClass(className);\r\n        },\r\n        isset: function() {\r\n            return Element.issetElement(this.serial);\r\n        },\r\n        unset: function() {\r\n            return Element.unsetElement(this.serial);\r\n        }\r\n    });\r\n\r\n    var _containClass = function(allClassStr, className) {\r\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\r\n        return allClassStr && regex.test(allClassStr);\r\n    };\r\n\r\n    //helpers\r\n    Element.isA = function(qtiElement, qtiClass) {\r\n        return qtiElement instanceof Element && qtiElement.is(qtiClass);\r\n    };\r\n\r\n    Element.getElementBySerial = function(serial) {\r\n        return _instances[serial];\r\n    };\r\n\r\n    Element.issetElement = function(serial) {\r\n        return !!_instances[serial];\r\n    };\r\n\r\n    /**\r\n     * Unset a registered element from it's serial\r\n     * @param {String} serial - the element serial\r\n     * @returns {Boolean} true if unset\r\n     */\r\n    Element.unsetElement = function(serial) {\r\n        var element = Element.getElementBySerial(serial);\r\n\r\n        if (element) {\r\n            var composingElements = element.getComposingElements();\r\n            _.each(composingElements, function(elt) {\r\n                delete _instances[elt.serial];\r\n            });\r\n            delete _instances[element.serial];\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    };\n\n    return Element;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/container',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element'], function (_, $, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    //containers are cached, so do not forget to remove them.\r\n    let _containers = {};\r\n    let _$containerContext = $();\r\n\r\n    /**\r\n     * Build the selector for your element (from the element serial)\r\n     * @private\r\n     * @param {QtiElement} element\r\n     * @returns {String} the selector\r\n     */\r\n    const _getSelector = function(element) {\r\n        const serial = element.getSerial();\r\n        let selector = `[data-serial=${  serial  }]`;\r\n\r\n        if (Element.isA(element, 'choice')) {\r\n            selector = `.qti-choice${  selector}`;\r\n        } else if (Element.isA(element, 'interaction')) {\r\n            selector = `.qti-interaction${  selector}`;\r\n        }\r\n\r\n        return selector;\r\n    };\r\n\r\n    /**\r\n     * Helps you to retrieve the DOM element (as a jquery element)\r\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/containerHelper\r\n     */\r\n    const containerHelper = {\r\n        /**\r\n         * Set a global scope to look for element container\r\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\r\n         */\r\n        setContext($scope) {\r\n            _$containerContext = $scope;\r\n        },\r\n\r\n        /**\r\n         * Returns current scope\r\n         * @returns {jQueryElement}\r\n         */\r\n        getContext() {\r\n            return  _$containerContext;\r\n        },\r\n\r\n        /**\r\n         * Get the container of the given element\r\n         * @param {QtiElement} element - the QTI Element to find the container for\r\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\r\n         * @returns {jQueryElement} the container\r\n         */\r\n        get(element, $scope) {\r\n            const serial = element.getSerial();\r\n\r\n            if ($scope instanceof $ && $scope.length) {\r\n                //find in the given context\r\n                return $scope.find(_getSelector(element));\r\n            } else if (_$containerContext instanceof $ && _$containerContext.length) {\r\n                //find in the globally set context\r\n                return _$containerContext.find(_getSelector(element));\r\n            } else if (!_containers[serial] || !_containers[serial].length) {\r\n                //find in the global context\r\n                _containers[serial] = $(_getSelector(element));\r\n            }\r\n\r\n            return _containers[serial];\r\n        },\r\n\r\n        /**\r\n         * getContainer use a cache to store elements. This methods helps you to purge it.\r\n         * @param {Element} element - find the container of this element\r\n         */\r\n        reset(element) {\r\n            if (element instanceof Element && _containers[element.getSerial()]) {\r\n                _containers = _.omit(_containers, element.getSerial());\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear the containers cache\r\n         */\r\n        clear() {\r\n            _containers = {};\r\n            _$containerContext = $();\r\n        },\r\n\r\n        /**\r\n         * Trigger an event on the element's container\r\n         * @param {String} eventType - the name of the event\r\n         * @param {QtiElement} element - find the container of this element\r\n         * @param {Array} [data] - data to give to the event\r\n         */\r\n        trigger(eventType, element, data) {\r\n            if (eventType) {\r\n                if (data && !_.isArray(data)) {\r\n                    data = [data];\r\n                }\r\n                this.get(element).trigger(eventType, data);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Alias to trigger a responseChange Event from an interaction\r\n         * @param {QtiElement} interaction - the interaction that had a response changed\r\n         * @param {Object} [extraData] - additionnal data to give to the event\r\n         */\r\n        triggerResponseChangeEvent(interaction, extraData) {\r\n            this.trigger('responseChange', interaction, [\r\n                {\r\n                    interaction: interaction,\r\n                    response: interaction.getResponse()\r\n                },\r\n                extraData\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Make all links to opens in another tab/window\r\n         * @param {jQueryElement} $container\r\n         */\r\n        targetBlank($container) {\r\n            $container.on('click', 'a', function(e) {\r\n                e.preventDefault();\r\n                const href = $(this).attr('href');\r\n                if (href && href.match(/^http/i)) {\r\n                    window.open(href, '_blank');\r\n                }\r\n            });\r\n        }\r\n    };\n\n    return containerHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/Graphic',['jquery', 'lodash', 'raphael', 'scale.raphael'], function ($, _, raphael, scaleRaphael) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    raphael = raphael && Object.prototype.hasOwnProperty.call(raphael, 'default') ? raphael['default'] : raphael;\n    scaleRaphael = scaleRaphael && Object.prototype.hasOwnProperty.call(scaleRaphael, 'default') ? scaleRaphael['default'] : scaleRaphael;\n\n    var basic = {\n    \tstroke: \"#8D949E\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-dasharray\": \"\",\n    \t\"stroke-linejoin\": \"round\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5,\n    \tcursor: \"pointer\"\n    };\n    var hover = {\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.3\n    };\n    var selectable = {\n    \t\"stroke-dasharray\": \"-\",\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5\n    };\n    var active = {\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.5\n    };\n    var error = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \t\"fill-opacity\": 0.5,\n    \tfill: \"#661728\"\n    };\n    var success = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 0.5\n    };\n    var layer = {\n    \tfill: \"#ffffff\",\n    \topacity: 0,\n    \tcursor: \"pointer\"\n    };\n    var creator = {\n    \t\"fill-opacity\": 0.5,\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \tcursor: \"pointer\"\n    };\n    var target = {\n    \tpath: \"m 18,8.4143672 -1.882582,0 C 15.801891,4.9747852 13.071059,2.2344961 9.63508,1.9026738 L 9.63508,0 8.2305176,0 l 0,1.9026387 C 4.7947148,2.2343027 2.0637246,4.9746621 1.7481973,8.4143672 l -1.7481973,0 0,1.4045625 1.754877,0 c 0.3460429,3.4066753 3.0632871,6.1119843 6.4756406,6.4413813 l 0,1.739689 1.4045624,0 0,-1.739725 c 3.412547,-0.329537 6.129633,-3.034793 6.475641,-6.4413453 l 1.889279,0 z m -8.36492,6.5188648 0,-4.064673 -1.4045624,0 0,4.063882 C 5.5511016,14.612555 3.4232695,12.494619 3.0864551,9.8189297 l 4.0449512,0 0,-1.4045625 -4.0546368,0 C 3.3788672,5.6984941 5.5228887,3.5393379 8.2305176,3.2161113 l 0,3.9153125 1.4045624,0 0,-3.9160859 c 2.711162,0.3203965 4.858576,2.4808887 5.160955,5.1990293 l -3.927441,0 0,1.4045625 3.917773,0 C 14.449289,12.496957 12.318363,14.616158 9.63508,14.933232 z\",\n    \tfill: \"#0E914B\",\n    \twidth: 1,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var assoc = {\n    \t\"stroke-width\": 2,\n    \t\"stroke-linecap\": \"round\",\n    \tcursor: \"pointer\"\n    };\n    var close = {\n    \tpath: \"m 8.9997236,18.000001 c -4.9703918,0 -8.99972284217367,-4.02901 -8.99972284217367,-9 C 7.5782633e-7,4.029011 4.0293108,9.8531742e-7 8.9997236,9.8531742e-7 13.970691,9.8531742e-7 18.000001,4.029011 18.000001,9.000001 c 0,4.97099 -4.02931,9 -9.0002774,9 z m 0.0045,-16.37151 c -4.06191,0 -7.35492,3.29635 -7.35492,7.36251 0,4.06562 3.292989,7.36255 7.35492,7.36255 4.0630384,0 7.3554334,-3.29693 7.3554334,-7.36255 0,-4.06614 -3.292969,-7.36251 -7.3554334,-7.36251 v 0 z m 3.1314894,9.31167 -1.953823,-1.94014 1.953843,-1.94018 c 0.08964,-0.089 0.134622,-0.19099 0.135073,-0.30584 4.31e-4,-0.11488 -0.04383,-0.21712 -0.132838,-0.30681 l -0.54267,-0.54685 c -0.08898,-0.0897 -0.190903,-0.13473 -0.305719,-0.13514 -0.114837,-4.4e-4 -0.217064,0.0439 -0.306703,0.1329 l -1.9623724,1.94865 -1.962395,-1.94865 c -0.08964,-0.089 -0.191845,-0.13336 -0.306702,-0.1329 -0.114837,4.3e-4 -0.216736,0.0455 -0.305719,0.13514 l -0.54265,0.54685 c -0.08902,0.0897 -0.133269,0.19193 -0.132838,0.30681 4.3e-4,0.11485 0.04543,0.21681 0.135073,0.30584 l 1.953823,1.94018 -1.953782,1.94014 c -0.0896,0.089 -0.134684,0.19094 -0.135114,0.3058 -4.31e-4,0.11486 0.04386,0.21716 0.132838,0.30681 l 0.542671,0.54687 c 0.08896,0.0897 0.190923,0.13467 0.305718,0.13516 0.114857,3.9e-4 0.217105,-0.0439 0.306724,-0.13288 l 1.962332,-1.94863 1.9623324,1.94863 c 0.08962,0.089 0.191886,0.13323 0.306744,0.13288 0.114836,-4.5e-4 0.216736,-0.0455 0.305698,-0.13516 l 0.542691,-0.54687 c 0.089,-0.0897 0.133227,-0.19193 0.132838,-0.30681 -3.9e-4,-0.1149 -0.0455,-0.21683 -0.135073,-0.3058 z\",\n    \tfill: \"#0E5D91\",\n    \twidth: 1,\n    \topacity: 0,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var gstyle = {\n    \tbasic: basic,\n    \thover: hover,\n    \tselectable: selectable,\n    \tactive: active,\n    \terror: error,\n    \tsuccess: success,\n    \tlayer: layer,\n    \tcreator: creator,\n    \t\"imageset-rect-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#666666\",\n    \t\"stroke-width\": 1,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-rect-no-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#ffffff\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-img\": {\n    \tcursor: \"pointer\"\n    },\n    \t\"order-text\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.7,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"bold\",\n    \t\"font-size\": 22,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text-default\": {\n    \tstroke: \"#444444\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"small-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 16,\n    \tcursor: \"pointer\"\n    },\n    \t\"layer-pos-text\": {\n    \tstroke: \"#333\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 14\n    },\n    \ttarget: target,\n    \t\"target-hover\": {\n    \tfill: \"#3E7DA7\",\n    \t\"fill-opacity\": 1\n    },\n    \t\"target-success\": {\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 1\n    },\n    \tassoc: assoc,\n    \t\"assoc-layer\": {\n    \t\"stroke-width\": 12,\n    \tcursor: \"pointer\",\n    \t\"stroke-opacity\": 0\n    },\n    \t\"assoc-bullet\": {\n    \tfill: \"#000000\"\n    },\n    \tclose: close,\n    \t\"close-bg\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"none\",\n    \tcursor: \"pointer\",\n    \topacity: 0\n    },\n    \t\"touch-circle\": {\n    \tfill: \"none\",\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-width\": 2\n    }\n    };\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    //maps the QTI shapes to Raphael shapes\r\n    var shapeMap = {\r\n        default: 'rect',\r\n        poly: 'path'\r\n    };\r\n\r\n    //length constraints to validate coords\r\n    var coordsValidator = {\r\n        rect: 4,\r\n        ellipse: 4,\r\n        circle: 3,\r\n        poly: 6,\r\n        default: 0\r\n    };\r\n\r\n    //transform the coords from the QTI system to Raphael system\r\n    var qti2raphCoordsMapper = {\r\n        /**\r\n         * Rectangle coordinate mapper:  from left-x,top-y,right-x-bottom-y to x,y,w,h\r\n         * @param {Array} coords - QTI coords\r\n         * @returns {Array} raphael coords\r\n         */\r\n        rect: function(coords) {\r\n            return [coords[0], coords[1], coords[2] - coords[0], coords[3] - coords[1]];\r\n        },\r\n\r\n        /**\r\n         * Creates the coords for a default shape (a rectangle that covers all the paper)\r\n         * @param {Raphael.Paper} paper - the paper\r\n         * @returns {Array} raphael coords\r\n         */\r\n        default: function(paper) {\r\n            return [0, 0, paper.width, paper.height];\r\n        },\r\n\r\n        /**\r\n         * polygone coordinate mapper:  from x1,y1,...,xn,yn to SVG path format\r\n         * @param {Array} coords - QTI coords\r\n         * @returns {Array} path desc\r\n         */\r\n        poly: function(coords) {\r\n            var a;\r\n            var size = coords.length;\r\n\r\n            // autoClose if needed\r\n            if (coords[0] !== coords[size - 2] && coords[1] !== coords[size - 1]) {\r\n                coords.push(coords[0]);\r\n                coords.push(coords[1]);\r\n            }\r\n\r\n            // move to first point\r\n            coords[0] = 'M' + coords[0];\r\n\r\n            for (a = 1; a < size; a++) {\r\n                if (a % 2 === 0) {\r\n                    coords[a] = 'L' + coords[a];\r\n                }\r\n            }\r\n\r\n            return [coords.join(' ')];\r\n        }\r\n    };\r\n\r\n    //transform the coords from a raphael shape to the QTI system\r\n    var raph2qtiCoordsMapper = {\r\n        /**\r\n         * Rectangle coordinate mapper: from x,y,w,h to left-x,top-y,right-x-bottom-y\r\n         * @param {Object} attr - Raphael Element's attributes\r\n         * @returns {Array} qti based coords\r\n         */\r\n        rect: function(attr) {\r\n            return [attr.x, attr.y, attr.x + attr.width, attr.y + attr.height];\r\n        },\r\n\r\n        /**\r\n         * Circle coordinate mapper\r\n         * @param {Object} attr - Raphael Element's attributes\r\n         * @returns {Array} qti based coords\r\n         */\r\n        circle: function(attr) {\r\n            return [attr.cx, attr.cy, attr.r];\r\n        },\r\n\r\n        /**\r\n         * Ellispe coordinate mapper\r\n         * @param {Object} attr - Raphael Element's attributes\r\n         * @returns {Array} qti based coords\r\n         */\r\n        ellipse: function(attr) {\r\n            return [attr.cx, attr.cy, attr.rx, attr.ry];\r\n        },\r\n\r\n        /**\r\n         * Get the coords for a default shape (a rectangle that covers all the paper)\r\n         * @param {Object} attr - Raphael Element's attributes\r\n         * @returns {Array} qti based coords\r\n         */\r\n        default: function(attr) {\r\n            return this.rect(attr);\r\n        },\r\n\r\n        /**\r\n         * polygone coordinate mapper:  from SVG path (available as segments) to x1,y1,...,xn,yn format\r\n         * @param {Raphael.Paper} paper - the paper\r\n         * @returns {Array} raphael coords\r\n         */\r\n        path: function(attr) {\r\n            var poly = [];\r\n            var i;\r\n\r\n            if (_.isArray(attr.path)) {\r\n                for (i = 1; i < attr.path.length; i++) {\r\n                    if (attr.path[i].length === 3) {\r\n                        poly.push(attr.path[i][1]);\r\n                        poly.push(attr.path[i][2]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return poly;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Graphic interaction helper\r\n     * @exports qtiCommonRenderer/helpers/Graphic\r\n     */\r\n    var GraphicHelper = {\r\n        /**\r\n         * Raw access to the styles\r\n         * @type {Object}\r\n         */\r\n        _style: gstyle,\r\n\r\n        /**\r\n         * Apply the style defined by name to the element\r\n         * @param {Raphael.Element} element - the element to change the state\r\n         * @param {String} state - the name of the state (from states) to switch to\r\n         */\r\n        setStyle: function(element, name) {\r\n            if (element && gstyle[name]) {\r\n                element.attr(gstyle[name]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create a Raphael paper with a bg image, that is width responsive\r\n         * @param {String} id - the id of the DOM element that will contain the paper\r\n         * @param {String} serial - the interaction unique indentifier\r\n         * @param {Object} options - the paper parameters\r\n         * @param {String} options.img - the url of the background image\r\n         * @param {jQueryElement} [options.container] - the parent of the paper element (got the closest parent by default)\r\n         * @param {Number} [options.width] - the paper width\r\n         * @param {Number} [options.height] - the paper height\r\n         * @param {String} [options.imgId] - an identifier for the image element\r\n         * @param {Function} [options.done] - executed once the image is loaded\r\n         * @returns {Raphael.Paper} the paper\r\n         */\r\n        responsivePaper: function(id, serial, options) {\r\n            var paper, image;\r\n\r\n            var $container = options.container || $('#' + id).parent();\r\n            var $editor = $('.image-editor', $container);\r\n            var $body = $container.closest('.qti-itemBody');\r\n            var resizer = _.throttle(resizePaper, 10);\r\n\r\n            var imgWidth = options.width || $container.innerWidth();\r\n            var imgHeight = options.height || $container.innerHeight();\r\n\r\n\r\n            paper = scaleRaphael(id, imgWidth, imgHeight);\r\n            image = paper.image(options.img, 0, 0, imgWidth, imgHeight);\r\n            image.id = options.imgId || image.id;\r\n            paper.setViewBox(0, 0, imgWidth, imgHeight);\r\n\r\n            resizer();\r\n\r\n            //retry to resize once the SVG is loaded\r\n            $(image.node)\r\n                .attr('externalResourcesRequired', 'true')\r\n                .on('load', resizer);\r\n\r\n            if (raphael.type === 'SVG') {\r\n                // TODO: move listeners somewhere they can be easily turned off\r\n                $(window).on('resize.qti-widget.' + serial, resizer);\r\n                // TODO: favor window resize event and deprecate $container resive event (or don't allow $container to be destroyed and rebuilt\r\n                $container.on('resize.qti-widget.' + serial, resizer);\r\n                $(document).on('customcssloaded.styleeditor', resizer);\r\n            } else {\r\n                $container.find('.main-image-box').width(imgWidth);\r\n                if (typeof options.resize === 'function') {\r\n                    options.resize(imgWidth, 1);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * scale the raphael paper\r\n             * @private\r\n             */\r\n            function resizePaper(e, givenWidth) {\r\n                var maxWidth, containerWidth, containerHeight, factor;\r\n\r\n                if (e) {\r\n                    e.stopPropagation();\r\n                }\r\n\r\n                maxWidth = $body.width();\r\n                containerWidth = $editor.innerWidth();\r\n\r\n                if (givenWidth > 0 || containerWidth > maxWidth) {\r\n                    if (givenWidth > 0 && givenWidth < maxWidth) {\r\n                        containerWidth = givenWidth;\r\n                    } else if (containerWidth > maxWidth) {\r\n                        containerWidth = maxWidth;\r\n                    }\r\n\r\n                    factor = containerWidth / imgWidth;\r\n                    containerHeight = imgHeight * factor;\r\n\r\n                    if (containerWidth > 0) {\r\n                        paper.changeSize(containerWidth, containerHeight, false, false);\r\n                    }\r\n\r\n                    if (typeof options.resize === 'function') {\r\n                        options.resize(containerWidth, factor);\r\n                    }\r\n                }\r\n                $container.trigger('resized.qti-widget');\r\n            }\r\n\r\n            return paper;\r\n        },\r\n\r\n        /**\r\n         * Create a new Element into a raphael paper\r\n         * @param {Raphael.Paper} paper - the interaction paper\r\n         * @param {String} type - the shape type\r\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\r\n         * @param {Object} [options] - additional creation options\r\n         * @param {String} [options.id] - to set the new element id\r\n         * @param {String} [options.title] - to set the new element title\r\n         * @param {String} [options.style = basic] - to default style\r\n         * @param {Boolean} [options.hover = true] - to disable the default hover state\r\n         * @param {Boolean} [options.touchEffect = true] - a circle appears on touch\r\n         * @param {Boolean} [options.qtiCoords = true] - if the coords are in QTI format\r\n         * @returns {Raphael.Element} the created element\r\n         */\r\n        createElement: function(paper, type, coords, options) {\r\n            var self = this;\r\n            var element;\r\n            var shaper = shapeMap[type] ? paper[shapeMap[type]] : paper[type];\r\n            var shapeCoords = options.qtiCoords !== false ? self.raphaelCoords(paper, type, coords) : coords;\r\n\r\n            if (typeof shaper === 'function') {\r\n                element = shaper.apply(paper, shapeCoords);\r\n                if (element) {\r\n                    if (options.id) {\r\n                        element.id = options.id;\r\n                    }\r\n\r\n                    if (options.title) {\r\n                        element.attr('title', options.title);\r\n                    }\r\n\r\n                    element.attr(gstyle[options.style || 'basic']).toFront();\r\n\r\n                    //prevent issue in firefox 37\r\n                    $(element.node).removeAttr('stroke-dasharray');\r\n\r\n                    if (options.hover !== false) {\r\n                        element.hover(\r\n                            function() {\r\n                                if (!element.flashing) {\r\n                                    self.updateElementState(this, 'hover');\r\n                                }\r\n                            },\r\n                            function() {\r\n                                if (!element.flashing) {\r\n                                    self.updateElementState(\r\n                                        this,\r\n                                        this.active ? 'active' : this.selectable ? 'selectable' : 'basic'\r\n                                    );\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    if (options.touchEffect !== false) {\r\n                        element.touchstart(function() {\r\n                            self.createTouchCircle(paper, element.getBBox());\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error('Unable to find method ' + type + ' on paper');\r\n            }\r\n\r\n            return element;\r\n        },\r\n\r\n        /**\r\n         * Create target point\r\n         * @param {Raphael.Paper} paper - the paper\r\n         * @param {Object} [options]\r\n         * @param {Object} [options.id] - and id to identify the target\r\n         * @param {Object} [options.point] - the point to add to the paper\r\n         * @param {Number} [options.point.x = 0] - point's x coord\r\n         * @param {Number} [options.point.y = 0] - point's y coord\r\n         * @param {Boolean} [options.hover] = true - the target has an hover effect\r\n         * @param {Function} [options.create] - call once created\r\n         * @param {Function} [options.remove] - call once removed\r\n         */\r\n        createTarget: function createTarget(paper, options) {\r\n            var baseSize, count, factor, half, hover, layer, point, self, tBBox, targetSize, x, y, target;\r\n\r\n            options = options || {};\r\n\r\n            self = this;\r\n            point = options.point || { x: 0, y: 0 };\r\n            factor = paper.w !== 0 ? paper.width / paper.w : 1;\r\n            hover = typeof options.hover === 'undefined' ? true : !!options.hover;\r\n\r\n            baseSize = 18; // this is the base size of the path element to be placed on svg (i.e. the path element crosshair is created to have a size of 18)\r\n            half = baseSize / 2;\r\n            x = point.x - half;\r\n            y = point.y - half;\r\n            targetSize = factor !== 0 ? 2 / factor : 2;\r\n\r\n            //create the target from a path\r\n            target = paper\r\n                .path(gstyle.target.path)\r\n                .transform('t' + x + ',' + y + 's' + targetSize)\r\n                .attr(gstyle.target)\r\n                .attr('title', _('Click again to remove'));\r\n\r\n            //generate an id if not set in options\r\n            if (options.id) {\r\n                target.id = options.id;\r\n            } else {\r\n                count = 0;\r\n                paper.forEach(function(element) {\r\n                    if (element.data('target')) {\r\n                        count++;\r\n                    }\r\n                });\r\n                target.id = 'target-' + count;\r\n            }\r\n\r\n            tBBox = target.getBBox();\r\n\r\n            //create an invisible rect over the target to ensure path selection\r\n            layer = paper\r\n                .rect(tBBox.x, tBBox.y, tBBox.width, tBBox.height)\r\n                .attr(gstyle.layer)\r\n                .click(function() {\r\n                    var id = target.id;\r\n                    var p = this.data('point');\r\n\r\n                    if (_.isFunction(options.select)) {\r\n                        options.select(target, p, this);\r\n                    }\r\n\r\n                    if (_.isFunction(options.remove)) {\r\n                        this.remove();\r\n                        target.remove();\r\n                        options.remove(id, p);\r\n                    }\r\n                });\r\n\r\n            if (hover) {\r\n                layer.hover(\r\n                    function() {\r\n                        if (!target.flashing) {\r\n                            self.setStyle(target, 'target-hover');\r\n                        }\r\n                    },\r\n                    function() {\r\n                        if (!target.flashing) {\r\n                            self.setStyle(target, 'target-success');\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            layer.id = 'layer-' + target.id;\r\n            layer.data('point', point);\r\n            target.data('target', point);\r\n\r\n            if (_.isFunction(options.create)) {\r\n                options.create(target);\r\n            }\r\n\r\n            return target;\r\n        },\r\n\r\n        /**\r\n         * Get the Raphael coordinate from QTI coordinate\r\n         * @param {Raphael.Paper} paper - the interaction paper\r\n         * @param {String} type - the shape type\r\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\r\n         * @returns {Array} the arguments array of coordinate to give to the approriate raphael shapre creator\r\n         */\r\n        raphaelCoords: function raphaelCoords(paper, type, coords) {\r\n            var shapeCoords;\r\n\r\n            if (_.isString(coords)) {\r\n                coords = _.map(coords.split(','), function(coord) {\r\n                    return parseInt(coord, 10);\r\n                });\r\n            }\r\n\r\n            if (!_.isArray(coords) || coords.length < coordsValidator[type]) {\r\n                throw new Error('Invalid coords ' + JSON.stringify(coords) + '  for type ' + type);\r\n            }\r\n\r\n            switch (type) {\r\n                case 'rect':\r\n                    shapeCoords = qti2raphCoordsMapper.rect(coords);\r\n                    break;\r\n                case 'default':\r\n                    shapeCoords = qti2raphCoordsMapper['default'].call(null, paper);\r\n                    break;\r\n                case 'poly':\r\n                    shapeCoords = qti2raphCoordsMapper.poly(coords);\r\n                    break;\r\n                default:\r\n                    shapeCoords = coords;\r\n                    break;\r\n            }\r\n\r\n            return shapeCoords;\r\n        },\r\n\r\n        /**\r\n         * Get the QTI coordinates from a Raphael Element\r\n         * @param {Raphael.Element} element - the shape to get the coords from\r\n         * @param {Raphael.Element} paper - the interaction paper\r\n         * @param {number} width - width of background image\r\n         * @returns {String} the QTI coords\r\n         */\r\n        qtiCoords: function qtiCoords(element, paper, width) {\r\n            var mapper = raph2qtiCoordsMapper[element.type];\r\n            var result = '';\r\n            var factor = paper && width ? width / paper.w : 1;\r\n\r\n            if (_.isFunction(mapper)) {\r\n                result = _.map(mapper.call(raph2qtiCoordsMapper, element.attr()), function(coord) {\r\n                    return Math.round(coord * factor);\r\n                }).join(',');\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Create a circle that animate and disapear from a shape.\r\n         *\r\n         * @param {Raphael.Paper} paper - the paper\r\n         * @param {Raphael.Element} element - used to get the bbox from\r\n         */\r\n        createTouchCircle: function(paper, bbox) {\r\n            var radius = bbox.width > bbox.height ? bbox.width : bbox.height;\r\n            var tCircle = paper.circle(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2, radius);\r\n\r\n            tCircle.attr(gstyle['touch-circle']);\r\n\r\n            _.defer(function() {\r\n                tCircle.animate({ r: radius + 5, opacity: 0.7 }, 300, function() {\r\n                    tCircle.remove();\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create a text, that scales.\r\n         *\r\n         * @param {Raphael.Paper} paper - the paper\r\n         * @param {Object} options - the text options\r\n         * @param {Number} options.left - x coord\r\n         * @param {Number} options.top - y coord\r\n         * @param {String} [options.content] - the text content\r\n         * @param {String} [options.id] - the element identifier\r\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\r\n         * @param {String} [options.title] - the text tooltip content\r\n         * @param {String} [options.disableEvents] - ignore events for the node\r\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\r\n         * @returns {Raphael.Element} the created text\r\n         */\r\n        createText: function(paper, options) {\r\n            var fontSize, scaledFontSize, text;\r\n            var top = options.top || 0;\r\n            var left = options.left || 0;\r\n            var content = options.content || '';\r\n            var style = options.style || 'small-text';\r\n            var title = options.title || '';\r\n            var disableEvents = options.disableEvents || false;\r\n            var factor = 1;\r\n\r\n            if (paper.width && paper.w) {\r\n                factor = paper.width / paper.w;\r\n            }\r\n\r\n            text = paper.text(left, top, content).toFront();\r\n            if (options.id) {\r\n                text.id = options.id;\r\n            }\r\n\r\n            if (options.hide) {\r\n                text.hide();\r\n            }\r\n\r\n            text.attr(gstyle[style]);\r\n\r\n            if(disableEvents) {\r\n                text.node.setAttribute('pointer-events', 'none');\r\n            }\r\n\r\n            if (typeof factor !== 'undefined' && factor !== 1) {\r\n                fontSize = parseInt(text.attr('font-size'), 10);\r\n                scaledFontSize = Math.floor(fontSize / factor) + 1;\r\n\r\n                text.attr('font-size', scaledFontSize);\r\n            }\r\n\r\n            if (title) {\r\n                this.updateTitle(text, title);\r\n            }\r\n\r\n            return text;\r\n        },\r\n\r\n        /**\r\n         * Create a text in the middle of the related shape.\r\n         *\r\n         * @param {Raphael.Paper} paper - the paper\r\n         * @param {Raphael.Element} shape - the shape to add the text to\r\n         * @param {Object} options - the text options\r\n         * @param {String} [options.content] - the text content\r\n         * @param {String} [options.id] - the element identifier\r\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\r\n         * @param {String} [options.title] - the text tooltip content\r\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\r\n         * @param {Boolean} [options.shapeClick = false] - clicking the text delegates to the shape\r\n         * @returns {Raphael.Element} the created text\r\n         */\r\n        createShapeText: function(paper, shape, options) {\r\n            var self = this;\r\n            var bbox = shape.getBBox();\r\n\r\n            var text = this.createText(\r\n                paper,\r\n                _.merge(\r\n                    {\r\n                        left: bbox.x + bbox.width / 2,\r\n                        top: bbox.y + bbox.height / 2\r\n                    },\r\n                    options\r\n                )\r\n            );\r\n\r\n            if (options.shapeClick) {\r\n                text.click(function() {\r\n                    self.trigger(shape, 'click');\r\n                });\r\n            }\r\n\r\n            return text;\r\n        },\r\n\r\n        /**\r\n         * Create an image with a padding and a border, using a set.\r\n         *\r\n         * @param {Raphael.Paper} paper - the paper\r\n         * @param {Object} options - image options\r\n         * @param {Number} options.left - x coord\r\n         * @param {Number} options.top - y coord\r\n         * @param {Number} options.width - image width\r\n         * @param {Number} options.height - image height\r\n         * @param {Number} options.url - image ulr\r\n         * @param {Number} [options.padding = 6] - a multiple of 2 is welcomed\r\n         * @param {Boolean} [options.border = false] - add a border around the image\r\n         * @param {Boolean} [options.shadow = false] - add a shadow back the image\r\n         * @returns {Raphael.Element} the created set, augmented of a move(x,y) method\r\n         */\r\n        createBorderedImage: function(paper, options) {\r\n            var padding = options.padding >= 0 ? options.padding : 6;\r\n            var halfPad = padding / 2;\r\n\r\n            var rx = options.left,\r\n                ry = options.top,\r\n                rw = options.width + padding,\r\n                rh = options.height + padding;\r\n\r\n            var ix = options.left + halfPad,\r\n                iy = options.top + halfPad,\r\n                iw = options.width,\r\n                ih = options.height;\r\n\r\n            var set = paper.set();\r\n\r\n            //create a rectangle with a padding and a border.\r\n            var rect = paper\r\n                .rect(rx, ry, rw, rh)\r\n                .attr(options.border ? gstyle['imageset-rect-stroke'] : gstyle['imageset-rect-no-stroke']);\r\n\r\n            //and an image centered into the rectangle.\r\n            var image = paper.image(options.url, ix, iy, iw, ih).attr(gstyle['imageset-img']);\r\n\r\n            if (options.shadow) {\r\n                set.push(\r\n                    rect.glow({\r\n                        width: 2,\r\n                        offsetx: 1,\r\n                        offsety: 1\r\n                    })\r\n                );\r\n            }\r\n\r\n            set.push(rect, image);\r\n\r\n            /**\r\n             * Add a move method to set that keep the given coords during an animation\r\n             * @private\r\n             * @param {Number} x - destination\r\n             * @param {Number} y - destination\r\n             * @param {Number} [duration = 400] - the animation duration\r\n             * @returns {Raphael.Element} the set for chaining\r\n             */\r\n            set.move = function move(x, y, duration) {\r\n                var animation = raphael.animation({ x: x, y: y }, duration || 400);\r\n                var elt = rect.animate(animation);\r\n                image.animateWith(elt, animation, { x: x + halfPad, y: y + halfPad }, duration || 400);\r\n                return set;\r\n            };\r\n\r\n            return set;\r\n        },\r\n\r\n        /**\r\n         * Update the visual state of an Element\r\n         * @param {Raphael.Element} element - the element to change the state\r\n         * @param {String} state - the name of the state (from states) to switch to\r\n         * @param {String} [title] - a title linked to this step\r\n         */\r\n        updateElementState: function(element, state, title) {\r\n            if (element && element.animate) {\r\n                element.animate(gstyle[state], 200, 'linear', function() {\r\n                    element.attr(gstyle[state]); //for attr that don't animate\r\n\r\n                    //preven issue in firefox 37\r\n                    $(element.node).removeAttr('stroke-dasharray');\r\n                });\r\n\r\n                if (title) {\r\n                    this.updateTitle(element, title);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the title of an element (the attr method of Raphael adds only new node instead of updating exisitings).\r\n         * @param {Raphael.Element} element - the element to update the title\r\n         * @param {String} [title] - the new title\r\n         */\r\n        updateTitle: function(element, title) {\r\n            if (element && element.node) {\r\n                //removes all remaining titles nodes\r\n                _.forEach(element.node.children, function(child) {\r\n                    if (child.nodeName.toLowerCase() === 'title') {\r\n                        element.node.removeChild(child);\r\n                    }\r\n                });\r\n\r\n                //then set the new title\r\n                element.attr('title', title);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Highlight an element with the error style\r\n         * @param {Raphael.Element} element - the element to hightlight\r\n         * @param {String} [restorState = 'basic'] - the state to restore the elt into after flash\r\n         */\r\n        highlightError: function(element, restoredState) {\r\n            var self = this;\r\n            if (element) {\r\n                element.flashing = true;\r\n                self.updateElementState(element, 'error');\r\n                _.delay(function() {\r\n                    self.updateElementState(element, restoredState || 'basic');\r\n                    element.flashing = false;\r\n                }, 800);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trigger an event already bound to a raphael element\r\n         * @param {Raphael.Element} element\r\n         * @param {String} event - the event name\r\n         *\r\n         */\r\n        trigger: function(element, event) {\r\n            var evt = _.where(element.events, { name: event });\r\n            if (evt.length && evt[0] && typeof evt[0].f === 'function') {\r\n                evt[0].f.apply(element, Array.prototype.slice.call(arguments, 2));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get an x/y point from a MouseEvent\r\n         * @param {MouseEvent} event - the source event\r\n         * @param {Raphael.Paper} paper - the interaction paper\r\n         * @param {jQueryElement} $container - the paper container\r\n         * @param {Boolean} isResponsive - if the paper is scaling\r\n         * @returns {Object} x,y point\r\n         */\r\n        getPoint: function getPoint(event, paper, $container) {\r\n            var point = this.clickPoint($container, event);\r\n            var rect = $container.get(0).getBoundingClientRect();\r\n            var factor = paper.w / rect.width;\r\n\r\n            point.x = Math.round(point.x * factor);\r\n            point.y = Math.round(point.y * factor);\r\n\r\n            return point;\r\n        },\r\n\r\n        /**\r\n         * Get paper position relative to the container\r\n         * @param {jQueryElement} $container - the paper container\r\n         * @param {Raphael.Paper} paper - the interaction paper\r\n         * @returns {Object} position with top and left\r\n         */\r\n        position: function($container, paper) {\r\n            var pw = parseInt(paper.w || paper.width, 10);\r\n            var cw = parseInt($container.width(), 10);\r\n            var ph = parseInt(paper.w || paper.width, 10);\r\n            var ch = parseInt($container.height(), 10);\r\n\r\n            return {\r\n                left: (cw - pw) / 2,\r\n                top: (ch - ph) / 2\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Get a point from a click event\r\n         * @param {jQueryElement} $container - the element that contains the paper\r\n         * @param {MouseEvent} event - the event triggered by the click\r\n         * @returns {Object} the x,y point\r\n         */\r\n        clickPoint: function($container, event) {\r\n            var x, y;\r\n            var offset = $container.offset();\r\n\r\n            if (event.pageX || event.pageY) {\r\n                x = event.pageX - offset.left;\r\n                y = event.pageY - offset.top;\r\n            } else if (event.clientX || event.clientY) {\r\n                x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft - offset.left;\r\n                y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop - offset.top;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n    };\n\n    return GraphicHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction',['lodash', 'taoQtiItem/qtiItem/helper/util', 'handlebars', 'i18n', 'lib/dompurify/purify'], function (_, util, Handlebars, __, DOMPurify) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"small feedback-info item-instruction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <span class=\\\"icon-info icon\\\"></span><span class=\\\"instruction-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\r\\n</div>\";\n      return buffer;\n      });\n    function instructionTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    var _notificationLevels = ['info', 'warning', 'error', 'success'];\r\n\r\n    var Instruction = function(interaction, message, callback) {\r\n        this.interaction = interaction;\r\n        this.defaultMessage = message || '';\r\n        this.currentMessage = '';\r\n        this.level = 'info';\r\n        this.serial = util.buildSerial('instruction_');\r\n        this.callback = callback;\r\n        this.$dom = null;\r\n        this.state = false;\r\n    };\r\n\r\n    Instruction.isValidLevel = function(level) {\r\n        return _.indexOf(_notificationLevels, level) >= 0;\r\n    };\r\n\r\n    Instruction.prototype.setState = function(state) {\r\n        this.state = state;\r\n    };\r\n\r\n    Instruction.prototype.checkState = function(state) {\r\n        return this.state === state;\r\n    };\r\n\r\n    Instruction.prototype.getId = function() {\r\n        return this.serial;\r\n    };\r\n\r\n    Instruction.prototype.create = function($container) {\r\n        $container.append(\r\n            instructionTpl({\r\n                message: this.defaultMessage,\r\n                serial: this.serial\r\n            })\r\n        );\r\n\r\n        this.$dom = $container.find('#' + this.serial);\r\n    };\r\n\r\n    Instruction.prototype.update = function(options) {\r\n        var level = options && options.level ? options.level : '',\r\n            message = options && options.message ? options.message : '',\r\n            timeout = options && options.timeout ? options.timeout : 0,\r\n            start = options && typeof options.start === 'function' ? options.start : null,\r\n            stop = options && typeof options.stop === 'function' ? options.stop : null;\r\n\r\n        if (level && Instruction.isValidLevel(level)) {\r\n            this.$dom.removeClass('feedback-' + this.level).addClass('feedback-' + level);\r\n            this.$dom\r\n                .find('.icon')\r\n                .removeClass('icon-' + this.level)\r\n                .addClass('icon-' + level);\r\n            this.level = level;\r\n        }\r\n\r\n        if (message) {\r\n            this.$dom.find('.instruction-message').html(message);\r\n            this.currentMessage = message;\r\n        }\r\n\r\n        if (timeout) {\r\n            var _this = this;\r\n            if (start) {\r\n                start.call(_this);\r\n            }\r\n            _this.timer = setTimeout(function() {\r\n                if (stop) {\r\n                    stop.call(_this);\r\n                }\r\n                _this.timer = null;\r\n            }, timeout);\r\n        }\r\n    };\r\n\r\n    Instruction.prototype.setLevel = function(level, timeout) {\r\n        var options = {\r\n            level: level\r\n        };\r\n\r\n        if (timeout) {\r\n            options.timeout = parseInt(timeout);\r\n            options.stop = function() {\r\n                this.setLevel('info');\r\n            };\r\n        }\r\n\r\n        this.update(options);\r\n    };\r\n\r\n    Instruction.prototype.getLevel = function() {\r\n        return this.level;\r\n    };\r\n\r\n    Instruction.prototype.setMessage = function(message, timeout) {\r\n        this.update({ message: message, timeout: timeout });\r\n    };\r\n\r\n    Instruction.prototype.reset = function() {\r\n        this.update({ level: 'info', message: this.defaultMessage });\r\n        this.state = false;\r\n    };\r\n\r\n    Instruction.prototype.validate = function(data) {\r\n        if (typeof this.callback === 'function') {\r\n            this.callback.call(this, data);\r\n        }\r\n    };\n\n    return Instruction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',['lodash', 'jquery', 'i18n', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction', 'handlebars', 'lib/dompurify/purify'], function (_, $$1, __, containerHelper, Instruction, Handlebars, DOMPurify) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Instruction = Instruction && Object.prototype.hasOwnProperty.call(Instruction, 'default') ? Instruction['default'] : Instruction;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"small feedback-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \" item-notification\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <span class=\\\"icon-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"></span><span class=\\\"feedback-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\r\\n    <span title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Message\", options) : helperMissing.call(depth0, \"__\", \"Remove Message\", options)))\n        + \"\\\" class=\\\"icon-close close-trigger\\\"></span>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function notifTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    //stores the instructions\r\n    var _instructions = {};\r\n\r\n    /**\r\n     * The instruction manager helps you in managing instructions and\r\n     * constraints on a QTI Element, usually an interaction or a choice.\r\n     *\r\n     * @exports qtiCommonRenderer/helpers/Instructions/instructionManager\r\n     */\r\n    var instructionManager = {\r\n        /**\r\n         * Validate the instructions of an element\r\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\r\n         * @param {Object} [data] - any data to give to the instructions\r\n         */\r\n        validateInstructions: function(element, data) {\r\n            var serial = element.getSerial();\r\n            if (_instructions[serial]) {\r\n                _.each(_instructions[serial], function(instruction) {\r\n                    instruction.validate(data || {});\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add a new instructions to an element\r\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\r\n         * @param {String} message - the message to give to display to the user when the instruction is validated\r\n         * @param {Function} validateCallback - how to validate the instruction\r\n         * @returns {Instruction} the created instruction\r\n         */\r\n        appendInstruction: function(element, message, validateCallback) {\r\n            var serial = element.getSerial(),\r\n                instruction = new Instruction(element, message, validateCallback);\r\n\r\n            if (!_instructions[serial]) {\r\n                _instructions[serial] = {};\r\n            }\r\n            _instructions[serial][instruction.getId()] = instruction;\r\n\r\n            instruction.create($$1('.instruction-container', containerHelper.get(element)));\r\n\r\n            return instruction;\r\n        },\r\n\r\n        /**\r\n         * Remove instructions from an element\r\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\r\n         */\r\n        removeInstructions: function(element) {\r\n            _instructions[element.getSerial()] = {};\r\n            containerHelper\r\n                .get(element)\r\n                .find('.instruction-container')\r\n                .empty();\r\n        },\r\n\r\n        /**\r\n         * Reset the instructions states for an element (but keeps configuration)\r\n         * @param {Object} element - the qti object, ie. interaction, choice, etc.\r\n         */\r\n        resetInstructions: function(element) {\r\n            var serial = element.getSerial();\r\n            if (_instructions[serial]) {\r\n                _.each(_instructions[serial], function(instruction) {\r\n                    instruction.reset();\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Default instuction set with a min/max constraints.\r\n         * @param {Object} interaction\r\n         * @param {jQueryElement} $container\r\n         * @param {Object} options\r\n         * @param {Number} [options.min = 0] -\r\n         * @param {Number} [options.max = 0] -\r\n         * @param {Function} options.getResponse - a ref to a function that get the raw response (array) from the interaction in parameter\r\n         * @param {Function} [options.onError] - called by once an error occurs with validateInstruction data in parameters\r\n         */\r\n        minMaxChoiceInstructions: function(interaction, options) {\r\n            var self = this,\r\n                min = options.min || 0,\r\n                max = options.max || 0,\r\n                getResponse = options.getResponse,\r\n                onError = options.onError || _.noop(),\r\n                choiceCount = options.choiceCount === false ? false : _.size(interaction.getChoices()),\r\n                minInstructionSet = false,\r\n                msg;\r\n\r\n            if (!_.isFunction(getResponse)) {\r\n                throw 'invalid parameter getResponse';\r\n            }\r\n\r\n            //if maxChoice = 0, inifinite choice possible\r\n            if (max > 0 && (choiceCount === false || max < choiceCount)) {\r\n                if (max === min) {\r\n                    minInstructionSet = true;\r\n                    msg =\r\n                        max <= 1\r\n                            ? __('You must select exactly %d choice', max)\r\n                            : __('You must select exactly %d choices', max);\r\n\r\n                    self.appendInstruction(interaction, msg, function(data) {\r\n                        if (getResponse(interaction).length >= max) {\r\n                            this.setLevel('success');\r\n                            if (this.checkState('fulfilled')) {\r\n                                this.update({\r\n                                    level: 'warning',\r\n                                    message: __('Maximum choices reached'),\r\n                                    timeout: 2000,\r\n                                    start: function() {\r\n                                        onError(data);\r\n                                    },\r\n                                    stop: function() {\r\n                                        this.update({ level: 'success', message: msg });\r\n                                    }\r\n                                });\r\n                            }\r\n                            this.setState('fulfilled');\r\n                        } else {\r\n                            this.reset();\r\n                        }\r\n                    });\r\n                } else if (max > min) {\r\n                    msg =\r\n                        max <= 1\r\n                            ? __('You can select maximum %d choice', max)\r\n                            : __('You can select maximum %d choices', max);\r\n                    self.appendInstruction(interaction, msg, function(data) {\r\n                        if (getResponse(interaction).length >= max) {\r\n                            this.setLevel('success');\r\n                            this.setMessage(__('Maximum choices reached'));\r\n                            if (this.checkState('fulfilled')) {\r\n                                this.update({\r\n                                    level: 'warning',\r\n                                    timeout: 2000,\r\n                                    start: function() {\r\n                                        onError(data);\r\n                                    },\r\n                                    stop: function() {\r\n                                        this.setLevel('info');\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            this.setState('fulfilled');\r\n                        } else {\r\n                            this.reset();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (!minInstructionSet && min > 0 && (choiceCount === false || min < choiceCount)) {\r\n                msg =\r\n                    min <= 1\r\n                        ? __('You must select at least %d choice', min)\r\n                        : __('You must select at least %d choices', min);\r\n                self.appendInstruction(interaction, msg, function() {\r\n                    if (getResponse(interaction).length >= min) {\r\n                        this.setLevel('success');\r\n                    } else {\r\n                        this.reset();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Appends a instruction  notification message\r\n         * @deprecated in favor of instructions\r\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\r\n         * @param {String} message - the message to give to display\r\n         * @param {String} [level = 'info'] - the notification level in info, success, error or warning\r\n         */\r\n        appendNotification: function(element, message, level) {\r\n            level = level || 'info';\r\n\r\n            if (Instruction.isValidLevel(level)) {\r\n                var $container = containerHelper.get(element);\r\n\r\n                $container.find('.notification-container').prepend(\r\n                    notifTpl({\r\n                        level: level,\r\n                        message: message\r\n                    })\r\n                );\r\n\r\n                var $notif = $container.find('.item-notification:first');\r\n                var _remove = function() {\r\n                    $notif.fadeOut();\r\n                };\r\n\r\n                $notif.find('.close-trigger').on('click', _remove);\r\n                setTimeout(_remove, 2000);\r\n\r\n                return $notif;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Removes all the displayed notifications\r\n         * @deprecated in favor of instructions\r\n         */\r\n        removeNotifications: function(element) {\r\n            containerHelper\r\n                .get(element)\r\n                .find('.item-notification')\r\n                .remove();\r\n        }\r\n    };\n\n    return instructionManager;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler',['jquery', 'lodash'], function ($, _) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    //throttle events because of the loop\r\n    var informLoaded = _.throttle(\r\n        function() {\r\n            $(document).trigger('customcssloaded.styleeditor',[{}]);\r\n        },\r\n        10,\r\n        { leading: false }\r\n    );\r\n\r\n    /**\r\n     * Attach QTI Stylesheets to the document\r\n     *\r\n     * @param {Array} stylesheets - the QTI model stylesheets\r\n     * @fires customcssloaded.styleeditor on document 10ms after stylesheets are loaded\r\n     */\r\n    var attach = function attach(stylesheets) {\r\n        var $head = $('head');\r\n\r\n        //fallback\r\n        if (!$head.length) {\r\n            $head = $('body');\r\n        }\r\n\r\n        // relative links with cache buster\r\n        _(stylesheets).forEach(function(stylesheet) {\r\n            var $link, href;\r\n\r\n            //if the href is something\r\n            if (stylesheet.attr('href')) {\r\n                $link = $(stylesheet.render());\r\n\r\n                //get the resolved href once rendererd\r\n                href = $link.attr('href');\r\n\r\n                //we need to set the href after the link is appended to the head (for our dear IE)\r\n                $link.removeAttr('href').attr('href', href);\r\n\r\n                if (stylesheet.attr('onload')) {\r\n                    $link[0].onload = stylesheet.attr('onload');\r\n                }\r\n\r\n                if (stylesheet.attr('onerror')) {\r\n                    $link[0].onerror = stylesheet.attr('onerror');\r\n                }\r\n\r\n                $link.one('load', informLoaded).appendTo($head);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Remove QTI Stylesheets from the document\r\n     *\r\n     * @param {Array} stylesheets - the QTI model stylesheets\r\n     */\r\n    var detach = function detach(stylesheets) {\r\n        _(stylesheets).forEach(function(stylesheet) {\r\n            if (stylesheet.serial) {\r\n                $('link[data-serial=\"' + stylesheet.serial + '\"]').remove();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler\r\n     */\r\n    var itemStylesheetHandler = {\r\n        attach: attach,\r\n        detach: detach\r\n    };\n\n    return itemStylesheetHandler;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/patternMask',[],function () { 'use strict';\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2016 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    var regexChar = /\\^\\[\\\\s\\\\S\\]\\{\\d+\\,(\\d+)\\}\\$/,\r\n        regexWords = /\\^\\(\\?\\:\\(\\?\\:\\[\\^\\\\s\\\\:\\\\!\\\\\\?\\\\\\;\\\\\\…\\\\\\€\\]\\+\\)\\[\\\\s\\\\:\\\\!\\\\\\?\\\\;\\\\\\…\\\\\\€\\]\\*\\)\\{\\d+\\,(\\d+)\\}\\$/;\r\n\r\n    var patternMaskHelper = {\r\n        /**\r\n         * Parse the pattern string and according to the given type, try to extract the associate number\r\n         *\r\n         * @param {String} pattern - the pattern string to be parsed\r\n         * @param {String} type - words or chars\r\n         * @returns {*}\r\n         */\r\n        parsePattern: function parsePattern(pattern, type) {\r\n            if (pattern === undefined || pattern === null) {\r\n                return null;\r\n            }\r\n            if (type === 'words') {\r\n                //expre = /^(?:(?:[^\\s\\:\\!\\?\\;\\…\\€]+)[\\s\\:\\!\\?\\;\\…\\€]*){0,3}$/;\r\n                var result = pattern.match(regexWords);\r\n\r\n                if (result !== null && result.length > 1) {\r\n                    return result[1];\r\n                } else {\r\n                    return null;\r\n                }\r\n            } else if (type === 'chars') {\r\n                // This is the original regExp generated by our code\r\n                // expre = /^[\\s\\S]{0,10}$/;\r\n                // and we will try to extract the top limit from it with this regexp\r\n                // which is mostly just escaped version of the first one.\r\n                var result = pattern.match(regexChar);\r\n\r\n                if (result !== null && result.length > 1) {\r\n                    return result[1];\r\n                } else {\r\n                    return null;\r\n                }\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n        /**\r\n         * Reverse function of parsePattern for word type\r\n         *\r\n         * @param {Number} max\r\n         * @returns {string}\r\n         */\r\n        createMaxWordPattern: function createMaxWordPattern(max) {\r\n            return '^(?:(?:[^\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]+)[\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]*){0,' + max.toString() + '}$';\r\n        },\r\n        /**\r\n         * Reverse function of parsePattern for char type\r\n         *\r\n         * @param {Number} max\r\n         * @returns {string}\r\n         */\r\n        createMaxCharPattern: function createMaxCharPattern(max) {\r\n            return '^[\\\\s\\\\S]{0,' + max.toString() + '}$';\r\n        }\r\n    };\n\n    return patternMaskHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    var _formatters = {\r\n        boolean: function(value) {\r\n            return value ? 'true' : 'false';\r\n        },\r\n        integer: function(value) {\r\n            return value;\r\n        },\r\n        float: function(value) {\r\n            return value;\r\n        },\r\n        string: function(value) {\r\n            return value === '' ? 'NULL' : '\"' + value + '\"';\r\n        },\r\n        point: function(value) {\r\n            return '[' + value[0] + ', ' + value[1] + ']';\r\n        },\r\n        pair: function(value) {\r\n            return '[' + value[0] + ', ' + value[1] + ']';\r\n        },\r\n        directedPair: function(value) {\r\n            return '[' + value[0] + ', ' + value[1] + ']';\r\n        },\r\n        duration: function(value) {\r\n            return value;\r\n        },\r\n        file: function(value) {\r\n            return 'binary data';\r\n        },\r\n        uri: function(value) {\r\n            return value;\r\n        },\r\n        intOrIdentifier: function(value) {\r\n            return value;\r\n        },\r\n        identifier: function(value) {\r\n            return value;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Return the pretty print string for a qti base variable\r\n     *\r\n     * @param {type} value\r\n     * @param {type} withType - the qti baseType\r\n     * @returns {String}\r\n     */\r\n    function printBase(value, withType) {\r\n        var print = '',\r\n            base = value.base;\r\n\r\n        withType = typeof withType !== 'undefined' ? withType : true;\r\n\r\n        if (base) {\r\n            _.forIn(_formatters, function(formatter, baseType) {\r\n                if (base[baseType] !== undefined) {\r\n                    print += withType ? '(' + baseType + ') ' : '';\r\n                    print += formatter(base[baseType]);\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return print;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the pretty print string for a qti list variable\r\n     *\r\n     * @param {object} value\r\n     * @param {string} withType - the qti basetype of the list\r\n     * @returns {string}\r\n     */\r\n    function printList(value, withType) {\r\n        var print = '',\r\n            list = value.list;\r\n\r\n        withType = typeof withType !== 'undefined' ? withType : true;\r\n\r\n        if (list) {\r\n            _.forIn(_formatters, function(formatter, baseType) {\r\n                if (list[baseType] !== undefined) {\r\n                    print += withType ? '(' + baseType + ') ' : '';\r\n\r\n                    print += '[';\r\n\r\n                    _.each(list[baseType], function(value) {\r\n                        print += formatter(value) + ', ';\r\n                    });\r\n\r\n                    if (_.size(list[baseType])) {\r\n                        print = print.substring(0, print.length - 2);\r\n                    }\r\n\r\n                    print += ']';\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return print;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the pretty print string for a qti record variable\r\n     *\r\n     * @param {object} value\r\n     * @returns {String}\r\n     */\r\n    function printRecord(value) {\r\n        if (value && value.record) {\r\n            return '(record) ' + JSON.stringify(value.record);\r\n        }\r\n        return '';\r\n    }\r\n\r\n    var PciPrettyPrint = {\r\n        printBase: printBase,\r\n        printList: printList,\r\n        printRecord: printRecord\r\n    };\n\n    return PciPrettyPrint;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciResponse',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint'], function (_, pciPrettyPrint) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pciPrettyPrint = pciPrettyPrint && Object.prototype.hasOwnProperty.call(pciPrettyPrint, 'default') ? pciPrettyPrint['default'] : pciPrettyPrint;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    var _qtiModelPciResponseCardinalities = {\r\n        single: 'base',\r\n        multiple: 'list',\r\n        ordered: 'list',\r\n        record: 'record'\r\n    };\r\n\r\n    var PciResponse = {\r\n        /**\r\n         * Parse a response variable formatted according to IMS PCI: http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n         *\r\n         * @see serialize\r\n         * @param {Object} response\r\n         * @param {Object} interaction\r\n         * @returns {Array}\r\n         */\r\n        unserialize: function(response, interaction) {\r\n            var ret = [],\r\n                responseDeclaration = interaction.getResponseDeclaration(),\r\n                baseType = responseDeclaration.attr('baseType'),\r\n                cardinality = responseDeclaration.attr('cardinality'),\r\n                mappedCardinality;\r\n\r\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\r\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\r\n                var responseValues = response[mappedCardinality];\r\n\r\n                if (responseValues === null) {\r\n                    ret = [];\r\n                } else if (_.isObject(responseValues)) {\r\n                    if (responseValues[baseType] !== undefined) {\r\n                        ret = responseValues[baseType];\r\n                        ret = _.isArray(ret) ? ret : [ret];\r\n                    } else {\r\n                        throw 'invalid response baseType';\r\n                    }\r\n                } else {\r\n                    throw 'invalid response cardinality, expected ' + cardinality + ' (' + mappedCardinality + ')';\r\n                }\r\n            } else {\r\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\r\n            }\r\n\r\n            return ret;\r\n        },\r\n        /**\r\n         * Serialize the input response array into the format to be send to result server according to IMS PCI recommendation :\r\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n         * With the only exception for empty response, which is represented by a javascript \"null\" value\r\n         *\r\n         * @see http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n         * @param {Array} responseValues\r\n         * @param {Object} interaction\r\n         * @returns {Object|null}\r\n         */\r\n        serialize: function(responseValues, interaction) {\r\n            if (!_.isArray(responseValues)) {\r\n                throw 'invalid argument : responseValues must be an Array';\r\n            }\r\n\r\n            var response = {},\r\n                responseDeclaration = interaction.getResponseDeclaration(),\r\n                baseType = responseDeclaration.attr('baseType'),\r\n                cardinality = responseDeclaration.attr('cardinality'),\r\n                mappedCardinality;\r\n\r\n            responseValues = _.map(responseValues || [], function(v) {\r\n                return baseType === 'boolean' ? v === true || v === 'true' : v;\r\n            });\r\n\r\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\r\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\r\n                if (mappedCardinality === 'base') {\r\n                    if (responseValues.length === 0) {\r\n                        //return empty response:\r\n                        response.base = null;\r\n                    } else {\r\n                        response.base = {};\r\n                        response.base[baseType] = responseValues[0];\r\n                    }\r\n                } else {\r\n                    response[mappedCardinality] = {};\r\n                    response[mappedCardinality][baseType] = responseValues;\r\n                }\r\n            } else {\r\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\r\n            }\r\n\r\n            return response;\r\n        },\r\n        isEmpty: function(response) {\r\n            return (\r\n                response === null ||\r\n                _.isEmpty(response) ||\r\n                response.base === null ||\r\n                (_.isArray(response.list) && _.isEmpty(response.list)) ||\r\n                (_.isArray(response.record) && _.isEmpty(response.record))\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Print a PCI JSON response into a human-readable string.\r\n         *\r\n         * @param {Object} response A response in PCI JSON representation.\r\n         * @returns {String} A human-readable version of the PCI JSON representation.\r\n         */\r\n        prettyPrint: function(response) {\r\n            var print = '';\r\n\r\n            if (typeof response.base !== 'undefined') {\r\n                // -- BaseType.\r\n                print += pciPrettyPrint.printBase(response, true);\r\n            } else if (typeof response.list !== 'undefined') {\r\n                // -- ListType\r\n                print += pciPrettyPrint.printList(response, true);\r\n            } else if (typeof response.record !== 'undefined') {\r\n                // -- RecordType\r\n                print += pciPrettyPrint.printRecord(response, true);\r\n            } else {\r\n                throw 'Not a valid PCI JSON Response';\r\n            }\r\n\r\n            return print;\r\n        }\r\n    };\n\n    return PciResponse;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PortableElement',[],function () { 'use strict';\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    /**\r\n     * Portable element helper\r\n     */\r\n\r\n    var imgSrcPattern = /(<img[^>]*\\ssrc=[\"'])([^\"']+)([\"'])/gi;\r\n\r\n    /**\r\n     * Replace all identified relative media urls by the absolute one.\r\n     * For now only images are supported.\r\n     *\r\n     * @param {String} html - the html to parse\r\n     * @param {Object} the renderer\r\n     * @returns {String} the html without updated URLs\r\n     */\r\n    function fixMarkupMediaSources(html, renderer) {\r\n        html = html || '';\r\n\r\n        return html.replace(imgSrcPattern, function(substr, $1, $2, $3) {\r\n            var resolved = renderer.resolveUrl($2) || $2;\r\n            return $1 + resolved + $3;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/PortableElement\r\n     */\r\n    var PortableElement = {\r\n        fixMarkupMediaSources: fixMarkupMediaSources\r\n    };\n\n    return PortableElement;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter',['jquery', 'util/adaptSize', 'ui/waitForMedia'], function ($, adaptSize, waitForMedia) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA;\r\n     *\r\n     */\r\n\r\n    const itemSelector = '.add-option, .result-area .target, .choice-area .qti-choice';\r\n\r\n    var sizeAdapter = {\r\n        /**\r\n         * Resize jQueryElement that have changed their dimensions due to a change of the content\r\n         *\r\n         * @param {jQueryElement|widget} target\r\n         */\r\n        adaptSize(target) {\r\n            let $elements;\r\n            let $container;\r\n\r\n            switch (true) {\r\n                // widget\r\n                case typeof target.$container !== 'undefined':\r\n                    $elements = target.$container.find(itemSelector);\r\n                    $container = target.$container;\r\n                    break;\r\n\r\n                // jquery elements\r\n                default:\r\n                    $elements = target;\r\n                    $container = $($elements).first().parent();\r\n            }\r\n\r\n            $container.waitForMedia(function () {\r\n                // Occasionally in caching scenarios, after waitForMedia(), image.height is reporting its naturalHeight instead of its CSS height\r\n                // The timeout allows adaptSize.height() to work with the true rendered heights of elements, instead of naturalHeights\r\n                setTimeout(() => {\r\n                    adaptSize.height($elements);\r\n\r\n                    // detect any CSS load, and adapt heights again after\r\n                    document.addEventListener(\r\n                        'load',\r\n                        e => {\r\n                            if (e.target && e.target.rel === 'stylesheet') {\r\n                                adaptSize.height($elements);\r\n                            }\r\n                        },\r\n                        true\r\n                    );\r\n                }, 1);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Reset height to jQueryElement(s) to auto\r\n         *\r\n         * @param {jQueryElement|widget} target\r\n         */\r\n        resetSize(target) {\r\n            adaptSize.resetHeight(target.$container.find(itemSelector));\r\n        }\r\n    };\n\n    return sizeAdapter;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/uploadMime',['lodash', 'i18n', 'core/mimetype/definitions'], function (_, __, mimeTypes) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimeTypes = mimeTypes && Object.prototype.hasOwnProperty.call(mimeTypes, 'default') ? mimeTypes['default'] : mimeTypes;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015-21 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    const delimetr = ' ';\r\n\r\n    const uploadMime = {\r\n        /**\r\n         * Fetch mime type definitions\r\n         * (translation function for labels must be injected from here)\r\n         * @returns {Array}\r\n         */\r\n        getMimeTypes: function getMimeTypes() {\r\n            return mimeTypes.getList(__);\r\n        },\r\n\r\n        /**\r\n         * Set the expected types in the format according to the number of types\r\n         *\r\n         * @param {Object} interaction\r\n         * @param {Array} types\r\n         */\r\n        setExpectedTypes: function setExpectedTypes(interaction, types) {\r\n            let classes = interaction.attr('class') || '';\r\n            classes = classes.replace(/x-tao-upload-type-[-_a-zA-Z+.0-9]*/g, '').trim();\r\n            interaction.attr('class', classes);\r\n            interaction.removeAttr('type');\r\n\r\n            if (!types) {\r\n                return;\r\n            }\r\n\r\n            if (types.length === 1) {\r\n                //if there is only one value set into the qti standard type attribute\r\n                if (types[0] !== 'any/kind') {\r\n                    interaction.attr('type', types[0]);\r\n                }\r\n            } else {\r\n                //For backward compatibility:\r\n                //if there is more than one value, set into into TAO specific css classes\r\n                interaction.attr(\r\n                    'class',\r\n                    _.reduce(\r\n                        types,\r\n                        function (acc, selectedType) {\r\n                            return acc + ' x-tao-upload-type-' + selectedType.replace('/', '_');\r\n                        },\r\n                        classes\r\n                    ).trim()\r\n                );\r\n\r\n                interaction.attr('type', types.join(delimetr));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Return the array of authorized mime types\r\n         * Get the standard \"type\" attribute value with mime types separated by space.\r\n         * @param {Object} interaction - standard QTI interaction model object\r\n         * @param {Boolean} [includeEquivalents] - enable including all recognized as equivalent types\r\n         * @returns {Array}\r\n         */\r\n        getExpectedTypes: function getExpectedTypes(interaction, includeEquivalents) {\r\n            let equivalents = [];\r\n            let types = [];\r\n            let mimes;\r\n\r\n            if (interaction.attr('type')) {\r\n                types = interaction.attr('type').split(delimetr);\r\n            }\r\n\r\n            // add in equivalent mimetypes to the list of expected types\r\n            if (includeEquivalents === true) {\r\n                mimes = uploadMime.getMimeTypes();\r\n                _.forEach(types, function (mime) {\r\n                    const mimeData = _.find(mimes, { mime: mime });\r\n                    if (mimeData && _.isArray(mimeData.equivalent)) {\r\n                        equivalents = _.union(equivalents, mimeData.equivalent);\r\n                    }\r\n                });\r\n            }\r\n\r\n            return _.union(types, equivalents);\r\n        }\r\n    };\n\n    return uploadMime;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-gap\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <span data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"gapmatch-content\\\">&nbsp;</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var Gap = {\r\n        qtiClass: 'gap',\r\n        getContainer: containerHelper.get,\r\n        template: tpl\r\n    };\n\n    return Gap;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objetLabel)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-gapImg selectable\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <img src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.data)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\r\\n         width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\r\\n         height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\r\\n         \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objectLabel), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    />\\r\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var GapImg = {\r\n        qtiClass: 'gapImg',\r\n        getContainer: containerHelper.get,\r\n        template: tpl\r\n    };\n\n    return GapImg;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var GapText = {\r\n        qtiClass: 'gapText',\r\n        getContainer: containerHelper.get,\r\n        template: tpl\r\n    };\n\n    return GapText;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-hottext hottext\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <label class=\\\"hottext-checkmark\\\">\\r\\n        <input type=\\\"checkbox\\\" value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\r\\n        <span class=\\\"icon-checkbox small\\\"></span>\\r\\n    </label>\\r\\n    <span class=\\\"hottext-content\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var Hottext = {\r\n        qtiClass: 'hottext',\r\n        getContainer: containerHelper.get,\r\n        template: tpl\r\n    };\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',['lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (_, Handlebars, __, DOMPurify, containerHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<option data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\r\\n</option>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var InlineChoice = {\r\n        qtiClass: 'inlineChoice',\r\n        getContainer: containerHelper.get,\r\n        template: tpl,\r\n        getData: function getData(choice, data) {\r\n            data.body = _.unescape(data.body);\r\n            return data;\r\n        }\r\n    };\n\n    return InlineChoice;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var SimpleAssociableChoice_AssociateInteraction = {\r\n        qtiClass: 'simpleAssociableChoice.associateInteraction',\r\n        getContainer: containerHelper.get,\r\n        template: tpl\r\n    };\n\n    return SimpleAssociableChoice_AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<th class=\\\"qti-choice qti-associableChoice qti-simpleAssociableChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</th>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var SimpleAssociableChoice_MatchInteraction = {\r\n        qtiClass: 'simpleAssociableChoice.matchInteraction',\r\n        getContainer: containerHelper.get,\r\n        template: tpl\r\n    };\n\n    return SimpleAssociableChoice_MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'services/features'], function (Handlebars, __, _, DOMPurify, containerHelper, features) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\r\\n            <input\\r\\n                type=\\\"radio\\\"\\r\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\r\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\r\\n                tabindex=\\\"1\\\"\\r\\n            >\\r\\n            <span class=\\\"icon-radio\\\"></span>\\r\\n            \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\r\\n            <input\\r\\n                type=\\\"checkbox\\\"\\r\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\r\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\r\\n                tabindex=\\\"1\\\"\\r\\n            >\\r\\n            <span class=\\\"icon-checkbox\\\"></span>\\r\\n            \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"\\r\\n    <label data-eliminable=\\\"container\\\" data-label=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Eliminate\", options) : helperMissing.call(depth0, \"__\", \"Eliminate\", options)))\n        + \"\\\">\\r\\n        <span data-eliminable=\\\"trigger\\\" class=\\\"icon-checkbox\\\"></span>\\r\\n    </label>\\r\\n    \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-simpleChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <div class=\\\"pseudo-label-box\\\">\\r\\n        <label class=\\\"real-label\\\">\\r\\n            \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.unique), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n        </label>\\r\\n        <div class=\\\"label-box\\\">\\r\\n            <div class=\\\"label-content clear\\\" contenteditable=\\\"false\\\" id=\\\"choice-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\r\\n                \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n                <svg class=\\\"overlay-answer-eliminator\\\">\\r\\n                    <line x1=\\\"0\\\" y1=\\\"100%\\\" x2=\\\"100%\\\" y2=\\\"0\\\"/>\\r\\n                    <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"100%\\\" y2=\\\"100%\\\"/>\\r\\n                </svg>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowElimination), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</li>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var SimpleChoice_ChoiceInteraction = {\r\n        qtiClass: 'simpleChoice.choiceInteraction',\r\n        getContainer: containerHelper.get,\r\n        getData: function(choice, data) {\r\n            data.unique = parseInt(data.interaction.attributes.maxChoices) === 1;\r\n            data.allowElimination = features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination');\r\n            return data;\r\n        },\r\n        template: tpl\r\n    };\n\n    return SimpleChoice_ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var SimpleChoice_OrderInteraction = {\r\n        qtiClass: 'simpleChoice.orderInteraction',\r\n        getContainer: containerHelper.get,\r\n        template: tpl\r\n    };\n\n    return SimpleChoice_OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\n    'use strict';\n\n    var _requirejs = window.require;\n    var _defaultLoadingOptions = {\n        reload: false\n    };\n\n    var loadModuleConfig = function loadModuleConfig(manifest){\n        return new Promise(function(resolve, reject){\n            var requireConfigAliases = {};\n            var baseUrl;\n            var reqConfigs = [];\n            var modules = {};\n\n            if(!manifest || !manifest.runtime){\n                return reject('invalid manifest');\n            }\n\n            baseUrl = manifest.baseUrl;\n\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\n                _.forEach(manifest.runtime.config, function(pciConfig){\n                    if(_.isString(pciConfig)){\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\n                    }else{\n                        if(pciConfig.data){\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\n                        }else if(pciConfig.file){\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\n                        }\n                    }\n                });\n            }\n\n            require(reqConfigs, function(){\n\n                var runtimeModules = {};\n\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\n\n                if(manifest.model === 'IMSPCI'){\n\n                    modules = _.reduce(arguments, function(acc, conf){\n                        return _.defaults(acc, conf.paths || {});\n                    }, modules);\n\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\n                            runtimeModules[id] = paths;\n                        }\n                    });\n\n                    modules = _.merge(modules, runtimeModules);\n\n                    _.forEach(modules, function(paths, id){\n                        paths = _.isArray(paths) ? paths : [paths];\n                        requireConfigAliases[id] = _.map(paths, function(path){\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\n                        });\n                    });\n                }\n\n                resolve(requireConfigAliases);\n\n            }, reject);\n\n\n        });\n    };\n\n    /**\n     * Evaluate if the given object is a proper portable element provider\n     * @param {Object} provider\n     * @returns {Boolean}\n     */\n    var isPortableElementProvider = function isPortableElementProvider(provider){\n        return (provider && _.isFunction(provider.load));\n    };\n\n    return function portableElementRegistry(methods){\n\n        var _loaded = false;\n        var __providers = {};\n\n        /**\n         * The portable element registry instance\n         * @typedef {portableElementRegistry}\n         */\n        return eventifier(_.defaults(methods || {}, {\n            _registry : {},\n\n            /**\n             * Get a register portable element\n             * @param {String} typeIdentifier\n             * @param {String} version\n             * @returns {Object}\n             */\n            get : function get(typeIdentifier, version){\n\n                if(this._registry[typeIdentifier]){\n                    //check version\n                    if(version){\n                        return _.find(this._registry[typeIdentifier], {version : version});\n                    }else{\n                        //latest\n                        return _.last(this._registry[typeIdentifier]);\n                    }\n                }\n            },\n\n            /**\n             * Register a portable element provider\n             * @param moduleName\n             * @param {String|Object }provider - the portable provider object or module name\n             * @returns {portableElementRegistry}\n             */\n            registerProvider : function registerProvider(moduleName, provider){\n                __providers[moduleName] = isPortableElementProvider(provider) ? provider : null;\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Clear all previously registered providers\n             * @returns {portableElementRegistry}\n             */\n            resetProviders : function resetProviders(){\n                __providers = {};\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Load the providers\n             * @param {Object} [options]\n             * @param {Boolean} [options.reload] - force to reload the registered providers\n             * @returns {Promise}\n             */\n            loadProviders : function loadProviders(options){\n                var self = this;\n                var loadPromise;\n\n                if(_loaded && !options.reload){\n                    loadPromise = Promise.resolve([]);\n                } else {\n                    loadPromise = new Promise(function(resolve, reject) {\n                        var providerLoadingStack = [];\n                        _.forIn(__providers, function(provider, id){\n                            if(provider === null){\n                                providerLoadingStack.push(id);\n                            }\n                        });\n                        _requirejs(providerLoadingStack, function(){\n                            _.each([].slice.call(arguments), function(provider){\n                                if(isPortableElementProvider(provider)){\n                                    __providers[providerLoadingStack.shift()] = provider;\n                                }\n                            });\n                            resolve(__providers);\n                            _loaded = true;\n                            self.trigger('providersloaded', __providers);\n                        }, reject);\n                    });\n                }\n\n                return loadPromise;\n            },\n\n            /**\n             * Get all versions of all portable elements registered\n             * @returns {Object} - all portable elements and their versions\n             */\n            getAllVersions : function getAllVersions(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    all[id] = _.map(versions, 'version');\n                });\n                return all;\n            },\n\n            /**\n             * Get the runtime for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the runtime model\n             */\n            getRuntime : function getRuntime(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    return _.assign(portableElement.runtime, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        model : portableElement.model\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Get the creator model for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the creator model\n             */\n            getCreator : function getCreator(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement && portableElement.creator){\n                    return _.assign(portableElement.creator, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        response : portableElement.response,\n                        model : portableElement.model,\n                        xmlns : portableElement.xmlns\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Returned all enabled created from the registry\n             * @returns {Object} the collection of creators\n             */\n            getLatestCreators : function getLatestCreators(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    var lastVersion = _.last(versions);\n\n                    //check if the portable element is creatable:\n                    if(lastVersion.creator && lastVersion.creator.hook && lastVersion.enabled){\n                        all[id] = lastVersion;\n                    }\n                });\n                return all;\n            },\n\n            /**\n             * Get the baseUrl for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {String} the base url\n             */\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\n                var runtime = this.get(typeIdentifier, version);\n                if(runtime){\n                    return runtime.baseUrl;\n                }\n                return '';\n            },\n\n            /**\n             * Load the runtimes from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadRuntimes : function loadRuntimes(options){\n                var self = this;\n                var loadPromise;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                    loadPromise = self.loadProviders(options).then(function(providers){\n\n                        var loadStack = [];\n\n                        _.forEach(providers, function (provider){\n                            if(provider){//check that the provider is loaded\n                                loadStack.push(provider.load());\n                            }\n                        });\n\n                        //performs the loadings in parallel\n                            return Promise.all(loadStack).then(function (results){//TODO could remove one level of promise\n\n                                var configLoadingStack = [];\n\n                                //update registry\n                                self._registry = _.reduce(results, function (acc, _pcis){\n                                    return _.merge(acc, _pcis);\n                                }, self._registry || {});//incremental loading\n\n                                //pre-configuring the baseUrl of the portable element's source\n                                _.forIn(self._registry, function (versions, typeIdentifier){\n                                    if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                        return true;\n                                    }\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\n                                });\n\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\n                                        return _.merge(acc, paths);\n                                    }, {});\n\n                                    //save the required libs name => path to global require alias\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\n                                    _requirejs.config({paths : requireConfigAliases});\n                                });\n                            });\n\n                    });\n\n\n                loadPromise\n                    .then(function() {\n                        self.trigger('runtimesloaded');\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * Load the creators from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadCreators : function loadCreators(options){\n                var loadPromise;\n                var self = this;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                loadPromise = self.loadRuntimes(options).then(function(){\n                    var requiredCreatorHooks = [];\n\n                    _.forIn(self._registry, function (versions, typeIdentifier){\n                        var portableElementModel = self.get(typeIdentifier);//currently use the latest version only\n                        if(portableElementModel.creator && portableElementModel.creator.hook){\n                            if(portableElementModel.enabled){\n                                if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }else{\n                                if(!_.isArray(options.include) || _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }\n                            requiredCreatorHooks.push(portableElementModel.creator.hook.replace(/\\.js$/, ''));\n                        }\n                    });\n\n                    if(requiredCreatorHooks.length){\n                        return new Promise(function(resolve, reject){\n                            //@todo support caching?\n                            _requirejs(requiredCreatorHooks, function (){\n                                var creators = {};\n                                _.each(arguments, function (creatorHook){\n                                    var id = creatorHook.getTypeIdentifier();\n                                    var portableElementModel = self.get(id);\n                                    var i = _.findIndex(self._registry[id], {version : portableElementModel.version});\n                                    if(i < 0){\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + portableElementModel.version);\n                                    }else{\n                                        self._registry[id][i].creator.module = creatorHook;\n                                        creators[id] = creatorHook;\n                                    }\n                                });\n                                resolve(creators);\n                            }, reject);\n                        });\n                    }else{\n                        return Promise.resolve({});\n                    }\n\n                });\n\n                loadPromise\n                    .then(function(creators) {\n                        self.trigger('creatorsloaded', creators);\n                        return creators;\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * enable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            enable: function enable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = true;\n                }\n                return this;\n            },\n\n            /**\n             * disable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            disable: function disable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = false;\n                }\n                return this;\n            },\n\n            /**\n             * check is a portable element is enabled\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            isEnabled: function isEnabled(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                return (portableElement && portableElement.enabled === true);\n            }\n        }));\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Utility to retrieve and manipualte QTI Elements\n */\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n', 'services/features'], function ($, _, __, featuresService) {\n    'use strict';\n\n    const QtiElements = {\n        classes: {\n            //abstract classes:\n            itemBody: { parents: ['bodyElement'], contains: ['block'], abstract: true },\n            atomicBlock: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            atomicInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            simpleBlock: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['block'], abstract: true },\n            simpleInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            flowStatic: { parents: ['flow'], abstract: true },\n            blockStatic: { parents: ['block'], abstract: true },\n            inlineStatic: { parents: ['inline'], abstract: true },\n            flow: { parents: ['objectFlow'], abstract: true },\n            tableCell: { parents: ['bodyElement'], contains: ['flow'], abstract: true },\n            //html-derived qti elements:\n            caption: { parents: ['bodyElement'], contains: ['inline'], xhtml: true },\n            col: { parents: ['bodyElement'], xhtml: true },\n            colgroup: { parents: ['bodyElement'], contains: ['col'], xhtml: true },\n            div: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['flow'], xhtml: true },\n            dl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['dlElement'], xhtml: true },\n            dt: { parents: ['dlElement'], contains: ['inline'], xhtml: true },\n            dd: { parents: ['dlElement'], contains: ['flow'], xhtml: true },\n            hr: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], xhtml: true },\n            math: { parents: ['blockStatic', 'flowStatic', 'inlineStatic'], xhtml: true },\n            li: { parents: ['bodyElement'], contains: ['flow'], xhtml: true },\n            ol: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            ul: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            object: { parents: ['bodyElement', 'flowStatic', 'inlineStatic'], contains: ['objectFlow'], xhtml: true },\n            param: { parents: ['objectFlow'], xhtml: true },\n            table: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'],\n                xhtml: true\n            },\n            tbody: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            tfoot: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            thead: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            td: { parents: ['tableCell'], xhtml: true },\n            th: { parents: ['tableCell'], xhtml: true },\n            tr: { parents: ['bodyElement'], contains: ['tableCell'], xhtml: true },\n            a: { parents: ['simpleInline'], xhtml: true },\n            abbr: { parents: ['simpleInline'], xhtml: true },\n            acronym: { parents: ['simpleInline'], xhtml: true },\n            b: { parents: ['simpleInline'], xhtml: true },\n            big: { parents: ['simpleInline'], xhtml: true },\n            cite: { parents: ['simpleInline'], xhtml: true },\n            code: { parents: ['simpleInline'], xhtml: true },\n            dfn: { parents: ['simpleInline'], xhtml: true },\n            em: { parents: ['simpleInline'], xhtml: true },\n            i: { parents: ['simpleInline'], xhtml: true },\n            kbd: { parents: ['simpleInline'], xhtml: true },\n            q: { parents: ['simpleInline'], xhtml: true },\n            samp: { parents: ['simpleInline'], xhtml: true },\n            small: { parents: ['simpleInline'], xhtml: true },\n            span: { parents: ['simpleInline'], xhtml: true },\n            strong: { parents: ['simpleInline'], xhtml: true },\n            sub: { parents: ['simpleInline'], xhtml: true },\n            sup: { parents: ['simpleInline'], xhtml: true },\n            tt: { parents: ['simpleInline'], xhtml: true },\n            var: { parents: ['simpleInline'], xhtml: true },\n            blockquote: { parents: ['simpleBlock'], xhtml: true },\n            address: { parents: ['atomicBlock'], xhtml: true },\n            h1: { parents: ['atomicBlock'], xhtml: true },\n            h2: { parents: ['atomicBlock'], xhtml: true },\n            h3: { parents: ['atomicBlock'], xhtml: true },\n            h4: { parents: ['atomicBlock'], xhtml: true },\n            h5: { parents: ['atomicBlock'], xhtml: true },\n            h6: { parents: ['atomicBlock'], xhtml: true },\n            p: { parents: ['atomicBlock'], xhtml: true },\n            pre: { parents: ['atomicBlock'], xhtml: true },\n            img: { parents: ['atomicInline'], xhtml: true, attributes: ['src', 'alt', 'longdesc', 'height', 'width'] },\n            br: { parents: ['atomicInline'], xhtml: true },\n            //qti elements:\n            infoControl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], qti: true },\n            textRun: { parents: ['inlineStatic', 'flowstatic'], qti: true },\n            feedbackInline: { parents: ['simpleInline', 'feedbackElement'], qti: true },\n            feedbackBlock: { parents: ['simpleBlock'], qti: true },\n            rubricBlock: { parents: ['simpleBlock'], qti: true }, //strange qti 2.1 exception, marked as simpleBlock instead of\n            blockInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            inlineInteraction: { parents: ['inline', 'flow', 'interaction'], qti: true },\n            gap: { parents: ['inlineStatic'], qti: true },\n            hottext: { parents: ['flowstatic', 'inlineStatic'], contains: ['inlineStatic'], qti: true },\n            printedVariable: { parents: ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], qti: true },\n            prompt: { parents: ['bodyElement'], contains: ['inlineStatic'], qti: true },\n            templateElement: { parents: ['bodyElement'], qti: true },\n            templateBlock: {\n                parents: ['blockStatic', 'flowStatic', 'templateElement'],\n                contains: ['blockStatic'],\n                qti: true\n            },\n            templateInline: {\n                parents: ['inlineStatic', 'flowStatic', 'templateElement'],\n                contains: ['inlineStatic'],\n                qti: true\n            },\n            choiceInteraction: { parents: ['blockInteraction'], qti: true },\n            associateInteraction: { parents: ['blockInteraction'], qti: true },\n            orderInteraction: { parents: ['blockInteraction'], qti: true },\n            matchInteraction: { parents: ['blockInteraction'], qti: true },\n            hottextInteraction: { parents: ['blockInteraction'], qti: true },\n            gapMatchInteraction: { parents: ['blockInteraction'], qti: true },\n            mediaInteraction: { parents: ['blockInteraction'], qti: true },\n            sliderInteraction: { parents: ['blockInteraction'], qti: true },\n            uploadInteraction: { parents: ['blockInteraction'], qti: true },\n            drawingInteraction: { parents: ['blockInteraction'], qti: true },\n            graphicInteraction: { parents: ['blockInteraction'], qti: true },\n            hotspotInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicAssociateInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicOrderInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicGapMatchInteraction: { parents: ['graphicInteraction'], qti: true },\n            selectPointInteraction: { parents: ['graphicInteraction'], qti: true },\n            textEntryInteraction: { parents: ['stringInteraction', 'inlineInteraction'], qti: true },\n            extendedTextInteraction: { parents: ['stringInteraction', 'blockInteraction'], qti: true },\n            inlineChoiceInteraction: { parents: ['inlineInteraction'], qti: true },\n            endAttemptInteraction: { parents: ['inlineInteraction'], qti: true },\n            customInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            _container: { parents: ['block'], qti: true } //a pseudo class introduced in TAO\n        },\n\n        cache: { containable: {}, children: {}, parents: {} },\n\n        getAllowedContainersElements(qtiClass, $container) {\n            const classes = QtiElements.getAllowedContainers(qtiClass);\n            let jqSelector = '';\n            for (let i in classes) {\n                if (!classes[i].qti) {\n                    //html element:\n                    jqSelector += `${classes[i]}, `;\n                }\n            }\n\n            if (jqSelector) {\n                jqSelector = jqSelector.substring(0, jqSelector.length - 2);\n            }\n\n            return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\n        },\n\n        getAllowedContainers(qtiClass) {\n            let ret;\n            if (QtiElements.cache.containable[qtiClass]) {\n                ret = QtiElements.cache.containable[qtiClass];\n            } else {\n                ret = [];\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (model.contains) {\n                        const intersect = _.intersection(model.contains, parents);\n                        if (intersect.length) {\n                            if (!model.abstract) {\n                                ret.push(aClass);\n                            }\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\n                        }\n                    }\n                }\n                QtiElements.cache.containable[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getAllowedContents(qtiClass, recursive, checked) {\n            let ret = [];\n            checked = checked || {};\n\n            const model = QtiElements.classes[qtiClass];\n            if (model && model.contains) {\n                for (let i in model.contains) {\n                    const contain = model.contains[i];\n                    if (!checked[contain]) {\n                        checked[contain] = true;\n\n                        //qtiClass can contain everything defined as its contents\n                        ret.push(contain);\n\n                        //qtiClass can also contain subclass of its contents\n                        const children = QtiElements.getChildClasses(contain, true);\n                        for (let j in children) {\n                            const child = children[j];\n                            if (!checked[child]) {\n                                checked[child] = true;\n\n                                ret.push(child);\n\n                                //adding children allowed contents depends on the option \"recursive\"\n                                if (recursive) {\n                                    ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\n                                }\n                            }\n                        }\n\n                        //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\n                        }\n                    }\n                }\n            }\n\n            //qtiClass can contain all allowed contents of its parents:\n            const parents = QtiElements.getParentClasses(qtiClass, true);\n            for (let i in parents) {\n                ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\n            }\n\n            return _.uniq(ret, false);\n        },\n\n        isAllowedClass(qtiContainerClass, qtiContentClass) {\n            const allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\n            return _.indexOf(allowedClasses, qtiContentClass) >= 0;\n        },\n\n        getParentClasses(qtiClass, recursive) {\n            let ret;\n            if (recursive && QtiElements.cache.parents[qtiClass]) {\n                ret = QtiElements.cache.parents[qtiClass];\n            } else {\n                ret = [];\n                if (QtiElements.classes[qtiClass]) {\n                    ret = QtiElements.classes[qtiClass].parents;\n                    if (recursive) {\n                        for (let i in ret) {\n                            ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\n                        }\n                        ret = _.uniq(ret, false);\n                    }\n                }\n                QtiElements.cache.parents[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getChildClasses(qtiClass, recursive, type) {\n            let ret;\n            const cacheType = type ? type : 'all';\n            if (recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]) {\n                ret = QtiElements.cache.children[qtiClass][cacheType];\n            } else {\n                ret = [];\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (_.indexOf(model.parents, qtiClass) >= 0) {\n                        if (type) {\n                            if (model[type]) {\n                                ret.push(aClass);\n                            }\n                        } else {\n                            ret.push(aClass);\n                        }\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\n                        }\n                    }\n                }\n                if (!QtiElements.cache.children[qtiClass]) {\n                    QtiElements.cache.children[qtiClass] = {};\n                }\n                QtiElements.cache.children[qtiClass][cacheType] = ret;\n            }\n\n            return ret;\n        },\n\n        isBlock(qtiClass) {\n            return QtiElements.is(qtiClass, 'block');\n        },\n\n        isInline(qtiClass) {\n            return QtiElements.is(qtiClass, 'inline');\n        },\n\n        is(qtiClass, topClass) {\n            if (qtiClass === topClass) {\n                return true;\n            } else {\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                return _.indexOf(parents, topClass) >= 0;\n            }\n        },\n\n        /**\n         * Check wether an element is visible, using the feature viibility service\n         * @param {string} qtiClass - see the list of available classes\n         * @returns {boolean} true by default and false only if the element is explicitely registered as hidden\n         */\n        isVisible(qtiClass) {\n            if (this.is(qtiClass, 'customInteraction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/customInteraction/${qtiClass.replace(/Interaction$/, '').replace(/^customInteraction\\./, '')}`);\n            }\n            if (this.is(qtiClass, 'interaction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/interaction/${qtiClass.replace(/Interaction$/, '')}`);\n            }\n            return true;\n        },\n\n        /**\n         * Get the list of available elements for the authoring side\n         * The list of those element is statically defined, but we filter out elements that should be visible\n         * @returns {Object} the available elements\n         */\n        getAvailableAuthoringElements() {\n            const tagTitles = {\n                commonInteractions: __('Common Interactions'),\n                inlineInteractions: __('Inline Interactions'),\n                graphicInteractions: __('Graphic Interactions')\n            };\n\n            const authoringElements = {\n                choiceInteraction: {\n                    label: __('Choice Interaction'),\n                    description: __(\n                        'Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'\n                    ),\n                    icon: 'icon-choice',\n                    short: __('Choice'),\n                    qtiClass: 'choiceInteraction',\n                    tags: [tagTitles.commonInteractions, 'mcq'],\n                    group: 'common-interactions'\n                },\n                orderInteraction: {\n                    label: __('Order Interaction'),\n                    icon: 'icon-order',\n                    description: __('Arrange a list of choices in the correct order.'),\n                    short: __('Order'),\n                    qtiClass: 'orderInteraction',\n                    tags: [tagTitles.commonInteractions, 'ordering'],\n                    group: 'common-interactions'\n                },\n                associateInteraction: {\n                    label: __('Associate Interaction'),\n                    icon: 'icon-associate',\n                    description: __('Create pair(s) from a series of choices.'),\n                    short: __('Associate'),\n                    qtiClass: 'associateInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                matchInteraction: {\n                    label: __('Match Interaction'),\n                    icon: 'icon-match',\n                    description: __(\n                        'Create association(s) between two sets of choices displayed in a table (row and column).'\n                    ),\n                    short: __('Match'),\n                    qtiClass: 'matchInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                hottextInteraction: {\n                    label: __('Hottext Interaction'),\n                    icon: 'icon-hottext',\n                    description: __('Select one or more text parts (hottext) within a text.'),\n                    short: __('Hottext'),\n                    qtiClass: 'hottextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                gapMatchInteraction: {\n                    label: __('Gap Match Interaction'),\n                    icon: 'icon-gap-match',\n                    description: __(' Fill in the gaps in a text from a set of choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'gapMatchInteraction',\n                    tags: [tagTitles.commonInteractions, 'text', 'association'],\n                    group: 'common-interactions'\n                },\n                sliderInteraction: {\n                    label: __('Slider Interaction'),\n                    icon: 'icon-slider',\n                    description: __('Select a value within a numerical range.'),\n                    short: __('Slider'),\n                    qtiClass: 'sliderInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                extendedTextInteraction: {\n                    label: __('Extended Text Interaction'),\n                    icon: 'icon-extended-text',\n                    description: __(\n                        'Collect open-ended information in one or more text area(s) (strings or numeric values).'\n                    ),\n                    short: __('Extended Text'),\n                    qtiClass: 'extendedTextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                uploadInteraction: {\n                    label: __('File Upload Interaction'),\n                    icon: 'icon-upload',\n                    description: __('Upload a file (e.g. document, picture...) as a response.'),\n                    short: __('File Upload'),\n                    qtiClass: 'uploadInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                mediaInteraction: {\n                    label: __('Media Interaction'),\n                    icon: 'icon-media',\n                    description: __(\n                        'Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'\n                    ),\n                    short: __('Media'),\n                    qtiClass: 'mediaInteraction',\n                    tags: [tagTitles.commonInteractions, 'media'],\n                    group: 'common-interactions'\n                },\n                _container: {\n                    label: __('Text Block'),\n                    icon: 'icon-font',\n                    description: __(\n                        'Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'\n                    ),\n                    short: __('Block'),\n                    qtiClass: '_container',\n                    tags: [tagTitles.inlineInteractions, 'text'],\n                    group: 'inline-interactions'\n                },\n                inlineChoiceInteraction: {\n                    label: __('Inline Choice Interaction'),\n                    icon: 'icon-inline-choice',\n                    description: __('Select a choice from a drop-down list.'),\n                    short: __('Inline Choice'),\n                    qtiClass: 'inlineChoiceInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'mcq'],\n                    group: 'inline-interactions'\n                },\n                textEntryInteraction: {\n                    label: __('Text Entry Interaction'),\n                    icon: 'icon-text-entry',\n                    description: __(\n                        'Collect open-ended information in a short text input (strings or numeric values).'\n                    ),\n                    short: __('Text Entry'),\n                    qtiClass: 'textEntryInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'text'],\n                    group: 'inline-interactions'\n                },\n                endAttemptInteraction: {\n                    label: __('End Attempt Interaction'),\n                    icon: 'icon-end-attempt',\n                    description: __('Trigger the end of the item attempt.'),\n                    short: __('End Attempt'),\n                    qtiClass: 'endAttemptInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'button', 'submit'],\n                    group: 'inline-interactions'\n                },\n                hotspotInteraction: {\n                    label: __('Hotspot Interaction'),\n                    icon: 'icon-hotspot',\n                    description: __('Select one or more areas (hotspots) displayed on an picture.'),\n                    short: __('Hotspot'),\n                    qtiClass: 'hotspotInteraction',\n                    tags: [tagTitles.graphicInteractions, 'mcq'],\n                    group: 'graphic-interactions'\n                },\n                graphicOrderInteraction: {\n                    label: __('Graphic Order Interaction'),\n                    icon: 'icon-graphic-order',\n                    description: __('Order the areas (hotspots) displayed on a picture.'),\n                    short: __('Order'),\n                    qtiClass: 'graphicOrderInteraction',\n                    tags: [tagTitles.graphicInteractions, 'ordering'],\n                    group: 'graphic-interactions'\n                },\n                graphicAssociateInteraction: {\n                    label: __('Graphic Associate Interaction'),\n                    icon: 'icon-graphic-associate',\n                    description: __('Create association(s) between areas (hotspots) displayed on a picture.'),\n                    short: __('Associate'),\n                    qtiClass: 'graphicAssociateInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                graphicGapMatchInteraction: {\n                    label: __('Graphic Gap Match Interaction'),\n                    icon: 'icon-graphic-gap',\n                    description: __('Fill in the gaps on a picture with a set of image choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'graphicGapMatchInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                selectPointInteraction: {\n                    label: __('Select Point Interaction'),\n                    icon: 'icon-select-point',\n                    description: __('Position one or more points on a picture (response areas are not displayed).'),\n                    short: __('Select Point'),\n                    qtiClass: 'selectPointInteraction',\n                    tags: [tagTitles.graphicInteractions],\n                    group: 'graphic-interactions'\n                }\n            };\n\n            //filter out hidden elements\n            const availableElements = {};\n            for (const [elementId, element] of Object.entries(authoringElements)) {\n                if (this.isVisible(elementId)) {\n                    availableElements[elementId] = element;\n                }\n            }\n            return availableElements;\n        }\n    };\n\n    return QtiElements;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2022 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\n    'lodash',\n    'i18n',\n    'taoQtiItem/portableElementRegistry/factory/factory',\n    'taoQtiItem/qtiCreator/helper/qtiElements'\n], function (_, __, portableElementRegistry, qtiElements) {\n    'use strict';\n\n    /**\n     * Create a ney interaction registry instance\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\n     *\n     * @returns {Object} registry instance\n     */\n    return function customInteractionRegistry() {\n        return portableElementRegistry({\n            /**\n             * Get the authoring information for a given custom interaction\n             * @param {string} typeIdentifier - the interaction type identifier\n             * @param {Object} [options]\n             * @param {string|number} [options.version] - the interaction version\n             * @param {boolean} [options.enabledOnly] - to only get interaction enabled && visible\n             * @returns {Object} the authoring info\n             */\n            getAuthoringData(typeIdentifier, options = {}) {\n                options = _.defaults(options || {}, { version: 0, enabledOnly: false });\n                const pciModel = this.get(typeIdentifier, options.version);\n                const qtiClass = `customInteraction.${pciModel.typeIdentifier}`;\n                if (\n                    pciModel &&\n                    pciModel.creator &&\n                    pciModel.creator.hook &&\n                    pciModel.creator.icon &&\n                    ((pciModel.enabled && qtiElements.isVisible(qtiClass)) || !options.enabledOnly)\n                ) {\n                    return {\n                        label: pciModel.label, //currently no translation available\n                        icon: pciModel.creator.icon.replace(new RegExp(`^${typeIdentifier}/`), pciModel.baseUrl),\n                        short: pciModel.short,\n                        description: pciModel.description,\n                        qtiClass, //custom interaction is block type\n                        tags: _.union([__('Custom Interactions')], pciModel.tags),\n                        group: 'custom-interactions'\n                    };\n                }\n            }\n        }).on('creatorsloaded', function () {\n            const creators = this.getLatestCreators();\n            _.forEach(creators, function (creator, typeIdentifier) {\n                qtiElements.classes[`customInteraction.${typeIdentifier}`] = {\n                    parents: ['customInteraction'],\n                    qti: true\n                };\n            });\n        });\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of ciRegistry\n    var registry = ciRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory'\n], function (_, portableElementRegistry){\n    'use strict';\n\n    /**\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\n     *\n     * @returns {Object} registry instance\n     */\n    return function infoControlRegistry(){\n        return portableElementRegistry();\n    }\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of icRegistry\n    var registry = icRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\n    'taoQtiItem/portableElementRegistry/ciRegistry',\n    'taoQtiItem/portableElementRegistry/icRegistry'\n], function (ciRegistry, icRegistry) {\n    'use strict';\n\n    function getBaseUrlByIdentifier(typeIdentifier) {\n        if (ciRegistry.get(typeIdentifier)) {\n            return ciRegistry.getBaseUrl(typeIdentifier);\n        }\n        if (icRegistry.get(typeIdentifier)) {\n            return icRegistry.getBaseUrl(typeIdentifier);\n        }\n        return typeIdentifier;\n    }\n\n    //strategy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\n    return {\n        name: 'portableElementLocation',\n        handle: function handlePortableElementLocation(url) {\n\n            if (url.file === url.path) {\n                return getBaseUrlByIdentifier(url.file);\n            } else if (url.source === url.relative) {\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\n                    if (runtimeLocation) {\n                        return runtimeLocation + '/' + relPath;\n                    }\n                    return fullmatch;\n                });\n            }\n        }\n    };\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n     */\r\n\r\n    var itemThemes = themes.get('items');\r\n    var moduleConfig = module.config();\r\n\r\n    //Create asset manager stack\r\n    var assetManager = assetManagerFactory(\r\n        [\r\n            {\r\n                name: 'theme',\r\n                handle: function handleTheme(url) {\r\n                    if (\r\n                        itemThemes &&\r\n                        url.path &&\r\n                        (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))\r\n                    ) {\r\n                        return context.root_url + url.toString();\r\n                    }\r\n                }\r\n            },\r\n            assetStrategies.taomedia,\r\n            assetStrategies.external,\r\n            assetStrategies.base64,\r\n            assetStrategies.itemCssNoCache,\r\n            assetStrategies.baseUrl,\r\n            portableAssetStrategy\r\n        ],\r\n        { baseUrl: '' }\r\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\r\n\r\n    //renderers locations\r\n    var locations = {\r\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\r\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\r\n        _simpleFeedbackRule: false,\r\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\r\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\r\n        outcomeDeclaration: false,\r\n        responseDeclaration: false,\r\n        responseProcessing: false,\r\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\r\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\r\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\r\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\r\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\r\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\r\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\r\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\r\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\r\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\r\n        choiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\r\n        extendedTextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\r\n        orderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\r\n        associateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\r\n        matchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\r\n        textEntryInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\r\n        sliderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\r\n        inlineChoiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\r\n        'simpleChoice.choiceInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\r\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\r\n        hottext: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\r\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\r\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\r\n        'simpleAssociableChoice.matchInteraction':\r\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\r\n        'simpleAssociableChoice.associateInteraction':\r\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\r\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\r\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\r\n        hotspotInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\r\n        hotspotChoice: false,\r\n        gapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\r\n        selectPointInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\r\n        graphicOrderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\r\n        mediaInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\r\n        uploadInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\r\n        graphicGapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\r\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\r\n        graphicAssociateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\r\n        associableHotspot: false,\r\n        customInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\r\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\r\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\r\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\r\n    };\r\n\r\n    var config = {\r\n        name: 'commonRenderer',\r\n        locations: locations,\r\n        options: {\r\n            assetManager: assetManager,\r\n            themes: itemThemes,\r\n            enableDragAndDrop: {\r\n                associate: !!moduleConfig.associateDragAndDrop,\r\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\r\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\r\n                order: !!moduleConfig.orderDragAndDrop\r\n            },\r\n            messages: moduleConfig.messages\r\n        }\r\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Container',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify'], function (Handlebars, __, _, DOMPurify) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<div class=\\\"qti-block\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      return buffer;\n      }\n\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data},helper ? helper.call(depth0, (depth0 && depth0.contentModel), \"blockStatic\", options) : helperMissing.call(depth0, \"equal\", (depth0 && depth0.contentModel), \"blockStatic\", options));\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     */\r\n\r\n    var Container = {\r\n        qtiClass: '_container',\r\n        template: tpl\r\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figcaption',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify'], function (Handlebars, __, _, DOMPurify) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figcaption\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figcaption>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     */\r\n\r\n    var Figcaption = {\r\n        qtiClass: 'figcaption',\r\n        template: tpl\r\n    };\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figure',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figure data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figure>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     */\r\n\r\n    var Figure = {\r\n        qtiClass: 'figure',\r\n        getContainer: containerHelper.get,\r\n        template: tpl,\r\n        render: function(figure) {\r\n            const $figure = containerHelper.get(figure);\r\n            const $img = $figure.find('img');\r\n            if ($img.length) {\r\n                // move width from image to figure\r\n                $figure.css({ width: $img.attr('width') });\r\n                $img.attr('width', '100%');\r\n            }\r\n        }\r\n    };\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Img',['ui/waitForMedia', 'handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (waitForMedia, Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-describedby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-hidden=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-label=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-labelledby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-live=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" role=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<img\\r\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n    data-qti-class=\\\"img\\\"\\r\\n    src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.src)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\r\\n    alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.alt)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby']), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden']), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label']), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby']), {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live']), {hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role), {hash:{},inverse:self.noop,fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    />\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     */\r\n\r\n    var Img = {\r\n        qtiClass: 'img',\r\n        template: tpl,\r\n        getContainer: containerHelper.get,\r\n        render: function render(img, data) {\r\n            return new Promise(function(resolve, reject) {\r\n                containerHelper.get(img).waitForMedia(resolve);\r\n            });\r\n        }\r\n    };\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Include',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify'], function (Handlebars, __, _, DOMPurify) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-include\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\r\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     */\r\n\r\n    var Include = {\r\n        qtiClass: 'include',\r\n        template: tpl\r\n    };\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',['jquery', 'lodash', 'i18n', 'ui/hider', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'interact', 'ui/interactUtils'], function ($$1, _, __, hider, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse, sizeAdapter, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    class=\\\"qti-interaction qti-blockInteraction qti-associateInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\r\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n    data-qti-class=\\\"associateInteraction\\\"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n>\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n    <ul class=\\\"choice-area clearfix  none block-listing solid horizontal source\\\">\\r\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    </ul>\\r\\n    <ul class=\\\"result-area none target clearfix\\\">\\r\\n    </ul>\\r\\n    <div class=\\\"notification-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"hidden incomplete-pair\";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <div class=\\\"target lft\\\"></div>\\r\\n    <div class=\\\"target rgt\\\"></div>\\r\\n</li>\\r\\n\";\n      return buffer;\n      });\n    function pairTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    const setChoice = function(interaction, $choice, $target) {\r\n        const $container = containerHelper.get(interaction);\r\n        const choiceSerial = $choice.data('serial');\r\n        const choice = interaction.getChoice(choiceSerial);\r\n        let usage = $choice.data('usage') || 0;\r\n\r\n        if (!choiceSerial) {\r\n            throw new Error('empty choice serial');\r\n        }\r\n\r\n        //to track number of times a choice is used in a pair\r\n        usage++;\r\n        $choice.data('usage', usage);\r\n\r\n        const _setChoice = function() {\r\n            $target\r\n                .data('serial', choiceSerial)\r\n                .html($choice.html())\r\n                .addClass('filled');\r\n\r\n            if (!interaction.responseMappingMode && choice.attr('matchMax') && usage >= choice.attr('matchMax')) {\r\n                $choice.addClass('deactivated');\r\n            }\r\n        };\r\n\r\n        if ($target.siblings('div').hasClass('filled')) {\r\n            const $resultArea = $$1('.result-area', $container);\r\n            const $pair = $target.parent();\r\n            const thisPairSerial = [$target.siblings('div').data('serial'), choiceSerial];\r\n            let $otherRepeatedPair = $$1();\r\n\r\n            //check if it is not a repeating association!\r\n            $resultArea\r\n                .children()\r\n                .not($pair)\r\n                .each(function() {\r\n                    let $otherPair = $$1(this).children('.filled');\r\n                    if ($otherPair.length === 2) {\r\n                        let otherPairSerial = [$$1($otherPair[0]).data('serial'), $$1($otherPair[1]).data('serial')];\r\n                        if (_.intersection(thisPairSerial, otherPairSerial).length === 2) {\r\n                            $otherRepeatedPair = $otherPair;\r\n                            return false;\r\n                        }\r\n                    }\r\n                });\r\n\r\n            if ($otherRepeatedPair.length === 0) {\r\n                //no repeated pair, so allow the choice to be set:\r\n                _setChoice();\r\n\r\n                //trigger pair made event\r\n                containerHelper.triggerResponseChangeEvent(interaction, {\r\n                    type: 'added',\r\n                    $pair: $pair,\r\n                    choices: thisPairSerial\r\n                });\r\n\r\n                instructionMgr.validateInstructions(interaction, { choice: $choice, target: $target });\r\n\r\n                if (interaction.responseMappingMode || parseInt(interaction.attr('maxAssociations')) === 0) {\r\n                    $pair.removeClass('incomplete-pair');\r\n\r\n                    //append new pair option?\r\n                    if (!$resultArea.children('.incomplete-pair').length) {\r\n                        $resultArea.append(pairTpl({ empty: true }));\r\n                        $resultArea.children('.incomplete-pair').fadeIn(600, function() {\r\n                            hider.show(this);\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                //repeating pair: show it:\r\n\r\n                //@todo add a notification message here in warning\r\n                $otherRepeatedPair.css('border', '1px solid orange');\r\n                $target.html(__('identical pair already exists')).css({\r\n                    color: 'orange',\r\n                    border: '1px solid orange'\r\n                });\r\n                setTimeout(function() {\r\n                    $otherRepeatedPair.removeAttr('style');\r\n                    $target.empty().css({ color: '', border: '' });\r\n                }, 2000);\r\n            }\r\n        } else {\r\n            _setChoice();\r\n        }\r\n    };\r\n\r\n    const unsetChoice = function(interaction, $filledChoice, animate, triggerChange) {\r\n        const $container = containerHelper.get(interaction);\r\n        const choiceSerial = $filledChoice.data('serial');\r\n        const $choice = $container.find('.choice-area [data-serial=' + choiceSerial + ']');\r\n        const $parent = $filledChoice.parent();\r\n        const $sibling = $container.find(\r\n            '.choice-area [data-serial=' + $filledChoice.siblings('.target').data('serial') + ']'\r\n        );\r\n        const isNumberOfMaxAssociationsZero = parseInt(interaction.attr('maxAssociations')) === 0;\r\n        let usage = $choice.data('usage') || 0;\r\n\r\n        //decrease the  use for this choice\r\n        usage--;\r\n\r\n        $choice.data('usage', usage).removeClass('deactivated');\r\n\r\n        $filledChoice\r\n            .removeClass('filled')\r\n            .removeData('serial')\r\n            .empty();\r\n\r\n        if (!interaction.swapping) {\r\n            if (triggerChange !== false) {\r\n                //a pair with one single element is not valid, so consider the response to be modified:\r\n                containerHelper.triggerResponseChangeEvent(interaction, {\r\n                    type: 'removed',\r\n                    $pair: $filledChoice.parent()\r\n                });\r\n                instructionMgr.validateInstructions(interaction, { choice: $choice });\r\n            }\r\n\r\n            // if we are removing the sibling too, update its usage\r\n            // but only if number of maximum assotiations is zero\r\n            if (isNumberOfMaxAssociationsZero) {\r\n                $sibling.data('usage', $sibling.data('usage') - 1).removeClass('deactivated');\r\n            }\r\n\r\n            //completely empty pair:\r\n            if (!$choice.siblings('div').hasClass('filled') && (isNumberOfMaxAssociationsZero || interaction.responseMappingMode)) {\r\n                //shall we remove it?\r\n                if (!$parent.hasClass('incomplete-pair')) {\r\n                    if (animate) {\r\n                        $parent.addClass('removing').fadeOut(500, function() {\r\n                            $$1(this).remove();\r\n                        });\r\n                    } else {\r\n                        $parent.remove();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const getChoice = function(interaction, identifier) {\r\n        const $container = containerHelper.get(interaction);\r\n\r\n        //warning: do not use selector data-identifier=identifier because data-identifier may change dynamically\r\n        const choice = interaction.getChoiceByIdentifier(identifier);\r\n        if (!choice) {\r\n            throw new Error('cannot find a choice with the identifier : ' + identifier);\r\n        }\r\n        return $$1('.choice-area [data-serial=' + choice.getSerial() + ']', $container);\r\n    };\r\n\r\n    const renderEmptyPairs = function(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        const max = parseInt(interaction.attr('maxAssociations'));\r\n        const $resultArea = $$1('.result-area', $container);\r\n\r\n        if (interaction.responseMappingMode || max === 0) {\r\n            $resultArea.append(pairTpl({ empty: true }));\r\n            hider.show($resultArea.children('.incomplete-pair'));\r\n        } else {\r\n            for (let i = 0; i < max; i++) {\r\n                $resultArea.append(pairTpl());\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Builds a scroll observer that will make sure the dragged element keeps an accurate positioning\r\n     * @param {jQuery} $scrollContainer\r\n     * @returns {scrollObserver}\r\n     */\r\n    const scrollObserverFactory = function scrollObserverFactory($scrollContainer) {\r\n        let currentDraggable = null;\r\n        let beforeY = 0;\r\n        let beforeX = 0;\r\n        let afterY = 0;\r\n        let afterX = 0;\r\n\r\n        // reset the scroll observer context\r\n        function resetScrollObserver() {\r\n            currentDraggable = null;\r\n            beforeY = 0;\r\n            beforeX = 0;\r\n            afterY = 0;\r\n            afterX = 0;\r\n        }\r\n\r\n        // keep the position of the dragged element accurate with the scroll position\r\n        function onScrollCb() {\r\n            let x;\r\n            let y;\r\n            if (currentDraggable) {\r\n                beforeY = afterY;\r\n                beforeX = afterX;\r\n\r\n                if (afterY === 0 && beforeY === 0)\r\n                    beforeY = this.scrollTop;\r\n                if (afterX === 0 && beforeX === 0)\r\n                    beforeX = this.scrollLeft;\r\n\r\n                afterY = this.scrollTop;\r\n                afterX = this.scrollLeft;\r\n\r\n                y = (parseInt(currentDraggable.getAttribute('data-y'), 10) || 0) + (afterY - beforeY);\r\n                x = (parseInt(currentDraggable.getAttribute('data-x'), 10) || 0) + (afterX - beforeX);\r\n\r\n                // translate the element\r\n                currentDraggable.style.webkitTransform = currentDraggable.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\r\n\r\n                // update the position attributes\r\n                currentDraggable.setAttribute('data-x', x);\r\n                currentDraggable.setAttribute('data-y', y);\r\n            }\r\n        }\r\n\r\n        // find the scroll container within the parents if any\r\n        $scrollContainer.parents().each(function findScrollContainer() {\r\n            const $el = $$1(this);\r\n            const ovf = $el.css('overflow');\r\n            if (ovf !== 'hidden' && ovf !== 'visible') {\r\n                $scrollContainer = $el;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        // make sure the drop zones will follow the scroll\r\n        interact.dynamicDrop(true);\r\n\r\n        /**\r\n         * @typedef {Object} scrollObserver\r\n         */\r\n        return {\r\n            /**\r\n             * Gets the scroll container\r\n             * @returns {jQuery}\r\n             */\r\n            getScrollContainer: function getScrollContainer() {\r\n                return $scrollContainer;\r\n            },\r\n\r\n            /**\r\n             * Initializes the scroll observer while dragging a choice\r\n             * @param {HTMLElement|jQuery} draggedElement\r\n             */\r\n            start: function start(draggedElement) {\r\n                resetScrollObserver();\r\n                currentDraggable = draggedElement instanceof $$1 ? draggedElement.get(0) : draggedElement;\r\n                $scrollContainer.on('scroll.scrollObserver', _.throttle(onScrollCb, 50));\r\n            },\r\n\r\n            /**\r\n             * Tears down the the scroll observer once the dragging is done\r\n             */\r\n            stop: function stop() {\r\n                $scrollContainer.off('.scrollObserver');\r\n                resetScrollObserver();\r\n            }\r\n        };\r\n    };\r\n    const _getRawResponse = function(interaction) {\r\n        const response = [];\r\n        const $container = containerHelper.get(interaction);\r\n        $$1('.result-area>li', $container).each(function() {\r\n            const pair = [];\r\n            $$1(this)\r\n                .find('div')\r\n                .each(function() {\r\n                    const serial = $$1(this).data('serial');\r\n                    if (serial && !/^qtiobject_/.test(serial) && !/^object_/.test(serial)) {\r\n                        pair.push(interaction.getChoice(serial).id());\r\n                    }\r\n                });\r\n            if (pair.length === 2) {\r\n                response.push(pair);\r\n            }\r\n        });\r\n        return response;\r\n    };\r\n    const _setInstructions = function(interaction) {\r\n        const min = parseInt(interaction.attr('minAssociations'), 10);\r\n        const max = parseInt(interaction.attr('maxAssociations'), 10);\r\n\r\n        //infinite association:\r\n        if (min === 0) {\r\n            if (max === 0) {\r\n                instructionMgr.appendInstruction(interaction, __('You may make as many association pairs as you want.'));\r\n            }\r\n        } else {\r\n            if (max === 0) {\r\n                instructionMgr.appendInstruction(interaction, __('The maximum number of association is unlimited.'));\r\n            }\r\n            //the max value is implicit since the appropriate number of empty pairs have already been created\r\n            let msg = __('You need to make') + ' ';\r\n            msg += min > 1 ? __('at least') + ' ' + min + ' ' + __('association pairs') : __('one association pair');\r\n            instructionMgr.appendInstruction(interaction, msg, function() {\r\n                if (_getRawResponse(interaction).length >= min) {\r\n                    this.setLevel('success');\r\n                } else {\r\n                    this.reset();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    const render = function(interaction) {\r\n        const self = this;\r\n\r\n        return new Promise(function(resolve) {\r\n            const $container = containerHelper.get(interaction);\r\n            const $choiceArea = $container.find('.choice-area');\r\n            const $resultArea = $container.find('.result-area');\r\n\r\n            let $activeChoice = null;\r\n            let scrollObserver = null;\r\n\r\n            let isDragAndDropEnabled;\r\n            let dragOptions;\r\n            let dropOptions;\r\n            let scaleX, scaleY;\r\n\r\n            let $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\r\n\r\n            let choiceSelector = $choiceArea.selector + ' >li';\r\n            let resultSelector = $resultArea.selector + ' >li>div';\r\n            let binSelector = $container.selector + ' .remove-choice';\r\n\r\n            let _getChoice = function(serial) {\r\n                return $choiceArea.find('[data-serial=' + serial + ']');\r\n            };\r\n\r\n            /**\r\n             * @todo Tried to store $resultArea.find[...] in a variable but this fails\r\n             * @param $choice\r\n             * @param $target\r\n             * @private\r\n             */\r\n            const _setChoice = function($choice, $target) {\r\n                setChoice(interaction, $choice, $target);\r\n                sizeAdapter.adaptSize(\r\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\r\n                );\r\n            };\r\n\r\n            const _resetSelection = function() {\r\n                if ($activeChoice) {\r\n                    $resultArea.find('.remove-choice').remove();\r\n                    $activeChoice.removeClass('active');\r\n                    $container.find('.empty').removeClass('empty');\r\n                    $activeChoice = null;\r\n                }\r\n            };\r\n\r\n            const _unsetChoice = function($choice) {\r\n                unsetChoice(interaction, $choice, true);\r\n                sizeAdapter.adaptSize(\r\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\r\n                );\r\n            };\r\n\r\n            const _isInsertionMode = function() {\r\n                return $activeChoice && $activeChoice.data('identifier');\r\n            };\r\n\r\n            const _isModeEditing = function() {\r\n                return $activeChoice && !$activeChoice.data('identifier');\r\n            };\r\n            const _activateChoice = function($choice) {\r\n                _resetSelection();\r\n                $activeChoice = $choice;\r\n                $choice.addClass('active');\r\n                $resultArea.find('>li>.target').addClass('empty');\r\n            };\r\n\r\n            const _handleChoiceActivate = function($target) {\r\n                if ($target.hasClass('deactivated')) {\r\n                    return;\r\n                }\r\n\r\n                if (_isModeEditing()) {\r\n                    //swapping:\r\n                    interaction.swapping = true;\r\n                    _unsetChoice($activeChoice);\r\n                    _setChoice($target, $activeChoice);\r\n                    _resetSelection();\r\n                    interaction.swapping = false;\r\n                } else {\r\n                    if ($target.hasClass('active')) {\r\n                        _resetSelection();\r\n                    } else {\r\n                        _activateChoice($target);\r\n                    }\r\n                }\r\n            };\r\n            const _activateResult = function($target) {\r\n                const targetSerial = $target.data('serial');\r\n\r\n                $activeChoice = $target;\r\n                $activeChoice.addClass('active');\r\n\r\n                $resultArea\r\n                    .find('>li>.target')\r\n                    .filter(function() {\r\n                        return $$1(this).data('serial') !== targetSerial;\r\n                    })\r\n                    .addClass('empty');\r\n\r\n                $choiceArea\r\n                    .find('>li:not(.deactivated)')\r\n                    .filter(function() {\r\n                        return $$1(this).data('serial') !== targetSerial;\r\n                    })\r\n                    .addClass('empty');\r\n            };\r\n\r\n            const _handleResultActivate = function($target) {\r\n                let choiceSerial,\r\n                    targetSerial = $target.data('serial');\r\n\r\n                if (_isInsertionMode()) {\r\n                    choiceSerial = $activeChoice.data('serial');\r\n\r\n                    if (targetSerial !== choiceSerial) {\r\n                        if ($target.hasClass('filled')) {\r\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\r\n                        }\r\n                        //set choices:\r\n                        if (targetSerial) {\r\n                            _unsetChoice($target);\r\n                        }\r\n                        _setChoice($activeChoice, $target);\r\n\r\n                        //always reset swapping mode after the choice is set\r\n                        interaction.swapping = false;\r\n                    }\r\n\r\n                    _resetSelection();\r\n                } else if (_isModeEditing()) {\r\n                    choiceSerial = $activeChoice.data('serial');\r\n\r\n                    if (targetSerial !== choiceSerial) {\r\n                        if ($target.hasClass('filled') || $activeChoice.siblings('div')[0] === $target[0]) {\r\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\r\n                        }\r\n\r\n                        _unsetChoice($activeChoice);\r\n                        if (targetSerial) {\r\n                            //swapping:\r\n                            _unsetChoice($target);\r\n                            _setChoice(_getChoice(targetSerial), $activeChoice);\r\n                        }\r\n                        _setChoice(_getChoice(choiceSerial), $target);\r\n\r\n                        //always reset swapping mode after the choice is set\r\n                        interaction.swapping = false;\r\n                    }\r\n\r\n                    _resetSelection();\r\n                } else if (targetSerial) {\r\n                    _activateResult($target);\r\n                    $target.append($bin);\r\n                }\r\n            };\r\n\r\n            // Point & click handlers\r\n\r\n            interact($container.selector).on('tap', function(e) {\r\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n                if (\r\n                    $$1(e.currentTarget)\r\n                        .closest('.qti-item')\r\n                        .hasClass('prevent-click-handler')\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                _resetSelection();\r\n            });\r\n\r\n            interact($choiceArea.selector + ' >li').on('tap', function(e) {\r\n                const $target = $$1(e.currentTarget);\r\n\r\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\r\n                    return;\r\n                }\r\n\r\n                e.stopPropagation();\r\n                _handleChoiceActivate($target);\r\n                e.preventDefault();\r\n            });\r\n\r\n            interact($resultArea.selector + ' >li>div').on('tap', function(e) {\r\n                const $target = $$1(e.currentTarget);\r\n\r\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\r\n                    return;\r\n                }\r\n\r\n                e.stopPropagation();\r\n                _handleResultActivate($target);\r\n                e.preventDefault();\r\n            });\r\n\r\n            interact(binSelector).on('tap', function(e) {\r\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n                if (\r\n                    $$1(e.currentTarget)\r\n                        .closest('.qti-item')\r\n                        .hasClass('prevent-click-handler')\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                e.stopPropagation();\r\n                _unsetChoice($activeChoice);\r\n                _resetSelection();\r\n                e.preventDefault();\r\n            });\r\n\r\n            if (!interaction.responseMappingMode) {\r\n                _setInstructions(interaction);\r\n            }\r\n\r\n            // Drag & drop handlers\r\n\r\n            if (self.getOption && self.getOption('enableDragAndDrop') && self.getOption('enableDragAndDrop').associate) {\r\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').associate;\r\n            }\r\n\r\n            function _iFrameDragFix(draggableSelector, target) {\r\n                interactUtils.iFrameDragFixOn(function() {\r\n                    let $activeDrop = $$1(resultSelector + '.dropzone');\r\n                    if ($activeDrop.length) {\r\n                        interact(resultSelector).fire({\r\n                            type: 'drop',\r\n                            target: $activeDrop.eq(0),\r\n                            relatedTarget: target\r\n                        });\r\n                    }\r\n                    $activeDrop = $$1(choiceSelector + '.dropzone');\r\n                    if ($activeDrop.length) {\r\n                        interact(choiceSelector + '.empty').fire({\r\n                            type: 'drop',\r\n                            target: $activeDrop.eq(0),\r\n                            relatedTarget: target\r\n                        });\r\n                    }\r\n                    interact(draggableSelector).fire({\r\n                        type: 'dragend',\r\n                        target: target\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (isDragAndDropEnabled) {\r\n                scrollObserver = scrollObserverFactory($container);\r\n                dragOptions = {\r\n                    inertia: false,\r\n                    autoScroll: {\r\n                        container: scrollObserver.getScrollContainer().get(0)\r\n                    },\r\n                    restrict: {\r\n                        restriction: '.qti-interaction',\r\n                        endOnly: false,\r\n                        elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\r\n                    }\r\n                };\r\n\r\n                // makes choices draggables\r\n                interact(choiceSelector + ':not(.deactivated)')\r\n                    .draggable(\r\n                        _.defaults(\r\n                            {\r\n                                onstart: function(e) {\r\n                                    let $target = $$1(e.target);\r\n                                    let scale;\r\n                                    $target.addClass('dragged');\r\n                                    _activateChoice($target);\r\n                                    _iFrameDragFix(choiceSelector + ':not(.deactivated)', e.target);\r\n                                    scale = interactUtils.calculateScale(e.target);\r\n                                    scaleX = scale[0];\r\n                                    scaleY = scale[1];\r\n\r\n                                    scrollObserver.start($activeChoice);\r\n                                },\r\n                                onmove: function(e) {\r\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\r\n                                },\r\n                                onend: function(e) {\r\n                                    let $target = $$1(e.target);\r\n                                    $target.removeClass('dragged');\r\n                                    // The reason of placing delay here is that there was timing conflict between \"draggable\" and \"drag-zone\" elements.\r\n                                    _.delay(function(){\r\n                                        _resetSelection();\r\n                                    });\r\n                                    interactUtils.restoreOriginalPosition($target);\r\n                                    interactUtils.iFrameDragFixOff();\r\n\r\n                                    scrollObserver.stop();\r\n                                }\r\n                            },\r\n                            dragOptions\r\n                        )\r\n                    )\r\n                    .styleCursor(false);\r\n\r\n                // makes results draggables\r\n                interact(resultSelector + '.filled')\r\n                    .draggable(\r\n                        _.defaults(\r\n                            {\r\n                                onstart: function(e) {\r\n                                    let $target = $$1(e.target);\r\n                                    let scale;\r\n                                    $target.addClass('dragged');\r\n                                    _resetSelection();\r\n                                    _activateResult($target);\r\n                                    _iFrameDragFix(resultSelector + '.filled', e.target);\r\n                                    scale = interactUtils.calculateScale(e.target);\r\n                                    scaleX = scale[0];\r\n                                    scaleY = scale[1];\r\n\r\n                                    scrollObserver.start($activeChoice);\r\n                                },\r\n                                onmove: function(e) {\r\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\r\n                                },\r\n                                onend: function(e) {\r\n                                    let $target = $$1(e.target);\r\n                                    $target.removeClass('dragged');\r\n\r\n                                    interactUtils.restoreOriginalPosition($target);\r\n\r\n                                    if ($activeChoice) {\r\n                                        _unsetChoice($activeChoice);\r\n                                    }\r\n                                    _resetSelection();\r\n\r\n                                    interactUtils.iFrameDragFixOff();\r\n\r\n                                    scrollObserver.stop();\r\n                                }\r\n                            },\r\n                            dragOptions\r\n                        )\r\n                    )\r\n                    .styleCursor(false);\r\n\r\n                dropOptions = {\r\n                    overlap: 0.15,\r\n                    ondragenter: function(e) {\r\n                        $$1(e.target).addClass('dropzone');\r\n                        $$1(e.relatedTarget).addClass('droppable');\r\n                    },\r\n                    ondragleave: function(e) {\r\n                        $$1(e.target).removeClass('dropzone');\r\n                        $$1(e.relatedTarget).removeClass('droppable');\r\n                    }\r\n                };\r\n\r\n                // makes hotspots droppables\r\n                interact(resultSelector).dropzone(\r\n                    _.defaults(\r\n                        {\r\n                            ondrop: function(e) {\r\n                                this.ondragleave(e);\r\n                                _handleResultActivate($$1(e.target));\r\n                            }\r\n                        },\r\n                        dropOptions\r\n                    )\r\n                );\r\n\r\n                // makes available choices droppables\r\n                interact(choiceSelector + '.empty').dropzone(\r\n                    _.defaults(\r\n                        {\r\n                            ondrop: function(e) {\r\n                                this.ondragleave(e);\r\n                                _handleChoiceActivate($$1(e.target));\r\n                            }\r\n                        },\r\n                        dropOptions\r\n                    )\r\n                );\r\n            }\r\n\r\n            // interaction init\r\n\r\n            renderEmptyPairs(interaction);\r\n\r\n            sizeAdapter.adaptSize($$1('.result-area .target, .choice-area .qti-choice', $container));\r\n\r\n            resolve();\r\n        });\r\n    };\r\n\r\n    const resetResponse = function(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n\r\n        //destroy selected choice:\r\n        $container.find('.result-area .active').each(function() {\r\n            interactUtils.tapOn(this);\r\n        });\r\n\r\n        $$1('.result-area>li>div', $container).each(function() {\r\n            unsetChoice(interaction, $$1(this), false, false);\r\n        });\r\n\r\n        containerHelper.triggerResponseChangeEvent(interaction);\r\n        instructionMgr.validateInstructions(interaction);\r\n    };\r\n\r\n    const _setPairs = function(interaction, pairs) {\r\n        const $container = containerHelper.get(interaction);\r\n        let addedPairs = 0;\r\n        let $emptyPair = $$1('.result-area>li:first', $container);\r\n        if (pairs && interaction.getResponseDeclaration().attr('cardinality') === 'single' && pairs.length) {\r\n            pairs = [pairs];\r\n        }\r\n        _.each(pairs, function(pair) {\r\n            if ($emptyPair.length) {\r\n                let $divs = $emptyPair.children('div');\r\n                setChoice(interaction, getChoice(interaction, pair[0]), $$1($divs[0]));\r\n                setChoice(interaction, getChoice(interaction, pair[1]), $$1($divs[1]));\r\n                addedPairs++;\r\n                $emptyPair = $emptyPair.next('li');\r\n            } else {\r\n                //the number of pairs exceeds the maximum allowed pairs: break;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return addedPairs;\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    const setResponse = function(interaction, response) {\r\n        _setPairs(interaction, pciResponse.unserialize(response, interaction));\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    const getResponse = function(interaction) {\r\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\r\n    };\r\n\r\n    /**\r\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\r\n     * @param {Object} interaction - the interaction\r\n     */\r\n    const destroy = function(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n\r\n        //remove event\r\n        interact($container.selector).unset();\r\n        interact($container.find('.choice-area').selector + ' >li').unset();\r\n        interact($container.find('.result-area').selector + ' >li>div').unset();\r\n        interact($container.find('.remove-choice').selector).unset();\r\n\r\n        //remove instructions\r\n        instructionMgr.removeInstructions(interaction);\r\n\r\n        $$1('.result-area', $container).empty();\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    const setState = function setState(interaction, state) {\r\n        let $container;\r\n\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n\r\n            //restore order of previously shuffled choices\r\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\r\n                $container = containerHelper.get(interaction);\r\n\r\n                $$1('.choice-area .qti-choice', $container)\r\n                    .sort(function(a, b) {\r\n                        let aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\r\n                        let bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\r\n                        if (aIndex > bIndex) {\r\n                            return 1;\r\n                        }\r\n                        if (aIndex < bIndex) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .detach()\r\n                    .appendTo($$1('.choice-area', $container));\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    const getState = function getState(interaction) {\r\n        let $container;\r\n        let state = {};\r\n        let response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n\r\n        //we store also the choice order if shuffled\r\n        if (interaction.attr('shuffle') === true) {\r\n            $container = containerHelper.get(interaction);\r\n\r\n            state.order = [];\r\n            $$1('.choice-area .qti-choice', $container).each(function() {\r\n                state.order.push($$1(this).data('identifier'));\r\n            });\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the associate interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/AssociateInteraction\r\n     */\r\n    var AssociateInteraction = {\r\n        qtiClass: 'associateInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState,\r\n\r\n        renderEmptyPairs: renderEmptyPairs\r\n    };\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',['lodash', 'jquery', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'util/adaptSize', 'services/features'], function (_, $$1, __, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse, sizeAdapter, adaptSize, features) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n    adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \" allow-elimination-visible\";\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program11(depth0,data) {\n      \n      \n      return \" horizontal\";\n      }\n\n    function program13(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.listStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.listStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program15(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div\\r\\n  \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n  class=\\\"qti-interaction qti-blockInteraction qti-choiceInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowEliminationVisible), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\r\\n  data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n  data-qti-class=\\\"choiceInteraction\\\"\\r\\n  \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n>\\r\\n  \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n  <div class=\\\"instruction-container\\\"></div>\\r\\n  <ol\\r\\n    class=\\\"plain block-listing solid choice-area\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.listStyle), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\r\\n    aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n  >\\r\\n      \";\n      options={hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n  </ol>\\r\\n  <div class=\\\"notification-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    const KEY_CODE_SPACE = 32;\r\n    const KEY_CODE_ENTER = 13;\r\n    const KEY_CODE_LEFT = 37;\r\n    const KEY_CODE_UP = 38;\r\n    const KEY_CODE_RIGHT = 39;\r\n    const KEY_CODE_DOWN = 40;\r\n\r\n    /**\r\n     * Propagate the checked state to the actual input.\r\n     * @type {Function}\r\n     * @param {jQuery} $choiceBox - list element with the class `.qti-choice`\r\n     * @param {Boolean} state\r\n     * @private\r\n     */\r\n    const _triggerInput = function _triggerInput($choiceBox, state) {\r\n        const $input = $choiceBox.find('input:radio,input:checkbox').not('[disabled]').not('.disabled');\r\n        const $choiceBoxes = $choiceBox.add($choiceBox.siblings());\r\n\r\n        if (!$input.length) {\r\n            return;\r\n        }\r\n\r\n        if (!_.isBoolean(state)) {\r\n            state = !$input.prop('checked');\r\n        }\r\n\r\n        $input.prop('checked', state);\r\n        $input.trigger('change');\r\n\r\n        $choiceBoxes.removeClass('user-selected');\r\n        $choiceBoxes\r\n            .find('input:checked')\r\n            .not('[disabled]')\r\n            .not('.disabled')\r\n            .parents('.qti-choice')\r\n            .addClass('user-selected');\r\n    };\r\n\r\n    /**\r\n     * 'pseudo-label' is technically a div that behaves like a label.\r\n     * This allows the usage of block elements inside the fake label\r\n     *\r\n     * @private\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {jQueryElement} $container\r\n     */\r\n    const _pseudoLabel = function _pseudoLabel(interaction, $container) {\r\n        const inputSelector =\r\n            '.qti-choice input:radio:not([disabled]):not(.disabled), .qti-choice input:checkbox:not([disabled]):not(.disabled)';\r\n        $container.off('.commonRenderer');\r\n\r\n        $container\r\n            .on('keydown.commonRenderer.keyNavigation', inputSelector, function (e) {\r\n                const $qtiChoice = $$1(this).closest('.qti-choice');\r\n                const keyCode = e.keyCode ? e.keyCode : e.charCode;\r\n\r\n                if (keyCode === KEY_CODE_UP || keyCode === KEY_CODE_LEFT) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    $qtiChoice\r\n                        .prev('.qti-choice')\r\n                        .find('input:radio,input:checkbox')\r\n                        .not('[disabled]')\r\n                        .not('.disabled')\r\n                        .focus();\r\n                } else if (keyCode === KEY_CODE_DOWN || keyCode === KEY_CODE_RIGHT) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    $qtiChoice\r\n                        .next('.qti-choice')\r\n                        .find('input:radio,input:checkbox')\r\n                        .not('[disabled]')\r\n                        .not('.disabled')\r\n                        .focus();\r\n                }\r\n            })\r\n            .on('keyup.commonRenderer.keyNavigation', inputSelector, function (e) {\r\n                const keyCode = e.keyCode ? e.keyCode : e.charCode;\r\n\r\n                if (keyCode === KEY_CODE_SPACE || keyCode === KEY_CODE_ENTER) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    _triggerInput($$1(this).closest('.qti-choice'));\r\n                }\r\n            });\r\n\r\n        $container.on('click.commonRenderer', '.qti-choice', function (e) {\r\n            const $choiceBox = $$1(this);\r\n            let state;\r\n            const eliminator = e.target.dataset && e.target.dataset.eliminable;\r\n            const input = this.querySelector('.real-label > input');\r\n\r\n            // if the click has been triggered by a keyboard check, prevent this listener to cancel this check\r\n            if (e.originalEvent && $$1(e.originalEvent.target).is('input')) {\r\n                return;\r\n            }\r\n\r\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n            if ($choiceBox.closest('.qti-item').hasClass('prevent-click-handler')) {\r\n                return;\r\n            }\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation(); //required otherwise any tao scoped, form initialization might prevent it from working\r\n\r\n            if (!_.isUndefined(eliminator)) {\r\n                state = false;\r\n                if (eliminator === 'trigger') {\r\n                    this.classList.toggle('eliminated');\r\n                }\r\n            }\r\n\r\n            _triggerInput($choiceBox, state);\r\n\r\n            if (this.classList.contains('eliminated')) {\r\n                input.setAttribute('disabled', 'disabled');\r\n            } else {\r\n                input.removeAttribute('disabled');\r\n            }\r\n\r\n            instructionMgr.validateInstructions(interaction, { choice: $choiceBox });\r\n            containerHelper.triggerResponseChangeEvent(interaction);\r\n            $$1(input).focus();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get the responses from the DOM.\r\n     * @private\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Array} the list of choices identifiers\r\n     */\r\n    const _getRawResponse = function _getRawResponse(interaction) {\r\n        const values = [];\r\n        const $container = containerHelper.get(interaction);\r\n        $$1('.real-label > input[name=response-' + interaction.getSerial() + ']:checked', $container).each(function () {\r\n            values.push($$1(this).val());\r\n        });\r\n        return values;\r\n    };\r\n\r\n    /**\r\n     * Define the instructions for the interaction\r\n     * @private\r\n     * @param {Object} interaction - the interaction instance\r\n     */\r\n    const _setInstructions = function _setInstructions(interaction) {\r\n        const min = interaction.attr('minChoices');\r\n        const max = interaction.attr('maxChoices');\r\n        let msg;\r\n        const choiceCount = _.size(interaction.getChoices());\r\n\r\n        const highlightInvalidInput = function highlightInvalidInput($choice) {\r\n            const $input = $choice.find('.real-label > input');\r\n            const $li = $choice.css('color', '#BA122B');\r\n            const $icon = $choice.find('.real-label > span').css('color', '#BA122B').addClass('cross error');\r\n            let timeout = interaction.data('__instructionTimeout');\r\n\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n            }\r\n            timeout = setTimeout(function () {\r\n                $input.prop('checked', false);\r\n                $li.removeAttr('style');\r\n                $icon.removeAttr('style').removeClass('cross');\r\n                $li.toggleClass('user-selected', false);\r\n                containerHelper.triggerResponseChangeEvent(interaction);\r\n            }, 150);\r\n            interaction.data('__instructionTimeout', timeout);\r\n        };\r\n\r\n        // if maxChoice = 1, use the radio group behaviour\r\n        // if maxChoice = 0, infinite choice possible\r\n        // there are 5 cases according AUT-345 Choice interaction: reduce edge cases constraints\r\n        if (min === 1 && (max === 0 || max === choiceCount || typeof max === 'undefined')) {\r\n            // Multiple Choice: 4.Constraint: Answer required -> minChoices = 1 / maxChoices = 0 -> “You need to select at least 1 choice”\r\n            // Multiple Choice: 5.Constraint: Other constraints -> minChoices = 1 / maxChoices = (N or Disabled)\r\n            msg = __('You need to select at least 1 choice.');\r\n            instructionMgr.appendInstruction(interaction, msg, function () {\r\n                if (_getRawResponse(interaction).length >= 1) {\r\n                    this.setLevel('success');\r\n                } else {\r\n                    this.reset();\r\n                }\r\n            });\r\n        } else if (min >= 1 && max >= 2 && min !== max) {\r\n            // Multiple Choice: 5. Constraint: Other constraints -> “You must select from minChoices to maxChoices choices. for the correct answer“\r\n            msg = __('You need to select from %s to %s choices.', min, max);\r\n            instructionMgr.appendInstruction(interaction, msg, function (data) {\r\n                if (_getRawResponse(interaction).length >= min && _getRawResponse(interaction).length < max) {\r\n                    this.reset();\r\n                    this.setLevel('success');\r\n                } else if (_getRawResponse(interaction).length >= max) {\r\n                    this.setMessage(__('Maximum choices reached'));\r\n                    if (this.checkState('fulfilled')) {\r\n                        this.update({\r\n                            level: 'warning',\r\n                            timeout: 2000,\r\n                            start: function () {\r\n                                if (data && data.choice) {\r\n                                    highlightInvalidInput(data.choice);\r\n                                }\r\n                            },\r\n                            stop: function () {\r\n                                this.setLevel('info');\r\n                            }\r\n                        });\r\n                    }\r\n                    this.setState('fulfilled');\r\n                } else {\r\n                    this.reset();\r\n                }\r\n            });\r\n        } else if (min > 1 && min === max) {\r\n            // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices ≠ Disabled -> “You need to select {minChoices = maxChoices value} choices.“\r\n            msg = __('You need to select %s choices', min);\r\n            instructionMgr.appendInstruction(interaction, msg, function (data) {\r\n                if (_getRawResponse(interaction).length === min) {\r\n                    this.setLevel('success');\r\n                } else if (_getRawResponse(interaction).length >= max) {\r\n                    this.setMessage(__('Maximum choices reached'));\r\n                    this.update({\r\n                        level: 'warning',\r\n                        timeout: 2000,\r\n                        start: function () {\r\n                            if (data && data.choice) {\r\n                                highlightInvalidInput(data.choice);\r\n                            }\r\n                        },\r\n                        stop: function () {\r\n                            this.setLevel('info');\r\n                        }\r\n                    });\r\n                    this.setState('fulfilled');\r\n                }  else {\r\n                    this.reset();\r\n                }\r\n            });\r\n        } else if (max > 1 && max < choiceCount && (typeof min === 'undefined' || min === 0)) {\r\n            // Multiple Choice: 5. Constraint: Other constraints -> minChoices = Disabled / maxChoices ≠ Disabled  -> \"You can select up to {maxChoices value} choices.\"\r\n            msg = __('You can select up to %s choices.', max);\r\n            instructionMgr.appendInstruction(interaction, msg, function (data) {\r\n                if (_getRawResponse(interaction).length >= max) {\r\n                    this.setMessage(__('Maximum choices reached'));\r\n                    if (this.checkState('fulfilled')) {\r\n                        this.update({\r\n                            level: 'warning',\r\n                            timeout: 2000,\r\n                            start: function () {\r\n                                if (data && data.choice) {\r\n                                    highlightInvalidInput(data.choice);\r\n                                }\r\n                            },\r\n                            stop: function () {\r\n                                this.setLevel('info');\r\n                            }\r\n                        });\r\n                    }\r\n                    this.setState('fulfilled');\r\n                } else {\r\n                    this.reset();\r\n                }\r\n            });\r\n        } else if (min > 1 && (typeof max === 'undefined' || max === 0)) {\r\n            // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices = Disabled or 0   -> \"You need to select at least {minChoices value} choices.\"\"\r\n            msg = __('You need to select at least %s choices.', min);\r\n            instructionMgr.appendInstruction(interaction, msg, function () {\r\n                if (_getRawResponse(interaction).length >= min) {\r\n                    this.setLevel('success');\r\n                } else {\r\n                    this.reset();\r\n                }\r\n            });\r\n        }\r\n        // Single choice: 1.Constraint: None -> minChoices = 0 / maxChoices = 1 -> No messages\r\n        // Single choice: 2.Constraint: Answer required  -> minChoices = 1, maxChoices = 1 -> No messages\r\n        // Multiple Choice: 3.Constraint: None  -> minChoices = 0, maxChoices = 0 -> No messages\r\n    };\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     */\r\n    const render = function render(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n\r\n        _pseudoLabel(interaction, $container);\r\n\r\n        _setInstructions(interaction);\r\n\r\n        if (interaction.attr('orientation') === 'horizontal') {\r\n            const $elements = $$1('.add-option, .result-area .target, .choice-area .qti-choice', $container);\r\n            sizeAdapter.adaptSize($elements);\r\n\r\n            $$1(document).on('themeapplied.choiceInteraction', () => adaptSize.height($elements));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset the responses previously set\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     */\r\n    const resetResponse = function resetResponse(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n\r\n        $$1('.real-label > input', $container).prop('checked', false);\r\n    };\r\n\r\n    /**\r\n     * Set a new response to the rendered interaction.\r\n     * Please note that it does not reset previous responses.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {0bject} response - the PCI formated response\r\n     */\r\n    const setResponse = function setResponse(interaction, response) {\r\n        const $container = containerHelper.get(interaction);\r\n\r\n        try {\r\n            _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\r\n                const $input = $container.find('.real-label > input[value=\"' + identifier + '\"]').prop('checked', true);\r\n                $input.closest('.qti-choice').toggleClass('user-selected', true);\r\n            });\r\n            instructionMgr.validateInstructions(interaction);\r\n        } catch (e) {\r\n            throw new Error('wrong response format in argument : ' + e);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the response formatted in PCI\r\n     */\r\n    const getResponse = function getResponse(interaction) {\r\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\r\n    };\r\n\r\n    /**\r\n     * Check if a choice interaction is choice-eliminable\r\n     *\r\n     * @param {Object} interaction\r\n     * @returns {boolean}\r\n     */\r\n    const isEliminable = function isEliminable(interaction) {\r\n        return /\\beliminable\\b/.test(interaction.attr('class'));\r\n    };\r\n\r\n    /**\r\n     * Set additional data to the template (data that are not really part of the model).\r\n     * @param {Object} interaction - the interaction\r\n     * @param {Object} [data] - interaction custom data\r\n     * @returns {Object} custom data\r\n     */\r\n    const getCustomData = function getCustomData(interaction, data) {\r\n        const listStyleVisible = features.isVisible('taoQtiItem/creator/interaction/choice/property/listStyle');\r\n        const listStyles = (interaction.attr('class') || '').match(/\\blist-style-[\\w-]+/) || [];\r\n        return _.merge(data || {}, {\r\n            horizontal: interaction.attr('orientation') === 'horizontal',\r\n            listStyle: listStyleVisible ? listStyles.pop() : void 0,\r\n            eliminable: isEliminable(interaction),\r\n            allowEliminationVisible: features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination')\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\r\n     * @param {Object} interaction - the interaction\r\n     */\r\n    const destroy = function destroy(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n\r\n        const timeout = interaction.data('__instructionTimeout');\r\n\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n\r\n        //remove event\r\n        $container.off('.commonRenderer');\r\n        $$1(document).off('.commonRenderer').off('.choiceInteraction');\r\n\r\n        //remove instructions\r\n        instructionMgr.removeInstructions(interaction);\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    const setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n\r\n            const $container = containerHelper.get(interaction);\r\n\r\n            //restore order of previously shuffled choices\r\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\r\n                $$1('.qti-simpleChoice', $container)\r\n                    .sort(function (a, b) {\r\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\r\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\r\n                        if (aIndex > bIndex) {\r\n                            return 1;\r\n                        }\r\n                        if (aIndex < bIndex) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .detach()\r\n                    .appendTo($$1('.choice-area', $container));\r\n            }\r\n\r\n            //restore eliminated choices\r\n            if (isEliminable(interaction) && _.isArray(state.eliminated) && state.eliminated.length) {\r\n                _.forEach(state.eliminated, function (identifier) {\r\n                    $container.find('.qti-simpleChoice[data-identifier=\"' + identifier + '\"]').addClass('eliminated');\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    const getState = function getState(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        const state = {};\r\n        const response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n\r\n        //we store also the choice order if shuffled\r\n        if (interaction.attr('shuffle') === true) {\r\n            state.order = [];\r\n            $$1('.qti-simpleChoice', $container).each(function () {\r\n                state.order.push($$1(this).data('identifier'));\r\n            });\r\n        }\r\n\r\n        //store the eliminated choices\r\n        if (isEliminable(interaction)) {\r\n            state.eliminated = [];\r\n            $container.find('.qti-simpleChoice.eliminated').each(function () {\r\n                state.eliminated.push($$1(this).data('identifier'));\r\n            });\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the choice interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/ChoiceInteraction\r\n     */\r\n    var ChoiceInteraction = {\r\n        qtiClass: 'choiceInteraction',\r\n        template: tpl,\r\n        getData: getCustomData,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction',['lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function (_, Handlebars, __, DOMPurify, containerHelper, pciResponse) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<a class=\\\"qti-interaction qti-inlineInteraction qti-endAttemptInteraction btn small btn-info\\\"\\r\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \\r\\n        data-qti-class=\\\"endAttemptInteraction\\\"\\r\\n        value=\\\"false\\\"\\r\\n        tabindex=\\\"0\\\"\\r\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n        \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\r\\n</a>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\r\n     *\r\n     * @param {object} interaction\r\n     * @fires endattempt with the response identifier\r\n     */\r\n    function render(interaction, options) {\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        //on click,\r\n        $container.on('click.commonRenderer', function(e) {\r\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n            if (\r\n                $(e.currentTarget)\r\n                    .closest('.qti-item')\r\n                    .hasClass('prevent-click-handler')\r\n            ) {\r\n                return;\r\n            }\r\n            $container.val(true);\r\n\r\n            containerHelper.triggerResponseChangeEvent(interaction);\r\n\r\n            $container.trigger('endattempt', [interaction.attr('responseIdentifier')]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    function setResponse(interaction, response) {\r\n        _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\r\n    }\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    function getResponse(interaction) {\r\n        var val = containerHelper.get(interaction).val();\r\n        val = val && val !== 'false' && val !== '0';\r\n        return pciResponse.serialize([val], interaction);\r\n    }\r\n\r\n    /**\r\n         * Reset the response ... wondering if it is useful ...\r\n\r\n         * @param {type} interaction\r\n         */\r\n    function resetResponse(interaction) {\r\n        _setVal(interaction, false);\r\n    }\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    function getState(interaction) {\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object} interaction\r\n     * @param {Boolean} val\r\n     */\r\n    function _setVal(interaction, val) {\r\n        containerHelper\r\n            .get(interaction)\r\n            .val(val)\r\n            .change();\r\n    }\r\n\r\n    /**\r\n     * Destroy the interaction to restore the dom as it is before render() is called\r\n     *\r\n     * @param {Object} interaction\r\n     */\r\n    function destroy(interaction) {\r\n        //remove event\r\n        containerHelper.get(interaction).off('.commonRenderer');\r\n    }\r\n\r\n    /**\r\n     * Define default template data\r\n     *\r\n     * @param {Object} interaction\r\n     * @param {Object} data\r\n     * @returns {Object}\r\n     */\r\n    function getCustomData(interaction, data) {\r\n        if (!data.attributes.title) {\r\n            data.attributes.title = __('End Attempt');\r\n        }\r\n        return data;\r\n    }\r\n\r\n    var EndAttemptInteraction = {\r\n        qtiClass: 'endAttemptInteraction',\r\n        template: tpl,\r\n        getData: getCustomData,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',['jquery', 'lodash', 'i18n', 'services/features', 'util/strLimiter', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'ckeditor', 'taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'ui/tooltip', 'core/logger'], function ($$1, _, __, features, strLimiter, Handlebars, DOMPurify, containerHelper, instructionMgr, ckEditor, ckConfigurator, patternMaskHelper, tooltip, loggerFactory) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    strLimiter = strLimiter && Object.prototype.hasOwnProperty.call(strLimiter, 'default') ? strLimiter['default'] : strLimiter;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    ckEditor = ckEditor && Object.prototype.hasOwnProperty.call(ckEditor, 'default') ? ckEditor['default'] : ckEditor;\n    ckConfigurator = ckConfigurator && Object.prototype.hasOwnProperty.call(ckConfigurator, 'default') ? ckConfigurator['default'] : ckConfigurator;\n    patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\r\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(14, program14, data),fn:self.program(10, program10, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\r\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n        \";\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\r\\n                <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\" contenteditable></div>\\r\\n            \";\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      \n      return \" attributes.class\";\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\r\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n        \";\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\r\\n                <textarea\\r\\n                    class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\r\\n                    name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\r\\n                    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n                    aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n                ></textarea>\\r\\n            \";\n      return buffer;\n      }\n    function program16(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"pattern=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program18(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\r\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      return buffer;\n      }\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\r\\n        <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" contenteditable></div>\\r\\n        \";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\r\\n            <textarea\\r\\n                class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\r\\n                \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n                aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n            ></textarea>\\r\\n        \";\n      return buffer;\n      }\n\n    function program23(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\r\\n            \";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n        \";\n      return buffer;\n      }\n\n    function program25(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\r\\n            <span class=\\\"text-counter-chars\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxLength), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\r\\n            <span class=\\\"text-counter-words\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxWords), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\r\\n        \";\n      return buffer;\n      }\n    function program26(depth0,data) {\n      \n      \n      return \" style=\\\"display: none\\\"\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-extendedTextInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"extendedTextInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.multiple), {hash:{},inverse:self.program(18, program18, data),fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"text-counter\\\">\\r\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    </div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<span class=\\\"\";\n      if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\r\\n\";\n      return buffer;\n      });\n    function countTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Create a logger\r\n     */\r\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js');\r\n\r\n    const hideXhtmlConstraints = !features.isVisible('taoQtiItem/creator/interaction/extendedText/property/xhtmlConstraints');\r\n    const hideXhtmlRecommendations = !features.isVisible('taoQtiItem/creator/interaction/extendedText/property/xhtmlRecommendations');\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\r\n     *\r\n     * @param {Object} interaction - the extended text interaction model\r\n     * @returns {Promise} rendering is async\r\n     */\r\n    function render(interaction) {\r\n        return new Promise(function (resolve, reject) {\r\n            let $el, expectedLength, minStrings, patternMask, placeholderType, editor;\r\n            let _styleUpdater, themeLoaded, _getNumStrings;\r\n            let $container = containerHelper.get(interaction);\r\n\r\n            const multiple = _isMultiple(interaction);\r\n            const limiter = inputLimiter(interaction);\r\n\r\n            const placeholderText = interaction.attr('placeholderText');\r\n\r\n            const getItemLanguage = () => {\r\n                let itemLang = $container.closest('.qti-item').attr('lang');\r\n                let itemLocale = itemLang && itemLang.split('-')[0];\r\n                if (!itemLocale) {\r\n                    itemLang = window.document.documentElement.getAttribute('lang');\r\n                    itemLocale = itemLang && itemLang.split('-')[0];\r\n                }\r\n                return itemLocale;\r\n            };\r\n\r\n            const toolbarType = 'extendedText';\r\n            const ckOptions = {\r\n                resize_enabled: true,\r\n                secure: location.protocol === 'https:',\r\n                forceCustomDomain: true,\r\n                language: getItemLanguage()\r\n            };\r\n\r\n            if (!multiple) {\r\n                $el = $container.find('textarea');\r\n                if (placeholderText) {\r\n                    $el.attr('placeholder', placeholderText);\r\n                }\r\n                if (_getFormat(interaction) === 'xhtml') {\r\n\r\n                    if(hideXhtmlConstraints && hideXhtmlRecommendations) {\r\n                        $container.find('.text-counter').hide();\r\n                    }\r\n\r\n                    if(hideXhtmlConstraints) {\r\n                        limiter.enabled = false;\r\n                    }\r\n\r\n                    _styleUpdater = function () {\r\n                        let qtiItemStyle, $editorBody, qtiItem;\r\n\r\n                        if (editor.document) {\r\n                            qtiItem = $$1('.qti-item').get(0);\r\n                            qtiItemStyle = qtiItem.currentStyle || window.getComputedStyle(qtiItem);\r\n\r\n                            if (editor.document.$ && editor.document.$.body) {\r\n                                $editorBody = $$1(editor.document.$.body);\r\n                            } else {\r\n                                $editorBody = $$1(editor.document.getBody().$);\r\n                            }\r\n\r\n                            $editorBody.css({\r\n                                'background-color': 'transparent',\r\n                                color: qtiItemStyle.color\r\n                            });\r\n                        }\r\n                    };\r\n                    themeLoaded = function () {\r\n                        _styleUpdater();\r\n                    };\r\n\r\n                    editor = _setUpCKEditor(interaction, ckOptions);\r\n                    if (!editor) {\r\n                        reject('Unable to instantiate ckEditor');\r\n                    }\r\n\r\n                    editor.on('instanceReady', function () {\r\n                        _styleUpdater();\r\n\r\n                        //TAO-6409, disable navigation from cke toolbar\r\n                        if (editor.container && editor.container.$) {\r\n                            $$1(editor.container.$).addClass('no-key-navigation');\r\n                        }\r\n\r\n                        //it seems there's still something done after loaded, so resolved must be defered\r\n                        _.delay(resolve, 300);\r\n                    });\r\n                    if (editor.status === 'ready' || editor.status === 'loaded') {\r\n                        _.defer(resolve);\r\n                    }\r\n                    editor.on('configLoaded', function () {\r\n                        editor.config = ckConfigurator.getConfig(editor, toolbarType, ckOptions);\r\n\r\n                        if (limiter.enabled) {\r\n                            limiter.listenTextInput();\r\n                        }\r\n                    });\r\n                    editor.on('change', function () {\r\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\r\n                    });\r\n\r\n                    $$1(document).on('themechange.themeloader', themeLoaded);\r\n                } else {\r\n                    $el.on('keyup.commonRenderer change.commonRenderer', function () {\r\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\r\n                    });\r\n\r\n                    if (limiter.enabled) {\r\n                        limiter.listenTextInput();\r\n                    }\r\n\r\n                    resolve();\r\n                }\r\n\r\n                //multiple inputs\r\n            } else {\r\n                $el = $container.find('input');\r\n                minStrings = interaction.attr('minStrings');\r\n                expectedLength = interaction.attr('expectedLength');\r\n                patternMask = interaction.attr('patternMask');\r\n\r\n                //setting the checking for minimum number of answers\r\n                if (minStrings) {\r\n                    //get the number of filled inputs\r\n                    _getNumStrings = function ($element) {\r\n                        let num = 0;\r\n                        $element.each(function () {\r\n                            if ($$1(this).val() !== '') {\r\n                                num++;\r\n                            }\r\n                        });\r\n\r\n                        return num;\r\n                    };\r\n\r\n                    minStrings = parseInt(minStrings, 10);\r\n                    if (minStrings > 0) {\r\n                        $el.on('blur.commonRenderer', function () {\r\n                            setTimeout(function () {\r\n                                //checking if the user was clicked outside of the input fields\r\n\r\n                                //TODO remove notifications in favor of instructions\r\n\r\n                                if (!$el.is(':focus') && _getNumStrings($el) < minStrings) {\r\n                                    instructionMgr.appendNotification(\r\n                                        interaction,\r\n                                        `${__('The minimum number of answers is ')} : ${minStrings}`,\r\n                                        'warning'\r\n                                    );\r\n                                }\r\n                            }, 100);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //set the fields width\r\n                if (expectedLength) {\r\n                    expectedLength = parseInt(expectedLength, 10);\r\n\r\n                    if (expectedLength > 0) {\r\n                        $el.each(function () {\r\n                            $$1(this).css('width', `${expectedLength}em`);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //set the fields pattern mask\r\n                if (patternMask) {\r\n                    $el.each(function () {\r\n                        _setPattern($$1(this), patternMask);\r\n                    });\r\n                }\r\n\r\n                //set the fields placeholder\r\n                if (placeholderText) {\r\n                    /**\r\n                     * The type of the fileds placeholder:\r\n                     * multiple - set placeholder for each field\r\n                     * first - set placeholder only for first field\r\n                     * none - dont set placeholder\r\n                     */\r\n                    placeholderType = 'first';\r\n\r\n                    if (placeholderType === 'multiple') {\r\n                        $el.each(function () {\r\n                            $$1(this).attr('placeholder', placeholderText);\r\n                        });\r\n                    } else if (placeholderType === 'first') {\r\n                        $el.first().attr('placeholder', placeholderText);\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Reset the textarea / ckEditor\r\n     * @param {Object} interaction - the extended text interaction model\r\n     */\r\n    function resetResponse(interaction) {\r\n        if (_getFormat(interaction) === 'xhtml') {\r\n            _getCKEditor(interaction).setData('');\r\n        } else {\r\n            containerHelper.get(interaction).find('input, textarea').val('');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\r\n     *\r\n     * @param {Object} interaction - the extended text interaction model\r\n     * @param {object} response\r\n     */\r\n    function setResponse(interaction, response) {\r\n        const _setMultipleVal = (identifier, value) => {\r\n            interaction.getContainer().find(`#${identifier}`).val(value);\r\n        };\r\n\r\n        const baseType = interaction.getResponseDeclaration().attr('baseType');\r\n\r\n        if (response.base === null && Object.keys(response).length === 1) {\r\n            response = { base: { string: '' } };\r\n        }\r\n\r\n        if (response.base && typeof response.base[baseType] !== 'undefined') {\r\n            setText(interaction, response.base[baseType]);\r\n        } else if (response.list && response.list[baseType]) {\r\n            for (let i in response.list[baseType]) {\r\n                const serial = typeof response.list.serial === 'undefined' ? '' : response.list.serial[i];\r\n                _setMultipleVal(`${serial}_${i}`, response.list[baseType][i]);\r\n            }\r\n        } else {\r\n            throw new Error('wrong response format in argument.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\r\n     *\r\n     * @param {Object} interaction - the extended text interaction model\r\n     * @returns {object}\r\n     */\r\n    function getResponse(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        const attributes = interaction.getAttributes();\r\n        const responseDeclaration = interaction.getResponseDeclaration();\r\n        const baseType = responseDeclaration.attr('baseType');\r\n        const numericBase = attributes.base || 10;\r\n        const multiple = !!(\r\n            attributes.maxStrings &&\r\n            (responseDeclaration.attr('cardinality') === 'multiple' ||\r\n                responseDeclaration.attr('cardinality') === 'ordered')\r\n        );\r\n        const ret = multiple ? { list: {} } : { base: {} };\r\n        let values;\r\n        let value = '';\r\n\r\n        if (multiple) {\r\n            values = [];\r\n\r\n            $container.find('input').each(function (i) {\r\n                const $el = $$1(this);\r\n\r\n                if (attributes.placeholderText && $el.val() === attributes.placeholderText) {\r\n                    values[i] = '';\r\n                } else {\r\n                    if (baseType === 'integer') {\r\n                        values[i] = parseInt($el.val(), numericBase);\r\n                        values[i] = isNaN(values[i]) ? '' : values[i];\r\n                    } else if (baseType === 'float') {\r\n                        values[i] = parseFloat($el.val());\r\n                        values[i] = isNaN(values[i]) ? '' : values[i];\r\n                    } else if (baseType === 'string') {\r\n                        values[i] = $el.val();\r\n                    }\r\n                }\r\n            });\r\n\r\n            ret.list[baseType] = values;\r\n        } else {\r\n            if (attributes.placeholderText && _getTextareaValue(interaction) === attributes.placeholderText) {\r\n                value = '';\r\n            } else {\r\n                if (baseType === 'integer') {\r\n                    value = parseInt(_getTextareaValue(interaction), numericBase);\r\n                } else if (baseType === 'float') {\r\n                    value = parseFloat(_getTextareaValue(interaction));\r\n                } else if (baseType === 'string') {\r\n                    value = _getTextareaValue(interaction, true);\r\n                }\r\n            }\r\n\r\n            ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Creates an input limiter object\r\n     * @param {Object} interaction - the extended text interaction\r\n     * @returns {Object} the limiter\r\n     */\r\n    function inputLimiter(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        const expectedLength = interaction.attr('expectedLength');\r\n        const expectedLines = interaction.attr('expectedLines');\r\n        const patternMask = interaction.attr('patternMask');\r\n        const isCke = _getFormat(interaction) === 'xhtml';\r\n        let patternRegEx;\r\n        let $textarea, $charsCounter, $wordsCounter, maxWords, maxLength, $maxLengthCounter, $maxWordsCounter;\r\n        let enabled = false;\r\n\r\n        if (expectedLength || expectedLines || patternMask) {\r\n            enabled = true;\r\n            $textarea = $$1('.text-container', $container);\r\n            $charsCounter = $$1('.count-chars', $container);\r\n            $wordsCounter = $$1('.count-words', $container);\r\n            $maxLengthCounter = $$1('.count-max-length', $container);\r\n            $maxWordsCounter = $$1('.count-max-words', $container);\r\n\r\n            if (patternMask !== '') {\r\n                maxWords = parseInt(patternMaskHelper.parsePattern(patternMask, 'words'), 10);\r\n                maxLength = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\r\n                maxWords = _.isNaN(maxWords) ? 0 : maxWords;\r\n                maxLength = _.isNaN(maxLength) ? 0 : maxLength;\r\n                if (!maxLength && !maxWords) {\r\n                    patternRegEx = new RegExp(patternMask);\r\n                }\r\n                $maxLengthCounter.text(maxLength);\r\n                $maxWordsCounter.text(maxWords);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The limiter instance\r\n         */\r\n        const limiter = {\r\n            /**\r\n             * Is the limiter enabled regarding the interaction configuration\r\n             */\r\n            enabled,\r\n\r\n            /**\r\n             * Listen for text input into the interaction and limit it if necessary\r\n             */\r\n            listenTextInput() {\r\n                const ignoreKeyCodes = [\r\n                    8, // backspace\r\n                    13, // enter\r\n                    16, // shift\r\n                    17, // control\r\n                    46, // delete\r\n                    37, // arrow left\r\n                    38, // arrow up\r\n                    39, // arrow right\r\n                    40, // arrow down\r\n                    35, // home\r\n                    36, // end\r\n\r\n                    // ckeditor specific:\r\n                    1114177, // home\r\n                    3342401, // Shift + home\r\n                    1114181, // end\r\n                    3342405, // Shift + end\r\n\r\n                    2228232, // Shift + backspace\r\n                    2228261, // Shift + arrow left\r\n                    4456485, // Alt   + arrow left\r\n                    2228262, // Shift + arrow up\r\n                    2228263, // Shift + arrow right\r\n                    4456487, // Alt   + arrow right\r\n                    2228264, // Shift + arrow down\r\n                    2228237, // Shift + enter\r\n\r\n                    1114120, // Ctrl + backspace\r\n                    1114177, // Ctrl + a\r\n                    1114202, // Ctrl + z\r\n                    1114200 // Ctrl + x\r\n                ];\r\n                const spaceKeyCodes = [\r\n                    32, // space\r\n                    13, // enter\r\n                    2228237 // shift + enter in ckEditor\r\n                ];\r\n                let isComposing = false;\r\n                let hasCompositionJustEnded = false;\r\n\r\n                const acceptKeyCode = keyCode => _.contains(ignoreKeyCodes, keyCode);\r\n                const emptyOrSpace = txt => txt && txt.trim() === '' || /\\^s*$/.test(txt);\r\n                const hasSpace = txt => /\\s+/.test(txt);\r\n                const getCharBefore = (str, pos) => str && str.substring(Math.max(0, pos - 1), pos);\r\n                const getCharAfter = (str, pos) => str && str.substring(pos, pos + 1);\r\n                const noSpaceNode = node => node.type === ckEditor.NODE_TEXT || (!node.isBlockBoundary() && node.getName() !== 'br');\r\n                const cancelEvent = e => {\r\n                    if (e.cancel) {\r\n                        e.cancel();\r\n                    } else {\r\n                        e.preventDefault();\r\n                        e.stopImmediatePropagation();\r\n                    }\r\n                    return false;\r\n                };\r\n                const invalidToolip = tooltip.error($container, __('This is not a valid answer'), {\r\n                    position: 'bottom',\r\n                    trigger: 'manual'\r\n                });\r\n                const patternHandler = function patternHandler(e) {\r\n                    if (isComposing || hasCompositionJustEnded) {\r\n                        // IME composing fires keydown/keyup events\r\n                        hasCompositionJustEnded = false;\r\n                        return;\r\n                    }\r\n\r\n                    if (patternRegEx) {\r\n                        let newValue;\r\n                        if (isCke) {\r\n                            // cke has its own object structure\r\n                            newValue = this.getData();\r\n                        } else {\r\n                            // covers input\r\n                            newValue = e.currentTarget.value;\r\n                        }\r\n\r\n                        if (!newValue) {\r\n                            return false;\r\n                        }\r\n                        _.debounce(function () {\r\n                            if (!patternRegEx.test(newValue)) {\r\n                                $container.addClass('invalid');\r\n                                $container.show();\r\n                                invalidToolip.show();\r\n                                containerHelper.triggerResponseChangeEvent(interaction);\r\n                            } else {\r\n                                $container.removeClass('invalid');\r\n                                invalidToolip.dispose();\r\n                            }\r\n                        }, 400)();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * This part works on keyboard input\r\n                 *\r\n                 * @param {Event} e\r\n                 * @returns {boolean}\r\n                 */\r\n                const keyLimitHandler = e => {\r\n                    if (isComposing) {\r\n                        return;\r\n                    }\r\n                    // Safari on OS X may send a keydown of 229 after compositionend\r\n                    if (e.which !== 229) {\r\n                        hasCompositionJustEnded = false;\r\n                    }\r\n\r\n                    const keyCode = e.data ? e.data.keyCode : e.which;\r\n                    const wordsCount = maxWords && this.getWordsCount();\r\n                    const charsCount = maxLength && this.getCharsCount();\r\n\r\n                    if (maxWords && wordsCount >= maxWords) {\r\n                        let left, right, middle;\r\n\r\n                        if (isCke) {\r\n                            const editor = _getCKEditor(interaction);\r\n                            const sel = editor.getSelection();\r\n                            const range = sel.getRanges()[0];\r\n\r\n                            if (range.startContainer && range.startContainer.type === ckEditor.NODE_TEXT) {\r\n                                left = getCharBefore(range.startContainer.getText(), range.startOffset);\r\n                            }\r\n                            if (!left) {\r\n                                const node = range.getPreviousNode();\r\n                                if (noSpaceNode(node)) {\r\n                                    const text = node.getText();\r\n                                    left = getCharBefore(text, text && text.length);\r\n                                } else {\r\n                                    left = ' ';\r\n                                }\r\n                            }\r\n\r\n                            if (range.endContainer && range.endContainer.type === ckEditor.NODE_TEXT) {\r\n                                right = getCharAfter(range.endContainer.getText(), range.endOffset);\r\n                            }\r\n                            if (!right) {\r\n                                const node = range.getNextNode();\r\n                                if (noSpaceNode(node)) {\r\n                                    right = getCharAfter(node.getText(), 0);\r\n                                } else {\r\n                                    right = ' ';\r\n                                }\r\n                            }\r\n\r\n                            middle = sel.getSelectedText();\r\n                        } else {\r\n                            const { selectionStart, selectionEnd, value } = $textarea[0];\r\n                            left = getCharBefore(value, selectionStart);\r\n                            right = getCharAfter(value, selectionEnd);\r\n                            middle = value.substring(selectionStart, selectionEnd);\r\n                        }\r\n\r\n                        // Will prevent the keystroke:\r\n                        // - IF there is a word part before and after the selection,\r\n                        //   AND the selection does not contain spaces,\r\n                        //   AND the keystroke is either a space or enter\r\n                        // - IF there is no word part before and after the selection,\r\n                        //   AND the selection is empty,\r\n                        //   AND the keystroke is not from the list of accepted codes,\r\n                        //   AND the keystroke is not a space\r\n                        if ((!emptyOrSpace(left) && !emptyOrSpace(right) && !hasSpace(middle) && _.contains(spaceKeyCodes, keyCode)) ||\r\n                            (emptyOrSpace(left) && emptyOrSpace(right) && !middle && !acceptKeyCode(keyCode) && keyCode !== 32)) {\r\n                            return cancelEvent(e);\r\n                        }\r\n                    }\r\n\r\n                    if (maxLength && charsCount >= maxLength && !acceptKeyCode(keyCode)) {\r\n                        if (!isCke && charsCount > maxLength) {\r\n                            const textarea = $textarea[0];\r\n                            textarea.value = textarea.value.substring(0, maxLength);\r\n                            textarea.focus();\r\n                        }\r\n                        return cancelEvent(e);\r\n                    }\r\n\r\n                    _.defer(() => this.updateCounter());\r\n                };\r\n\r\n                /**\r\n                 * This part works on drop or paste\r\n                 * @param {Event} e\r\n                 * @returns {boolean}\r\n                 */\r\n                const nonKeyLimitHandler = e => {\r\n                    let newValue;\r\n\r\n                    if (typeof $$1(e.target).attr('data-clipboard') === 'string') {\r\n                        newValue = $$1(e.target).attr('data-clipboard');\r\n                    } else if (isCke) {\r\n                        // cke has its own object structure\r\n                        newValue = e.data.dataValue;\r\n                    } else {\r\n                        // covers input via paste or drop\r\n                        newValue = e.originalEvent.clipboardData\r\n                            ? e.originalEvent.clipboardData.getData('text')\r\n                            : e.originalEvent.dataTransfer.getData('text') ||\r\n                              e.originalEvent.dataTransfer.getData('text/plain') ||\r\n                              '';\r\n                    }\r\n\r\n                    // prevent insertion of non-limited data\r\n                    cancelEvent(e);\r\n\r\n                    if (!newValue) {\r\n                        return false;\r\n                    }\r\n\r\n                    // limit by word or character count if required\r\n                    if (maxWords) {\r\n                        newValue = strLimiter.limitByWordCount(newValue, maxWords - this.getWordsCount());\r\n                    } else if (maxLength) {\r\n                        newValue = strLimiter.limitByCharCount(newValue, maxLength - this.getCharsCount());\r\n                    }\r\n\r\n                    // insert the cut-off text\r\n                    if (isCke) {\r\n                        _getCKEditor(interaction).insertHtml(newValue);\r\n                    } else {\r\n                        let elements = containerHelper.get(interaction).find('textarea');\r\n                        let el = elements[0];\r\n                        let { selectionStart: start, selectionEnd: end, value: text } = el;\r\n                        elements.val(text.substring(0, start) + newValue + text.substring(end, text.length));\r\n                        el.focus();\r\n                        el.selectionStart = start + newValue.length;\r\n                        el.selectionEnd = el.selectionStart;\r\n                    }\r\n\r\n                    _.defer(() => this.updateCounter());\r\n                };\r\n\r\n                const handleCompositionStart = e => {\r\n                    isComposing = true;\r\n                    return e;\r\n                };\r\n\r\n                const handleCompositionEnd = e => {\r\n                    isComposing = false;\r\n                    hasCompositionJustEnded = true;\r\n                    // if plain text - then limit input right after composition end event\r\n                    if (_getFormat(interaction) !== 'xhtml' && maxLength !== null) {\r\n                        const currentValue = $textarea[0].value;\r\n                        $textarea[0].value = currentValue.substring(0, maxLength);\r\n                    }\r\n                    _.defer(() => this.updateCounter());\r\n                    return e;\r\n                };\r\n\r\n                const handleBeforeInput = e => {\r\n                    _.defer(() => this.updateCounter());\r\n                    return e;\r\n                };\r\n\r\n                if (_getFormat(interaction) === 'xhtml') {\r\n                    const editor = _getCKEditor(interaction);\r\n\r\n                    if (maxLength) {\r\n                        let previousSnapshot = editor.getSnapshot();\r\n\r\n                        editor.on('key', function () {\r\n                            const range = this.createRange();\r\n                            if (limiter.getCharsCount() > limiter.maxLength) {\r\n                                const editable = this.editable();\r\n                                editable.setData(previousSnapshot, true);\r\n                                range.moveToElementEditablePosition(editable, true);\r\n                                editor.getSelection().selectRanges([range]);\r\n                                return;\r\n                            }\r\n                            previousSnapshot = editor.getSnapshot();\r\n                        });\r\n                    }\r\n                    editor.on('key', keyLimitHandler);\r\n                    editor.on('change', evt => {\r\n                        patternHandler(evt);\r\n                        _.defer(() => this.updateCounter());\r\n                    });\r\n                    editor.on('paste', nonKeyLimitHandler);\r\n                    // @todo: drop requires cke 4.5\r\n                    // cke.on('drop', nonKeyLimitHandler);\r\n                } else {\r\n                    $textarea\r\n                        .on('beforeinput.commonRenderer', handleBeforeInput)\r\n                        .on('input.commonRenderer', () => {\r\n                            _.defer(() => this.updateCounter());\r\n                        })\r\n                        .on('compositionstart.commonRenderer', handleCompositionStart)\r\n                        .on('compositionend.commonRenderer', handleCompositionEnd)\r\n                        .on('keyup.commonRenderer', patternHandler)\r\n                        .on('keydown.commonRenderer', keyLimitHandler)\r\n                        .on('paste.commonRenderer drop.commonRenderer', nonKeyLimitHandler);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get the number of words that are actually written in the response field\r\n             * @returns {Number} number of words\r\n             */\r\n            getWordsCount() {\r\n                const value = _getTextareaValue(interaction) || '';\r\n                if (_.isEmpty(value)) {\r\n                    return 0;\r\n                }\r\n                // leading and trailing white space don't qualify as words\r\n                return value.trim().replace(/\\s+/gi, ' ').split(' ').length;\r\n            },\r\n\r\n            /**\r\n             * Get the number of characters that are actually written in the response field\r\n             * @returns {Number} number of characters\r\n             */\r\n            getCharsCount() {\r\n                const value = _getTextareaValue(interaction) || '';\r\n                // remove NO-BREAK SPACE in empty lines added and all new line symbols\r\n                return value.replace(/[\\r\\n]{1}\\xA0[\\r\\n]{1}/gm, '\\r').replace(/[\\r\\n]+/gm, '').length;\r\n            },\r\n\r\n            /**\r\n             * Update the counter element\r\n             */\r\n            updateCounter() {\r\n                $charsCounter.text(this.getCharsCount());\r\n                $wordsCounter.text(this.getWordsCount());\r\n            },\r\n\r\n            maxLength\r\n        };\r\n\r\n        return limiter;\r\n    }\r\n\r\n    /**\r\n     * return the value of the textarea or ckeditor data\r\n     * @param  {Object} interaction\r\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\r\n     * @returns {String} the value\r\n     */\r\n    function _getTextareaValue(interaction, raw) {\r\n        if (_getFormat(interaction) === 'xhtml') {\r\n            return _ckEditorData(interaction, raw);\r\n        } else {\r\n            return containerHelper.get(interaction).find('textarea').val();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setting the pattern mask for the input, for browsers which doesn't support this feature\r\n     * @param {jQuery} $element\r\n     * @param {string} pattern\r\n     */\r\n    function _setPattern($element, pattern) {\r\n        const patt = new RegExp(pattern);\r\n\r\n        //test when some data is entering in the input field\r\n        //@todo plug the validator + tooltip\r\n        $element.on('keyup.commonRenderer', function () {\r\n            $element.removeClass('field-error');\r\n            if (!patt.test($element.val())) {\r\n                $element.addClass('field-error');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Whether or not multiple strings are expected from the candidate to\r\n     * compose a valid response.\r\n     *\r\n     * @param {Object} interaction - the extended text interaction model\r\n     * @returns {Boolean} true if a multiple\r\n     */\r\n    function _isMultiple(interaction) {\r\n        const attributes = interaction.getAttributes();\r\n        const response = interaction.getResponseDeclaration();\r\n        return !!(\r\n            attributes.maxStrings &&\r\n            (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Instantiate CkEditor for the interaction\r\n     *\r\n     * @param {Object} interaction - the extended text interaction model\r\n     * @param {Object} [options= {}] - the CKEditor configuration options\r\n     * @returns {Object} the ckEditor instance (or you'll be in trouble\r\n     */\r\n    function _setUpCKEditor(interaction, options) {\r\n        const $container = containerHelper.get(interaction);\r\n        const editor = ckEditor.replace($container.find('.text-container')[0], options || {});\r\n        if (editor) {\r\n            $container.data('editor', editor.name);\r\n            return editor;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy CKEditor\r\n     *\r\n     * @param {Object} interaction - the extended text interaction model\r\n     */\r\n    function _destroyCkEditor(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        const name = $container.data('editor');\r\n        let editor;\r\n        if (name) {\r\n            editor = ckEditor.instances[name];\r\n        }\r\n        if (editor) {\r\n            editor.destroy();\r\n            $container.removeData('editor');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the CKEditor instance\r\n     * @param {Object} interaction - the extended text interaction model\r\n     * @returns {Object}  CKEditor instance\r\n     */\r\n    function _getCKEditor(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        const name = $container.data('editor');\r\n\r\n        return ckEditor.instances[name];\r\n    }\r\n\r\n    /**\r\n     * get the text content of the ckEditor ( not the entire html )\r\n     * @param  {object} interaction the interaction\r\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\r\n     * @returns {string}             text content of the ckEditor\r\n     */\r\n    function _ckEditorData(interaction, raw) {\r\n        const editor = _getCKEditor(interaction);\r\n        let data = (editor && editor.getData()) || '';\r\n\r\n        if (!raw) {\r\n            data = _stripTags(data);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Remove HTML tags from a string\r\n     * @param {String} str\r\n     * @returns {String}\r\n     */\r\n    function _stripTags(str) {\r\n        const tempNode = document.createElement('div');\r\n        tempNode.innerHTML = str;\r\n        return tempNode.textContent;\r\n    }\r\n\r\n    /**\r\n     * Get the interaction format\r\n     * @param {Object} interaction - the extended text interaction model\r\n     * @returns {String} format in 'plain', 'xhtml', 'preformatted'\r\n     */\r\n    function _getFormat(interaction) {\r\n        const format = interaction.attr('format');\r\n        if (_.contains(['plain', 'xhtml', 'preformatted'], format)) {\r\n            return format;\r\n        }\r\n        return 'plain';\r\n    }\r\n\r\n    function enable(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        let editor;\r\n\r\n        $container.find('input, textarea').removeAttr('disabled');\r\n\r\n        if (_getFormat(interaction) === 'xhtml') {\r\n            editor = _getCKEditor(interaction);\r\n            if (editor) {\r\n                if (editor.status === 'ready') {\r\n                    editor.setReadOnly(false);\r\n                } else {\r\n                    editor.readOnly = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function disable(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        let editor;\r\n\r\n        $container.find('input, textarea').attr('disabled', 'disabled');\r\n\r\n        if (_getFormat(interaction) === 'xhtml') {\r\n            editor = _getCKEditor(interaction);\r\n            if (editor) {\r\n                if (editor.status === 'ready') {\r\n                    editor.setReadOnly(true);\r\n                } else {\r\n                    editor.readOnly = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function clearText(interaction) {\r\n        setText(interaction, '');\r\n    }\r\n\r\n    function setText(interaction, text) {\r\n        const limiter = inputLimiter(interaction);\r\n        if (_getFormat(interaction) === 'xhtml') {\r\n            try {\r\n                _getCKEditor(interaction).setData(text, function () {\r\n                    if (limiter.enabled) {\r\n                        limiter.updateCounter();\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                logger.warn(`setText error ${e}!`);\r\n            }\r\n        } else {\r\n            containerHelper.get(interaction).find('textarea').val(text);\r\n            if (limiter.enabled) {\r\n                limiter.updateCounter();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clean interaction destroy\r\n     * @param {Object} interaction\r\n     */\r\n    function destroy(interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        const $el = $container.find('input, textarea');\r\n\r\n        if (_getFormat(interaction) === 'xhtml') {\r\n            _destroyCkEditor(interaction);\r\n        }\r\n\r\n        //remove event\r\n        $el.off('.commonRenderer');\r\n        $$1(document).off('.commonRenderer');\r\n\r\n        //remove instructions\r\n        instructionMgr.removeInstructions(interaction);\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    }\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                try {\r\n                    interaction.setResponse(state.response);\r\n                } catch (e) {\r\n                    interaction.resetResponse();\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    function getState(interaction) {\r\n        const state = {};\r\n        const response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    }\r\n\r\n    /**\r\n     * Hydrates the dataset for the interaction with respect to its attributes.\r\n     *\r\n     * @param {object} interaction - the interaction instance\r\n     * @param {object} data - the default data object\r\n     * @returns {object} the hydrated data set\r\n     */\r\n    function getData(interaction, data) {\r\n        const pattern = interaction.attr('patternMask');\r\n        const maxWords = parseInt(patternMaskHelper.parsePattern(pattern, 'words'), 10);\r\n        const maxLength = parseInt(patternMaskHelper.parsePattern(pattern, 'chars'), 10);\r\n        const expectedLines = parseInt(interaction.attr('expectedLines'), 10);\r\n        const expectedLength = !isNaN(expectedLines)\r\n            ? expectedLines * 72\r\n            : parseInt(interaction.attr('expectedLength'), 10);\r\n\r\n        // Build DOM placeholders, this is needed to properly assemble the constraint hints\r\n        // The interaction will later rely on this to bind the values\r\n        const countChars = countTpl({ name: 'count-chars', value: 0 });\r\n        const countWords = countTpl({ name: 'count-words', value: 0 });\r\n        const countExpectedLength = countTpl({ name: 'count-expected-length', value: expectedLength });\r\n        const countMaxLength = countTpl({ name: 'count-max-length', value: maxLength });\r\n        const countMaxWords = countTpl({ name: 'count-max-words', value: maxWords });\r\n\r\n        return _.merge(data || {}, {\r\n            maxWords: !isNaN(maxWords) ? maxWords : 0,\r\n            maxLength: !isNaN(maxLength) ? maxLength : 0,\r\n            attributes: !isNaN(expectedLines) ? { expectedLength } : void 0,\r\n            // Build the constraint hints from translated text and DOM placeholders\r\n            // The template will render them as it, then the interaction will update the value from the binding\r\n            constraintHints: {\r\n                expectedLength: __('%s of %s characters recommended.', countChars, countExpectedLength),\r\n                maxLength: __('%s of %s characters maximum.', countChars, countMaxLength),\r\n                maxWords: __('%s of %s words maximum.', countWords, countMaxWords)\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Expose the common renderer for the extended text interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction\r\n     */\r\n    var ExtendedTextInteraction = {\r\n        qtiClass: 'extendedTextInteraction',\r\n        getContainer: containerHelper.get,\r\n        template,\r\n        render,\r\n        setResponse,\r\n        getResponse,\r\n        getData,\r\n        resetResponse,\r\n        destroy,\r\n        getState,\r\n        setState,\r\n        enable,\r\n        disable,\r\n        clearText,\r\n        setText,\r\n        inputLimiter\r\n    };\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',['lodash', 'i18n', 'jquery', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, __, $$1, Handlebars, DOMPurify, containerHelper, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-gapMatchInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"gapMatchInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <ul class=\\\"choice-area none block-listing solid horizontal source\\\">\\r\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    </ul>\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n    <div class=\\\"qti-flow-container\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Global variable to count number of choice usages:\r\n     * @type {object}\r\n     */\r\n    var _choiceUsages = {};\r\n\r\n    var setChoice = function(interaction, $choice, $target) {\r\n        var choiceSerial = $choice.data('serial'),\r\n            choice = interaction.getChoice(choiceSerial);\r\n\r\n        if (!_choiceUsages[choiceSerial]) {\r\n            _choiceUsages[choiceSerial] = 0;\r\n        }\r\n        _choiceUsages[choiceSerial]++;\r\n\r\n        $target\r\n            .data('serial', choiceSerial)\r\n            .html($choice.html())\r\n            .addClass('filled');\r\n\r\n        if (\r\n            !interaction.responseMappingMode &&\r\n            choice.attr('matchMax') &&\r\n            _choiceUsages[choiceSerial] >= choice.attr('matchMax')\r\n        ) {\r\n            $choice.attr('class', 'deactivated');\r\n        }\r\n\r\n        containerHelper.triggerResponseChangeEvent(interaction);\r\n    };\r\n\r\n    var unsetChoice = function(interaction, $choice) {\r\n        var serial = $choice.data('serial');\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        $container\r\n            .find('.choice-area [data-serial=' + serial + ']')\r\n            .removeClass()\r\n            .addClass('qti-choice');\r\n\r\n        _choiceUsages[serial]--;\r\n\r\n        $choice\r\n            .removeClass('filled')\r\n            .removeData('serial')\r\n            .empty();\r\n\r\n        if (!interaction.swapping) {\r\n            //set correct response\r\n            containerHelper.triggerResponseChangeEvent(interaction);\r\n        }\r\n    };\r\n\r\n    var getChoice = function(interaction, identifier) {\r\n        var $container = containerHelper.get(interaction);\r\n        return $$1('.choice-area [data-identifier=\"' + identifier + '\"]', $container);\r\n    };\r\n\r\n    var getGap = function(interaction, identifier) {\r\n        var $container = containerHelper.get(interaction);\r\n        return $$1('.qti-flow-container [data-identifier=\"' + identifier + '\"]', $container);\r\n    };\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    var render = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        var $choiceArea = $container.find('.choice-area');\r\n        var $flowContainer = $container.find('.qti-flow-container');\r\n\r\n        var $activeChoice = null;\r\n        var $activeDrop = null;\r\n\r\n        var isDragAndDropEnabled;\r\n        var dragOptions;\r\n        var scaleX, scaleY;\r\n\r\n        var $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\r\n\r\n        var choiceSelector = $choiceArea.selector + ' .qti-choice';\r\n        var gapSelector = $flowContainer.selector + ' .gapmatch-content';\r\n        var filledGapSelector = gapSelector + '.filled';\r\n        var binSelector = $container.selector + ' .remove-choice';\r\n\r\n        var _getChoice = function(serial) {\r\n            return $choiceArea.find('[data-serial=' + serial + ']');\r\n        };\r\n\r\n        var _setChoice = function($choice, $target) {\r\n            return setChoice(interaction, $choice, $target);\r\n        };\r\n\r\n        var _resetSelection = function() {\r\n            if ($activeChoice) {\r\n                $flowContainer.find('.remove-choice').remove();\r\n                $activeChoice.removeClass('deactivated active');\r\n                $container.find('.empty').removeClass('empty');\r\n                $activeChoice = null;\r\n            }\r\n        };\r\n\r\n        var _unsetChoice = function($choice) {\r\n            return unsetChoice(interaction, $choice);\r\n        };\r\n\r\n        var _isInsertionMode = function() {\r\n            return $activeChoice && !$activeChoice.hasClass('filled');\r\n        };\r\n\r\n        var _isModeEditing = function() {\r\n            return $activeChoice && $activeChoice.hasClass('filled');\r\n        };\r\n\r\n        // Drag & drop handlers\r\n\r\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').gapMatch) {\r\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').gapMatch;\r\n        }\r\n\r\n        function _iFrameDragFix(draggableSelector, target) {\r\n            interactUtils.iFrameDragFixOn(function() {\r\n                if ($activeDrop) {\r\n                    interact(gapSelector).fire({\r\n                        type: 'drop',\r\n                        target: $activeDrop.eq(0),\r\n                        relatedTarget: target\r\n                    });\r\n                }\r\n                interact(draggableSelector).fire({\r\n                    type: 'dragend',\r\n                    target: target\r\n                });\r\n            });\r\n        }\r\n\r\n        if (isDragAndDropEnabled) {\r\n            dragOptions = {\r\n                inertia: false,\r\n                autoScroll: true,\r\n                restrict: {\r\n                    restriction: '.qti-interaction',\r\n                    endOnly: false,\r\n                    elementRect: { top: 0, left: 1, bottom: 1, right: 1 }\r\n                }\r\n            };\r\n\r\n            // makes choices draggables\r\n            interact(choiceSelector)\r\n                .draggable(\r\n                    _.assign({}, dragOptions, {\r\n                        onstart: function(e) {\r\n                            var $target = $$1(e.target);\r\n                            var scale;\r\n                            $target.addClass('dragged');\r\n                            _handleChoiceSelect($target);\r\n\r\n                            _iFrameDragFix(choiceSelector, e.target);\r\n                            scale = interactUtils.calculateScale(e.target);\r\n                            scaleX = scale[0];\r\n                            scaleY = scale[1];\r\n                        },\r\n                        onmove: function(e) {\r\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\r\n                        },\r\n                        onend: function(e) {\r\n                            var $target = $$1(e.target);\r\n                            $target.removeClass('dragged');\r\n\r\n                            interactUtils.restoreOriginalPosition($target);\r\n                            interactUtils.iFrameDragFixOff();\r\n                        }\r\n                    })\r\n                )\r\n                .styleCursor(false);\r\n\r\n            // makes filled gaps draggables\r\n            interact(filledGapSelector)\r\n                .draggable(\r\n                    _.assign({}, dragOptions, {\r\n                        onstart: function(e) {\r\n                            var $target = $$1(e.target);\r\n                            var scale;\r\n                            $target.addClass('dragged');\r\n                            _handleFilledGapSelect($target);\r\n\r\n                            _iFrameDragFix(filledGapSelector, e.target);\r\n                            scale = interactUtils.calculateScale(e.target);\r\n                            scaleX = scale[0];\r\n                            scaleY = scale[1];\r\n                        },\r\n                        onmove: function(e) {\r\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\r\n                        },\r\n                        onend: function(e) {\r\n                            var $target = $$1(e.target);\r\n                            $target.removeClass('dragged');\r\n\r\n                            interactUtils.restoreOriginalPosition($target);\r\n\r\n                            if ($activeChoice) {\r\n                                _unsetChoice($activeChoice);\r\n                                _resetSelection();\r\n                            }\r\n                            interactUtils.iFrameDragFixOff();\r\n                        }\r\n                    })\r\n                )\r\n                .styleCursor(false);\r\n\r\n            // makes gaps droppables\r\n            interact(gapSelector).dropzone({\r\n                overlap: 0.05,\r\n                ondragenter: function(e) {\r\n                    var $target = $$1(e.target),\r\n                        $dragged = $$1(e.relatedTarget);\r\n\r\n                    $activeDrop = $target;\r\n                    $target.addClass('dropzone');\r\n                    $dragged.addClass('droppable');\r\n                },\r\n                ondrop: function(e) {\r\n                    _handleGapSelect($$1(e.target));\r\n\r\n                    this.ondragleave(e);\r\n                },\r\n                ondragleave: function(e) {\r\n                    var $target = $$1(e.target),\r\n                        $dragged = $$1(e.relatedTarget);\r\n\r\n                    $target.removeClass('dropzone');\r\n                    $dragged.removeClass('droppable');\r\n\r\n                    $activeDrop = null;\r\n                }\r\n            });\r\n        }\r\n\r\n        // Point & click handlers\r\n\r\n        interact($container.selector).on('tap', function(e) {\r\n            e.stopPropagation();\r\n            _resetSelection();\r\n        });\r\n\r\n        interact(choiceSelector).on('tap', function(e) {\r\n            e.stopPropagation();\r\n            _handleChoiceSelect($$1(e.currentTarget));\r\n            e.preventDefault();\r\n        });\r\n\r\n        interact(gapSelector).on('tap', function(e) {\r\n            e.stopPropagation();\r\n            _handleGapSelect($$1(e.currentTarget));\r\n            e.preventDefault();\r\n        });\r\n\r\n        interact(binSelector).on('tap', function(e) {\r\n            e.stopPropagation();\r\n            _unsetChoice($activeChoice);\r\n            _resetSelection();\r\n            e.preventDefault();\r\n        });\r\n\r\n        // Common handlers\r\n\r\n        function _handleChoiceSelect($target) {\r\n            if (($activeChoice && $target.hasClass('active')) || $target.hasClass('deactivated')) {\r\n                return;\r\n            }\r\n            _resetSelection();\r\n\r\n            $activeChoice = $target.addClass('active');\r\n            $$1(gapSelector).addClass('empty');\r\n        }\r\n\r\n        function _handleFilledGapSelect($target) {\r\n            $activeChoice = $target;\r\n            $$1(gapSelector).addClass('active');\r\n        }\r\n\r\n        function _handleGapSelect($target) {\r\n            var choiceSerial, targetSerial;\r\n\r\n            if (_isInsertionMode()) {\r\n                choiceSerial = $activeChoice.data('serial');\r\n                targetSerial = $target.data('serial');\r\n\r\n                if (targetSerial !== choiceSerial) {\r\n                    //set choices:\r\n                    if (targetSerial) {\r\n                        _unsetChoice($target);\r\n                    }\r\n\r\n                    _setChoice($activeChoice, $target);\r\n                }\r\n\r\n                $activeChoice.removeClass('active');\r\n                $container.find('.empty').removeClass('empty');\r\n                $activeChoice = null;\r\n            } else if (_isModeEditing()) {\r\n                choiceSerial = $activeChoice.data('serial');\r\n                targetSerial = $target.data('serial');\r\n\r\n                if (targetSerial !== choiceSerial) {\r\n                    _unsetChoice($activeChoice);\r\n                    if (targetSerial) {\r\n                        //swapping:\r\n                        _unsetChoice($target);\r\n                        _setChoice(_getChoice(targetSerial), $activeChoice);\r\n                    }\r\n                    _setChoice(_getChoice(choiceSerial), $target);\r\n                }\r\n\r\n                _resetSelection();\r\n            } else if ($target.data('serial') && $target.hasClass('filled')) {\r\n                targetSerial = $target.data('serial');\r\n\r\n                $activeChoice = $target;\r\n                $activeChoice.addClass('active');\r\n\r\n                $flowContainer\r\n                    .find('>li>div')\r\n                    .filter(function() {\r\n                        return $target.data('serial') !== targetSerial;\r\n                    })\r\n                    .addClass('empty');\r\n\r\n                $choiceArea\r\n                    .find('>li:not(.deactivated)')\r\n                    .filter(function() {\r\n                        return $target.data('serial') !== targetSerial;\r\n                    })\r\n                    .addClass('empty');\r\n\r\n                //append trash bin:\r\n                $target.append($bin);\r\n            }\r\n        }\r\n    };\r\n\r\n    var resetResponse = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        $$1('.gapmatch-content.active', $container).removeClass('active');\r\n        $$1('.gapmatch-content', $container).each(function() {\r\n            unsetChoice(interaction, $$1(this));\r\n        });\r\n    };\r\n\r\n    var _setPairs = function(interaction, pair) {\r\n        if (pair && pair.length) {\r\n            setChoice(interaction, getChoice(interaction, pair[0]), getGap(interaction, pair[1]).find('.gapmatch-content'));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function(interaction, response) {\r\n        resetResponse(interaction);\r\n        let pairs = pciResponse.unserialize(response, interaction);\r\n        if ( _.isArray(pairs) && _.isArray(pairs[0])) {\r\n            _.forEach(pairs, pair => _setPairs(interaction, pair));\r\n        } else {\r\n            _setPairs(interaction, pairs);\r\n        }\r\n    };\r\n\r\n    var _getRawResponse = function(interaction) {\r\n        var response = [];\r\n        var $container = containerHelper.get(interaction);\r\n        $$1('.gapmatch-content', $container).each(function() {\r\n            var choiceSerial = $$1(this).data('serial'),\r\n                pair = [];\r\n\r\n            if (choiceSerial) {\r\n                pair.push(interaction.getChoice(choiceSerial).attr('identifier'));\r\n            }\r\n            pair.push($$1(this).data('identifier'));\r\n\r\n            if (pair.length === 2) {\r\n                response.push(pair);\r\n            }\r\n        });\r\n        return response;\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10307\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    var getResponse = function(interaction) {\r\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\r\n    };\r\n\r\n    var destroy = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        //remove event\r\n        interact($container.selector).unset();\r\n        interact($container.find('.choice-area').selector + ' .qti-choice').unset();\r\n        interact($container.find('.qti-flow-container').selector + ' .gapmatch-content').unset();\r\n        interact($container.find('.remove-choice').selector).unset();\r\n\r\n        //restore selection\r\n        $container.find('.gapmatch-content').empty();\r\n        $container.find('.active').removeClass('active');\r\n        $container.find('.remove-choice').remove();\r\n        $container.find('.empty').removeClass('empty');\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        var $container;\r\n\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n\r\n            //restore order of previously shuffled choices\r\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\r\n                $container = containerHelper.get(interaction);\r\n\r\n                $$1('.choice-area .qti-choice', $container)\r\n                    .sort(function(a, b) {\r\n                        var aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\r\n                        var bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\r\n                        if (aIndex > bIndex) {\r\n                            return 1;\r\n                        }\r\n                        if (aIndex < bIndex) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .detach()\r\n                    .appendTo($$1('.choice-area', $container));\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var $container;\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n\r\n        //we store also the choice order if shuffled\r\n        if (interaction.attr('shuffle') === true) {\r\n            $container = containerHelper.get(interaction);\r\n\r\n            state.order = [];\r\n            $$1('.choice-area .qti-choice', $container).each(function() {\r\n                state.order.push($$1(this).data('identifier'));\r\n            });\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the gapmatch interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/GapMatchInteraction\r\n     */\r\n    var GapMatchInteraction = {\r\n        qtiClass: 'gapMatchInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, DOMPurify, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicAssociateInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n    <div class=\\\"image-editor solid\\\">\\r\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {Promise}\r\n     */\r\n    var render = function render(interaction) {\r\n        var self = this;\r\n\r\n        return new Promise(function(resolve) {\r\n            var $container = containerHelper.get(interaction);\r\n            var background = interaction.object.attributes;\r\n            interaction._vsets = [];\r\n\r\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\r\n\r\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\r\n                width: background.width,\r\n                height: background.height,\r\n                img: self.resolveUrl(background.data),\r\n                imgId: 'bg-image-' + interaction.serial,\r\n                container: $container\r\n            });\r\n\r\n            //call render choice for each interaction's choices\r\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\r\n\r\n            //make the paper clear the selection by clicking it\r\n            _paperUnSelect(interaction);\r\n\r\n            //set up the constraints instructions\r\n            instructionMgr.minMaxChoiceInstructions(interaction, {\r\n                min: interaction.attr('minAssociations'),\r\n                max: interaction.attr('maxAssociations'),\r\n                getResponse: _getRawResponse,\r\n                onError: function(data) {\r\n                    if (data && data.target) {\r\n                        graphic.highlightError(data.target);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Render a choice inside the paper.\r\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\r\n     * @param {Paper} paper - the raphael paper to add the choices to\r\n     * @param {Object} interaction\r\n     * @param {Object} choice - the hotspot choice to add to the interaction\r\n     */\r\n    var _renderChoice = function _renderChoice(interaction, choice) {\r\n        var shape = choice.attr('shape');\r\n        var coords = choice.attr('coords');\r\n        var maxAssociations = interaction.attr('maxAssociations');\r\n\r\n        var rElement = graphic\r\n            .createElement(interaction.paper, shape, coords, {\r\n                id: choice.serial,\r\n                title: __('Select this area to start an association')\r\n            })\r\n            .data('max', choice.attr('matchMax'))\r\n            .data('matching', 0)\r\n            .removeData('assocs')\r\n            .click(function() {\r\n                var self = this;\r\n                var active, assocs;\r\n\r\n                //can't create more associations than the maxAssociations attr\r\n                if (maxAssociations > 0 && _getRawResponse(interaction).length >= maxAssociations) {\r\n                    _shapesUnSelectable(interaction);\r\n                    instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\r\n                    return;\r\n                }\r\n                active = _getActiveElement(interaction);\r\n                if (this.selectable) {\r\n                    if (active) {\r\n                        //increment the matching counter\r\n                        active.data('matching', active.data('matching') + 1);\r\n                        this.data('matching', this.data('matching') + 1);\r\n\r\n                        //attach the response to the active (not the dest)\r\n                        assocs = active.data('assocs') || [];\r\n                        assocs.push(choice.id());\r\n                        active.data('assocs', assocs);\r\n\r\n                        //and create the path\r\n                        _createPath(interaction, active, this, function onRemove() {\r\n                            //decrement the matching counter\r\n                            active.data('matching', active.data('matching') - 1);\r\n                            self.data('matching', self.data('matching') - 1);\r\n\r\n                            //detach the response from the active\r\n                            active.data('assocs', _.pull(active.data('assocs') || [], choice.id()));\r\n\r\n                            containerHelper.triggerResponseChangeEvent(interaction);\r\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: self });\r\n                        });\r\n                    }\r\n                    _shapesUnSelectable(interaction);\r\n                } else if (this.active) {\r\n                    _shapesUnSelectable(interaction);\r\n                } else if (_isMatchable(this)) {\r\n                    if (active) {\r\n                        _shapesUnSelectable(interaction);\r\n                    }\r\n                    graphic.updateElementState(this, 'active', __('Select this area to start an association'));\r\n                    this.active = true;\r\n                    _shapesSelectable(interaction, this);\r\n                }\r\n\r\n                containerHelper.triggerResponseChangeEvent(interaction);\r\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * By clicking the paper image the shapes are restored to their default state\r\n     * @private\r\n     * @param {Object} interaction\r\n     */\r\n    var _paperUnSelect = function _paperUnSelect(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        var image = interaction.paper.getById('bg-image-' + interaction.serial);\r\n        if (image) {\r\n            image.click(function() {\r\n                _shapesUnSelectable(interaction);\r\n                $container.trigger('unselect.graphicassociate');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the element that has the active state\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @returns {Raphael.Element} the active element\r\n     */\r\n    var _getActiveElement = function _getActiveElement(interaction) {\r\n        var active;\r\n        _.forEach(interaction.getChoices(), function(choice) {\r\n            var element = interaction.paper.getById(choice.serial);\r\n            if (element && element.active === true) {\r\n                active = element;\r\n                return false;\r\n            }\r\n        });\r\n        return active;\r\n    };\r\n\r\n    /**\r\n     * Create a path from a src element to a destination.\r\n     * The path is selectable and can be removed by itself\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @param {Raphael.Element} srcElement - the path starts from this shape\r\n     * @param {Raphael.Element} destElement - the path ends to this shape\r\n     * @param {Function} onRemove - called back on path remove\r\n     */\r\n    var _createPath = function _createPath(interaction, srcElement, destElement, onRemove) {\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        //virtual set, not a raphael one, just to group the elements\r\n        var vset = [];\r\n\r\n        //get the middle point of the source shape\r\n        var src = srcElement.getBBox();\r\n        var sx = src.x + src.width / 2;\r\n        var sy = src.y + src.height / 2;\r\n\r\n        //get the middle point of the source shape\r\n        var dest = destElement.getBBox();\r\n        var dx = dest.x + dest.width / 2;\r\n        var dy = dest.y + dest.height / 2;\r\n\r\n        //create a path with bullets at the beginning and the end\r\n        var srcBullet = interaction.paper.circle(sx, sy, 3).attr(graphic._style['assoc-bullet']);\r\n\r\n        var destBullet = interaction.paper.circle(dx, dy, 3).attr(graphic._style['assoc-bullet']);\r\n\r\n        var path = interaction.paper\r\n            .path('M' + sx + ',' + sy + 'L' + sx + ',' + sy)\r\n            .attr(graphic._style.assoc)\r\n            .animate({ path: 'M' + sx + ',' + sy + 'L' + dx + ',' + dy }, 300);\r\n\r\n        //create an overall layer that make easier the path selection\r\n        var layer = interaction.paper.path('M' + sx + ',' + sy + 'L' + dx + ',' + dy).attr(graphic._style['assoc-layer']);\r\n\r\n        //get the middle of the path\r\n        var midPath = layer.getPointAtLength(layer.getTotalLength() / 2);\r\n\r\n        //create an hidden background for the closer\r\n        var closerBg = interaction.paper\r\n            .circle(midPath.x, midPath.y, 9)\r\n            .attr(graphic._style['close-bg'])\r\n            .toBack();\r\n\r\n        //create an hidden closer\r\n        var closer = interaction.paper\r\n            .path(graphic._style.close.path)\r\n            .attr(graphic._style.close)\r\n            .transform('T' + (midPath.x - 9) + ',' + (midPath.y - 9))\r\n            .attr('title', _('Click again to remove'))\r\n            .toBack();\r\n\r\n        //the path is below the shapes\r\n        srcElement.toFront();\r\n        destElement.toFront();\r\n\r\n        //add the path into a set\r\n        vset = [srcBullet, path, destBullet, layer, closerBg, closer];\r\n        interaction._vsets.push(vset);\r\n\r\n        //to identify the element of the set outside the context\r\n        _.invoke(vset, 'data', 'assoc-path', true);\r\n\r\n        //enable to select the path by clicking the invisible layer\r\n        layer.click(function selectLigne() {\r\n            if (closer.attrs.opacity === 0) {\r\n                showCloser();\r\n            } else {\r\n                hideCloser();\r\n            }\r\n        });\r\n\r\n        $container.on('unselect.graphicassociate', function() {\r\n            hideCloser();\r\n        });\r\n\r\n        function showCloser() {\r\n            closerBg\r\n                .toFront()\r\n                .animate({ opacity: 0.8 }, 300)\r\n                .click(removeSet);\r\n            closer\r\n                .toFront()\r\n                .animate({ opacity: 1 }, 300)\r\n                .click(removeSet);\r\n        }\r\n\r\n        function hideCloser() {\r\n            if (closerBg && closerBg.type) {\r\n                closerBg\r\n                    .animate({ opacity: 0 }, 300, function() {\r\n                        closerBg.toBack();\r\n                    })\r\n                    .unclick();\r\n                closer\r\n                    .animate({ opacity: 0 }, 300, function() {\r\n                        closer.toBack();\r\n                    })\r\n                    .unclick();\r\n            }\r\n        }\r\n\r\n        //remove set handler\r\n        function removeSet() {\r\n            _.invoke(vset, 'remove');\r\n            interaction._vsets = _.without(interaction._vsets, vset);\r\n            if (typeof onRemove === 'function') {\r\n                onRemove();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Makes the shapes selectable\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @param {Raphael.Element} active - the active shape\r\n     */\r\n    var _shapesSelectable = function _shapesSelectable(interaction, active) {\r\n        var assocs = active.data('assocs') || [];\r\n        var choices = interaction.getChoices();\r\n        var activeChoice = choices[active.id];\r\n\r\n        //update the shape state\r\n        _.forEach(choices, function(choice) {\r\n            var element;\r\n            var assocsElement;\r\n            if (!_.contains(assocs, choice.id())) {\r\n                element = interaction.paper.getById(choice.serial);\r\n                assocsElement = element.data('assocs') || [];\r\n                if (\r\n                    !element.active &&\r\n                    element.id !== active.id &&\r\n                    _isMatchable(element) &&\r\n                    !_.contains(assocsElement, activeChoice.id())) {\r\n                    element.selectable = true;\r\n                    graphic.updateElementState(element, 'selectable');\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Makes all the shapes UNselectable\r\n     * @private\r\n     * @param {Object} interaction\r\n     */\r\n    var _shapesUnSelectable = function _shapesUnSelectable(interaction) {\r\n        _.forEach(interaction.getChoices(), function(choice) {\r\n            var element = interaction.paper.getById(choice.serial);\r\n            if (element) {\r\n                element.selectable = false;\r\n                element.active = false;\r\n                graphic.updateElementState(element, 'basic');\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Check if a shape can accept matches\r\n     * @private\r\n     * @param {Raphael.Element} element - the shape\r\n     * @returns {Boolean} true if the element is matchable\r\n     */\r\n    var _isMatchable = function(element) {\r\n        var matchable = false;\r\n        var matching, matchMax;\r\n        if (element) {\r\n            matchMax = element.data('max') || 0;\r\n            matching = element.data('matching') || 0;\r\n            matchable = matchMax === 0 || matchMax > matching;\r\n        }\r\n        return matchable;\r\n    };\r\n\r\n    /**\r\n     * Get the response from the interaction\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @returns {Array} the response in raw format\r\n     */\r\n    var _getRawResponse = function _getRawResponse(interaction) {\r\n        var responses = [];\r\n        _.forEach(interaction.getChoices(), function(choice) {\r\n            var element = interaction.paper.getById(choice.serial);\r\n            var assocs = element.data('assocs');\r\n            if (element && assocs) {\r\n                responses = responses.concat(\r\n                    _.map(assocs, function(id) {\r\n                        return [choice.id(), id];\r\n                    })\r\n                );\r\n            }\r\n        });\r\n        return responses;\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function(interaction, response) {\r\n        var responseValues;\r\n        var map;\r\n        if (response && interaction.paper) {\r\n            try {\r\n                responseValues = pciResponse.unserialize(response, interaction);\r\n                if (responseValues.length === 2 && !Array.isArray(responseValues[0]) && !Array.isArray(responseValues[1])) {\r\n                    responseValues = [responseValues];\r\n                }\r\n            } catch (e) {}\r\n\r\n            if (_.isArray(responseValues)) {\r\n                //create an object with choiceId => shapeElement\r\n                map = _.transform(interaction.getChoices(), function(res, choice) {\r\n                    res[choice.id()] = interaction.paper.getById(choice.serial);\r\n                });\r\n                _.forEach(responseValues, function(responseValue) {\r\n                    var el1, el2;\r\n                    if (_.isArray(responseValue) && responseValue.length === 2) {\r\n                        el1 = map[responseValue[0]];\r\n                        el2 = map[responseValue[1]];\r\n                        if (el1 && el2) {\r\n                            graphic.trigger(el1, 'click');\r\n                            graphic.trigger(el2, 'click');\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset the current responses of the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var resetResponse = function resetResponse(interaction) {\r\n        var toRemove = [];\r\n\r\n        //reset response and state bound to shapes\r\n        _.forEach(interaction.getChoices(), function(choice) {\r\n            var element = interaction.paper.getById(choice.serial);\r\n            if (element) {\r\n                element.data({\r\n                    max: choice.attr('matchMax'),\r\n                    matching: 0,\r\n                    assocs: []\r\n                });\r\n            }\r\n        });\r\n\r\n        if (interaction && interaction.paper) {\r\n            //remove the paths, but outside the forEach as it is implemented as a linked list\r\n            interaction.paper.forEach(function(elt) {\r\n                if (elt.data('assoc-path')) {\r\n                    toRemove.push(elt);\r\n                }\r\n            });\r\n        }\r\n        _.invoke(toRemove, 'remove');\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    var getResponse = function(interaction) {\r\n        var raw = _getRawResponse(interaction);\r\n        var response = pciResponse.serialize(raw, interaction);\r\n        return response;\r\n    };\r\n\r\n    /**\r\n     * Clean interaction destroy\r\n     * @param {Object} interaction\r\n     */\r\n    var destroy = function destroy(interaction) {\r\n        var $container;\r\n        if (interaction.paper) {\r\n            $container = containerHelper.get(interaction);\r\n\r\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\r\n            $container.off('resize.qti-widget.' + interaction.serial);\r\n\r\n            interaction.paper.clear();\r\n            instructionMgr.removeInstructions(interaction);\r\n\r\n            $container.off('.graphicassociate');\r\n\r\n            $$1('.main-image-box', $container)\r\n                .empty()\r\n                .removeAttr('style');\r\n            $$1('.image-editor', $container).removeAttr('style');\r\n            $$1('ul', $container).empty();\r\n        }\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the hotspot interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction\r\n     */\r\n    var GraphicAssociateInteraction = {\r\n        qtiClass: 'graphicAssociateInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',['jquery', 'lodash', 'i18n', 'module', 'core/mouseEvent', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'interact', 'ui/interactUtils'], function ($$1, _, __, module, mouseEvent, Handlebars, DOMPurify, graphic, pciResponse, containerHelper, instructionMgr, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicGapMatchInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n    <div class=\\\"image-editor solid\\\">\\r\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n        <ul class=\\\"none block-listing horizontal source\\\">\\r\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.gapImgs) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.gapImgs); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.gapImgs) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var isDragAndDropEnabled;\r\n\r\n    // this represents the state for the active droppable zone\r\n    // we need it only to access the active dropzone in the iFrameFix\r\n    // should be removed when the old test runner is discarded\r\n    var activeDrop = null;\r\n\r\n    /**\r\n     * Global variable to count number of choice usages:\r\n     * @type {object}\r\n     */\r\n    var _choiceUsages = {};\r\n\r\n    /**\r\n     * This options enables to support old items created with the wrong\r\n     * direction in the directedpairs.\r\n     *\r\n     * @deprecated\r\n     */\r\n    var isDirectedPairFlipped = module.config().flipDirectedPair;\r\n\r\n    /**\r\n     * Check if a shape can accept matches\r\n     * @private\r\n     * @param {Raphael.Element} element - the shape\r\n     * @returns {Boolean} true if the element is matchable\r\n     */\r\n    var _isMatchable = function(element) {\r\n        var matchable = false;\r\n        var matching, matchMax;\r\n        if (element) {\r\n            matchMax = element.data('max') || 0;\r\n            matching = element.data('matching') || [];\r\n            matchable = matchMax === 0 || matchMax > matching.length;\r\n        }\r\n        return matchable;\r\n    };\r\n\r\n    /**\r\n     * Makes the shapes selectable (at least those who can still accept matches)\r\n     * @private\r\n     * @param {Object} interaction\r\n     */\r\n    var _shapesSelectable = function _shapesSelectable(interaction) {\r\n        var tooltip = __('Select the area to add an image');\r\n\r\n        //update the shape state\r\n        _.forEach(interaction.getChoices(), function(choice) {\r\n            var element = interaction.paper.getById(choice.serial);\r\n            if (_isMatchable(element)) {\r\n                element.selectable = true;\r\n                graphic.setStyle(element, 'selectable');\r\n                graphic.updateTitle(element, tooltip);\r\n            }\r\n        });\r\n\r\n        //update the gap images tooltip\r\n        _.forEach(interaction.gapFillers, function(gapFiller) {\r\n            gapFiller.forEach(function(element) {\r\n                graphic.updateTitle(element, tooltip);\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Makes all the shapes UNselectable\r\n     * @private\r\n     * @param {Object} interaction\r\n     */\r\n    var _shapesUnSelectable = function _shapesUnSelectable(interaction) {\r\n        _.forEach(interaction.getChoices(), function(choice) {\r\n            var element = interaction.paper.getById(choice.serial);\r\n            if (element) {\r\n                element.selectable = false;\r\n                graphic.setStyle(element, 'basic');\r\n                graphic.updateTitle(element, __('Select an image first'));\r\n            }\r\n        });\r\n\r\n        //update the gap images tooltip\r\n        _.forEach(interaction.gapFillers, function(gapFiller) {\r\n            gapFiller.forEach(function(element) {\r\n                graphic.updateTitle(element, __('Remove'));\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * By clicking the paper image the shapes are restored to their default state\r\n     * @private\r\n     * @param {Object} interaction\r\n     */\r\n    var _paperUnSelect = function _paperUnSelect(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        var $gapImages = $$1('ul > li', $container);\r\n        var bgImage = interaction.paper.getById('bg-image-' + interaction.serial);\r\n        if (bgImage) {\r\n            interact(bgImage.node).on('tap', function() {\r\n                _shapesUnSelectable(interaction);\r\n                $gapImages.removeClass('active');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets a choice and marks as disabled if at max\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @param {JQuery Element} $choice\r\n     */\r\n    var _setChoice = function _setChoice(interaction, $choice) {\r\n        var choiceSerial = $choice.data('serial');\r\n        var choice = interaction.getGapImg(choiceSerial);\r\n        var matchMax;\r\n        var usages;\r\n\r\n        if (!_choiceUsages[choiceSerial]) {\r\n            _choiceUsages[choiceSerial] = 0;\r\n        }\r\n\r\n        _choiceUsages[choiceSerial]++;\r\n\r\n        // disable choice if maxium usage reached\r\n        if (!interaction.responseMappingMode && choice.attr('matchMax')) {\r\n            matchMax = +choice.attr('matchMax');\r\n            usages = +_choiceUsages[choiceSerial];\r\n\r\n            // note: if matchMax is 0, then test taker is allowed unlimited usage of that choice\r\n            if (matchMax !== 0 && matchMax <= usages) {\r\n                interact($choice.get(0)).draggable(false);\r\n                $choice.addClass('disabled');\r\n                $choice.removeClass('selectable');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Unset a choice and unmark as disabled\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @param {JQuery Element} $choice\r\n     */\r\n    var _unsetChoice = function _unsetChoice(interaction, $choice) {\r\n        var choiceSerial = $choice.data('serial');\r\n\r\n        _choiceUsages[choiceSerial]--;\r\n\r\n        $choice.removeClass('disabled');\r\n        $choice.addClass('selectable');\r\n        interact($choice.get(0)).draggable(true);\r\n    };\r\n\r\n    /**\r\n     * Select a shape (= hotspot) (a gap image must be active)\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @param {Raphael.Element} element - the selected shape\r\n     * @param {Boolean} [trackResponse = true] - if the selection trigger a response chane\r\n     */\r\n    var _selectShape = function _selectShape(interaction, element, trackResponse) {\r\n        var $img, $clone, gapFiller, id, bbox, shapeOffset, activeOffset, matching, currentCount;\r\n\r\n        //lookup for the active element\r\n        var $container = containerHelper.get(interaction);\r\n        var $gapList = $$1('ul', $container);\r\n        var $active = $gapList.find('.active:first');\r\n        var $imageBox = $$1('.main-image-box', $container);\r\n        var boxOffset = $imageBox.offset();\r\n\r\n        if ($active.length) {\r\n            //the macthing elements are linked to the shape\r\n            id = $active.data('identifier');\r\n            matching = element.data('matching') || [];\r\n            matching.push(id);\r\n            element.data('matching', matching);\r\n            currentCount = matching.length;\r\n\r\n            //the image to clone\r\n            $img = $active.find('img');\r\n\r\n            //then reset the state of the shapes and the gap images\r\n            _shapesUnSelectable(interaction);\r\n            $gapList.children().removeClass('active');\r\n\r\n            _setChoice(interaction, $active);\r\n\r\n            $clone = $img.clone();\r\n            shapeOffset = $$1(element.node).offset();\r\n            activeOffset = $active.offset();\r\n\r\n            $clone.css({\r\n                position: 'absolute',\r\n                display: 'block',\r\n                'z-index': 10000,\r\n                opacity: 0.8,\r\n                top: activeOffset.top - boxOffset.top,\r\n                left: activeOffset.left - boxOffset.left\r\n            });\r\n\r\n            $clone.appendTo($imageBox);\r\n            $clone.animate(\r\n                {\r\n                    top: shapeOffset.top - boxOffset.top,\r\n                    left: shapeOffset.left - boxOffset.left\r\n                },\r\n                200,\r\n                function animationEnd() {\r\n                    var gapFillerImage;\r\n\r\n                    $clone.remove();\r\n\r\n                    //extract some coords for positioning\r\n                    bbox = element.getBBox();\r\n\r\n                    //create an image into the paper and move it to the selected shape\r\n                    gapFiller = graphic\r\n                        .createBorderedImage(interaction.paper, {\r\n                            url: $img.attr('src'),\r\n                            left: bbox.x + 8 * (currentCount - 1),\r\n                            top: bbox.y + 8 * (currentCount - 1),\r\n                            width: parseInt($img.attr('width'), 10),\r\n                            height: parseInt($img.attr('height'), 10),\r\n                            padding: 0,\r\n                            border: false,\r\n                            shadow: true\r\n                        })\r\n                        .data('identifier', id)\r\n                        .toFront();\r\n\r\n                    gapFillerImage = gapFiller[2].node;\r\n                    interact(gapFillerImage).on('tap', function(e) {\r\n                        var target = e.currentTarget;\r\n                        var rElement = interaction.paper.getById(target.raphaelid);\r\n\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        // adding a new gapfiller on the hotspot by simulating a click on the underlying shape...\r\n                        if ($gapList.find('.active').length > 0) {\r\n                            interactUtils.tapOn(element.node);\r\n\r\n                            // ... or removing the existing gapfiller\r\n                        } else {\r\n                            //update the element matching array\r\n                            element.data(\r\n                                'matching',\r\n                                _.without(element.data('matching') || [], rElement.data('identifier'))\r\n                            );\r\n\r\n                            //delete interaction.gapFillers[interaction.gapFillers.indexOf(gapFiller)];\r\n                            interaction.gapFillers = _.without(interaction.gapFillers, gapFiller);\r\n\r\n                            gapFiller.remove();\r\n\r\n                            _unsetChoice(interaction, $active);\r\n\r\n                            containerHelper.triggerResponseChangeEvent(interaction);\r\n                        }\r\n                    });\r\n\r\n                    interaction.gapFillers.push(gapFiller);\r\n\r\n                    containerHelper.triggerResponseChangeEvent(interaction);\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Render a choice (= hotspot) inside the paper.\r\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\r\n     *\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @param {Object} choice - the hotspot choice to add to the interaction\r\n     */\r\n    var _renderChoice = function _renderChoice(interaction, choice) {\r\n        //create the shape\r\n        var rElement = graphic\r\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\r\n                id: choice.serial,\r\n                title: __('Select an image first'),\r\n                hover: false\r\n            })\r\n            .data('max', choice.attr('matchMax'))\r\n            .data('matching', []);\r\n\r\n        interact(rElement.node).on('tap', function onClickShape() {\r\n            handleShapeSelect();\r\n        });\r\n\r\n        if (isDragAndDropEnabled) {\r\n            interact(rElement.node).dropzone({\r\n                overlap: 0.15,\r\n                ondragenter: function() {\r\n                    if (_isMatchable(rElement)) {\r\n                        graphic.setStyle(rElement, 'hover');\r\n                        activeDrop = rElement.node;\r\n                    }\r\n                },\r\n                ondrop: function() {\r\n                    if (_isMatchable(rElement)) {\r\n                        graphic.setStyle(rElement, 'selectable');\r\n                        handleShapeSelect();\r\n                        activeDrop = null;\r\n                    }\r\n                },\r\n                ondragleave: function() {\r\n                    if (_isMatchable(rElement)) {\r\n                        graphic.setStyle(rElement, 'selectable');\r\n                        activeDrop = null;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        function handleShapeSelect() {\r\n            // check if can make the shape selectable on click\r\n            if (_isMatchable(rElement) && rElement.selectable === true) {\r\n                _selectShape(interaction, rElement);\r\n            }\r\n        }\r\n    };\r\n\r\n    var _iFrameDragFix = function _iFrameDragFix(draggableSelector, target) {\r\n        interactUtils.iFrameDragFixOn(function() {\r\n            if (activeDrop) {\r\n                interact(activeDrop).fire({\r\n                    type: 'drop',\r\n                    target: activeDrop,\r\n                    relatedTarget: target\r\n                });\r\n            }\r\n            interact(draggableSelector).fire({\r\n                type: 'dragend',\r\n                target: target\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Render the list of gap fillers\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @param {jQueryElement} $gapList - the list than contains the orderers\r\n     */\r\n    var _renderGapList = function _renderGapList(interaction, $gapList) {\r\n        var gapFillersSelector = $gapList.selector + ' li';\r\n        var dragOptions;\r\n        var scaleX, scaleY;\r\n\r\n        interact(gapFillersSelector).on('tap', function onClickGapImg(e) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            toggleActiveGapState($$1(e.currentTarget));\r\n        });\r\n\r\n        if (isDragAndDropEnabled) {\r\n            dragOptions = {\r\n                inertia: false,\r\n                autoScroll: true,\r\n                restrict: {\r\n                    restriction: '.qti-interaction',\r\n                    endOnly: false,\r\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\r\n                }\r\n            };\r\n\r\n            $$1(gapFillersSelector).each(function(index, gap) {\r\n                interact(gap)\r\n                    .draggable(\r\n                        _.assign({}, dragOptions, {\r\n                            onstart: function(e) {\r\n                                var $target = $$1(e.target);\r\n                                var scale;\r\n                                _setActiveGapState($target);\r\n                                $target.addClass('dragged');\r\n\r\n                                _iFrameDragFix(gapFillersSelector, e.target);\r\n                                scale = interactUtils.calculateScale(e.target);\r\n                                scaleX = scale[0];\r\n                                scaleY = scale[1];\r\n                            },\r\n                            onmove: function(e) {\r\n                                interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\r\n                            },\r\n                            onend: function(e) {\r\n                                _.defer( () => {\r\n                                    var $target = $$1(e.target);\r\n                                    _setInactiveGapState($target);\r\n                                    $target.removeClass('dragged');\r\n                                    interactUtils.restoreOriginalPosition($target);\r\n                                    interactUtils.iFrameDragFixOff();\r\n                                });\r\n                            }\r\n                        })\r\n                    )\r\n                    .styleCursor(false);\r\n            });\r\n        }\r\n\r\n        function toggleActiveGapState($target) {\r\n            if (!$target.hasClass('disabled')) {\r\n                if ($target.hasClass('active')) {\r\n                    _setInactiveGapState($target);\r\n                } else {\r\n                    _setActiveGapState($target);\r\n                }\r\n            }\r\n        }\r\n\r\n        function _setActiveGapState($target) {\r\n            $gapList.children('li').removeClass('active');\r\n            $target.addClass('active');\r\n            _shapesSelectable(interaction);\r\n        }\r\n\r\n        function _setInactiveGapState($target) {\r\n            $target.removeClass('active');\r\n            _shapesUnSelectable(interaction);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     * @return {Promise}\r\n     */\r\n    var render = function render(interaction) {\r\n        var self = this;\r\n\r\n        return new Promise(function(resolve) {\r\n            var $container = containerHelper.get(interaction);\r\n            var $gapList = $$1('ul.source', $container);\r\n            var background = interaction.object.attributes;\r\n\r\n            interaction.gapFillers = [];\r\n\r\n            if (\r\n                self.getOption &&\r\n                self.getOption('enableDragAndDrop') &&\r\n                self.getOption('enableDragAndDrop').graphicGapMatch\r\n            ) {\r\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').graphicGapMatch;\r\n            }\r\n\r\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\r\n\r\n            //create the paper\r\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\r\n                width: background.width,\r\n                height: background.height,\r\n                img: self.resolveUrl(background.data),\r\n                imgId: 'bg-image-' + interaction.serial,\r\n                container: $container,\r\n                resize: function(newSize, factor) {\r\n                    $gapList.css('max-width', newSize + 'px');\r\n                    if (factor !== 1) {\r\n                        $gapList.find('img').each(function() {\r\n                            var $img = $$1(this);\r\n                            $img.width($img.attr('width') * factor);\r\n                            $img.height($img.attr('height') * factor);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            //call render choice for each interaction's choices\r\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\r\n\r\n            //create the list of gap images\r\n            _renderGapList(interaction, $gapList);\r\n\r\n            //clicking the paper to reset selection\r\n            _paperUnSelect(interaction);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get the responses from the interaction\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @returns {Array} of matches\r\n     */\r\n    var _getRawResponse = function _getRawResponse(interaction) {\r\n        var pairs = [];\r\n        _.forEach(interaction.getChoices(), function(choice) {\r\n            var element = interaction.paper.getById(choice.serial);\r\n            if (element && _.isArray(element.data('matching'))) {\r\n                _.forEach(element.data('matching'), function(gapImg) {\r\n                    //backward support of previous order\r\n                    if (isDirectedPairFlipped) {\r\n                        pairs.push([choice.id(), gapImg]);\r\n                    } else {\r\n                        pairs.push([gapImg, choice.id()]);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return _.sortBy(pairs, [0, 1]);\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function(interaction, response) {\r\n        var $container = containerHelper.get(interaction);\r\n        var responseValues;\r\n        if (response && interaction.paper) {\r\n            try {\r\n                responseValues = pciResponse.unserialize(response, interaction);\r\n            } catch (e) {\r\n                responseValues = null;\r\n            }\r\n\r\n            if (_.isArray(responseValues)) {\r\n                _.forEach(interaction.getChoices(), function(choice) {\r\n                    var element = interaction.paper.getById(choice.serial);\r\n                    if (element) {\r\n                        _.forEach(responseValues, function(pair) {\r\n                            var responseChoice;\r\n                            var responseGap;\r\n                            if (pair.length === 2) {\r\n                                //backward support of previous order\r\n                                responseChoice = isDirectedPairFlipped ? pair[0] : pair[1];\r\n                                responseGap = isDirectedPairFlipped ? pair[1] : pair[0];\r\n                                if (responseChoice === choice.id()) {\r\n                                    $$1('[data-identifier=\"' + responseGap + '\"]', $container).addClass('active');\r\n                                    _selectShape(interaction, element);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset the current responses of the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    var resetResponse = function resetResponse(interaction) {\r\n        _shapesUnSelectable(interaction);\r\n\r\n        _.forEach(interaction.gapFillers, function(gapFiller) {\r\n            interactUtils.tapOn(gapFiller.items[2][0]); // this refers to the gapFiller image\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    var getResponse = function(interaction) {\r\n        var raw = _getRawResponse(interaction);\r\n        return pciResponse.serialize(raw, interaction);\r\n    };\r\n\r\n    /**\r\n     * Clean interaction destroy\r\n     * @param {Object} interaction\r\n     */\r\n    var destroy = function destroy(interaction) {\r\n        var $container;\r\n        if (interaction.paper) {\r\n            $container = containerHelper.get(interaction);\r\n\r\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\r\n            $container.off('resize.qti-widget.' + interaction.serial);\r\n\r\n            interaction.paper.clear();\r\n            instructionMgr.removeInstructions(interaction);\r\n\r\n            $$1('.main-image-box', $container)\r\n                .empty()\r\n                .removeAttr('style');\r\n            $$1('.image-editor', $container).removeAttr('style');\r\n            $$1('ul', $container).empty();\r\n\r\n            interact($container.find('ul.source li').selector).unset(); // gapfillers\r\n            interact($container.find('.main-image-box rect').selector).unset(); // choices/hotspot\r\n        }\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the hotspot interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\r\n     */\r\n    var GraphicGapMatchInteraction = {\r\n        qtiClass: 'graphicGapMatchInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState,\r\n        isDirectedPairFlipped: isDirectedPairFlipped\r\n    };\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, DOMPurify, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicOrderInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n    <div class=\\\"image-editor solid\\\">\\r\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n        <ul class=\\\"none block-listing horizontal ordinals\\\"></ul>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    var render = function render(interaction) {\r\n        var self = this;\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            var $container = containerHelper.get(interaction);\r\n            var $orderList = $$1('ul', $container);\r\n            var background = interaction.object.attributes;\r\n\r\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\r\n\r\n            //create the paper\r\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\r\n                width: background.width,\r\n                height: background.height,\r\n                img: self.resolveUrl(background.data),\r\n                imgId: 'bg-image-' + interaction.serial,\r\n                container: $container\r\n            });\r\n\r\n            //create the list of number to order\r\n            _renderOrderList(interaction, $orderList);\r\n\r\n            //call render choice for each interaction's choices\r\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction, $orderList));\r\n\r\n            //set up the constraints instructions\r\n            instructionMgr.minMaxChoiceInstructions(interaction, {\r\n                min: interaction.attr('minChoices'),\r\n                max: interaction.attr('maxChoices'),\r\n                getResponse: _getRawResponse,\r\n                onError: function(data) {\r\n                    graphic.highlightError(data.target);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Render a choice inside the paper.\r\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @param {jQueryElement} $orderList - the list than contains the orderers\r\n     * @param {Object} choice - the hotspot choice to add to the interaction\r\n     */\r\n    var _renderChoice = function _renderChoice(interaction, $orderList, choice) {\r\n        var rElement = graphic\r\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\r\n                id: choice.serial,\r\n                title: __('Select this area')\r\n            })\r\n            .click(function(e) {\r\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n                if (\r\n                    $$1(e.currentTarget)\r\n                        .closest('.qti-item')\r\n                        .hasClass('prevent-click-handler')\r\n                ) {\r\n                    return;\r\n                }\r\n                if (this.active) {\r\n                    _unselectShape(interaction.paper, this, $orderList);\r\n                } else {\r\n                    _selectShape(interaction.paper, this, $orderList);\r\n                }\r\n                containerHelper.triggerResponseChangeEvent(interaction);\r\n                instructionMgr.validateInstructions(interaction, { choice: choice });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Render the list of numbers\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @param {jQueryElement} $orderList - the list than contains the orderers\r\n     */\r\n    var _renderOrderList = function _renderOrderList(interaction, $orderList) {\r\n        var $orderers;\r\n        var size = _.size(interaction.getChoices());\r\n        var min = interaction.attr('minChoices');\r\n        var max = interaction.attr('maxChoices');\r\n\r\n        //calculate the number of orderer to display\r\n        if (max > 0 && max <= size) {\r\n            size = max;\r\n        } else if (min > 0 && min <= size) {\r\n            size = min;\r\n        }\r\n\r\n        //add them to the list\r\n        _.times(size, function(index) {\r\n            var position = index + 1;\r\n            var $orderer = $$1('<li class=\"selectable\" data-number=\"' + position + '\">' + position + '</li>');\r\n            if (index === 0) {\r\n                $orderer.addClass('active');\r\n            }\r\n            $orderList.append($orderer);\r\n        });\r\n\r\n        //create related svg texts\r\n        _createTexts(interaction.paper, size);\r\n\r\n        //bind the activation event\r\n        $orderers = $orderList.children('li');\r\n        $orderers.click(function(e) {\r\n            e.preventDefault();\r\n            var $orderer = $$1(this);\r\n\r\n            if (!$orderer.hasClass('active') && !$orderer.hasClass('disabled')) {\r\n                $orderers.removeClass('active');\r\n                $orderer.addClass('active');\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Select a shape to position an order\r\n     * @private\r\n     * @param {Raphael.Paper} paper - the interaction paper\r\n     * @param {Raphael.element} element - the selected shape\r\n     * @param {jQueryElement} $orderList - the list than contains the orderers\r\n     */\r\n    var _selectShape = function _selectShape(paper, element, $orderList) {\r\n        //lookup for the active number\r\n        var $active = $orderList.find('.active:first');\r\n        if ($active.length && $active.data('number') > 0) {\r\n            //associate the current number directly to the element\r\n            element.data('number', $active.data('number'));\r\n            element.active = true;\r\n            _showText(paper, element);\r\n            graphic.updateElementState(element, 'active');\r\n\r\n            //update the state of the order list\r\n            $active\r\n                .toggleClass('active disabled')\r\n                .siblings(':not(.disabled)')\r\n                .first()\r\n                .toggleClass('active');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Unselect a shape to free the position\r\n     * @private\r\n     * @param {Raphael.Paper} paper - the interaction paper\r\n     * @param {Raphael.element} element - the unselected shape\r\n     * @param {jQueryElement} $orderList - the list than contains the orderers\r\n     */\r\n    var _unselectShape = function _unselectShape(paper, element, $orderList) {\r\n        var number = element.data('number');\r\n        var unsetNumbers = [number];\r\n\r\n        $orderList\r\n            .children(':not(.disabled)')\r\n            .each(function() {\r\n                unsetNumbers.push($$1(this).data('number'));\r\n            });\r\n\r\n        var activeNumber = Math.min.apply(Math, unsetNumbers) || number;\r\n\r\n        //update element state\r\n        element.active = false;\r\n        _hideText(paper, element);\r\n        element.removeData('number');\r\n        graphic.updateElementState(element, 'basic');\r\n\r\n        //reset order list state and activate the removed number\r\n        $orderList\r\n            .children()\r\n            .removeClass('active')\r\n            .filter('[data-number=' + number + ']')\r\n            .removeClass('disabled');\r\n\r\n        // Set (min) active number\r\n        $orderList\r\n            .find('li[data-number=\"' + activeNumber + '\"]')\r\n            .addClass('active');\r\n    };\r\n\r\n    /**\r\n     * Creates ALL the texts (the numbers to display in the shapes). They are created styled but hidden.\r\n     *\r\n     * @private\r\n     * @param {Raphael.Paper} paper - the interaction paper\r\n     * @param {Number} size - the number of numbers to create...\r\n     * @param {jQueryElement} $orderList - the list than contains the orderers\r\n     * @return {Array} the creates text element\r\n     */\r\n    var _createTexts = function _createTexts(paper, size) {\r\n        var texts = [];\r\n        _.times(size, function(index) {\r\n            var number = index + 1;\r\n            var text = graphic.createText(paper, {\r\n                id: 'text-' + number,\r\n                content: number,\r\n                title: __('Remove'),\r\n                style: 'order-text',\r\n                hide: true,\r\n                disableEvents: true\r\n            });\r\n\r\n            texts.push(text);\r\n        });\r\n        return texts;\r\n    };\r\n\r\n    /**\r\n     * Show the text that match the element's number.\r\n     * We need to display it at the center of the shape.\r\n     * @private\r\n     * @param {Raphael.Paper} paper - the interaction paper\r\n     * @param {Raphael.Element} element - the element to show the text for\r\n     */\r\n    var _showText = function _showText(paper, element) {\r\n        var bbox = element.getBBox();\r\n        var transf;\r\n\r\n        //we retrieve the good text from it's id\r\n        var text = paper.getById('text-' + element.data('number'));\r\n        if (text) {\r\n            //move it to the center of the shape (using absolute transform), and than display it\r\n            transf = 'T' + (bbox.x + bbox.width / 2) + ',' + (bbox.y + bbox.height / 2);\r\n            text.transform(transf)\r\n                .show()\r\n                .toFront();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Hide an element text.\r\n     * @private\r\n     * @param {Raphael.Paper} paper - the interaction paper\r\n     * @param {Raphael.Element} element - the element to hide the text for\r\n     */\r\n    var _hideText = function _hideText(paper, element) {\r\n        var text = paper.getById('text-' + element.data('number'));\r\n        if (text) {\r\n            text.hide();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the responses from the interaction\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @returns {Array} of points\r\n     */\r\n    var _getRawResponse = function _getRawResponse(interaction) {\r\n        var response = [];\r\n        _.forEach(interaction.getChoices(), function(choice) {\r\n            var elt = interaction.paper.getById(choice.serial);\r\n            if (elt && elt.data('number')) {\r\n                response.push({\r\n                    index: elt.data('number'),\r\n                    id: choice.id()\r\n                });\r\n            }\r\n        });\r\n        return _(response)\r\n            .sortBy('index')\r\n            .map('id')\r\n            .value();\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function(interaction, response) {\r\n        var responseValues;\r\n        var $container = containerHelper.get(interaction);\r\n        var $orderList = $$1('ul', $container);\r\n        if (response && interaction.paper) {\r\n            try {\r\n                //try to unserualize tthe pci response\r\n                responseValues = pciResponse.unserialize(response, interaction);\r\n            } catch (e) {}\r\n\r\n            if (_.isArray(responseValues)) {\r\n                _.forEach(responseValues, function(responseValue, index) {\r\n                    var element;\r\n                    var number = index + 1;\r\n\r\n                    //get the choice that match the response\r\n                    var choice = _(interaction.getChoices())\r\n                        .where({ attributes: { identifier: responseValue } })\r\n                        .first();\r\n                    if (choice) {\r\n                        element = interaction.paper.getById(choice.serial);\r\n                        if (element) {\r\n                            //activate the orderer to be consistant\r\n                            $orderList.children('[data-number=' + number + ']').addClass('active');\r\n\r\n                            //select the related shape\r\n                            _selectShape(interaction.paper, element, $orderList);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset the current responses of the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var resetResponse = function resetResponse(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        var $orderList = $$1('ul', $container);\r\n\r\n        _.forEach(interaction.getChoices(), function(choice) {\r\n            var element = interaction.paper.getById(choice.serial);\r\n            if (element) {\r\n                _unselectShape(interaction.paper, element, $orderList);\r\n            }\r\n        });\r\n\r\n        $orderList\r\n            .children('li')\r\n            .removeClass('active disabled')\r\n            .first()\r\n            .addClass('active');\r\n    };\r\n\r\n    /**\r\n         i* Return the response of the rendered interaction\r\n         *\r\n         * The response format follows the IMS PCI recommendation :\r\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n         *\r\n         * Available base types are defined in the QTI v2.1 information model:\r\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n         *\r\n         * @param {object} interaction\r\n         * @returns {object}\r\n         */\r\n    var getResponse = function(interaction) {\r\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\r\n    };\r\n\r\n    /**\r\n     * Clean interaction destroy\r\n     * @param {Object} interaction\r\n     */\r\n    var destroy = function destroy(interaction) {\r\n        var $container;\r\n        if (interaction.paper) {\r\n            $container = containerHelper.get(interaction);\r\n\r\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\r\n            $container.off('resize.qti-widget.' + interaction.serial);\r\n\r\n            interaction.paper.clear();\r\n            instructionMgr.removeInstructions(interaction);\r\n\r\n            $$1('.main-image-box', $container)\r\n                .empty()\r\n                .removeAttr('style');\r\n            $$1('.image-editor', $container).removeAttr('style');\r\n            $$1('ul', $container).empty();\r\n        }\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\r\n     */\r\n    var GraphicOrderInteraction = {\r\n        qtiClass: 'graphicOrderInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, DOMPurify, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-hotspotInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n    <div class=\\\"image-editor solid\\\">\\r\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    var render = function render(interaction) {\r\n        var self = this;\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            var $container = containerHelper.get(interaction);\r\n            var background = interaction.object.attributes;\r\n\r\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\r\n\r\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\r\n                width: background.width,\r\n                height: background.height,\r\n                img: self.resolveUrl(background.data),\r\n                container: $container\r\n            });\r\n\r\n            //call render choice for each interaction's choices\r\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\r\n\r\n            //set up the constraints instructions\r\n            instructionMgr.minMaxChoiceInstructions(interaction, {\r\n                min: interaction.attr('minChoices'),\r\n                max: interaction.attr('maxChoices'),\r\n                getResponse: _getRawResponse,\r\n                onError: function(data) {\r\n                    if (data.target.active) {\r\n                        data.target.active = false;\r\n                        graphic.updateElementState(this, 'basic', __('Select this area'));\r\n                        graphic.highlightError(data.target);\r\n                        containerHelper.triggerResponseChangeEvent(interaction);\r\n                        $container.trigger('inactiveChoice.qti-widget', [data.choice, data.target]);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Render a choice inside the paper.\r\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\r\n     * @param {Paper} paper - the raphael paper to add the choices to\r\n     * @param {Object} interaction\r\n     * @param {Object} choice - the hotspot choice to add to the interaction\r\n     */\r\n    var _renderChoice = function _renderChoice(interaction, choice) {\r\n        var $container = containerHelper.get(interaction);\r\n        var rElement = graphic\r\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\r\n                id: choice.serial,\r\n                title: __('Select this area')\r\n            })\r\n            .click(function() {\r\n                if (this.active) {\r\n                    graphic.updateElementState(this, 'basic', __('Select this area'));\r\n                    this.active = false;\r\n                    $container.trigger('inactiveChoice.qti-widget', [choice, this]);\r\n                } else {\r\n                    graphic.updateElementState(this, 'active', __('Click again to remove'));\r\n                    this.active = true;\r\n                    $container.trigger('activeChoice.qti-widget', [choice, this]);\r\n                }\r\n                containerHelper.triggerResponseChangeEvent(interaction);\r\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Get the response from the interaction\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @returns {Array} the response in raw format\r\n     */\r\n    var _getRawResponse = function _getRawResponse(interaction) {\r\n        return _(interaction.getChoices())\r\n            .map(function(choice) {\r\n                var rElement = interaction.paper.getById(choice.serial);\r\n                return rElement && rElement.active === true ? choice.id() : false;\r\n            })\r\n            .filter(_.isString)\r\n            .value();\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function(interaction, response) {\r\n        var responseValues;\r\n        if (response && interaction.paper) {\r\n            try {\r\n                responseValues = pciResponse.unserialize(response, interaction);\r\n            } catch (e) {}\r\n\r\n            if (_.isArray(responseValues)) {\r\n                _.forEach(interaction.getChoices(), function(choice) {\r\n                    var rElement;\r\n                    if (_.contains(responseValues, choice.attributes.identifier)) {\r\n                        rElement = interaction.paper.getById(choice.serial);\r\n                        if (rElement) {\r\n                            rElement.active = true;\r\n                            graphic.updateElementState(rElement, 'active', __('Click again to remove'));\r\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: rElement });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset the current responses of the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var resetResponse = function resetResponse(interaction) {\r\n        _.forEach(interaction.getChoices(), function(choice) {\r\n            var element = interaction.paper.getById(choice.serial);\r\n            if (element) {\r\n                element.active = false;\r\n                graphic.updateElementState(element, 'basic');\r\n            }\r\n        });\r\n        instructionMgr.resetInstructions(interaction);\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    var getResponse = function(interaction) {\r\n        var raw = _getRawResponse(interaction);\r\n        var response = pciResponse.serialize(_getRawResponse(interaction), interaction);\r\n        return response;\r\n    };\r\n\r\n    /**\r\n     * Clean interaction destroy\r\n     * @param {Object} interaction\r\n     */\r\n    var destroy = function destroy(interaction) {\r\n        var $container;\r\n        if (interaction.paper) {\r\n            $container = containerHelper.get(interaction);\r\n\r\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\r\n            $container.off('resize.qti-widget.' + interaction.serial);\r\n\r\n            interaction.paper.clear();\r\n            instructionMgr.removeInstructions(interaction);\r\n\r\n            $$1('.main-image-box', $container)\r\n                .empty()\r\n                .removeAttr('style');\r\n            $$1('.image-editor', $container).removeAttr('style');\r\n        }\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the hotspot interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\r\n     */\r\n    var HotspotInteraction = {\r\n        qtiClass: 'hotspotInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',['jquery', 'lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, Handlebars, __, DOMPurify, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-hottextInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"hottextInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n  \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n  <div class=\\\"instruction-container\\\"></div>\\r\\n  <div class=\\\"qti-flow-container\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * 'pseudo-label' is technically a div that behaves like a label.\r\n     * This allows the usage of block elements inside the fake label\r\n     */\r\n    var pseudoLabel = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        var setChoice = function($choice, interaction) {\r\n            var $inupt = $choice.find('input');\r\n\r\n            if ($inupt.prop('checked') || $inupt.hasClass('disabled')) {\r\n                $inupt.prop('checked', false);\r\n            } else {\r\n                var maxChoices = parseInt(interaction.attr('maxChoices'));\r\n                var currentChoices = _.values(_getRawResponse(interaction)).length;\r\n\r\n                if (currentChoices < maxChoices || maxChoices === 0) {\r\n                    $inupt.prop('checked', true);\r\n                }\r\n            }\r\n            containerHelper.triggerResponseChangeEvent(interaction);\r\n            instructionMgr.validateInstructions(interaction, { choice: $choice });\r\n        };\r\n\r\n        $$1('.hottext', $container).on('click', function(e) {\r\n            e.preventDefault();\r\n            setChoice($$1(this), interaction);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    var render = function(interaction) {\r\n        pseudoLabel(interaction);\r\n\r\n        //set up the constraints instructions\r\n        instructionMgr.minMaxChoiceInstructions(interaction, {\r\n            min: interaction.attr('minChoices'),\r\n            max: interaction.attr('maxChoices'),\r\n            getResponse: _getRawResponse,\r\n            onError: function(data) {\r\n                var $input, $choice, $icon;\r\n                if (data.choice && data.choice.length) {\r\n                    $choice = data.choice.addClass('error');\r\n                    $input = $choice.find('input');\r\n                    $icon = $choice.find(' > label > span').addClass('error cross');\r\n\r\n                    setTimeout(function() {\r\n                        $input.prop('checked', false);\r\n                        $choice.removeClass('error');\r\n                        $icon.removeClass('error cross');\r\n                    }, 350);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    var resetResponse = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        $$1('input', $container).prop('checked', false);\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function(interaction, response) {\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        try {\r\n            _.each(pciResponse.unserialize(response, interaction), function(identifier) {\r\n                $container.find('input[value=\"' + identifier + '\"]').prop('checked', true);\r\n            });\r\n            instructionMgr.validateInstructions(interaction);\r\n        } catch (e) {\r\n            throw new Error('wrong response format in argument : ' + e);\r\n        }\r\n    };\r\n\r\n    var _getRawResponse = function(interaction) {\r\n        var values = [];\r\n        var $container = containerHelper.get(interaction);\r\n        $$1('input:checked', $container).each(function() {\r\n            values.push($$1(this).val());\r\n        });\r\n        return values;\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    var getResponse = function(interaction) {\r\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\r\n    };\r\n\r\n    /**\r\n     * Clean interaction destroy\r\n     * @param {Object} interaction\r\n     */\r\n    var destroy = function destroy(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        //restore selected choices:\r\n        $container.find('.hottext').off('click');\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    };\r\n\r\n    var HottextInteraction = {\r\n        qtiClass: 'hottextInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'ui/tooltip', 'select2'], function ($$1, _, __, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse, tooltip, select2) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<select \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-inlineInteraction qti-inlineChoiceInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\r\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n        data-qti-class=\\\"inlineChoiceInteraction\\\"\\r\\n        data-has-search=\\\"false\\\"\\r\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n>\\r\\n    <option></option>                \\r\\n    <option value=\\\"empty\\\"></option>\\r\\n    \";\n      options={hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</select>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * The value of the \"empty\" option\r\n     * @type String\r\n     */\r\n    var _emptyValue = 'empty';\r\n\r\n    var _defaultOptions = {\r\n        allowEmpty: true,\r\n        placeholderText: __('select a choice')\r\n    };\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    var render = function(interaction, options) {\r\n        var opts = _.clone(_defaultOptions);\r\n        var required = !!interaction.attr('required');\r\n        var choiceTooltip;\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        _.extend(opts, options);\r\n\r\n        if (opts.allowEmpty && !required) {\r\n            $container.find('option[value=' + _emptyValue + ']').text(__('--- leave empty ---'));\r\n        } else {\r\n            $container.find('option[value=' + _emptyValue + ']').remove();\r\n        }\r\n\r\n        const getItemDir = () => {\r\n            const itemBody = $$1('.qti-itemBody');\r\n            const itemDir = itemBody.attr('dir') || 'ltr';\r\n            return itemDir;\r\n        };\r\n\r\n        const dirClass = getItemDir();\r\n        $container.select2({\r\n            width: 'element',\r\n            placeholder: opts.placeholderText,\r\n            minimumResultsForSearch: -1,\r\n            containerCssClass: `${dirClass}`,\r\n            dropdownCssClass: `qti-inlineChoiceInteraction-dropdown ${dirClass}`\r\n        });\r\n\r\n        var $el = $container.select2('container');\r\n\r\n        if (required) {\r\n            //set up the tooltip plugin for the input\r\n            choiceTooltip = tooltip.warning($el, __('A choice must be selected'));\r\n\r\n            if ($container.val() === '') {\r\n                choiceTooltip.show();\r\n            }\r\n        }\r\n\r\n        $container\r\n            .on('change', function(e) {\r\n                //if tts component is loaded and click-to-speak function is activated - we must fix the situation when select2 prevents tts from working\r\n                //for this a \"one-moment\" handler of option click is added and removed after event fired\r\n                if (\r\n                    $$1(e.currentTarget)\r\n                        .closest('.qti-item')\r\n                        .hasClass('prevent-click-handler')\r\n                ) {\r\n                    var $selectedIndex = $$1(e.currentTarget)[0].options.selectedIndex\r\n                        ? $$1(e.currentTarget)[0].options.selectedIndex\r\n                        : null;\r\n                    $container.find('option').one('click', function(e) {\r\n                        e.stopPropagation();\r\n                    });\r\n                    $container\r\n                        .find('option')\r\n                        .eq($selectedIndex)\r\n                        .trigger('click');\r\n                }\r\n\r\n                if (required && $container.val() !== '') {\r\n                    choiceTooltip.hide();\r\n                }\r\n\r\n                containerHelper.triggerResponseChangeEvent(interaction);\r\n            })\r\n            .on('select2-open', function() {\r\n                if (required) {\r\n                    choiceTooltip.hide();\r\n                }\r\n            })\r\n            .on('select2-close', function() {\r\n                if (required && $container.val() === '') {\r\n                    choiceTooltip.show();\r\n                }\r\n            });\r\n    };\r\n\r\n    var resetResponse = function(interaction) {\r\n        _setVal(interaction, _emptyValue);\r\n    };\r\n\r\n    var _setVal = function(interaction, choiceIdentifier) {\r\n        containerHelper\r\n            .get(interaction)\r\n            .val(choiceIdentifier)\r\n            .select2('val', choiceIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function(interaction, response) {\r\n        _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\r\n    };\r\n\r\n    var _getRawResponse = function(interaction) {\r\n        var value = containerHelper.get(interaction).val();\r\n        return value && value !== _emptyValue ? [value] : [];\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    var getResponse = function(interaction) {\r\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\r\n    };\r\n\r\n    /**\r\n     * Clean interaction destroy\r\n     * @param {Object} interaction\r\n     */\r\n    var destroy = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        //remove event\r\n        $$1(document).off('.commonRenderer');\r\n\r\n        $container.select2('destroy');\r\n\r\n        //remove instructions\r\n        instructionMgr.removeInstructions(interaction);\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        var $container;\r\n\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n\r\n            //restore order of previously shuffled choices\r\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\r\n                $container = containerHelper.get(interaction);\r\n\r\n                //just in case the dropdown is opened\r\n                $container.select2('disable').select2('close');\r\n\r\n                $$1('option[data-identifier]', $container)\r\n                    .sort(function(a, b) {\r\n                        var aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\r\n                        var bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\r\n                        if (aIndex > bIndex) {\r\n                            return 1;\r\n                        }\r\n                        if (aIndex < bIndex) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .detach()\r\n                    .appendTo($container);\r\n\r\n                $container.select2('enable');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var $container;\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n\r\n        //we store also the choice order if shuffled\r\n        if (interaction.attr('shuffle') === true) {\r\n            $container = containerHelper.get(interaction);\r\n\r\n            state.order = [];\r\n            $$1('option[data-identifier]', $container).each(function() {\r\n                state.order.push($$1(this).data('identifier'));\r\n            });\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the inline choice interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction\r\n     */\r\n    var InlineChoiceInteraction = {\r\n        qtiClass: 'inlineChoiceInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, __, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program11(depth0,data,depth1) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\r\\n      <tr>\\r\\n        \";\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n        \";\n      stack1 = helpers.each.call(depth0, (depth1 && depth1.matchSet1), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n      </tr>\\r\\n      \";\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      \n      return \"\\r\\n        <td>\\r\\n          <label>\\r\\n            <input type=\\\"checkbox\\\" >\\r\\n            <span class=\\\"icon-checkbox cross\\\"></span>\\r\\n          </label>\\r\\n        </td>\\r\\n        \";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-matchInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"matchInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n  \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n  <div class=\\\"instruction-container\\\"></div>\\r\\n  <div class=\\\"match-interaction-area\\\">\\r\\n    <table class=\\\"matrix\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th> </th>\\r\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.matchSet1) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.matchSet1); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.matchSet1) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      \";\n      options={hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data};\n      if (helper = helpers.matchSet2) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.matchSet2); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.matchSet2) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"notification-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * TODO do not use global context var, it's value is shared between interaction instances\r\n     *\r\n     * Flag to not throw warning instruction if already\r\n     * displaying the warning. If such a flag is not used,\r\n     * disturbances can be seen by the candidate if he clicks\r\n     * like hell on choices.\r\n     */\r\n    var inWarning = false;\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    var render = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        // Initialize instructions system.\r\n        _setInstructions(interaction);\r\n\r\n        $container.on('click.commonRenderer', 'input[type=checkbox]', function(e) {\r\n            _onCheckboxSelected(interaction, e);\r\n        });\r\n\r\n        instructionMgr.validateInstructions(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function(interaction, response) {\r\n        var $container = containerHelper.get(interaction);\r\n        response = _filterResponse(response);\r\n\r\n        if (typeof response.list !== 'undefined' && typeof response.list.directedPair !== 'undefined') {\r\n            _(response.list.directedPair).forEach(function(directedPair) {\r\n                var x = $$1('th[data-identifier=\"' + directedPair[0] + '\"]', $container).index() - 1;\r\n                var y = $$1('th[data-identifier=\"' + directedPair[1] + '\"]', $container)\r\n                    .parent()\r\n                    .index();\r\n\r\n                $$1('.matrix > tbody tr', $container)\r\n                    .eq(y)\r\n                    .find('input[type=checkbox]')\r\n                    .eq(x)\r\n                    .prop('checked', true);\r\n            });\r\n        }\r\n\r\n        instructionMgr.validateInstructions(interaction);\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    var getResponse = function(interaction) {\r\n        var response = pciResponse.serialize(_getRawResponse(interaction), interaction);\r\n        return response;\r\n    };\r\n\r\n    var resetResponse = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        $$1('input[type=checkbox]:checked', $container).each(function() {\r\n            $$1(this).prop('checked', false);\r\n        });\r\n\r\n        instructionMgr.validateInstructions(interaction);\r\n    };\r\n\r\n    var _filterResponse = function(response) {\r\n        if (typeof response.list === 'undefined') {\r\n            // Maybe it's a base?\r\n            if (typeof response.base === 'undefined') {\r\n                // Oops, it is even not a base.\r\n                throw 'The given response is not compliant with PCI JSON representation.';\r\n            } else {\r\n                // It's a base, Is it a directedPair? Null?\r\n                if (response.base === null) {\r\n                    return { list: { directedPair: [] } };\r\n                } else if (typeof response.base.directedPair === 'undefined') {\r\n                    // Oops again, it is not a directedPair.\r\n                    throw 'The matchInteraction only accepts directedPair values as responses.';\r\n                } else {\r\n                    return { list: { directedPair: [response.base.directedPair] } };\r\n                }\r\n            }\r\n        } else if (typeof response.list.directedPair === 'undefined') {\r\n            // Oops, not a directedPair.\r\n            throw 'The matchInteraction only accept directedPair values as responses.';\r\n        } else {\r\n            return response;\r\n        }\r\n    };\r\n\r\n    var _getRawResponse = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        var values = [];\r\n\r\n        $container.find('input[type=checkbox]:checked').each(function() {\r\n            values.push(_inferValue(this));\r\n        });\r\n\r\n        return values;\r\n    };\r\n\r\n    var _inferValue = function(element) {\r\n        var $element = $$1(element);\r\n        var $container = $element.closest('.match-interaction-area');\r\n        var y = $element.closest('tr').index();\r\n        var x = $element.closest('td').index();\r\n        var firstId = $$1('.matrix > thead th', $container)\r\n            .eq(x)\r\n            .data('identifier');\r\n        var secondId = $$1('.matrix > tbody th', $container)\r\n            .eq(y)\r\n            .data('identifier');\r\n        return [firstId, secondId];\r\n    };\r\n\r\n    var _onCheckboxSelected = function(interaction, e) {\r\n        var choice;\r\n        var currentResponse = _getRawResponse(interaction);\r\n        var minAssociations = interaction.attr('minAssociations');\r\n        var maxAssociations = interaction.attr('maxAssociations');\r\n\r\n        if (maxAssociations === 0) {\r\n            maxAssociations = _countChoices(interaction);\r\n        }\r\n\r\n        if (_.size(currentResponse) > maxAssociations) {\r\n            // No more associations possible.\r\n            e.preventDefault();\r\n            instructionMgr.validateInstructions(interaction);\r\n        } else if ((choice = _maxMatchReached(interaction, e.target)) !== false) {\r\n            // Check if matchmax is respected for both choices\r\n            // involved in the selection.\r\n            e.preventDefault();\r\n            instructionMgr.validateInstructions(interaction, choice);\r\n        } else {\r\n            containerHelper.triggerResponseChangeEvent(interaction, {});\r\n            instructionMgr.validateInstructions(interaction);\r\n        }\r\n    };\r\n\r\n    var _maxMatchReached = function(interaction, input) {\r\n        var association = _inferValue(input);\r\n        var overflow = false;\r\n\r\n        _(association).forEach(function(identifier) {\r\n            var choice = _getChoiceDefinitionByIdentifier(interaction, identifier);\r\n            var matchMin = choice.attributes.matchMin;\r\n            var matchMax = choice.attributes.matchMax;\r\n            var assoc = _countAssociations(interaction, choice);\r\n\r\n            if (matchMax > 0 && assoc > matchMax) {\r\n                overflow = choice;\r\n            }\r\n        });\r\n\r\n        return overflow;\r\n    };\r\n\r\n    var _countAssociations = function(interaction, choice) {\r\n        var rawResponse = _getRawResponse(interaction);\r\n        var count = 0;\r\n\r\n        // How much time can we find rawChoice in rawResponses?\r\n        _(rawResponse).forEach(function(response) {\r\n            if (response[0] === choice.attributes.identifier || response[1] === choice.attributes.identifier) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    };\r\n\r\n    var _countChoices = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        return $container.find('input[type=checkbox]').length;\r\n    };\r\n\r\n    var _getChoiceDefinitionByIdentifier = function(interaction, identifier) {\r\n        var rawChoices = _getRawChoices(interaction);\r\n        return rawChoices[identifier];\r\n    };\r\n\r\n    var _getRawChoices = function(interaction) {\r\n        var rawChoices = {};\r\n\r\n        _(interaction.choices).forEach(function(matchset) {\r\n            _(matchset).forEach(function(choice) {\r\n                rawChoices[choice.attributes.identifier] = choice;\r\n            });\r\n        });\r\n\r\n        return rawChoices;\r\n    };\r\n\r\n    var _setInstructions = function(interaction) {\r\n        var msg;\r\n        var minAssociations = interaction.attr('minAssociations');\r\n        var maxAssociations = interaction.attr('maxAssociations');\r\n        var choiceCount = _countChoices(interaction);\r\n\r\n        // Super closure is here again to save our souls! Houray!\r\n        // ~~~~~~~ |==||||0__\r\n\r\n        var superClosure = function() {\r\n            var onMaxChoicesReached = function(report, msg) {\r\n                if (inWarning === false) {\r\n                    inWarning = true;\r\n\r\n                    report.update({\r\n                        level: 'warning',\r\n                        message: __('Maximum number of choices reached.'),\r\n                        timeout: 2000,\r\n                        stop: function() {\r\n                            report.update({ level: 'success', message: msg });\r\n                            inWarning = false;\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            var onMatchMaxReached = function(interaction, choice, report, msg, level) {\r\n                var $container = containerHelper.get(interaction);\r\n\r\n                if (inWarning === false) {\r\n                    inWarning = true;\r\n\r\n                    var $choice = $container.find(\r\n                        '.qti-simpleAssociableChoice[data-identifier=\"' + choice.attributes.identifier + '\"]'\r\n                    );\r\n                    var originalBackgroundColor = $choice.css('background-color');\r\n                    var originalColor = $choice.css('color');\r\n\r\n                    report.update({\r\n                        level: 'warning',\r\n                        message: __('The highlighted choice cannot be associated more than %d time(s).').replace(\r\n                            '%d',\r\n                            choice.attributes.matchMax\r\n                        ),\r\n                        timeout: 3000,\r\n                        start: function() {\r\n                            $choice.animate(\r\n                                {\r\n                                    backgroundColor: '#fff',\r\n                                    color: '#ba122b'\r\n                                },\r\n                                250,\r\n                                function() {\r\n                                    $choice.animate(\r\n                                        {\r\n                                            backgroundColor: '#ba122b',\r\n                                            color: '#fff'\r\n                                        },\r\n                                        250\r\n                                    );\r\n                                }\r\n                            );\r\n                        },\r\n                        stop: function() {\r\n                            $choice.animate(\r\n                                {\r\n                                    backgroundColor: originalBackgroundColor,\r\n                                    color: originalColor\r\n                                },\r\n                                500\r\n                            );\r\n                            report.update({ level: level, message: msg });\r\n                            inWarning = false;\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            if (minAssociations === 0 && maxAssociations > 0) {\r\n                // No minimum but maximum.\r\n                msg = __('You must select 0 to %d choices.').replace('%d', maxAssociations);\r\n\r\n                instructionMgr.appendInstruction(interaction, msg, function(choice) {\r\n                    var responseCount = _.size(_getRawResponse(interaction));\r\n\r\n                    if (\r\n                        choice &&\r\n                        choice.attributes &&\r\n                        choice.attributes.matchMax > 0 &&\r\n                        _countAssociations(interaction, choice) > choice.attributes.matchMax\r\n                    ) {\r\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\r\n                    } else if (responseCount <= maxAssociations) {\r\n                        this.setLevel('success');\r\n                    } else if (responseCount > maxAssociations) {\r\n                        onMaxChoicesReached(this, msg);\r\n                    } else {\r\n                        this.reset();\r\n                    }\r\n                });\r\n            } else if (minAssociations === 0 && maxAssociations === 0) {\r\n                // No minimum, no maximum.\r\n                msg = __('You must select 0 to %d choices.').replace('%d', choiceCount);\r\n\r\n                instructionMgr.appendInstruction(interaction, msg, function(choice) {\r\n                    if (\r\n                        choice &&\r\n                        choice.attributes &&\r\n                        choice.attributes.matchMax > 0 &&\r\n                        _countAssociations(interaction, choice) > choice.attributes.matchMax\r\n                    ) {\r\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\r\n                    } else {\r\n                        this.setLevel('success');\r\n                    }\r\n                });\r\n            } else if (minAssociations > 0 && maxAssociations === 0) {\r\n                // minimum but no maximum.\r\n                msg = __('You must select %1$d to %2$d choices.');\r\n                msg = msg.replace('%1$d', minAssociations);\r\n                msg = msg.replace('%2$d', choiceCount);\r\n\r\n                instructionMgr.appendInstruction(interaction, msg, function(choice) {\r\n                    var responseCount = _.size(_getRawResponse(interaction));\r\n\r\n                    if (\r\n                        choice &&\r\n                        choice.attributes &&\r\n                        choice.attributes.matchMax > 0 &&\r\n                        _countAssociations(interaction, choice) > choice.attributes.matchMax\r\n                    ) {\r\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\r\n                    } else if (responseCount < minAssociations) {\r\n                        this.setLevel('info');\r\n                    } else if (responseCount > choiceCount) {\r\n                        onMaxChoicesReached(this, msg);\r\n                    } else {\r\n                        this.setLevel('success');\r\n                    }\r\n                });\r\n            } else if (minAssociations > 0 && maxAssociations > 0) {\r\n                // minimum and maximum.\r\n                if (minAssociations !== maxAssociations) {\r\n                    msg = __('You must select %1$d to %2$d choices.');\r\n                    msg = msg.replace('%1$d', minAssociations);\r\n                    msg = msg.replace('%2$d', maxAssociations);\r\n                } else {\r\n                    msg = __('You must select exactly %d choice(s).');\r\n                    msg = msg.replace('%d', minAssociations);\r\n                }\r\n\r\n                instructionMgr.appendInstruction(interaction, msg, function(choice) {\r\n                    var responseCount = _.size(_getRawResponse(interaction));\r\n\r\n                    if (\r\n                        choice &&\r\n                        choice.attributes &&\r\n                        choice.attributes.matchMax > 0 &&\r\n                        _countAssociations(interaction, choice) > choice.attributes.matchMax\r\n                    ) {\r\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\r\n                    } else if (responseCount < minAssociations) {\r\n                        this.setLevel('info');\r\n                    } else if (responseCount > maxAssociations) {\r\n                        onMaxChoicesReached(this, msg);\r\n                    } else if (responseCount >= minAssociations && responseCount <= maxAssociations) {\r\n                        this.setLevel('success');\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        superClosure();\r\n    };\r\n\r\n    var destroy = function(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        $container.off('.commonRenderer');\r\n\r\n        instructionMgr.removeInstructions(interaction);\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        var $container;\r\n\r\n        if (_.isObject(state)) {\r\n            //restore order of previously shuffled choices\r\n            if (_.isArray(state.order) && state.order.length === 2) {\r\n                $container = containerHelper.get(interaction);\r\n\r\n                $$1('thead .qti-choice', $container)\r\n                    .sort(function(a, b) {\r\n                        var aIndex = _.indexOf(state.order[0], $$1(a).data('identifier'));\r\n                        var bIndex = _.indexOf(state.order[0], $$1(b).data('identifier'));\r\n                        if (aIndex > bIndex) {\r\n                            return 1;\r\n                        }\r\n                        if (aIndex < bIndex) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .detach()\r\n                    .appendTo($$1('thead tr', $container));\r\n\r\n                $$1('tbody .qti-choice', $container)\r\n                    .sort(function(a, b) {\r\n                        var aIndex = _.indexOf(state.order[1], $$1(a).data('identifier'));\r\n                        var bIndex = _.indexOf(state.order[1], $$1(b).data('identifier'));\r\n                        if (aIndex > bIndex) {\r\n                            return 1;\r\n                        }\r\n                        if (aIndex < bIndex) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .detach()\r\n                    .each(function(index, elt) {\r\n                        $$1(elt).prependTo($$1('tbody tr', $container).eq(index));\r\n                    });\r\n            }\r\n\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var $container;\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n\r\n        //we store also the choice order if shuffled\r\n        if (interaction.attr('shuffle') === true) {\r\n            $container = containerHelper.get(interaction);\r\n\r\n            state.order = [[], []];\r\n            $$1('thead .qti-choice', $container).each(function() {\r\n                state.order[0].push($$1(this).data('identifier'));\r\n            });\r\n            $$1('tbody .qti-choice', $container).each(function() {\r\n                state.order[1].push($$1(this).data('identifier'));\r\n            });\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the match interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/MatchInteraction\r\n     */\r\n    var MatchInteraction = {\r\n        qtiClass: 'matchInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState,\r\n        inferValue: _inferValue\r\n    };\n\n    return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',['jquery', 'lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/mediaplayer'], function ($$1, _, Handlebars, __, DOMPurify, pciResponse, containerHelper, mediaplayer) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    mediaplayer = mediaplayer && Object.prototype.hasOwnProperty.call(mediaplayer, 'default') ? mediaplayer['default'] : mediaplayer;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-mediaInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n    <div class=\\\"media-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2018 (original work) Open Assessment Technlogies SA\r\n     *\r\n     */\r\n\r\n    const qtiClass = 'mediaInteraction';\r\n    const getContainer = containerHelper.get;\r\n\r\n    //some default values\r\n    const defaults = {\r\n        type: 'video/mp4'\r\n    };\r\n\r\n    //some patterns to match context in which disable the media preview\r\n    const reWebM = /.*\\.webm/i;\r\n    const reFirefoxVersion = /firefox\\/([0-9]+\\.*[0-9]*)/i;\r\n\r\n    /**\r\n     * Checks if a media can be previewed safely\r\n     * @param {String} type - The type of media\r\n     * @param {String} url - The URL to the media\r\n     * @returns {Boolean}\r\n     */\r\n    function canPreviewMedia(type, url) {\r\n        const firefox = reFirefoxVersion.exec(navigator.userAgent);\r\n        const webm = reWebM.test(url);\r\n        return !(webm && firefox && parseFloat(firefox[1]) >= 87);\r\n    }\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10391\r\n     *\r\n     * @param {Object} interaction\r\n     * @fires playerrendered when the player is at least rendered\r\n     * @fires playerready when the player is sucessfully loaded and configured\r\n     * @returns {Promise}\r\n     */\r\n    function render(interaction) {\r\n        return new Promise(resolve => {\r\n            const $container = getContainer(interaction);\r\n            const media = interaction.object;\r\n            const $item = $container.parents('.qti-item');\r\n            const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\r\n\r\n            //check if the media can be played (using timesPlayed and maxPlays)\r\n            const canBePlayed = () => maxPlays === 0 || maxPlays > parseInt($container.data('timesPlayed'), 10);\r\n\r\n            /**\r\n             * Resize video player elements to fit container size\r\n             * @param {Object} mediaElement - player instance\r\n             * @param {jQueryElement} $container   - container element to adapt\r\n             */\r\n            const resize = _.debounce(() => {\r\n                // only resize when width in px\r\n                // new version has width in %\r\n                const  currentWidth = media.attr('width');\r\n                if (interaction.mediaElement && currentWidth && !currentWidth.includes('%')) {\r\n                    const height = $container.find('.media-container').height();\r\n                    const width = $container.find('.media-container').width();\r\n\r\n                    interaction.mediaElement.resize(width, height);\r\n                }\r\n            }, 200);\r\n\r\n            //intialize the player if not yet done\r\n            const initMediaPlayer = () => {\r\n                if (!interaction.mediaElement) {\r\n                    const type = media.attr('type') || defaults.type;\r\n                    const mediaUrl = media.attr('data') || '';\r\n                    const url = mediaUrl && this.resolveUrl(mediaUrl);\r\n                    const preview = canPreviewMedia(type, url);\r\n\r\n                    interaction.mediaElement = mediaplayer({\r\n                        url,\r\n                        type,\r\n                        preview,\r\n                        canPause: $container.hasClass('pause'),\r\n                        maxPlays: maxPlays,\r\n                        canSeek: !maxPlays,\r\n                        width: media.attr('width'),\r\n                        height: media.attr('height'),\r\n                        volume: 100,\r\n                        autoStart: !!interaction.attr('autostart') && canBePlayed(),\r\n                        loop: !!interaction.attr('loop'),\r\n                        renderTo: $$1('.media-container', $container)\r\n                    })\r\n                        .on('render', () => {\r\n                            resize();\r\n\r\n                            $$1(window)\r\n                                .off('resize.mediaInteraction')\r\n                                .on('resize.mediaInteraction', resize);\r\n\r\n                            $item.off('resize.gridEdit').on('resize.gridEdit', resize);\r\n                            /**\r\n                             * @event playerrendered\r\n                             */\r\n                            $container.trigger('playerrendered');\r\n                        })\r\n                        .on('ready', function () {\r\n                            /**\r\n                             * @event playerready\r\n                             */\r\n                            $container.trigger('playerready');\r\n\r\n                            if (!canBePlayed()) {\r\n                                this.disable();\r\n                            }\r\n\r\n                            // on slow network the resize runs before ready, so it should be called again\r\n                            resize();\r\n\r\n                            // declare the item ready when player is ready to play.\r\n                            resolve();\r\n                        })\r\n                        .on('update', _.throttle(() => containerHelper.triggerResponseChangeEvent(interaction), 1000))\r\n                        .on('ended', function () {\r\n                            $container.data('timesPlayed', $container.data('timesPlayed') + 1);\r\n                            containerHelper.triggerResponseChangeEvent(interaction);\r\n\r\n                            if (!canBePlayed()) {\r\n                                this.disable();\r\n                            }\r\n                        });\r\n                }\r\n            };\r\n\r\n\r\n            //set up the number of times played\r\n            if (!$container.data('timesPlayed')) {\r\n                $container.data('timesPlayed', 0);\r\n            }\r\n\r\n            //initialize the component\r\n            $container.on('responseSet', initMediaPlayer);\r\n\r\n            //gives a small chance to the responseSet event before initializing the player\r\n            initMediaPlayer();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destroy the current interaction\r\n     * @param {Object} interaction\r\n     */\r\n    function destroy(interaction) {\r\n        const $container = getContainer(interaction);\r\n\r\n        if (interaction.mediaElement) {\r\n            interaction.mediaElement.destroy();\r\n            interaction.mediaElement = null;\r\n        }\r\n\r\n        $$1('.instruction-container', $container).empty();\r\n        $$1('.media-container', $container).empty();\r\n\r\n        $container.removeData('timesPlayed');\r\n\r\n        $$1(window).off('resize.video');\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    }\r\n\r\n    /**\r\n     * Get the responses from the interaction\r\n     * @private\r\n     * @param {Object} interaction\r\n     * @returns {Array} of points\r\n     */\r\n    function _getRawResponse(interaction) {\r\n        return [getContainer(interaction).data('timesPlayed') || 0];\r\n    }\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {Object} interaction\r\n     * @param {Object} response\r\n     */\r\n    function setResponse(interaction, response) {\r\n        if (response) {\r\n            try {\r\n                const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\r\n                const responseValues = pciResponse.unserialize(response, interaction);\r\n                const timesPlayed = parseInt(responseValues[0], 10) || 0;\r\n                getContainer(interaction).data('timesPlayed', timesPlayed);\r\n\r\n                if (interaction.mediaElement) {\r\n                    if (maxPlays !== 0 && maxPlays <= timesPlayed) {\r\n                        interaction.mediaElement.disable();\r\n                    } else if (interaction.mediaElement.is('disabled')) {\r\n                        interaction.mediaElement.enable();\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                // something went wrong\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset the current responses of the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {Object} interaction\r\n     */\r\n    function resetResponse(interaction) {\r\n        getContainer(interaction).data('timesPlayed', 0);\r\n    }\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {Object} interaction\r\n     * @returns {Object}\r\n     */\r\n    function getResponse(interaction) {\r\n        if (!getContainer(interaction).data('timesPlayed')) {\r\n            return { base: null };\r\n        }\r\n\r\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\r\n    }\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    function setState(interaction, state) {\r\n        /**\r\n         * Restore the media player state\r\n         * @private\r\n         * @param {Object} [playerState]\r\n         * @param {Boolean} [playerState.muted] - is the player muted\r\n         * @param {Number} [playerState.volume] - the current volume\r\n         * @param {Number} [playerState.position] - the position to seek to\r\n         */\r\n        const restorePlayerState = playerState => {\r\n            if (playerState && interaction.mediaElement) {\r\n                //Volume\r\n                if (_.isNumber(playerState.volume)) {\r\n                    interaction.mediaElement.setVolume(playerState.volume);\r\n                }\r\n\r\n                //Muted state (always after the volume)\r\n                if (_.isBoolean(playerState.muted)) {\r\n                    interaction.mediaElement.mute(playerState.muted);\r\n                    interaction.mediaElement.startMuted = playerState.muted;\r\n                }\r\n\r\n                //Position\r\n                if (playerState.position && playerState.position > 0) {\r\n                    interaction.mediaElement.seek(playerState.position);\r\n                    if (!interaction.attr('autostart')) {\r\n                        interaction.mediaElement.pause();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n\r\n            if (_.isPlainObject(state.player) && interaction.mediaElement) {\r\n                if (interaction.mediaElement.is('ready')) {\r\n                    restorePlayerState(state.player);\r\n                } else {\r\n                    interaction.mediaElement.on('ready.state', () => {\r\n                        interaction.mediaElement.off('ready.state');\r\n                        restorePlayerState(state.player);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    function getState(interaction) {\r\n        const state = {};\r\n        const response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n\r\n        //collect player's state\r\n        if (interaction.mediaElement) {\r\n            state.player = {\r\n                position: interaction.mediaElement.getPosition(),\r\n                muted: interaction.mediaElement.is('muted'),\r\n                volume: interaction.mediaElement.getVolume()\r\n            };\r\n        }\r\n        return state;\r\n    }\r\n\r\n    /**\r\n     * Expose the common renderer for the interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/MediaInteraction\r\n     */\r\n    var MediaInteraction = {\r\n        qtiClass,\r\n        template,\r\n        render,\r\n        getContainer,\r\n        setResponse,\r\n        getResponse,\r\n        resetResponse,\r\n        destroy,\r\n        setState,\r\n        getState\r\n    };\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',['lodash', 'jquery', 'i18n', 'core/mouseEvent', 'services/features', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, $$1, __, mouseEvent, features, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      \n      return \" qti-horizontal\";\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \" qti-vertical\";\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      \n      return \"horizontal\";\n      }\n\n    function program11(depth0,data) {\n      \n      \n      return \"vertical\";\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program17(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program19(depth0,data) {\n      \n      \n      return \"icon-down\";\n      }\n\n    function program21(depth0,data) {\n      \n      \n      return \"icon-right\";\n      }\n\n    function program23(depth0,data) {\n      \n      \n      return \"icon-up\";\n      }\n\n    function program25(depth0,data) {\n      \n      \n      return \"icon-left\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-orderInteraction\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\r\\n     data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n     data-qti-class=\\\"orderInteraction\\\"\\r\\n     data-orientation=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n    <div class=\\\"order-interaction-area\\\">\\r\\n        <ul class=\\\"choice-area square source solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\r\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n        </ul>\\r\\n        <div class=\\\"arrow-bar middle\\\">\\r\\n            <span class=\\\"icon-add-to-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\\r\\n            <span class=\\\"icon-remove-from-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\r\\n        </div>\\r\\n        <ul class=\\\"drag-container block-listing\\\"></ul>\\r\\n        <ul class=\\\"result-area decimal target solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\r\\n        </ul>\\r\\n        <div class=\\\"arrow-bar\\\">\\r\\n            <span class=\\\"icon-move-before \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(23, program23, data),fn:self.program(25, program25, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\r\\n            <span class=\\\"icon-move-after \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(19, program19, data),fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"notification-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    const orientationSelectionEnabled = features.isVisible('taoQtiItem/creator/interaction/order/property/orientation');\r\n\r\n    const _freezeSize = function ($container) {\r\n        const $orderArea = $container.find('.order-interaction-area');\r\n        $orderArea.height($orderArea.height());\r\n    };\r\n\r\n    const _setInstructions = function (interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        const $choiceArea = $$1('.choice-area', $container),\r\n            $resultArea = $$1('.result-area', $container),\r\n            min = parseInt(interaction.attr('minChoices'), 10),\r\n            max = parseInt(interaction.attr('maxChoices'), 10);\r\n\r\n        if (min) {\r\n            instructionMgr.appendInstruction(interaction, __('You must use at least %d choices', min), function () {\r\n                if ($resultArea.find('>li').length >= min) {\r\n                    this.setLevel('success');\r\n                } else {\r\n                    this.reset();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (max && max < _.size(interaction.getChoices())) {\r\n            const instructionMax = instructionMgr.appendInstruction(\r\n                interaction,\r\n                __('You can use maximum %d choices', max),\r\n                function () {\r\n                    if ($resultArea.find('>li').length >= max) {\r\n                        $choiceArea.find('>li').addClass('deactivated');\r\n                        this.setMessage(__('Maximum choices reached'));\r\n                    } else {\r\n                        $choiceArea.find('>li').removeClass('deactivated');\r\n                        this.reset();\r\n                    }\r\n                }\r\n            );\r\n\r\n            interact(`${$choiceArea.selector} >li.deactivated`).on('tap', function (e) {\r\n                const $target = $$1(e.currentTarget);\r\n                $target.addClass('brd-error');\r\n                instructionMax.setLevel('warning', 2000);\r\n                setTimeout(function () {\r\n                    $target.removeClass('brd-error');\r\n                }, 150);\r\n            });\r\n\r\n            // we don't check for isDragAndDropEnabled on purpose, as this binding is not to allow dragging,\r\n            // but only to provide feedback in case of a drag action on an inactive choice\r\n            interact(`${$choiceArea.selector} >li.deactivated`)\r\n                .draggable({\r\n                    onstart: function (e) {\r\n                        const $target = $$1(e.target);\r\n                        $target.addClass('brd-error');\r\n                        instructionMax.setLevel('warning');\r\n                    },\r\n                    onend: function (e) {\r\n                        const $target = $$1(e.target);\r\n                        $target.removeClass('brd-error');\r\n                        instructionMax.setLevel('info');\r\n                    }\r\n                })\r\n                .styleCursor(false);\r\n        }\r\n    };\r\n\r\n    const resetResponse = function (interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        const initialOrder = _.keys(interaction.getChoices());\r\n        const $choiceArea = $$1('.choice-area', $container).append($$1('.result-area>li', $container));\r\n        const $choices = $choiceArea.children('.qti-choice');\r\n\r\n        $container.find('.qti-choice.active').each(function deactivateChoice() {\r\n            interactUtils.tapOn(this);\r\n        });\r\n\r\n        $choices.detach().sort(function (choice1, choice2) {\r\n            return _.indexOf(initialOrder, $$1(choice1).data('serial')) - _.indexOf(initialOrder, $$1(choice2).data('serial'));\r\n        });\r\n        $choiceArea.prepend($choices);\r\n    };\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     */\r\n    const render = function (interaction) {\r\n        const $container = containerHelper.get(interaction),\r\n            $choiceArea = $container.find('.choice-area'),\r\n            $resultArea = $container.find('.result-area'),\r\n            $iconAdd = $container.find('.icon-add-to-selection'),\r\n            $iconRemove = $container.find('.icon-remove-from-selection'),\r\n            $iconBefore = $container.find('.icon-move-before'),\r\n            $iconAfter = $container.find('.icon-move-after'),\r\n            choiceSelector = `${$choiceArea.selector} >li:not(.deactivated)`,\r\n            resultSelector = `${$resultArea.selector} >li`,\r\n            $dragContainer = $container.find('.drag-container'),\r\n            orientation = (interaction.attr('orientation') && orientationSelectionEnabled) ? interaction.attr('orientation') : 'vertical';\r\n\r\n        let $activeChoice = null,\r\n            scaleX,\r\n            scaleY,\r\n            isDragAndDropEnabled,\r\n            dragOptions,\r\n            $dropzoneElement;\r\n\r\n        const _activeControls = function _activeControls() {\r\n            $iconAdd.addClass('inactive');\r\n            $iconRemove.removeClass('inactive').addClass('active');\r\n            $iconBefore.removeClass('inactive').addClass('active');\r\n            $iconAfter.removeClass('inactive').addClass('active');\r\n        };\r\n\r\n        const _resetControls = function _resetControls() {\r\n            $iconAdd.removeClass('inactive');\r\n            $iconRemove.removeClass('active').addClass('inactive');\r\n            $iconBefore.removeClass('active').addClass('inactive');\r\n            $iconAfter.removeClass('active').addClass('inactive');\r\n        };\r\n\r\n        const _setSelection = function _setSelection($choice) {\r\n            if ($activeChoice) {\r\n                $activeChoice.removeClass('active');\r\n            }\r\n            $activeChoice = $choice;\r\n            $activeChoice.addClass('active');\r\n        };\r\n\r\n        const _resetSelection = function _resetSelection() {\r\n            if ($activeChoice) {\r\n                $activeChoice.removeClass('active');\r\n                $activeChoice = null;\r\n            }\r\n            _resetControls();\r\n        };\r\n\r\n        const _addChoiceToSelection = function _addChoiceToSelection($target, position) {\r\n            const $results = $$1(resultSelector);\r\n            _resetSelection();\r\n\r\n            //move choice to the result list:\r\n            if (typeof position !== 'undefined' && position < $results.length) {\r\n                $results.eq(position).before($target);\r\n            } else {\r\n                $resultArea.append($target);\r\n            }\r\n\r\n            containerHelper.triggerResponseChangeEvent(interaction);\r\n\r\n            //update constraints :\r\n            instructionMgr.validateInstructions(interaction);\r\n        };\r\n\r\n        const _toggleResultSelection = function _toggleResultSelection($target) {\r\n            if ($target.hasClass('active')) {\r\n                _resetSelection();\r\n            } else {\r\n                _setSelection($target);\r\n                _activeControls();\r\n            }\r\n        };\r\n\r\n        const _removeChoice = function _removeChoice() {\r\n            if ($activeChoice) {\r\n                //restore choice back to choice list\r\n                $choiceArea.append($activeChoice);\r\n                containerHelper.triggerResponseChangeEvent(interaction);\r\n\r\n                //update constraints :\r\n                instructionMgr.validateInstructions(interaction);\r\n            }\r\n\r\n            _resetSelection();\r\n        };\r\n\r\n        const _moveResultBefore = function _moveResultBefore() {\r\n            const $prev = $activeChoice.prev();\r\n\r\n            if ($prev.length) {\r\n                $prev.before($activeChoice);\r\n                containerHelper.triggerResponseChangeEvent(interaction);\r\n            }\r\n        };\r\n\r\n        const _moveResultAfter = function _moveResultAfter() {\r\n            const $next = $activeChoice.next();\r\n\r\n            if ($next.length) {\r\n                $next.after($activeChoice);\r\n                containerHelper.triggerResponseChangeEvent(interaction);\r\n            }\r\n        };\r\n\r\n        // Point & click handlers\r\n\r\n        interact($container.selector).on('tap', function () {\r\n            _resetSelection();\r\n        });\r\n\r\n        interact(choiceSelector).on('tap', function (e) {\r\n            const $target = $$1(e.currentTarget);\r\n\r\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\r\n                return;\r\n            }\r\n\r\n            e.stopPropagation();\r\n\r\n            $iconAdd.addClass('triggered');\r\n            setTimeout(function () {\r\n                $iconAdd.removeClass('triggered');\r\n            }, 150);\r\n\r\n            _addChoiceToSelection($target);\r\n        });\r\n\r\n        interact(resultSelector).on('tap', function (e) {\r\n            const $target = $$1(e.currentTarget);\r\n\r\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\r\n                return;\r\n            }\r\n\r\n            e.stopPropagation();\r\n            _toggleResultSelection($target);\r\n        });\r\n\r\n        interact($iconRemove.selector).on('tap', function (e) {\r\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\r\n                return;\r\n            }\r\n\r\n            e.stopPropagation();\r\n            _removeChoice();\r\n        });\r\n\r\n        interact($iconBefore.selector).on('tap', function (e) {\r\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\r\n                return;\r\n            }\r\n\r\n            e.stopPropagation();\r\n            _moveResultBefore();\r\n        });\r\n\r\n        interact($iconAfter.selector).on('tap', function (e) {\r\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\r\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\r\n                return;\r\n            }\r\n\r\n            e.stopPropagation();\r\n            _moveResultAfter();\r\n        });\r\n\r\n        // Drag & drop handlers\r\n\r\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').order) {\r\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').order;\r\n        }\r\n\r\n        function _iFrameDragFix(draggableSelector, target) {\r\n            interactUtils.iFrameDragFixOn(function () {\r\n                if (_isDropzoneVisible()) {\r\n                    interact($resultArea.selector).fire({\r\n                        type: 'drop',\r\n                        target: $dropzoneElement.eq(0),\r\n                        relatedTarget: target\r\n                    });\r\n                }\r\n                interact(draggableSelector).fire({\r\n                    type: 'dragend',\r\n                    target: target\r\n                });\r\n            });\r\n        }\r\n\r\n        if (isDragAndDropEnabled) {\r\n            $dropzoneElement = $$1('<li>', { class: 'dropzone qti-choice' });\r\n            $$1('<div>', { class: 'qti-block' }).appendTo($dropzoneElement);\r\n\r\n            dragOptions = {\r\n                inertia: false,\r\n                autoScroll: true,\r\n                restrict: {\r\n                    restriction: '.qti-interaction',\r\n                    endOnly: false,\r\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\r\n                }\r\n            };\r\n\r\n            // makes choices draggables\r\n            interact(choiceSelector)\r\n                .draggable(\r\n                    _.assign({}, dragOptions, {\r\n                        onstart: function (e) {\r\n                            const $target = $$1(e.target);\r\n                            let scale;\r\n                            $target.addClass('dragged');\r\n\r\n                            _iFrameDragFix(choiceSelector, e.target);\r\n                            scale = interactUtils.calculateScale(e.target);\r\n                            scaleX = scale[0];\r\n                            scaleY = scale[1];\r\n                        },\r\n                        onmove: function (e) {\r\n                            const $target = $$1(e.target);\r\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\r\n                            if (_isDropzoneVisible()) {\r\n                                _adjustDropzonePosition($target);\r\n                            }\r\n                        },\r\n                        onend: function (e) {\r\n                            const $target = $$1(e.target);\r\n                            $target.removeClass('dragged');\r\n\r\n                            interactUtils.restoreOriginalPosition($target);\r\n                            interactUtils.iFrameDragFixOff();\r\n                        }\r\n                    })\r\n                )\r\n                .styleCursor(false);\r\n\r\n            // makes result draggables\r\n            interact(resultSelector)\r\n                .draggable(\r\n                    _.assign({}, dragOptions, {\r\n                        onstart: function (e) {\r\n                            const $target = $$1(e.target);\r\n                            let scale;\r\n                            $target.addClass('dragged');\r\n\r\n                            _setSelection($target);\r\n\r\n                            // move dragged result to drag container\r\n                            $dragContainer.show();\r\n                            $dragContainer.offset($target.offset());\r\n                            if (orientation === 'horizontal') {\r\n                                $dragContainer.width($$1(e.currentTarget).width());\r\n                            } else {\r\n                                $dragContainer.width($target.parent().width());\r\n                            }\r\n                            $dragContainer.append($target);\r\n\r\n                            _iFrameDragFix(resultSelector, e.target);\r\n                            scale = interactUtils.calculateScale(e.target);\r\n                            scaleX = scale[0];\r\n                            scaleY = scale[1];\r\n                        },\r\n                        onmove: function (e) {\r\n                            const $target = $$1(e.target);\r\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\r\n                            if (_isDropzoneVisible()) {\r\n                                _adjustDropzonePosition($target);\r\n                            }\r\n                        },\r\n                        onend: function (e) {\r\n                            const $target = $$1(e.target),\r\n                                hasBeenDroppedInResultArea = $target.parent === $resultArea;\r\n\r\n                            $target.removeClass('dragged');\r\n                            $dragContainer.hide();\r\n\r\n                            if (!hasBeenDroppedInResultArea) {\r\n                                _removeChoice();\r\n                            }\r\n\r\n                            interactUtils.restoreOriginalPosition($target);\r\n                            interactUtils.iFrameDragFixOff();\r\n                        }\r\n                    })\r\n                )\r\n                .styleCursor(false);\r\n\r\n            // makes result area droppable\r\n            interact($resultArea.selector).dropzone({\r\n                overlap: 0.5,\r\n                ondragenter: function (e) {\r\n                    const $dragged = $$1(e.relatedTarget);\r\n                    _insertDropzone($dragged);\r\n                    $dragged.addClass('droppable');\r\n                },\r\n                ondrop: function (e) {\r\n                    const $dragged = $$1(e.relatedTarget),\r\n                        dropzoneIndex = $$1(resultSelector).index($dropzoneElement);\r\n\r\n                    this.ondragleave(e);\r\n\r\n                    _addChoiceToSelection($dragged, dropzoneIndex);\r\n                    interactUtils.restoreOriginalPosition($dragged);\r\n                },\r\n                ondragleave: function (e) {\r\n                    const $dragged = $$1(e.relatedTarget);\r\n                    $dropzoneElement.remove();\r\n                    $dragged.removeClass('droppable');\r\n                }\r\n            });\r\n        }\r\n\r\n        function _isDropzoneVisible() {\r\n            return $$1.contains($container.get(0), $dropzoneElement.get(0));\r\n        }\r\n\r\n        function _insertDropzone($dragged) {\r\n            const draggedMiddle = _getMiddleOf($dragged),\r\n                previousMiddle = {\r\n                    x: 0,\r\n                    y: 0\r\n                };\r\n            let insertPosition;\r\n\r\n            // look for position where to insert dropzone\r\n            $$1(resultSelector).each(function (index) {\r\n                const currentMiddle = _getMiddleOf($$1(this));\r\n\r\n                if (orientation !== 'horizontal') {\r\n                    if (draggedMiddle.y > previousMiddle.y && draggedMiddle.y < currentMiddle.y) {\r\n                        insertPosition = index;\r\n                        return false;\r\n                    }\r\n                    previousMiddle.y = currentMiddle.y;\r\n                } else {\r\n                    if (draggedMiddle.x > previousMiddle.x && draggedMiddle.x < currentMiddle.x) {\r\n                        insertPosition = index;\r\n                        return false;\r\n                    }\r\n                    previousMiddle.x = currentMiddle.x;\r\n                }\r\n            });\r\n            // append dropzone to DOM\r\n            if (typeof insertPosition !== 'undefined') {\r\n                $$1(resultSelector).eq(insertPosition).before($dropzoneElement);\r\n            } else {\r\n                // no index found, we just append to the end\r\n                $resultArea.append($dropzoneElement);\r\n            }\r\n\r\n            // style dropzone\r\n            $dropzoneElement.height($dragged.height());\r\n            $dropzoneElement.find('div').text($dragged.text());\r\n        }\r\n\r\n        function _adjustDropzonePosition($dragged) {\r\n            const draggedBox = $dragged.get(0).getBoundingClientRect(),\r\n                $prevResult = $dropzoneElement.prev('.qti-choice'),\r\n                $nextResult = $dropzoneElement.next('.qti-choice'),\r\n                prevMiddle = $prevResult.length > 0 ? _getMiddleOf($prevResult) : false,\r\n                nextMiddle = $nextResult.length > 0 ? _getMiddleOf($nextResult) : false;\r\n\r\n            if (orientation !== 'horizontal') {\r\n                if (prevMiddle && draggedBox.top < prevMiddle.y) {\r\n                    $prevResult.before($dropzoneElement);\r\n                }\r\n                if (nextMiddle && draggedBox.bottom > nextMiddle.y) {\r\n                    $nextResult.after($dropzoneElement);\r\n                }\r\n            } else {\r\n                if (prevMiddle && draggedBox.left < prevMiddle.x) {\r\n                    $prevResult.before($dropzoneElement);\r\n                }\r\n                if (nextMiddle && draggedBox.right > nextMiddle.x) {\r\n                    $nextResult.after($dropzoneElement);\r\n                }\r\n            }\r\n        }\r\n\r\n        function _getMiddleOf($element) {\r\n            const elementBox = $element.get(0).getBoundingClientRect();\r\n            return {\r\n                x: elementBox.left + elementBox.width / 2,\r\n                y: elementBox.top + elementBox.height / 2\r\n            };\r\n        }\r\n\r\n        // rendering init\r\n\r\n        _setInstructions(interaction);\r\n\r\n        //bind event listener in case the attributes change dynamically on runtime\r\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function (e, data) {\r\n            if (data.element.getSerial() === interaction.getSerial()) {\r\n                if (data.key === 'maxChoices' || data.key === 'minChoices') {\r\n                    instructionMgr.removeInstructions(interaction);\r\n                    _setInstructions(interaction);\r\n                    instructionMgr.validateInstructions(interaction);\r\n                }\r\n            }\r\n        });\r\n\r\n        _freezeSize($container);\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    const setResponse = function (interaction, response) {\r\n        const $container = containerHelper.get(interaction);\r\n        const $choiceArea = $$1('.choice-area', $container);\r\n        const $resultArea = $$1('.result-area', $container);\r\n\r\n        if (response === null || _.isEmpty(response)) {\r\n            resetResponse(interaction);\r\n        } else {\r\n            try {\r\n                _.each(pciResponse.unserialize(response, interaction), function (identifier) {\r\n                    $resultArea.append($choiceArea.find(`[data-identifier=\"${identifier}\"]`));\r\n                });\r\n            } catch (e) {\r\n                throw new Error(`wrong response format in argument : ${e}`);\r\n            }\r\n        }\r\n\r\n        instructionMgr.validateInstructions(interaction);\r\n    };\r\n\r\n    const _getRawResponse = function (interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n        const response = [];\r\n        $$1('.result-area>li', $container).each(function () {\r\n            response.push($$1(this).data('identifier'));\r\n        });\r\n        return response;\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    const getResponse = function (interaction) {\r\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\r\n    };\r\n\r\n    /**\r\n     * Set additionnal data to the template (data that are not really part of the model).\r\n     * @param {Object} interaction - the interaction\r\n     * @param {Object} [data] - interaction custom data\r\n     * @returns {Object} custom data\r\n     */\r\n    const getCustomData = function (interaction, data) {\r\n        return _.merge(data || {}, {\r\n            horizontal: interaction.attr('orientation') === 'horizontal' && orientationSelectionEnabled\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\r\n     * @param {Object} interaction - the interaction\r\n     */\r\n    const destroy = function (interaction) {\r\n        const $container = containerHelper.get(interaction);\r\n\r\n        //first, remove all events\r\n        const selectors = [\r\n            '.choice-area >li:not(.deactivated)',\r\n            '.result-area >li',\r\n            '.icon-add-to-selection',\r\n            '.icon-remove-from-selection',\r\n            '.icon-move-before',\r\n            '.icon-move-after'\r\n        ];\r\n        selectors.forEach(function unbindInteractEvents(selector) {\r\n            interact($container.find(selector).selector).unset();\r\n        });\r\n\r\n        $$1(document).off('.commonRenderer');\r\n\r\n        $container.find('.order-interaction-area').removeAttr('style');\r\n\r\n        instructionMgr.removeInstructions(interaction);\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    const setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n\r\n            //restore order of previously shuffled choices\r\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\r\n                const $container = containerHelper.get(interaction);\r\n\r\n                $$1('.choice-area .qti-choice', $container)\r\n                    .sort(function (a, b) {\r\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\r\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\r\n                        if (aIndex > bIndex) {\r\n                            return 1;\r\n                        }\r\n                        if (aIndex < bIndex) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .detach()\r\n                    .appendTo($$1('.choice-area', $container));\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    const getState = function getState(interaction) {\r\n        const state = {};\r\n        const response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n\r\n        //we store also the choice order if shuffled\r\n        if (interaction.attr('shuffle') === true) {\r\n            const $container = containerHelper.get(interaction);\r\n\r\n            state.order = [];\r\n            $$1('.choice-area .qti-choice', $container).each(function () {\r\n                state.order.push($$1(this).data('identifier'));\r\n            });\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the order interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/OrderInteraction\r\n     */\r\n    var OrderInteraction = {\r\n        qtiClass: 'orderInteraction',\r\n        getData: getCustomData,\r\n        template: tpl,\r\n        render,\r\n        getContainer: containerHelper.get,\r\n        setResponse,\r\n        getResponse,\r\n        resetResponse,\r\n        destroy,\r\n        setState,\r\n        getState\r\n    };\n\n    return OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2020 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('qtiCustomInteractionContext',['lodash'], function(_) {\n    'use strict';\n\n    //need a global reference to have pciHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._pciHooks = window._pciHooks || {};\n\n    /**\n     * Global object accessible by all PCIs\n     *\n     * @type Object\n     */\n    return {\n        /**\n         * register a custom interaction (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} pciHook\n         * @returns {undefined}\n         */\n        register(pciHook) {\n            const typeIdentifier =\n                typeof pciHook.getTypeIdentifier === 'function' ? pciHook.getTypeIdentifier() : pciHook.typeIdentifier;\n            if (typeIdentifier) {\n                window._pciHooks[typeIdentifier] = pciHook;\n            } else {\n                throw new Error('invalid PCI hook');\n            }\n        },\n        /**\n         * notify when a custom interaction is ready for test taker interaction\n         *\n         * @param {string} pciInstance\n         * @fires custominteractionready\n         */\n        notifyReady(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n        /**\n         * notify when a custom interaction is completed by test taker\n         *\n         * @param {string} pciInstance\n         * @fires custominteractiondone\n         */\n        notifyDone(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n\n        onready(customInteraction, state) {\n            //to be implemented in future story\n        },\n        ondone(customInteraction, response, state, status) {\n            //to be implemented in future story\n        },\n\n        /**\n         * Get a cloned object representing the PCI model\n         *\n         * @param {string} pciTypeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance(pciTypeIdentifier) {\n            const registeredPCI = window._pciHooks[pciTypeIdentifier];\n\n            if (!registeredPCI) {\n                throw new Error('no portable custom interaction hook found with the id ' + pciTypeIdentifier);\n            }\n\n            return _.cloneDeep(registeredPCI);\n        }\n    };\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator',['qtiCustomInteractionContext'], function (qtiCustomInteractionContext) { 'use strict';\n\n    qtiCustomInteractionContext = qtiCustomInteractionContext && Object.prototype.hasOwnProperty.call(qtiCustomInteractionContext, 'default') ? qtiCustomInteractionContext['default'] : qtiCustomInteractionContext;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var instanciator = {\r\n        /**\r\n         * Get the PCI instance associated to the interaction object\r\n         * If none exists, create a new one based on the PCI typeIdentifier\r\n         *\r\n         * @param {Object} interaction - the js object representing the interaction\r\n         * @returns {Object} PCI instance\r\n         */\r\n        getPci(interaction) {\r\n            let pciTypeIdentifier;\r\n            let pci = interaction.data('pci');\r\n\r\n            if (!pci) {\r\n                pciTypeIdentifier = interaction.typeIdentifier;\r\n                pci = qtiCustomInteractionContext.createPciInstance(pciTypeIdentifier);\r\n                if (pci) {\r\n                    //binds the PCI instance to TAO interaction object and vice versa\r\n                    interaction.data('pci', pci);\r\n                    pci._taoCustomInteraction = interaction;\r\n                } else {\r\n                    throw new Error('no custom interaction hook found for the type ' + pciTypeIdentifier);\r\n                }\r\n            }\r\n\r\n            return pci;\r\n        },\r\n\r\n        /**\r\n         * Associate a PCI instance to the interaction object\r\n         * @param {Object} interaction - the js object representing the interaction\r\n         * @param {Object} instance - PCI instance\r\n         */\r\n        setPci(interaction, instance) {\r\n            interaction.data('pci', instance);\r\n        }\r\n    };\n\n    return instanciator;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator'], function (_, containerHelper, instanciator) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    function commonPciRenderer(runtime) {\r\n        return {\r\n            getRequiredModules: function getRequiredModules() {\r\n                var requireEntries = [];\r\n                //load hook if applicable\r\n                if (runtime.hook) {\r\n                    requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\r\n                }\r\n                //load libs\r\n                _.forEach(runtime.libraries, function(lib) {\r\n                    requireEntries.push(lib.replace(/\\.js$/, ''));\r\n                });\r\n                //load stylesheets\r\n                _.forEach(runtime.stylesheets, function(stylesheet) {\r\n                    requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\r\n                });\r\n                return requireEntries;\r\n            },\r\n            createInstance: function(interaction, context) {\r\n                var id = interaction.attr('responseIdentifier');\r\n                var pci = instanciator.getPci(interaction);\r\n                var properties = _.clone(interaction.properties);\r\n                var assetManager = context.assetManager;\r\n                var pciAssetManager = {\r\n                    resolve: function pciAssetResolve(url) {\r\n                        var resolved = assetManager.resolveBy('portableElementLocation', url);\r\n                        if (resolved === url || _.isUndefined(resolved)) {\r\n                            return assetManager.resolve(url);\r\n                        } else {\r\n                            return resolved;\r\n                        }\r\n                    }\r\n                };\r\n                pci.initialize(\r\n                    id,\r\n                    containerHelper\r\n                        .get(interaction)\r\n                        .children()\r\n                        .get(0),\r\n                    properties,\r\n                    pciAssetManager\r\n                );\r\n                return Promise.resolve(pci);\r\n            },\r\n            /**\r\n             *\r\n             * @param {Object }interaction\r\n             * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\r\n             */\r\n            destroy: function destroy(interaction) {\r\n                return instanciator.getPci(interaction).destroy();\r\n            },\r\n            setState: function setState(interaction, state) {\r\n                instanciator.getPci(interaction).setSerializedState(state);\r\n            },\r\n            getState: function getState(interaction) {\r\n                return instanciator.getPci(interaction).getSerializedState();\r\n            }\r\n        };\r\n    }\n\n    return commonPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims',['lodash', 'core/logger', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'context'], function (_, loggerFactory, containerHelper, instanciator, sharedContext) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    sharedContext = sharedContext && Object.prototype.hasOwnProperty.call(sharedContext, 'default') ? sharedContext['default'] : sharedContext;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims');\r\n\r\n    const pciDoneCallback = pci => {\r\n        //standard callback function to be implemented in a future story\r\n        logger.info('pciDoneCallback called on PCI ' + pci.typeIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Key under the IMS PCI constructor is stored on interaction\r\n     */\r\n    const pciConstructorDataKey = 'pciConstructor';\r\n\r\n    function defaultPciRenderer(runtime) {\r\n        return {\r\n            getRequiredModules() {\r\n                const requireEntries = [];\r\n                // load modules\r\n                _.forEach(runtime.modules, function (module, name) {\r\n                    requireEntries.push(name);\r\n                });\r\n                return requireEntries;\r\n            },\r\n            /**\r\n             * Saves the original IMS PCI module to be able to reinstanciate later\r\n             * @param {Object} interaction\r\n             * @param {Object} pciConstructor\r\n             */\r\n            setPCIConstructor(interaction, pciConstructor) {\r\n                interaction.data(pciConstructorDataKey, pciConstructor);\r\n            },\r\n            /**\r\n             * Returns with original IMS PCI module\r\n             * @param {Object} interaction\r\n             */\r\n            getPCIConstructor(interaction) {\r\n                return interaction.data(pciConstructorDataKey);\r\n            },\r\n            createInstance(interaction, context) {\r\n                let pciConstructor = this.getPCIConstructor(interaction);\r\n\r\n                //get interaction xml:lang prop to put it into pci instance config\r\n                const contentLanguage = interaction.attributes && interaction.attributes.language;\r\n                const itemLanguage = interaction.rootElement && interaction.rootElement.attributes && interaction.rootElement.attributes['xml:lang'];\r\n                const language = contentLanguage || itemLanguage;\r\n                const userLanguage = sharedContext && sharedContext.locale;\r\n\r\n                const properties = _.assign(_.clone(interaction.properties), {language, userLanguage});\r\n\r\n                // save original IMS PCI module first time to be able to reinstanciate later if necessary\r\n                if (!pciConstructor) {\r\n                    pciConstructor = instanciator.getPci(interaction);\r\n                    this.setPCIConstructor(interaction, pciConstructor);\r\n                }\r\n\r\n                // serialize any array or object properties\r\n                _.forOwn(properties, function (propVal, propKey) {\r\n                    properties[propKey] = _.isArray(propVal) || _.isObject(propVal) ? JSON.stringify(propVal) : propVal;\r\n                });\r\n\r\n                let pciReadyCallback;\r\n                const readyPromise = new Promise(resolve => {\r\n                    pciReadyCallback = resolve;\r\n                });\r\n\r\n                const config = {\r\n                    properties,\r\n                    templateVariables: {}, //not supported yet\r\n                    boundTo: context.response || {},\r\n                    onready: pciReadyCallback,\r\n                    ondone: pciDoneCallback,\r\n                    status: 'interacting' //only support interacting state currently(TODO: solution, review),\r\n                };\r\n\r\n                pciConstructor.getInstance(containerHelper.get(interaction).get(0), config, context.state);\r\n\r\n                return readyPromise.then(instance => {\r\n                    instanciator.setPci(interaction, instance);\r\n                    return instance;\r\n                });\r\n            },\r\n            destroy: function destroy(interaction) {\r\n                instanciator.getPci(interaction).oncompleted();\r\n            },\r\n            /**\r\n             * IMS PCI does not have setState, so PCI should be destroyed and reinstanciated with response.\r\n             * This function should run only in review mode.\r\n             * @param {Object} interaction\r\n             * @param {Object} state - state that should be set\r\n             * @returns {Promise<Object>} - Resolves with newly created instance\r\n             */\r\n            setReviewState(interaction, state) {\r\n                this.destroy(interaction);\r\n                return this.createInstance(interaction, { response: { RESPONSE: state.response } });\r\n            },\r\n            setState: _.noop,\r\n            getState(interaction) {\r\n                return instanciator.getPci(interaction).getState();\r\n            }\r\n        };\r\n    }\n\n    return defaultPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',['lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/ciRegistry'], function (_, Handlebars, __, DOMPurify, containerHelper, PortableElement, instanciator, commonPciRenderer, imsPciRenderer, util, ciRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    commonPciRenderer = commonPciRenderer && Object.prototype.hasOwnProperty.call(commonPciRenderer, 'default') ? commonPciRenderer['default'] : commonPciRenderer;\n    imsPciRenderer = imsPciRenderer && Object.prototype.hasOwnProperty.call(imsPciRenderer, 'default') ? imsPciRenderer['default'] : imsPciRenderer;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\r\\n    lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-customInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2021 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var _setPciModel = function _setPciModel(interaction, runtime) {\r\n        var pciRenderer;\r\n        if (runtime.model === 'IMSPCI') {\r\n            pciRenderer = imsPciRenderer(runtime);\r\n        } else {\r\n            pciRenderer = commonPciRenderer(runtime);\r\n        }\r\n        interaction.data('pci-model', runtime.model);\r\n        interaction.data('pci-renderer', pciRenderer);\r\n    };\r\n\r\n    var _getPciRenderer = function _getPciRenderer(interaction) {\r\n        return interaction.data('pci-renderer');\r\n    };\r\n\r\n    /**\r\n     * Execute javascript codes to bring the interaction to life.\r\n     * At this point, the html markup must already be ready in the document.\r\n     *\r\n     * It is done in 5 steps :\r\n     * 1. configure the paths\r\n     * 2. require all required libs\r\n     * 3. create a pci instance based on the interaction model\r\n     * 4. initialize the rendering\r\n     * 5. restore full state if applicable (state and/or response)\r\n     *\r\n     * @param {Object} interaction\r\n     */\r\n    var render = function render(interaction, options) {\r\n        var self = this;\r\n\r\n        options = options || {};\r\n        return new Promise(function (resolve, reject) {\r\n            var id = interaction.attr('responseIdentifier');\r\n            var typeIdentifier = interaction.typeIdentifier;\r\n            var assetManager = self.getAssetManager();\r\n            var state;\r\n            var response = {};\r\n\r\n            if (options.state && options.state[id]) {\r\n                state = options.state[id];\r\n            }\r\n            response[id] = { base: null };\r\n\r\n            ciRegistry\r\n                .loadRuntimes({ include: [typeIdentifier] })\r\n                .then(function () {\r\n                    var pciRenderer;\r\n                    var runtime = ciRegistry.getRuntime(typeIdentifier);\r\n\r\n                    if (!runtime) {\r\n                        return reject('The runtime for the pci cannot be found : ' + typeIdentifier);\r\n                    }\r\n\r\n                    _setPciModel(interaction, runtime);\r\n\r\n                    pciRenderer = _getPciRenderer(interaction);\r\n\r\n                    window.require(\r\n                        pciRenderer.getRequiredModules(),\r\n                        function () {\r\n                            var pci = instanciator.getPci(interaction);\r\n                            if (pci) {\r\n                                pciRenderer.createInstance(interaction, {\r\n                                    response: response,\r\n                                    state: state,\r\n                                    assetManager: assetManager\r\n                                }).then(instance => {\r\n                                    //forward internal PCI event responseChange\r\n                                    if (_.isFunction(instance.on)) {\r\n                                        interaction.onPci('responseChange', function () {\r\n                                            containerHelper.triggerResponseChangeEvent(interaction);\r\n                                        });\r\n                                    }\r\n                                    resolve();\r\n                                });\r\n                            } else {\r\n                                reject('Unable to initialize pci \"' + id + '\"');\r\n                            }\r\n                        },\r\n                        reject\r\n                    );\r\n                })\r\n                .catch(function (error) {\r\n                    reject('Error loading runtime \"' + id + '\": ' + error);\r\n                });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Programmatically set the response following the json schema described in\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * @param {Object} interaction\r\n     * @param {Object} response\r\n     */\r\n    var setResponse = function setResponse(interaction, response) {\r\n        instanciator.getPci(interaction).setResponse(response);\r\n    };\r\n\r\n    /**\r\n     * Get the response in the json format described in\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * @param {Object} interaction\r\n     * @returns {Object}\r\n     */\r\n    var getResponse = function getResponse(interaction) {\r\n        return instanciator.getPci(interaction).getResponse();\r\n    };\r\n\r\n    /**\r\n     * Remove the current response set in the interaction\r\n     * The state may not be restored at this point.\r\n     *\r\n     * @param {Object} interaction\r\n     */\r\n    var resetResponse = function resetResponse(interaction) {\r\n        instanciator.getPci(interaction).resetResponse();\r\n    };\r\n\r\n    /**\r\n     * Reverse operation performed by render()\r\n     * After this function is executed, only the inital naked markup remains\r\n     * Event listeners are removed and the state and the response are reset\r\n     *\r\n     * @param {Object} interaction\r\n     * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\r\n     */\r\n    var destroy = function destroy(interaction) {\r\n        return _getPciRenderer(interaction).destroy(interaction);\r\n    };\r\n\r\n    /**\r\n     * Restore the state of the interaction from the serializedState.\r\n     *\r\n     * @param {Object} interaction\r\n     * @param {Object} serializedState - json format\r\n     */\r\n    var setState = function setState(interaction, serializedState) {\r\n        _getPciRenderer(interaction).setState(interaction, serializedState);\r\n    };\r\n\r\n    /**\r\n     * Get the current state of the interaction as a string.\r\n     * It enables saving the state for later usage.\r\n     *\r\n     * @param {Object} interaction\r\n     * @returns {Object} json format\r\n     */\r\n    var getState = function getState(interaction) {\r\n        return _getPciRenderer(interaction).getState(interaction);\r\n    };\r\n\r\n    var getData = function getData(customInteraction, data) {\r\n        //remove ns + fix media file path\r\n        var markup = data.markup;\r\n        markup = util.removeMarkupNamespaces(markup);\r\n        markup = PortableElement.fixMarkupMediaSources(markup, this);\r\n        data.markup = markup;\r\n\r\n        return data;\r\n    };\r\n\r\n    var PortableCustomInteraction = {\r\n        qtiClass: 'customInteraction',\r\n        template: tpl,\r\n        getData: getData,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        getState: getState,\r\n        setState: setState\r\n    };\n\n    return PortableCustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div\\r\\n    class=\\\"qti-prompt-container\\\"\\r\\n    data-html-editable-container\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n>\\r\\n    <div class=\\\"qti-prompt\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-html-editable id=\\\"prompt-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var Prompt = {\r\n        qtiClass: 'prompt',\r\n        template: tpl,\r\n        getContainer: containerHelper.get\r\n    };\n\n    return Prompt;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',['jquery', 'lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, Handlebars, __, DOMPurify, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-selectPointInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n    <div class=\\\"image-editor solid\\\">\\r\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Get the responses from the interaction\r\n     * @param {Object} interaction\r\n     * @returns {Array} of points\r\n     */\r\n    var getRawResponse = function getRawResponse(interaction) {\r\n        if (interaction && interaction.paper && _.isArray(interaction.paper.points)) {\r\n            return _.map(interaction.paper.points, function(point) {\r\n                return [point.x, point.y];\r\n            });\r\n        }\r\n        return [];\r\n    };\r\n\r\n    /**\r\n     * Add a new point to the interaction\r\n     * @param {Object} interaction\r\n     * @param {Object} point - the x/y point\r\n     */\r\n    var addPoint = function addPoint(interaction, point) {\r\n        var maxChoices = interaction.attr('maxChoices');\r\n\r\n        var pointChange = function pointChange() {\r\n            containerHelper.triggerResponseChangeEvent(interaction);\r\n            instructionMgr.validateInstructions(interaction);\r\n        };\r\n\r\n        if (maxChoices > 0 && getRawResponse(interaction).length >= maxChoices) {\r\n            instructionMgr.validateInstructions(interaction);\r\n        } else {\r\n            if (!_.isArray(interaction.paper.points)) {\r\n                interaction.paper.points = [];\r\n            }\r\n\r\n            graphic.createTarget(interaction.paper, {\r\n                point: point,\r\n                create: function create(target) {\r\n                    if (interaction.isTouch && target && target.getBBox) {\r\n                        graphic.createTouchCircle(interaction.paper, target.getBBox());\r\n                    }\r\n\r\n                    interaction.paper.points.push(point);\r\n\r\n                    pointChange();\r\n                },\r\n                remove: function remove() {\r\n                    _.remove(interaction.paper.points, point);\r\n\r\n                    pointChange();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make the image clickable and place targets at the given position.\r\n     * @param {Object} interaction\r\n     */\r\n    var enableSelection = function enableSelection(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        var $imageBox = $container.find('.main-image-box');\r\n        var isResponsive = $container.hasClass('responsive');\r\n        var image = interaction.paper.getById('bg-image-' + interaction.serial);\r\n\r\n        interaction.paper.isTouch = false;\r\n\r\n        //used to see if we are in a touch context\r\n        image.touchstart(function() {\r\n            interaction.paper.isTouch = true;\r\n            image.untouchstart();\r\n        });\r\n\r\n        //get the point on click\r\n        image.click(function imageClicked(event) {\r\n            addPoint(interaction, graphic.getPoint(event, interaction.paper, $imageBox, isResponsive));\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {Object} interaction\r\n     */\r\n    var render = function render(interaction) {\r\n        var self = this;\r\n\r\n        return new Promise(function(resolve) {\r\n            var $container = containerHelper.get(interaction);\r\n            var background = interaction.object.attributes;\r\n\r\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\r\n\r\n            //create the paper\r\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\r\n                width: background.width,\r\n                height: background.height,\r\n                img: self.resolveUrl(background.data),\r\n                imgId: 'bg-image-' + interaction.serial,\r\n                container: $container\r\n            });\r\n\r\n            //enable to select the paper to position a target\r\n            enableSelection(interaction);\r\n\r\n            //set up the constraints instructions\r\n            instructionMgr.minMaxChoiceInstructions(interaction, {\r\n                min: interaction.attr('minChoices'),\r\n                max: interaction.attr('maxChoices'),\r\n                choiceCount: false,\r\n                getResponse: getRawResponse,\r\n                onError: function(data) {\r\n                    if (data) {\r\n                        graphic.highlightError(data.target, 'success');\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {Object} interaction\r\n     * @param {Object} response\r\n     */\r\n    var setResponse = function(interaction, response) {\r\n        var responseValues;\r\n\r\n        if (response && interaction.paper) {\r\n            try {\r\n                responseValues = pciResponse.unserialize(response, interaction);\r\n\r\n                if (interaction.getResponseDeclaration().attr('cardinality') === 'single') {\r\n                    responseValues = [responseValues];\r\n                }\r\n                _(responseValues)\r\n                    .filter(function(point) {\r\n                        return _.isArray(point) && point.length === 2;\r\n                    })\r\n                    .forEach(function(point) {\r\n                        addPoint(interaction, {\r\n                            x: point[0],\r\n                            y: point[1]\r\n                        });\r\n                    });\r\n            } catch (err) {\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset the current responses of the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {Object} interaction\r\n     */\r\n    var resetResponse = function resetResponse(interaction) {\r\n        if (interaction && interaction.paper) {\r\n            interaction.paper.points = [];\r\n\r\n            interaction.paper.forEach(function(element) {\r\n                var point = element.data('point');\r\n                if (typeof point === 'object') {\r\n                    graphic.trigger(element, 'click');\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n         i* Return the response of the rendered interaction\r\n         *\r\n         * The response format follows the IMS PCI recommendation :\r\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n         *\r\n         * Available base types are defined in the QTI v2.1 information model:\r\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n         *\r\n         * @param {Object} interaction\r\n         * @returns {Object} the response\r\n         */\r\n    var getResponse = function(interaction) {\r\n        return pciResponse.serialize(getRawResponse(interaction), interaction);\r\n    };\r\n\r\n    /**\r\n     * Clean interaction destroy\r\n     * @param {Object} interaction\r\n     */\r\n    var destroy = function destroy(interaction) {\r\n        var $container;\r\n        if (interaction.paper) {\r\n            $container = containerHelper.get(interaction);\r\n\r\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\r\n            $container.off('resize.qti-widget.' + interaction.serial);\r\n\r\n            interaction.paper.clear();\r\n            instructionMgr.removeInstructions(interaction);\r\n\r\n            $$1('.main-image-box', $container)\r\n                .empty()\r\n                .removeAttr('style');\r\n            $$1('.image-editor', $container).removeAttr('style');\r\n        }\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Expose the common renderer for the interaction\r\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\r\n     */\r\n    var SelectPointInteraction = {\r\n        qtiClass: 'selectPointInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'nouislider'], function ($$1, _, __, Handlebars, DOMPurify, containerHelper, pciResponse, nouislider) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-sliderInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"sliderInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var _slideTo = function(options) {\r\n        options.sliderCurrentValue.find('.qti-slider-cur-value').text(options.value);\r\n        options.sliderValue.val(options.value);\r\n    };\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    const render = function(interaction) {\r\n        const attributes = interaction.getAttributes(),\r\n            $container = interaction.getContainer(),\r\n            direction = window.getComputedStyle($container[0]).getPropertyValue('direction') || 'ltr',\r\n            $el = $$1('<div />').attr({ id: `${attributes.responseIdentifier}-qti-slider`, class: 'qti-slider' }), //slider element\r\n            $sliderLabels = $$1('<div />').attr({ class: 'qti-slider-values' }),\r\n            $sliderCurrentValue = $$1('<div />').attr({\r\n                id: `${attributes.responseIdentifier}-qti-slider-cur-value`,\r\n                class: 'qti-slider-cur-value'\r\n            }), //show the current selected value\r\n            $sliderValue = $$1('<input />').attr({ type: 'hidden', id: `${attributes.responseIdentifier}-qti-slider-value`, class: 'qti-slider-value' }); //the input that always holds the slider value\r\n\r\n        //getting the options\r\n        let orientation = 'horizontal';\r\n        const reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false, //setting the slider whether to be reverse or not\r\n            min = parseInt(attributes.lowerBound),\r\n            max = parseInt(attributes.upperBound),\r\n            step = typeof attributes.step !== 'undefined' && attributes.step ? parseInt(attributes.step) : 1, //default value as per QTI standard\r\n            steps = (max - min) / step; //number of the steps\r\n\r\n        //add the containers\r\n        $sliderCurrentValue\r\n            .append(`<span class=\"qti-slider-cur-value-text\">${__('Current value:')}</span>`)\r\n            .append('<span class=\"qti-slider-cur-value\"></span>');\r\n\r\n        //setting the orientation of the slider\r\n        if (\r\n            typeof attributes.orientation !== 'undefined' &&\r\n            $$1.inArray(attributes.orientation, ['horizontal', 'vertical']) > -1\r\n        ) {\r\n            orientation = attributes.orientation;\r\n        }\r\n\r\n        let reversedLabels = false;\r\n        //for vertical only reverse matters\r\n        if(orientation === 'vertical') {\r\n            reversedLabels = reverse;\r\n        }else {\r\n            reversedLabels = ((!reverse && direction === 'rtl') || (reverse && direction !== 'rtl'));\r\n        }\r\n\r\n        $sliderLabels\r\n            .append(`<span class=\"slider-min\">${reversedLabels ? max : min }</span>`)\r\n            .append(`<span class=\"slider-max\">${reversedLabels ? min : max}</span>`);\r\n\r\n        interaction\r\n            .getContainer()\r\n            .append($el)\r\n            .append($sliderLabels)\r\n            .append($sliderCurrentValue)\r\n            .append($sliderValue);\r\n\r\n\r\n        let sliderSize = 0;\r\n\r\n        if (orientation === 'horizontal') {\r\n            $container.addClass('qti-slider-horizontal');\r\n        } else {\r\n            const maxHeight = 300;\r\n            sliderSize = steps * 20;\r\n            if (sliderSize > maxHeight) {\r\n                sliderSize = maxHeight;\r\n            }\r\n            $container.addClass('qti-slider-vertical');\r\n            $el.height(`${sliderSize}px`);\r\n            $sliderLabels.height(`${sliderSize}px`);\r\n        }\r\n\r\n        //set the middle value if the stepLabel attribute is enabled\r\n        if (typeof attributes.stepLabel !== 'undefined' && attributes.stepLabel) {\r\n            const middleStep = parseInt(steps / 2),\r\n                leftOffset = (100 / steps) * middleStep,\r\n                middleValue = reverse ? max - middleStep * step : min + middleStep * step;\r\n\r\n            if (orientation === 'horizontal') {\r\n                $sliderLabels\r\n                    .find('.slider-min')\r\n                    .after(`<span class=\"slider-middle\" style=\"left:'${leftOffset}%\">${middleValue}</span>`);\r\n            } else {\r\n                $sliderLabels\r\n                    .find('.slider-min')\r\n                    .after(`<span class=\"slider-middle\" style=\"top:${leftOffset}%\">${middleValue}</span>`);\r\n            }\r\n        }\r\n\r\n        //create the slider\r\n        $el.noUiSlider({\r\n            start: reverse ? max : min,\r\n            range: {\r\n                min: min,\r\n                max: max\r\n            },\r\n            step: step,\r\n            orientation,\r\n            direction\r\n        }).on('slide', function() {\r\n            let val = parseInt($$1(this).val());\r\n            if (interaction.attr('reverse')) {\r\n                val = max + min - val;\r\n            }\r\n            val = Math.round(val * 1000) / 1000;\r\n            _slideTo({\r\n                value: val,\r\n                sliderValue: $sliderValue,\r\n                sliderCurrentValue: $sliderCurrentValue\r\n            });\r\n\r\n            containerHelper.triggerResponseChangeEvent(interaction);\r\n        });\r\n\r\n        _slideTo({\r\n            value: min,\r\n            sliderValue: $sliderValue,\r\n            sliderCurrentValue: $sliderCurrentValue\r\n        });\r\n\r\n        //bind event listener in case the attributes change dynamically on runtime\r\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function(e, data) {\r\n            if (data.element.getSerial() === interaction.getSerial()) {\r\n                if (data.key === 'responseIdentifier' && data.value) {\r\n                    const attributesNew = interaction.getAttributes();\r\n                    // data.value and attributesNew.responseIdentifier is the same\r\n                    $container.find('.qti-slider').attr({ id: `${attributesNew.responseIdentifier}-qti-slider`});\r\n                    $container.find('.qti-slider-cur-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-cur-value`});\r\n                    $container.find('.qti-slider-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-value`});\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    var resetResponse = function(interaction) {\r\n        const attributes = interaction.getAttributes(),\r\n            $container = interaction.getContainer(),\r\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\r\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\r\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\r\n            min = parseInt(attributes.lowerBound),\r\n            max = parseInt(attributes.upperBound),\r\n            reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false,\r\n            startValue = reverse ? max : min;\r\n\r\n        _slideTo({\r\n            value: min,\r\n            sliderValue: $sliderValue,\r\n            sliderCurrentValue: $sliderCurrentValue\r\n        });\r\n\r\n        $el.val(startValue);\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function(interaction, response) {\r\n        const attributes = interaction.getAttributes(),\r\n            $container = interaction.getContainer(),\r\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\r\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\r\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\r\n            min = parseInt(attributes.lowerBound),\r\n            max = parseInt(attributes.upperBound);\r\n        let value;\r\n\r\n        value = pciResponse.unserialize(response, interaction)[0];\r\n\r\n        _slideTo({\r\n            value: value,\r\n            sliderValue: $sliderValue,\r\n            sliderCurrentValue: $sliderCurrentValue\r\n        });\r\n\r\n        $el.val(interaction.attr('reverse') ? max + min - value : value);\r\n    };\r\n\r\n    var _getRawResponse = function(interaction) {\r\n        let value;\r\n        const attributes = interaction.getAttributes(),\r\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\r\n            min = parseInt(attributes.lowerBound),\r\n            $container = interaction.getContainer(),\r\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`);\r\n\r\n        if (baseType === 'integer') {\r\n            value = parseInt($sliderValue.val());\r\n        } else if (baseType === 'float') {\r\n            value = parseFloat($sliderValue.val());\r\n        }\r\n\r\n        return isNaN(value) ? min : value;\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    const getResponse = function(interaction) {\r\n        return pciResponse.serialize([_getRawResponse(interaction)], interaction);\r\n    };\r\n\r\n    const destroy = function(interaction) {\r\n        const $container = interaction.getContainer();\r\n\r\n        $container.empty();\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    const setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    const getState = function getState(interaction) {\r\n        const state = {};\r\n        const response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    };\r\n\r\n    var SliderInteraction = {\r\n        qtiClass: 'sliderInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'util/locale', 'ui/tooltip'], function ($$1, _, __, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse, patternMaskHelper, locale, tooltip) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n    locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<input\\r\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n        class=\\\"qti-interaction qti-inlineInteraction qti-textEntryInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\r\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n        data-qti-class=\\\"textEntryInteraction\\\"\\r\\n        type=\\\"text\\\"\\r\\n>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Hide the tooltip for the text input\r\n     * @param {jQuery} $input\r\n     */\r\n    var hideTooltip = function hideTooltip($input) {\r\n        if ($input.data('$tooltip')) {\r\n            $input.data('$tooltip').hide();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create/Show tooltip for the text input\r\n     * @param {jQuery} $input\r\n     * @param {String} theme\r\n     * @param {String} message\r\n     */\r\n    var showTooltip = function showTooltip($input, theme, message) {\r\n        if ($input.data('$tooltip')) {\r\n            $input.data('$tooltip').updateTitleContent(message);\r\n        } else {\r\n            var textEntryTooltip = tooltip.create($input, message, {\r\n                theme: theme,\r\n                trigger: 'manual'\r\n            });\r\n\r\n            $input.data('$tooltip', textEntryTooltip);\r\n        }\r\n\r\n        $input.data('$tooltip').show();\r\n    };\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    var render = function render(interaction) {\r\n        var attributes = interaction.getAttributes(),\r\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\r\n            $input = interaction.getContainer(),\r\n            expectedLength,\r\n            updateMaxCharsTooltip,\r\n            updatePatternMaskTooltip,\r\n            patternMask = interaction.attr('patternMask'),\r\n            maxChars = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\r\n\r\n        // Setting up baseType\r\n        switch (baseType) {\r\n            case 'integer':\r\n                $input.attr('inputmode', 'numeric');\r\n                break;\r\n            case 'float':\r\n                $input.attr('inputmode', 'decimal');\r\n                break;\r\n            default:\r\n                $input.attr('inputmode', 'text');\r\n        }\r\n\r\n        //setting up the width of the input field\r\n        if (attributes.expectedLength) {\r\n            //adding 2 chars to include reasonable padding size\r\n            expectedLength = parseInt(attributes.expectedLength) + 2;\r\n            $input.css('width', expectedLength + 'ch');\r\n            $input.css('min-width', expectedLength + 'ch');\r\n        }\r\n\r\n        //checking if there's a placeholder for the input\r\n        if (attributes.placeholderText) {\r\n            $input.attr('placeholder', attributes.placeholderText);\r\n        }\r\n\r\n        if (maxChars) {\r\n            updateMaxCharsTooltip = function updateMaxCharsTooltip() {\r\n                var count = $input.val().length;\r\n                var message, messageType;\r\n\r\n                if (count) {\r\n                    message = __('%d/%d', count, maxChars);\r\n                } else {\r\n                    message = __('%d characters allowed', maxChars);\r\n                }\r\n\r\n                if (count >= maxChars) {\r\n                    $input.addClass('maxed');\r\n                    messageType = 'warning';\r\n                } else {\r\n                    $input.removeClass('maxed');\r\n                    messageType = 'info';\r\n                }\r\n\r\n                showTooltip($input, messageType, message);\r\n                if (count && messageType === 'warning') {\r\n                    hideTooltip($input);\r\n                }\r\n            };\r\n\r\n            $input\r\n                .attr('maxlength', maxChars)\r\n                .on('focus.commonRenderer', function() {\r\n                    updateMaxCharsTooltip();\r\n                })\r\n                .on('keyup.commonRenderer', function() {\r\n                    updateMaxCharsTooltip();\r\n                    containerHelper.triggerResponseChangeEvent(interaction);\r\n                })\r\n                .on('blur.commonRenderer', function() {\r\n                    hideTooltip($input);\r\n                });\r\n        } else if (attributes.patternMask) {\r\n            updatePatternMaskTooltip = function updatePatternMaskTooltip() {\r\n                var regex = new RegExp(attributes.patternMask);\r\n\r\n                hideTooltip($input);\r\n\r\n                if ($input.val()) {\r\n                    if (regex.test($input.val())) {\r\n                        $input.removeClass('invalid');\r\n                    } else {\r\n                        $input.addClass('invalid');\r\n                        showTooltip($input, 'error', __('This is not a valid answer'));\r\n                    }\r\n                }\r\n            };\r\n\r\n            $input\r\n                .on('focus.commonRenderer', function() {\r\n                    updatePatternMaskTooltip();\r\n                })\r\n                .on('keyup.commonRenderer', function() {\r\n                    updatePatternMaskTooltip();\r\n                    containerHelper.triggerResponseChangeEvent(interaction);\r\n                })\r\n                .on('blur.commonRenderer', function() {\r\n                    hideTooltip($input);\r\n                });\r\n        } else {\r\n            $input.on('keyup.commonRenderer', function() {\r\n                containerHelper.triggerResponseChangeEvent(interaction);\r\n            });\r\n        }\r\n    };\r\n\r\n    var resetResponse = function resetResponse(interaction) {\r\n        interaction.getContainer().val('');\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\r\n     *\r\n     * Special value: the empty object value {} resets the interaction responses\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function setResponse(interaction, response) {\r\n        var responseValue;\r\n\r\n        try {\r\n            responseValue = pciResponse.unserialize(response, interaction);\r\n        } catch (e) {}\r\n\r\n        if (responseValue && responseValue.length) {\r\n            interaction.getContainer().val(responseValue[0]);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    var getResponse = function getResponse(interaction) {\r\n        var ret = { base: {} },\r\n            value,\r\n            $input = interaction.getContainer(),\r\n            attributes = interaction.getAttributes(),\r\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\r\n            numericBase = attributes.base || 10;\r\n\r\n        if ($input.hasClass('invalid') || (attributes.placeholderText && $input.val() === attributes.placeholderText)) {\r\n            //invalid response or response equals to the placeholder text are considered empty\r\n            value = '';\r\n        } else {\r\n            if (baseType === 'integer') {\r\n                value = locale.parseInt($input.val(), numericBase);\r\n            } else if (baseType === 'float') {\r\n                value = locale.parseFloat($input.val());\r\n            } else if (baseType === 'string') {\r\n                value = $input.val();\r\n            }\r\n        }\r\n\r\n        ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\r\n\r\n        return ret;\r\n    };\r\n\r\n    var destroy = function destroy(interaction) {\r\n        $$1('input.qti-textEntryInteraction').each(function(index, el) {\r\n            var $input = $$1(el);\r\n            if ($input.data('$tooltip')) {\r\n                $input.data('$tooltip').dispose();\r\n                $input.removeData('$tooltip');\r\n            }\r\n        });\r\n\r\n        //remove event\r\n        $$1(document).off('.commonRenderer');\r\n        containerHelper.get(interaction).off('.commonRenderer');\r\n\r\n        //remove instructions\r\n        instructionMgr.removeInstructions(interaction);\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    };\r\n\r\n    var TextEntryInteraction = {\r\n        qtiClass: 'textEntryInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState\r\n    };\n\n    return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',['jquery', 'lodash', 'i18n', 'core/mimetype', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/uploadMime', 'ui/progressbar', 'ui/previewer', 'ui/modal', 'ui/waitForMedia'], function ($$1, _, __, mimetype, Handlebars, DOMPurify, containerHelper, instructionMgr, uploadHelper, progressbar, previewer, modal, waitForMedia) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimetype = mimetype && Object.prototype.hasOwnProperty.call(mimetype, 'default') ? mimetype['default'] : mimetype;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    uploadHelper = uploadHelper && Object.prototype.hasOwnProperty.call(uploadHelper, 'default') ? uploadHelper['default'] : uploadHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"accept=\\\"\";\n      if (helper = helpers.accept) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.accept); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-blockInteraction qti-uploadInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n\t\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n\t<div class=\\\"instruction-container\\\"></div>\\r\\n    <div class=\\\"file-upload fixed-grid-row lft\\\">\\r\\n        <div class=\\\"progressbar\\\"></div>\\r\\n        <span class=\\\"btn-info small col-4\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Browse...\", options) : helperMissing.call(depth0, \"__\", \"Browse...\", options)))\n        + \"</span>\\r\\n        <span class=\\\"file-name placeholder col-8 truncate\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No file selected\", options) : helperMissing.call(depth0, \"__\", \"No file selected\", options)))\n        + \"</span>\\r\\n        <input type=\\\"file\\\" \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.accept), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"/>\\r\\n    </div>\\r\\n    <div class=\\\"file-upload-preview lft visible-file-upload-preview runtime-visible-file-upload-preview\\\">\\r\\n        <p class=\\\"nopreview\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No preview available\", options) : helperMissing.call(depth0, \"__\", \"No preview available\", options)))\n        + \"</p>\\r\\n    </div>\\r\\n    <div class=\\\"file-upload-preview-popup modal\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var _initialInstructions = __('Browse your computer and select the appropriate file.');\r\n\r\n    var _readyInstructions = __('The selected file is ready to be sent.');\r\n\r\n    /**\r\n     * Validate type of selected file\r\n     * @param file\r\n     * @param interaction\r\n     * @returns {boolean}\r\n     */\r\n    var validateFileType = function validateFileType(file, interaction) {\r\n        var expectedTypes = uploadHelper.getExpectedTypes(interaction, true);\r\n        var filetype = mimetype.getMimeType(file);\r\n        if (expectedTypes.length) {\r\n            return _.indexOf(expectedTypes, filetype) >= 0;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Compute the message to be displayed when an invalid file type has been selected\r\n     *\r\n     * @param {Object} interaction\r\n     * @param {Function} userSelectedType\r\n     * @param {Function} messageWrongType\r\n     * @returns {String}\r\n     */\r\n    var getMessageWrongType = function getMessageWrongType(interaction, userSelectedType, messageWrongType) {\r\n        var types = uploadHelper.getExpectedTypes(interaction);\r\n        var expectedTypeLabels = _.map(_.uniq(types), function (type) {\r\n            var mime = _.find(uploadHelper.getMimeTypes(), { mime: type });\r\n            if (mime) {\r\n                return mime.label;\r\n            } else {\r\n                return type;\r\n            }\r\n        });\r\n\r\n        if (messageWrongType && _.isFunction(messageWrongType)) {\r\n            return messageWrongType({\r\n                userSelectedType: userSelectedType,\r\n                types: expectedTypeLabels\r\n            });\r\n        } else {\r\n            return __(\r\n                'Wrong type of file. Expected %s. The selected file has the mimetype \"%s\".',\r\n                expectedTypeLabels.join(__(' or ')),\r\n                userSelectedType\r\n            );\r\n        }\r\n    };\r\n\r\n    var _handleSelectedFiles = function _handleSelectedFiles(interaction, file, messageWrongType) {\r\n        var reader;\r\n        var $container = containerHelper.get(interaction);\r\n\r\n        // Show information about the processed file to the candidate.\r\n        var filename = file.name;\r\n        var filetype = mimetype.getMimeType(file);\r\n        instructionMgr.removeInstructions(interaction);\r\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\r\n\r\n        if (!validateFileType(file, interaction)) {\r\n            instructionMgr.removeInstructions(interaction);\r\n            instructionMgr.appendInstruction(\r\n                interaction,\r\n                getMessageWrongType(interaction, filetype, messageWrongType),\r\n                function () {\r\n                    this.setLevel('error');\r\n                    //clear preview\r\n                }\r\n            );\r\n            instructionMgr.validateInstructions(interaction);\r\n            return;\r\n        }\r\n\r\n        $container\r\n            .find('.file-name')\r\n            .empty()\r\n            .append(filename);\r\n\r\n        // Let's read the file to get its base64 encoded content.\r\n        reader = new FileReader();\r\n\r\n        // Update file processing progress.\r\n\r\n        reader.onload = function (e) {\r\n            var base64Data, commaPosition, base64Raw, $previewArea;\r\n\r\n            instructionMgr.removeInstructions(interaction);\r\n            instructionMgr.appendInstruction(interaction, _readyInstructions, function () {\r\n                this.setLevel('success');\r\n            });\r\n            instructionMgr.validateInstructions(interaction);\r\n\r\n            $container.find('.progressbar').progressbar('value', 100);\r\n\r\n            base64Data = e.target.result;\r\n            commaPosition = base64Data.indexOf(',');\r\n\r\n            // Store the base64 encoded data for later use.\r\n            base64Raw = base64Data.substring(commaPosition + 1);\r\n            interaction.data('_response', { base: { file: { data: base64Raw, mime: filetype, name: filename } } });\r\n\r\n            $previewArea = $container.find('.file-upload-preview');\r\n            $previewArea.previewer({\r\n                url: base64Data,\r\n                name: filename,\r\n                mime: filetype\r\n            });\r\n\r\n            // we wait for the image to be completely loaded\r\n            $previewArea.waitForMedia(function () {\r\n                var $originalImg = $previewArea.find('img'),\r\n                    $largeDisplay = $$1('.file-upload-preview-popup'),\r\n                    $item = $$1('.qti-item'),\r\n                    itemWidth = $item.width(),\r\n                    winWidth = $$1(window).width() - 80,\r\n                    fullHeight = $$1('body').height(),\r\n                    imgNaturalWidth,\r\n                    isOversized,\r\n                    modalWidth;\r\n\r\n                if (!$originalImg.length) {\r\n                    return;\r\n                }\r\n\r\n                imgNaturalWidth = $originalImg[0].naturalWidth;\r\n                isOversized = imgNaturalWidth > itemWidth;\r\n                modalWidth = Math.min(winWidth, imgNaturalWidth);\r\n\r\n                $previewArea.toggleClass('clickable', isOversized);\r\n\r\n                if (!isOversized) {\r\n                    return;\r\n                }\r\n\r\n                $previewArea.on('click', function () {\r\n                    var $modalBody;\r\n\r\n                    $$1('.upload-ia-modal-bg').remove();\r\n\r\n                    // remove any previous unnecessary content before inserting the preview image\r\n                    $modalBody = $largeDisplay.find('.modal-body');\r\n                    $modalBody.empty().append($originalImg.clone());\r\n\r\n                    $largeDisplay\r\n                        .on('opened.modal', function () {\r\n                            // prevents the rest of the page from scrolling when modal is open\r\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'hidden');\r\n\r\n                            $largeDisplay.css({\r\n                                width: modalWidth,\r\n                                height: fullHeight,\r\n                                left: (modalWidth - itemWidth - 40) / -2\r\n                            });\r\n                        })\r\n                        .on('closed.modal', function () {\r\n                            // make the page scrollable again\r\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'auto');\r\n                        })\r\n                        .modal({ modalOverlayClass: 'modal-bg upload-ia-modal-bg' });\r\n                });\r\n            });\r\n        };\r\n\r\n        reader.onloadstart = function onloadstart() {\r\n            instructionMgr.removeInstructions(interaction);\r\n            $container.find('.progressbar').progressbar('value', 0);\r\n        };\r\n\r\n        reader.onprogress = function onprogress(e) {\r\n            var percentProgress = Math.ceil((Math.round(e.loaded) / Math.round(e.total)) * 100);\r\n            $container.find('.progressbar').progressbar('value', percentProgress);\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    /**\r\n     * Resets the GUI state to the default display.\r\n     *\r\n     * @param {Object} interaction\r\n     */\r\n    function resetGui(interaction) {\r\n        var $container = containerHelper.get(interaction);\r\n        $container.find('.file-name').text(__('No file selected'));\r\n        $container.find('.btn-info').text(__('Browse...'));\r\n    }\r\n    function callResetGui(interaction) {\r\n        const renderer = interaction.getRenderer();\r\n        if (_.isFunction(renderer.resetGui)) {\r\n            renderer.resetGui(interaction);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Init rendering, called after template injected into the DOM\r\n     * All options are listed in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     */\r\n    function render(interaction) {\r\n        var changeListener,\r\n            self = this,\r\n            $input;\r\n        var $container = containerHelper.get(interaction);\r\n        callResetGui(interaction);\r\n\r\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\r\n\r\n        //init response\r\n        interaction.data('_response', { base: null });\r\n\r\n        changeListener = function (e) {\r\n            var file = e.target.files[0];\r\n\r\n            // Are you really sure something was selected\r\n            // by the user... huh? :)\r\n            if (typeof file !== 'undefined') {\r\n                _handleSelectedFiles(interaction, file, self.getCustomMessage('upload', 'wrongType'));\r\n            }\r\n        };\r\n\r\n        $input = $container.find('input');\r\n\r\n        $container.find('.progressbar').progressbar();\r\n\r\n        if (!window.FileReader) {\r\n            throw new Error('FileReader API not supported! Please use a compliant browser!');\r\n        }\r\n        $input.bind('change', changeListener);\r\n\r\n        // IE Specific hack, prevents button to slightly move on click\r\n        $input.bind('mousedown', function (e) {\r\n            e.preventDefault();\r\n            $$1(this).blur();\r\n            return false;\r\n        });\r\n    }\r\n    var resetResponse = function resetResponse(interaction) {\r\n        callResetGui(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the response to the rendered interaction.\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     * @param {object} response\r\n     */\r\n    var setResponse = function setResponse(interaction, response) {\r\n        var filename,\r\n            $container = containerHelper.get(interaction);\r\n\r\n        if (response.base !== null) {\r\n            filename =\r\n                typeof response.base.file.name !== 'undefined' ? response.base.file.name : 'previously-uploaded-file';\r\n            $container\r\n                .find('.file-name')\r\n                .empty()\r\n                .text(filename);\r\n        }\r\n\r\n        interaction.data('_response', response);\r\n    };\r\n\r\n    /**\r\n     * Return the response of the rendered interaction\r\n     *\r\n     * The response format follows the IMS PCI recommendation :\r\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\r\n     *\r\n     * Available base types are defined in the QTI v2.1 information model:\r\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\r\n     *\r\n     * @param {object} interaction\r\n     * @returns {object}\r\n     */\r\n    var getResponse = function getResponse(interaction) {\r\n        return interaction.data('_response');\r\n    };\r\n\r\n    var destroy = function destroy(interaction) {\r\n        //remove event\r\n        $$1(document).off('.commonRenderer');\r\n        containerHelper.get(interaction).off('.commonRenderer');\r\n\r\n        //remove instructions\r\n        instructionMgr.removeInstructions(interaction);\r\n\r\n        //remove all references to a cache container\r\n        containerHelper.reset(interaction);\r\n    };\r\n\r\n    /**\r\n     * Set the interaction state. It could be done anytime with any state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @param {Object} state - the interaction state\r\n     */\r\n    var setState = function setState(interaction, state) {\r\n        if (_.isObject(state)) {\r\n            if (state.response) {\r\n                interaction.resetResponse();\r\n                interaction.setResponse(state.response);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the interaction state.\r\n     *\r\n     * @param {Object} interaction - the interaction instance\r\n     * @returns {Object} the interaction current state\r\n     */\r\n    var getState = function getState(interaction) {\r\n        var state = {};\r\n        var response = interaction.getResponse();\r\n\r\n        if (response) {\r\n            state.response = response;\r\n        }\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Set additional data to the template (data that are not really part of the model).\r\n     * @param {Object} interaction - the interaction\r\n     * @param {Object} [data] - interaction custom data\r\n     * @returns {Object} custom data\r\n     * This way we could cover a lot more types. How could this be matched with the preview templates\r\n     * in tao/views/js/ui/previewer.js\r\n     */\r\n    var getCustomData = function getCustomData(interaction, data) {\r\n        return _.merge(data || {}, {\r\n            accept: uploadHelper.getExpectedTypes(interaction, true).join(',')\r\n        });\r\n    };\r\n\r\n    var UploadInteraction = {\r\n        qtiClass: 'uploadInteraction',\r\n        template: tpl,\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        setResponse: setResponse,\r\n        getResponse: getResponse,\r\n        resetResponse: resetResponse,\r\n        destroy: destroy,\r\n        setState: setState,\r\n        getState: getState,\r\n        getData: getCustomData,\r\n\r\n        // Exposed private methods for qtiCreator\r\n        resetGui: resetGui\r\n    };\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Item',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler'], function (Handlebars, __, _, DOMPurify, containerHelper, itemStylesheetHandler) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    itemStylesheetHandler = itemStylesheetHandler && Object.prototype.hasOwnProperty.call(itemStylesheetHandler, 'default') ? itemStylesheetHandler['default'] : itemStylesheetHandler;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-item tao-scope runtime\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <div\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-itemBody \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\r\\n    <div id=\\\"modalFeedbacks\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n     */\r\n\r\n    var Item = {\r\n        qtiClass: 'assessmentItem',\r\n        template: tpl,\r\n        getContainer: containerHelper.get,\r\n\r\n        /**\r\n         * Rendering initializations for the item\r\n         * @param {Object} item - the item model\r\n         */\r\n        render: function render(item) {\r\n            //target blank for all <a>\r\n            containerHelper.targetBlank(containerHelper.get(item));\r\n\r\n            //add stylesheets\r\n            itemStylesheetHandler.attach(item.stylesheets);\r\n        },\r\n\r\n        /**\r\n         * Unrender\r\n         * @param {Object} item - the item model\r\n         */\r\n        destroy: function destroy(item) {\r\n            //clear the container cache\r\n            containerHelper.clear();\r\n\r\n            //detach stylesheets\r\n            if (item.stylesheets) {\r\n                itemStylesheetHandler.detach(item.stylesheets);\r\n            }\r\n        }\r\n    };\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Math',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'mathJax'], function (Handlebars, __, _, DOMPurify, containerHelper, MathJax) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    MathJax = MathJax && Object.prototype.hasOwnProperty.call(MathJax, 'default') ? MathJax['default'] : MathJax;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math display=\\\"block\\\">\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math>\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.block), {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    // Do not wait between rendering each individual math element\r\n    // http://docs.mathjax.org/en/latest/api/hub.html\r\n    if (typeof MathJax !== 'undefined' && MathJax) {\r\n        MathJax.Hub.processSectionDelay = 0;\r\n    }\r\n\r\n    var _Math = {\r\n        qtiClass: 'math',\r\n        template: tpl,\r\n        getContainer: containerHelper.get,\r\n        render: function render(math) {\r\n            return new Promise(function (resolve) {\r\n                const $self = containerHelper.get(math);\r\n                if (typeof MathJax !== 'undefined' && MathJax) {\r\n                    //MathJax needs to be exported globally to integrate with tools like TTS, it's weird...\r\n                    if (!window.MathJax) {\r\n                        window.MathJax = MathJax;\r\n                    }\r\n                    //defer execution fix some rendering issue in chrome\r\n                    if ($self.length) {\r\n                        MathJax.Hub.Queue(['Typeset', MathJax.Hub, $self[0]]);\r\n                        MathJax.Hub.Queue(resolve);\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                } else {\r\n                    resolve();\r\n                }\r\n            });\r\n        }\r\n    };\n\n    return _Math;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA\r\n     **/\r\n\r\n    /**\r\n     * Prefix used to the variable storage\r\n     * @type String\r\n     */\r\n    var _prefix = 'x-tao-';\r\n\r\n    /**\r\n     * Check if the element is of a qti container type\r\n     *\r\n     * @private\r\n     * @param {Object} element\r\n     * @returns {Boolean}\r\n     */\r\n    function _checkContainerType(element) {\r\n        if (_.isFunction(element.initContainer) && _.isFunction(element.body)) {\r\n            return true;\r\n        } else {\r\n            throw 'the element is not of a container type';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the body element of the container\r\n     *\r\n     * @private\r\n     * @param {Object} element\r\n     * @returns {JQuery}\r\n     */\r\n    function _getBodyDom(element) {\r\n        if (_checkContainerType(element)) {\r\n            return $('<div>')\r\n                .html(element.body())\r\n                .find('.x-tao-wrapper');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a class to the body element of the qti container\r\n     *\r\n     * @private\r\n     * @param {Object} element\r\n     * @param {String} newClass\r\n     * @param {String} [oldClass]\r\n     */\r\n    function _setBodyDomClass(element, newClass, oldClass) {\r\n        if (_checkContainerType(element) && (oldClass || newClass)) {\r\n            var $wrapper = $('<div>').html(element.body());\r\n            //set css class to element\r\n            _setDomClass($wrapper, newClass, oldClass);\r\n            //set to the model\r\n            element.body($wrapper.html());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Switch class to the wrapped DOM\r\n     *\r\n     * @param {JQuery} $wrapper\r\n     * @param {String} newClass\r\n     * @param {String} oldClass\r\n     * @returns {undefined}\r\n     */\r\n    function _setDomClass($wrapper, newClass, oldClass) {\r\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\r\n        if (!$bodyDom.length) {\r\n            //create one\r\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\r\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\r\n        }\r\n        if (oldClass) {\r\n            $bodyDom.removeClass(oldClass);\r\n        }\r\n        if (newClass) {\r\n            $bodyDom.addClass(newClass);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add manually the encoded information to a dom element\r\n     *\r\n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\r\n     * @param {String} dataName - the name of the information\r\n     * @param {String} newValue - the new value to be added\r\n     * @param {String} [oldValue] - the old value to be removed\r\n     * @returns {undefined}\r\n     */\r\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue) {\r\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\r\n    }\r\n\r\n    /**\r\n     * Get the full variable name for the data store\r\n     *\r\n     * @param {String} dataName\r\n     * @param {String} value\r\n     * @returns {String}\r\n     */\r\n    function _getEncodedDataString(dataName, value) {\r\n        if (dataName && value) {\r\n            return _prefix + dataName + '-' + value;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Set a data string to the element identified by its dataName\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @param {String} newValue\r\n     * @returns {undefined}\r\n     */\r\n    function setEncodedData(element, dataName, newValue) {\r\n        var oldValue = getEncodedData(element, dataName);\r\n        return _setBodyDomClass(\r\n            element,\r\n            _getEncodedDataString(dataName, newValue),\r\n            _getEncodedDataString(dataName, oldValue)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Remove the stored data from the element by its dataName\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @returns {unresolved}\r\n     */\r\n    function removeEncodedData(element, dataName) {\r\n        var oldValue = getEncodedData(element, dataName);\r\n        if (dataName && oldValue) {\r\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the stored data exist\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @param {String} value\r\n     * @returns {Boolean}\r\n     */\r\n    function hasEncodedData(element, dataName, value) {\r\n        var $body = _getBodyDom(element);\r\n        if ($body && $body.length && dataName && value) {\r\n            return $body.hasClass(_getEncodedDataString(dataName, value));\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Get the encoded data identified by its dataName\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @returns {String}\r\n     */\r\n    function getEncodedData(element, dataName) {\r\n        var regex, matches;\r\n        var $body = _getBodyDom(element);\r\n        if (dataName && $body && $body.length && $body.attr('class')) {\r\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9-._]*)');\r\n            matches = $body.attr('class').match(regex);\r\n            if (matches) {\r\n                return matches[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\r\n     */\r\n    var container = {\r\n        setEncodedData: setEncodedData,\r\n        hasEncodedData: hasEncodedData,\r\n        getEncodedData: getEncodedData,\r\n        removeEncodedData: removeEncodedData,\r\n        setEncodedDataToDom: setEncodedDataToDom\r\n    };\n\n    return container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',['lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiItem/helper/container', 'ui/waitForMedia', 'ui/modal'], function (_, Handlebars, __, DOMPurify, containerHelper, coreContainerHelper, waitForMedia, modal) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    coreContainerHelper = coreContainerHelper && Object.prototype.hasOwnProperty.call(coreContainerHelper, 'default') ? coreContainerHelper['default'] : coreContainerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"modal \";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"<h2 class=\\\"qti-title modal-title\\\">\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"</h2>\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.inline), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"qti-modalFeedback \";\n      if (helper = helpers.feedbackStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.feedbackStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"modal-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\r\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var modalFeedbackRenderer = {\r\n        qtiClass: 'modalFeedback',\r\n        template: tpl,\r\n        getContainer: containerHelper.get,\r\n        width: 600,\r\n        getData: function(fb, data) {\r\n            data.feedbackStyle = coreContainerHelper.getEncodedData(fb, 'modalFeedback');\r\n            return data;\r\n        },\r\n        render: function(modalFeedback, data) {\r\n            var $modal = containerHelper.get(modalFeedback);\r\n\r\n            $modal.waitForMedia(function() {\r\n                //when we are sure that media is loaded:\r\n                $modal\r\n                    .on('opened.modal', function() {\r\n                        //set item body height\r\n                        var $itemBody = containerHelper.get(modalFeedback.getRootElement()).children('.qti-itemBody');\r\n                        var requiredHeight = $modal.outerHeight() + parseInt($modal.css('top'));\r\n                        if (requiredHeight > $itemBody.height()) {\r\n                            $itemBody.height(requiredHeight);\r\n                        }\r\n                    })\r\n                    .on('closed.modal', function() {\r\n                        data = data || {};\r\n\r\n                        if (_.isFunction(data.callback)) {\r\n                            data.callback.call(this);\r\n                        }\r\n                    })\r\n                    .modal({\r\n                        startClosed: false,\r\n                        minHeight: modalFeedbackRenderer.minHeight,\r\n                        width: modalFeedbackRenderer.width\r\n                    });\r\n            });\r\n        }\r\n    };\n\n    return modalFeedbackRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Object',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/previewer'], function (Handlebars, __, _, DOMPurify, containerHelper, previewer) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-object-container\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA\r\n     */\r\n\r\n    var _Object = {\r\n        qtiClass: 'object',\r\n        template: tpl,\r\n        getContainer: containerHelper.get,\r\n        render: function(obj) {\r\n            var $container = containerHelper.get(obj);\r\n            var previewOptions = {\r\n                url: obj.renderer.resolveUrl(obj.attr('data')),\r\n                mime: obj.attr('type')\r\n            };\r\n            if (obj.attr('height')) {\r\n                previewOptions.height = obj.attr('height');\r\n            }\r\n            if (obj.attr('width')) {\r\n                previewOptions.width = obj.attr('width');\r\n            }\r\n            if (previewOptions.url && previewOptions.mime) {\r\n                $container.previewer(previewOptions);\r\n            }\r\n        }\r\n    };\n\n    return _Object;\n\n});\n\n","define('qtiInfoControlContext',[],function(){\n\n    //need a global reference to have picHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._picHooks = window._picHooks || {};\n\n    /**\n     * Global object accessible by all PICs\n     *\n     * @type Object\n     */\n    var taoQtiInfoControlContext = {\n        /**\n         * register a info control (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} picHook\n         * @returns {undefined}\n         */\n        register : function(picHook){\n            //@todo check picHook validity\n            window._picHooks[picHook.getTypeIdentifier()] = picHook;\n        },\n        /**\n         * notify when a info control is ready for test taker interaction\n         *\n         * @param {string} picInstance\n         * @fires custominteractionready\n         */\n        notifyReady : function(picInstance){\n            //@todo add pciInstance as event data and notify event to delivery engine\n        },\n        /**\n         * Get a cloned object representing the PIC model\n         *\n         * @param {string} typeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance : function(typeIdentifier){\n\n            if(window._picHooks[typeIdentifier]){\n\n                var instance = {},\n                    proto = window._picHooks[typeIdentifier];\n\n                for(var name in proto){\n                    if(typeof proto[name] === 'function'){\n                        //@todo : delegate function call for better performance ?\n                        instance[name] = proto[name];\n                    }else if(proto[name] !== null && typeof proto[name] === 'object'){\n                        //a plain object:\n                        instance[name] = proto[name].constructor();\n                    }else{\n                        //not an object (nor a function) : e.g. 0, 123, '123', null, undefined\n                        instance[name] = proto[name];\n                    }\n                }\n\n                return instance;\n\n            }else{\n                throw 'no portable info control hook found with the id ' + typeIdentifier;\n            }\n        }\n    };\n\n\n    return taoQtiInfoControlContext;\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',['lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'qtiInfoControlContext', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/icRegistry'], function (_, Handlebars, __, DOMPurify, containerHelper, PortableElement, qtiInfoControlContext, util, icRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    qtiInfoControlContext = qtiInfoControlContext && Object.prototype.hasOwnProperty.call(qtiInfoControlContext, 'default') ? qtiInfoControlContext['default'] : qtiInfoControlContext;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-infoControl\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Get the PIC instance associated to the infoControl object\r\n     * If none exists, create a new one based on the PIC typeIdentifier\r\n     *\r\n     * @param {Object} infoControl - the js object representing the infoControl\r\n     * @returns {Object} PIC instance\r\n     */\r\n    var _getPic = function(infoControl) {\r\n        var typeIdentifier,\r\n            pic = infoControl.data('pic') || undefined;\r\n\r\n        if (!pic) {\r\n            typeIdentifier = infoControl.typeIdentifier;\r\n            pic = qtiInfoControlContext.createPciInstance(typeIdentifier);\r\n\r\n            if (pic) {\r\n                //binds the PIC instance to TAO infoControl object and vice versa\r\n                infoControl.data('pic', pic);\r\n                pic._taoInfoControl = infoControl;\r\n            } else {\r\n                throw 'no custom infoControl hook found for the type ' + typeIdentifier;\r\n            }\r\n        }\r\n\r\n        return pic;\r\n    };\r\n\r\n    /**\r\n     * Execute javascript codes to bring the infoControl to life.\r\n     * At this point, the html markup must already be ready in the document.\r\n     *\r\n     * It is done in 5 steps :\r\n     * 1. ensure the context is configured correctly\r\n     * 2. require all required libs\r\n     * 3. create a pic instance based on the infoControl model\r\n     * 4. initialize the rendering\r\n     * 5. restore full state if applicable\r\n     *\r\n     * @param {Object} infoControl\r\n     * @param {Object} [options]\r\n     */\r\n    var render = function(infoControl, options) {\r\n        var self = this;\r\n        return new Promise(function(resolve, reject) {\r\n            var state = {}; //@todo pass state and response to renderer here:\r\n            var id = infoControl.attr('id');\r\n            var typeIdentifier = infoControl.typeIdentifier;\r\n            var config = infoControl.properties;\r\n            var $dom = containerHelper.get(infoControl).children();\r\n            var assetManager = self.getAssetManager();\r\n\r\n            icRegistry\r\n                .loadRuntimes()\r\n                .then(function() {\r\n                    var requireEntries = [];\r\n                    var runtime = icRegistry.getRuntime(typeIdentifier);\r\n\r\n                    if (!runtime) {\r\n                        return reject('The runtime for the pic cannot be found : ' + typeIdentifier);\r\n                    }\r\n\r\n                    //load the entrypoint, becomes optional per IMS PCI v1\r\n                    if (runtime.hook) {\r\n                        requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\r\n                    }\r\n\r\n                    //load required libraries\r\n                    _.forEach(runtime.libraries, function(module) {\r\n                        requireEntries.push(module.replace(/\\.js$/, ''));\r\n                    });\r\n\r\n                    //load stylesheets\r\n                    _.forEach(runtime.stylesheets, function(stylesheet) {\r\n                        requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\r\n                    });\r\n\r\n                    //load the entrypoint\r\n                    window.require(requireEntries, function() {\r\n                        var pic = _getPic(infoControl);\r\n                        var picAssetManager = {\r\n                            resolve: function resolve(url) {\r\n                                var resolved = assetManager.resolveBy('portableElementLocation', url);\r\n                                if (resolved === url) {\r\n                                    return assetManager.resolveBy('baseUrl', url);\r\n                                } else {\r\n                                    return resolved;\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        if (pic) {\r\n                            //call pic initialize() to render the pic\r\n                            pic.initialize(id, $dom[0], config, picAssetManager);\r\n                            //restore context (state + response)\r\n                            pic.setSerializedState(state);\r\n\r\n                            return resolve();\r\n                        }\r\n\r\n                        return reject('Unable to initialize pic : ' + id);\r\n                    }, reject);\r\n                })\r\n                .catch(function(error) {\r\n                    reject('Error loading runtime : ' + id);\r\n                });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Reverse operation performed by render()\r\n     * After this function is executed, only the inital naked markup remains\r\n     * Event listeners are removed and the state and the response are reset\r\n     *\r\n     * @param {Object} infoControl\r\n     */\r\n    var destroy = function destroy(infoControl) {\r\n        _getPic(infoControl).destroy();\r\n    };\r\n\r\n    /**\r\n     * Restore the state of the infoControl from the serializedState.\r\n     *\r\n     * @param {Object} infoControl - the element instance\r\n     * @param {Object} state - the state to set\r\n     */\r\n    var setState = function setState(infoControl, state) {\r\n        _getPic(infoControl).setSerializedState(state);\r\n    };\r\n\r\n    /**\r\n     * Get the current state of the infoControl as a string.\r\n     * It enables saving the state for later usage.\r\n     *\r\n     * @param {Object} infoControl - the element instance\r\n     * @returns {Object} the state\r\n     */\r\n    var getState = function getState(infoControl) {\r\n        return _getPic(infoControl).getSerializedState();\r\n    };\r\n\r\n    var PortableInfoControl = {\r\n        qtiClass: 'infoControl',\r\n        template: tpl,\r\n        getData: function(infoControl, data) {\r\n            //remove ns + fix media file path\r\n            var markup = data.markup;\r\n            markup = util.removeMarkupNamespaces(markup);\r\n            markup = PortableElement.fixMarkupMediaSources(markup, this);\r\n            data.markup = markup;\r\n            return data;\r\n        },\r\n        render: render,\r\n        getContainer: containerHelper.get,\r\n        destroy: destroy,\r\n        getState: getState,\r\n        setState: setState\r\n    };\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"printedVariable\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    \";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     */\r\n\r\n    var PrintedVariable = {\r\n        qtiClass: 'printedVariable',\r\n        template: tpl,\r\n        getContainer: containerHelper.get\r\n    };\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function (_, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\r\n     * Common helper functions\r\n     */\r\n    var interactionHelper = {\r\n        convertChoices: function(choices, outputType) {\r\n            var ret = [],\r\n                _this = this;\r\n\r\n            _.each(choices, function(c) {\r\n                if (Element.isA(c, 'choice')) {\r\n                    switch (outputType) {\r\n                        case 'serial':\r\n                            ret.push(c.getSerial());\r\n                            break;\r\n                        case 'identifier':\r\n                            ret.push(c.id());\r\n                            break;\r\n                        default:\r\n                            ret.push(c);\r\n                    }\r\n                } else if (_.isArray(c)) {\r\n                    ret.push(_this.convertChoices(c, outputType));\r\n                }\r\n            });\r\n\r\n            return ret;\r\n        },\r\n        findChoices: function(interaction, choices, inputType) {\r\n            var ret = [],\r\n                _this = this;\r\n\r\n            _.each(choices, function(c) {\r\n                var choice;\r\n                if (_.isString(c)) {\r\n                    if (inputType === 'serial') {\r\n                        choice = interaction.getChoice(c);\r\n                        if (choice) {\r\n                            ret.push(choice);\r\n                        }\r\n                    } else if (inputType === 'identifier') {\r\n                        choice = interaction.getChoiceByIdentifier(c);\r\n                        if (choice) {\r\n                            ret.push(choice);\r\n                        }\r\n                    } else {\r\n                        ret.push(c);\r\n                    }\r\n                } else if (_.isArray(c)) {\r\n                    ret.push(_this.findChoices(interaction, c, inputType));\r\n                } else {\r\n                    ret.push(c);\r\n                }\r\n            });\r\n\r\n            return ret;\r\n        },\r\n        shuffleChoices: function(choices) {\r\n            var r = [], //returned array\r\n                f = {}, //fixed choices array\r\n                j = 0;\r\n\r\n            for (var i in choices) {\r\n                if (Element.isA(choices[i], 'choice')) {\r\n                    var choice = choices[i];\r\n                    if (choice.attr('fixed')) {\r\n                        f[j] = choice;\r\n                    }\r\n                    r.push(choice);\r\n                    j++;\r\n                } else {\r\n                    throw 'invalid element in array: is not a qti choice';\r\n                }\r\n            }\r\n\r\n            for (var n = 0; n < r.length - 1; n++) {\r\n                if (f[n]) {\r\n                    continue;\r\n                }\r\n                var k = -1;\r\n                do {\r\n                    k = n + Math.floor(Math.random() * (r.length - n));\r\n                } while (f[k]);\r\n                var tmp = r[k];\r\n                r[k] = r[n];\r\n                r[n] = tmp;\r\n            }\r\n\r\n            return r;\r\n        },\r\n        serialToIdentifier: function(interaction, choiceSerial) {\r\n            var choice = interaction.getChoice(choiceSerial);\r\n            if (choice) {\r\n                return choice.id();\r\n            } else {\r\n                return '';\r\n            }\r\n        }\r\n    };\n\n    return interactionHelper;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/Renderer',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/interactionHelper', 'ui/themeLoader', 'ui/themes', 'core/moduleLoader', 'handlebars'], function (_, $, Element, interactionHelper, themeLoader, themesHelper, moduleLoader, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    interactionHelper = interactionHelper && Object.prototype.hasOwnProperty.call(interactionHelper, 'default') ? interactionHelper['default'] : interactionHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n    themesHelper = themesHelper && Object.prototype.hasOwnProperty.call(themesHelper, 'default') ? themesHelper['default'] : themesHelper;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    //webpack trick : handlebar is usale only from cjs.\r\n    //but anyway we should deprecate the practice to invoke\r\n    //directly Handlebars at runtimej\r\n    let hb = Handlebars;\r\n    if(typeof hb.compile !== 'function'){\r\n        hb = require('handlebars');\r\n    }\r\n\r\n    const _renderableClasses = [\r\n        '_container',\r\n        'assessmentItem',\r\n        'stylesheet',\r\n        'responseDeclaration',\r\n        'outcomeDeclaration',\r\n        'responseProcessing',\r\n        '_simpleFeedbackRule',\r\n        '_tooltip',\r\n        'figure',\r\n        'img',\r\n        'figcaption',\r\n        'math',\r\n        'object',\r\n        'table',\r\n        'modalFeedback',\r\n        'rubricBlock',\r\n        'associateInteraction',\r\n        'choiceInteraction',\r\n        'extendedTextInteraction',\r\n        'gapMatchInteraction',\r\n        'graphicAssociateInteraction',\r\n        'graphicGapMatchInteraction',\r\n        'graphicOrderInteraction',\r\n        'hotspotInteraction',\r\n        'hottextInteraction',\r\n        'inlineChoiceInteraction',\r\n        'matchInteraction',\r\n        'mediaInteraction',\r\n        'orderInteraction',\r\n        'selectPointInteraction',\r\n        'sliderInteraction',\r\n        'textEntryInteraction',\r\n        'uploadInteraction',\r\n        'endAttemptInteraction',\r\n        'customInteraction',\r\n        'prompt',\r\n        'associableHotspot',\r\n        'gap',\r\n        'gapImg',\r\n        'gapText',\r\n        'hotspotChoice',\r\n        'hottext',\r\n        'inlineChoice',\r\n        'simpleAssociableChoice',\r\n        'simpleChoice',\r\n        'infoControl',\r\n        'include',\r\n        'printedVariable'\r\n    ];\r\n\r\n    /**\r\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\r\n     */\r\n    const _dependencies = {\r\n        assessmentItem: ['stylesheet', '_container', 'prompt', 'modalFeedback'],\r\n        rubricBlock: ['_container'],\r\n        associateInteraction: ['simpleAssociableChoice'],\r\n        choiceInteraction: ['simpleChoice'],\r\n        gapMatchInteraction: ['gap', 'gapText'],\r\n        graphicAssociateInteraction: ['associableHotspot'],\r\n        graphicGapMatchInteraction: ['associableHotspot', 'gapImg'],\r\n        graphicOrderInteraction: ['hotspotChoice'],\r\n        hotspotInteraction: ['hotspotChoice'],\r\n        hottextInteraction: ['hottext'],\r\n        inlineChoiceInteraction: ['inlineChoice'],\r\n        matchInteraction: ['simpleAssociableChoice'],\r\n        orderInteraction: ['simpleChoice']\r\n    };\r\n\r\n    /**\r\n     * The list of supported qti subclasses.\r\n     */\r\n    const _renderableSubclasses = {\r\n        simpleAssociableChoice: ['associateInteraction', 'matchInteraction'],\r\n        simpleChoice: ['choiceInteraction', 'orderInteraction']\r\n    };\r\n\r\n    /**\r\n     * List of the default properties for the item\r\n     */\r\n    const _defaults = {\r\n        shuffleChoices: true\r\n    };\r\n\r\n    const _isValidRenderer = function(renderer) {\r\n        let valid = true;\r\n\r\n        if (typeof renderer !== 'object') {\r\n            return false;\r\n        }\r\n\r\n        let classCorrect = false;\r\n        if (renderer.qtiClass) {\r\n            if (_.indexOf(_renderableClasses, renderer.qtiClass) >= 0) {\r\n                classCorrect = true;\r\n            } else {\r\n                const pos = renderer.qtiClass.indexOf('.');\r\n                if (pos > 0) {\r\n                    const qtiClass = renderer.qtiClass.slice(0, pos);\r\n                    const subClass = renderer.qtiClass.slice(pos + 1);\r\n                    if (_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0) {\r\n                        classCorrect = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!classCorrect) {\r\n            valid = false;\r\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\r\n        }\r\n\r\n        if (!renderer.template) {\r\n            valid = false;\r\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    /**\r\n     * Get the location of the document, useful to define a baseUrl for the required context\r\n     * @returns {String}\r\n     */\r\n    function getDocumentBaseUrl() {\r\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\r\n    }\r\n\r\n    /**\r\n     * The built Renderer class\r\n     * @constructor\r\n     * @param {Object} [options] - the renderer options\r\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\r\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\r\n     * @param {Object} [options.decorators] - to set up rendering decorator\r\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\r\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\r\n     */\r\n    const Renderer = function(options) {\r\n        /**\r\n         * Store the registered renderer location\r\n         */\r\n        const _locations = {};\r\n\r\n        /**\r\n         * Store loaded renderers\r\n         */\r\n        const _renderers = {};\r\n\r\n        options = _.defaults(options || {}, _defaults);\r\n\r\n        this.isRenderer = true;\r\n\r\n        this.name = '';\r\n\r\n        //store shuffled choice here\r\n        this.shuffledChoices = [];\r\n\r\n        /**\r\n         * Get the actual renderer of the give qti class or subclass:\r\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\r\n         */\r\n        const _getClassRenderer = function(qtiClass) {\r\n            let ret = null;\r\n            if (_renderers[qtiClass]) {\r\n                ret = _renderers[qtiClass];\r\n            } else {\r\n                const pos = qtiClass.indexOf('.');\r\n                if (pos > 0) {\r\n                    qtiClass = qtiClass.slice(0, pos);\r\n                    if (_renderers[qtiClass]) {\r\n                        ret = _renderers[qtiClass];\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Registers a QTI renderer class\r\n         * @param {String} qtiClass\r\n         * @param {Array} list\r\n         * @returns {Boolean} `true` if the class has been successfully registered\r\n         */\r\n        function registerRendererClass(qtiClass, list) {\r\n            let success = false;\r\n            if (_locations[qtiClass] === false) {\r\n                //mark this class as not renderable\r\n                _renderers[qtiClass] = false;\r\n                success = true;\r\n            } else if (_locations[qtiClass]) {\r\n                list.push(_locations[qtiClass]);\r\n                success = true;\r\n            }\r\n            return success;\r\n        }\r\n\r\n        /**\r\n         * Set the renderer options\r\n         * @param {String} key - the name of the option\r\n         * @param {*} value - the option vallue\r\n         * @returns {Renderer} for chaining\r\n         */\r\n        this.setOption = function(key, value) {\r\n            if (typeof key === 'string') {\r\n                options[key] = value;\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Set the renderer options\r\n         * @param {Object} opts - the options\r\n         * @returns {Renderer} for chaining\r\n         */\r\n        this.setOptions = function(opts) {\r\n            options = _.extend(options, opts);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Get the renderer option\r\n         * @param {String} key - the name of the option\r\n         * @returns {*|null} the option vallue\r\n         */\r\n        this.getOption = function(key) {\r\n            if (typeof key === 'string' && options[key]) {\r\n                return options[key];\r\n            }\r\n            return null;\r\n        };\r\n\r\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey) {\r\n            const messages = this.getOption('messages');\r\n            if (messages && elementName && messages[elementName] && _.isString(messages[elementName][messageKey])) {\r\n                //currently not translatable but potentially could be if the need raises\r\n                return hb.compile(messages[elementName][messageKey]);\r\n            } else {\r\n                return null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the bound assetManager\r\n         * @returns {AssetManager} the assetManager\r\n         */\r\n        this.getAssetManager = function getAssetManager() {\r\n            return options.assetManager;\r\n        };\r\n\r\n        /**\r\n         * Get the bound theme loader\r\n         * @returns {Object} the themeLoader\r\n         */\r\n        this.getThemeLoader = function getThemeLoader() {\r\n            return this.themeLoader;\r\n        };\r\n\r\n        /**\r\n         * Renders the template\r\n         * @param {Object} element - the QTI model element\r\n         * @param {Object} data - the data to give to the template\r\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n         * @returns {String} the template results\r\n         * @throws {Error} if the renderer is not set or has no template bound\r\n         */\r\n        this.renderTpl = function(element, data, qtiSubclass) {\r\n            let res;\r\n            let ret = '';\r\n            const qtiClass = qtiSubclass || element.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n            const decorators = this.getOption('decorators');\r\n\r\n            if (!renderer || !_.isFunction(renderer.template)) {\r\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\r\n            }\r\n\r\n            //pre rendering decoration\r\n            if (_.isObject(decorators) && _.isFunction(decorators.before)) {\r\n                /**\r\n                 * @callback preRenderDecoractor\r\n                 * @param {Object} element - the QTI model element\r\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n                 * @returns {String} the decorator result\r\n                 */\r\n                res = decorators.before(element, qtiSubclass);\r\n                if (_.isString(res)) {\r\n                    ret += res;\r\n                }\r\n            }\r\n\r\n            //render the template\r\n            ret += renderer.template(data);\r\n\r\n            //post rendering decoration\r\n            if (_.isObject(decorators) && _.isFunction(decorators.after)) {\r\n                /**\r\n                 * @callback postRenderDecoractor\r\n                 * @param {Object} element - the QTI model element\r\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n                 * @returns {String} the decorator result\r\n                 */\r\n                res = decorators.after(element, qtiSubclass);\r\n                if (_.isString(res)) {\r\n                    ret += res;\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getData = function(element, data, qtiSubclass) {\r\n            let ret = data;\r\n            const qtiClass = qtiSubclass || element.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.getData === 'function') {\r\n                    ret = renderer.getData.call(this, element, data);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        };\r\n\r\n        this.renderDirect = function(tpl, data) {\r\n            return hb.compile(tpl)(data);\r\n        };\r\n\r\n        this.getContainer = function(qtiElement, $scope, qtiSubclass) {\r\n            let ret = null;\r\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                ret = renderer.getContainer(qtiElement, $scope);\r\n            } else {\r\n                throw new Error('no renderer found for the class : ' + qtiElement.qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.postRender = function(qtiElement, data, qtiSubclass) {\r\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer && typeof renderer.render === 'function') {\r\n                return renderer.render.call(this, qtiElement, data);\r\n            }\r\n        };\r\n\r\n        this.setResponse = function(qtiInteraction, response, qtiSubclass) {\r\n            let ret = false;\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.setResponse === 'function') {\r\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\r\n                    const $container = renderer.getContainer.call(this, qtiInteraction);\r\n                    if ($container instanceof $ && $container.length) {\r\n                        $container.trigger('responseSet', [qtiInteraction, response]);\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getResponse = function(qtiInteraction, qtiSubclass) {\r\n            let ret = false;\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.getResponse === 'function') {\r\n                    ret = renderer.getResponse.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.resetResponse = function(qtiInteraction, qtiSubclass) {\r\n            let ret = false;\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.resetResponse === 'function') {\r\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Retrieve the state of the interaction.\r\n         * If the renderer has no state management, it falls back to the response management.\r\n         *\r\n         * @param {Object} qtiInteraction - the interaction\r\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\r\n         * @returns {Object} the interaction's state\r\n         *\r\n         * @throws {Error} if no renderer is registered\r\n         */\r\n        this.getState = function(qtiInteraction, qtiSubclass) {\r\n            let ret = false;\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.getState)) {\r\n                    ret = renderer.getState.call(this, qtiInteraction);\r\n                } else {\r\n                    ret = renderer.getResponse.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Retrieve the state of the interaction.\r\n         * If the renderer has no state management, it falls back to the response management.\r\n         *\r\n         * @param {Object} qtiInteraction - the interaction\r\n         * @param {Object} state - the interaction's state\r\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\r\n         *\r\n         * @throws {Error} if no renderer is found\r\n         */\r\n        this.setState = function(qtiInteraction, state, qtiSubclass) {\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.setState)) {\r\n                    renderer.setState.call(this, qtiInteraction, state);\r\n                } else {\r\n                    renderer.resetResponse.call(this, qtiInteraction);\r\n                    renderer.setResponse.call(this, qtiInteraction, state);\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Calls the renderer destroy.\r\n         * Ask the renderer to run destroy if exists.\r\n         *\r\n         * @throws {Error} if no renderer is found\r\n         */\r\n        this.destroy = function(qtiInteraction, qtiSubclass) {\r\n            let ret = false;\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.destroy)) {\r\n                    ret = renderer.destroy.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getLoadedRenderers = function() {\r\n            return _renderers;\r\n        };\r\n\r\n        this.register = function(renderersLocations) {\r\n            _.extend(_locations, renderersLocations);\r\n        };\r\n\r\n        this.load = function(callback, requiredClasses) {\r\n            const self = this;\r\n            let required = [];\r\n\r\n            const themeData = themesHelper.getCurrentThemeData();\r\n            if (themeData) {\r\n                options.themes = themeData;\r\n            }\r\n            if (options.themes) {\r\n                //resolve themes paths\r\n                options.themes.base = this.resolveUrl(options.themes.base);\r\n                _.forEach(options.themes.available, function(theme, index) {\r\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\r\n                });\r\n                this.themeLoader = themeLoader(options.themes).load(options.preload);\r\n            }\r\n\r\n            if (requiredClasses) {\r\n                if (_.isArray(requiredClasses)) {\r\n                    //exclude abstract classes\r\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\r\n\r\n                    //add dependencies\r\n                    _.each(requiredClasses, function(reqClass) {\r\n                        const deps = _dependencies[reqClass];\r\n                        if (deps) {\r\n                            requiredClasses = _.union(requiredClasses, deps);\r\n                        }\r\n                    });\r\n\r\n                    _.forEach(requiredClasses, function(qtiClass) {\r\n                        let requiredSubClasses;\r\n                        if (_renderableSubclasses[qtiClass]) {\r\n                            requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\r\n                            _.each(requiredSubClasses, function(subclass) {\r\n                                if (\r\n                                    !registerRendererClass(qtiClass + '.' + subclass, required) &&\r\n                                    !registerRendererClass(qtiClass, required)\r\n                                ) {\r\n                                    throw new Error(\r\n                                        self.name +\r\n                                            ' : missing qti class location declaration: ' +\r\n                                            qtiClass +\r\n                                            ', subclass: ' +\r\n                                            subclass\r\n                                    );\r\n                                }\r\n                            });\r\n                        } else {\r\n                            if (!registerRendererClass(qtiClass, required)) {\r\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\r\n                }\r\n            } else {\r\n                required = _.values(_locations);\r\n            }\r\n\r\n            moduleLoader([], ()=> true)\r\n                .addList( required.map( module => ({ module, category: 'qti'}) ) )\r\n                .load()\r\n                .then( loaded => {\r\n                    loaded.forEach( clazz => {\r\n                        if (_isValidRenderer(clazz)) {\r\n                            _renderers[clazz.qtiClass] = clazz;\r\n                        }\r\n\r\n                    });\r\n                    if (typeof callback === 'function') {\r\n                        callback.call(self, _renderers);\r\n                    }\r\n                });\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Unload the renderer\r\n         */\r\n        this.unload = function unload() {\r\n            if (this.themeLoader) {\r\n                themeLoader(options.themes).unload();\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Define the shuffling manually\r\n         *\r\n         * @param {Object} interaction - the interaction\r\n         * @param {Array} choices - the shuffled choices\r\n         * @param {String} identificationType -\r\n         */\r\n        this.setShuffledChoices = function(interaction, choices, identificationType) {\r\n            if (Element.isA(interaction, 'interaction')) {\r\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(\r\n                    interactionHelper.findChoices(interaction, choices, identificationType),\r\n                    'serial'\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the choices shuffled for this interaction.\r\n         *\r\n         * @param {Object} interaction - the interaction\r\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\r\n         * @param {String} returnedType - the choice type\r\n         * @returns {Array} the choices\r\n         */\r\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType) {\r\n            let choices = [];\r\n            let serial, i;\r\n\r\n            if (Element.isA(interaction, 'interaction')) {\r\n                serial = interaction.getSerial();\r\n\r\n                //1st time, we shuffle (or asked to force shuffling)\r\n                if (!this.shuffledChoices[serial] || reshuffle) {\r\n                    if (Element.isA(interaction, 'matchInteraction')) {\r\n                        this.shuffledChoices[serial] = [];\r\n                        for (i = 0; i < 2; i++) {\r\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\r\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\r\n                        }\r\n                    } else {\r\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\r\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\r\n                    }\r\n\r\n                    //otherwise get the choices from the serials\r\n                } else {\r\n                    if (Element.isA(interaction, 'matchInteraction')) {\r\n                        _.forEach(choices, function(choice, index) {\r\n                            if (index < 2) {\r\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial) {\r\n                                    choice.push(interaction.getChoice(choiceSerial));\r\n                                });\r\n                            }\r\n                        });\r\n                    } else {\r\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial) {\r\n                            choices.push(interaction.getChoice(choiceSerial));\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //do some type convertion\r\n                if (returnedType === 'serial' || returnedType === 'identifier') {\r\n                    return interactionHelper.convertChoices(choices, returnedType);\r\n                }\r\n\r\n                //pass value only, not ref\r\n                return _.clone(choices);\r\n            }\r\n\r\n            return [];\r\n        };\r\n\r\n        this.getRenderers = function() {\r\n            return _renderers;\r\n        };\r\n\r\n        this.getLocations = function() {\r\n            return _locations;\r\n        };\r\n\r\n        /**\r\n         * Resolve URLs using the defined assetManager's strategies\r\n         * @param {String} url - the URL to resolve\r\n         * @returns {String} the resolved URL\r\n         */\r\n        this.resolveUrl = function resolveUrl(url) {\r\n            if (!options.assetManager) {\r\n                return url;\r\n            }\r\n            if (typeof url === 'string' && url.length > 0) {\r\n                return options.assetManager.resolve(url);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @deprecated in favor of resolveUrl\r\n         */\r\n        this.getAbsoluteUrl = function(relUrl) {\r\n            //let until method is removed\r\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\r\n\r\n            //allow relative url output only if explicitely said so\r\n            if (this.getOption('userRelativeUrl')) {\r\n                return relUrl.replace(/^\\.?\\//, '');\r\n            }\r\n\r\n            if (/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)) {\r\n                //already absolute or base64 encoded\r\n                return relUrl;\r\n            } else {\r\n                let absUrl = '';\r\n                const runtimeLocations = this.getOption('runtimeLocations');\r\n\r\n                if (runtimeLocations && _.size(runtimeLocations)) {\r\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier) {\r\n                        if (relUrl.indexOf(typeIdentifier) === 0) {\r\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\r\n                            return false; //break\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (absUrl) {\r\n                    return absUrl;\r\n                } else {\r\n                    const baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\r\n                    return baseUrl + relUrl;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\r\n            this._areaBroker = areaBroker;\r\n        };\r\n\r\n        this.getAreaBroker = function getAreaBroker() {\r\n            if (this._areaBroker) {\r\n                return this._areaBroker;\r\n            }\r\n        };\r\n\r\n        this.getItemCreator = function getItemCreator() {\r\n            return this.getOption('itemCreator');\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Expose the renderer's factory\r\n     * @exports taoQtiItem/qtiRunner/core/Renderer\r\n     */\r\n    var Renderer$1 = {\r\n        /**\r\n         * Creates a new Renderer by extending the Renderer's prototype\r\n         * @param {Object} renderersLocations -\r\n         * @param {String} [name] - the new renderer name\r\n         * @param {Object} [defaultOptions] - the renderer options\r\n         */\r\n        build: function(renderersLocations, name, defaultOptions) {\r\n            const NewRenderer = function() {\r\n                const options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\r\n\r\n                Renderer.apply(this);\r\n\r\n                this.register(renderersLocations);\r\n                this.name = name || '';\r\n                this.setOptions(_.defaults(options, defaultOptions || {}));\r\n            };\r\n            NewRenderer.prototype = Renderer.prototype;\r\n            return NewRenderer;\r\n        }\r\n    };\n\n    return Renderer$1;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/**\r\n\t * This program is free software; you can redistribute it and/or\r\n\t * modify it under the terms of the GNU General Public License\r\n\t * as published by the Free Software Foundation; under version 2\r\n\t * of the License (non-upgradable).\r\n\t *\r\n\t * This program is distributed in the hope that it will be useful,\r\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\t * GNU General Public License for more details.\r\n\t *\r\n\t * You should have received a copy of the GNU General Public License\r\n\t * along with this program; if not, write to the Free Software\r\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n\t *\r\n\t * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n\t */\r\n\r\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/rendererProvider',['taoQtiItem/qtiCommonRenderer/renderers/Renderer'], function (QtiRenderer) { 'use strict';\n\n    QtiRenderer = QtiRenderer && Object.prototype.hasOwnProperty.call(QtiRenderer, 'default') ? QtiRenderer['default'] : QtiRenderer;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * This is a provider wrapper for qtiCommonRenderer\r\n     */\r\n    var rendererProvider = {\r\n        name: 'commonRenderer',\r\n        init: () => {},\r\n        getRenderer: () => QtiRenderer\r\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\r\\n<div class=\\\"grid-row qti-rubricBlock\\\" data-use=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.use)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"rubricBlock\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"qti-rubricBlock-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     */\r\n\r\n    var RubricBlock = {\r\n        qtiClass: 'rubricBlock',\r\n        getContainer: containerHelper.get,\r\n        template: tpl,\r\n        getData: function getData(rubric, data) {\r\n            if (rubric.isEmpty()) {\r\n                data.empty = true;\r\n            }\r\n            return data;\r\n        }\r\n    };\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"media=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<link \\r\\n    href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\r\\n    type=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.type)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\r\\n    rel=\\\"stylesheet\\\" \\r\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    />\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     */\r\n\r\n    var Stylesheet = {\r\n        qtiClass: 'stylesheet',\r\n        template: tpl,\r\n        getContainer: containerHelper.get\r\n    };\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Table',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"summary=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<table\\r\\n    class=\\\"qti-table\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\r\\n    data-qti-class=\\\"table\\\"\\r\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    >\\r\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</table>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n     */\r\n\r\n    var Table = {\r\n        qtiClass: 'table',\r\n        getContainer: containerHelper.get,\r\n        template: tpl\r\n    };\n\n    return Table;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Tooltip',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/tooltip'], function (Handlebars, __, _, DOMPurify, containerHelper, tooltip) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span\\r\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\r\\n    data-qti-class=\\\"_tooltip\\\"\\r\\n    data-role=\\\"tooltip-target\\\"\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n>\\r\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n</span>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     */\r\n\r\n    var Tooltip = {\r\n        qtiClass: '_tooltip',\r\n        template: tpl,\r\n        getContainer: containerHelper.get,\r\n        render: function render(tooltipDOM) {\r\n            var $container = containerHelper.get(tooltipDOM);\r\n            var renderedTooltip = tooltip.create($container, tooltipDOM.content(), {\r\n                theme: 'default',\r\n                placement: 'top'\r\n            });\r\n\r\n            if ($container.data('$tooltip')) {\r\n                $container.data('$tooltip').dispose();\r\n                $container.removeData('$tooltip');\r\n            }\r\n            $container.data('$tooltip', renderedTooltip);\r\n        }\r\n    };\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/IdentifiedElement',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/util'], function (Element, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    /**\r\n     * IdentifiedElement model\r\n     */\r\n    var IdentifiedElement = Element.extend({\r\n        /**\r\n         * Generates and assign an identifier\r\n         * @param {String} prefix - identifier prefix\r\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\r\n         * @returns {Object} for chaining\r\n         */\r\n        buildIdentifier: function buildIdentifier(prefix, useSuffix) {\r\n            var item = this.getRootElement();\r\n            var id = util.buildIdentifier(item, prefix || this.qtiClass, useSuffix);\r\n            if (id) {\r\n                this.attr('identifier', id);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Get/set and identifier. It will be generated if it doesn't exists.\r\n         * @param {String} [value] - set the value or get it if not set.\r\n         * @returns {String} the identifier\r\n         */\r\n        id: function id(value) {\r\n            if (!value && !this.attr('identifier')) {\r\n                this.buildIdentifier(this.qtiClass, true);\r\n            }\r\n            return this.attr('identifier', value);\r\n        }\r\n    });\n\n    return IdentifiedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Choice',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Choice = IdentifiedElement.extend({\r\n        init: function(serial, attributes) {\r\n            this._super(serial, attributes);\r\n        },\r\n        is: function(qtiClass) {\r\n            return qtiClass === 'choice' || this._super(qtiClass);\r\n        },\r\n        getInteraction: function() {\r\n            var found,\r\n                ret = null,\r\n                item = this.getRootElement();\r\n            if (item) {\r\n                found = item.find(this.serial);\r\n                if (found) {\r\n                    ret = found.parent;\r\n                }\r\n            }\r\n            return ret;\r\n        }\r\n    });\n\n    return Choice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hotspot',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n\tQtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n\tvar QtiHotspot = QtiChoice.extend({});\n\n\treturn QtiHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/AssociableHotspot',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiAssociableHotspot = QtiHotspot.extend({\r\n        qtiClass: 'associableHotspot'\r\n    });\n\n    return QtiAssociableHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Mixin',[],function () { 'use strict';\n\n    //@todo : need refactoring of qti item mixin with lodash.mixin()\r\n    var Mixin = {\r\n        augment: function(targetClass, methods, options) {\r\n            if (typeof targetClass === 'function' && typeof methods === 'object') {\r\n                for (var methodName in methods) {\r\n                    if (!Object.hasOwnProperty(targetClass.prototype, methodName)) {\r\n                        targetClass.prototype[methodName] = methods[methodName];\r\n                    } else {\r\n                        if (options && options.append) {\r\n                            var _parent = targetClass.prototype[methodName];\r\n                            targetClass.prototype[methodName] = function() {\r\n                                methods[methodName].apply(this, arguments);\r\n                                return _parent.apply(this, arguments);\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\n\n    return Mixin;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Container',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, Element, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     */\r\n\r\n    var Container = Element.extend({\r\n        qtiClass: '_container',\r\n        init: function(body) {\r\n            this._super(); //generate serial, attributes array always empty\r\n            if (body && typeof body !== 'string') {\r\n                throw 'the body of a container must be a string';\r\n            }\r\n            this.bdy = body || '';\r\n            this.elements = {};\r\n        },\r\n        body: function(body) {\r\n            if (typeof body === 'undefined') {\r\n                return this.bdy;\r\n            } else {\r\n                if (typeof body === 'string') {\r\n                    this.bdy = body;\r\n                    $(document).trigger('containerBodyChange', {\r\n                        body: body,\r\n                        container: this,\r\n                        parent: this.parent()\r\n                    });\r\n                } else {\r\n                    throw 'body must be a string';\r\n                }\r\n            }\r\n        },\r\n        setElements: function(elements, body) {\r\n            var returnValue = false;\r\n\r\n            for (var i in elements) {\r\n                var elt = elements[i];\r\n                if (elt instanceof Element) {\r\n                    body = body || this.bdy;\r\n                    if (body.indexOf(elt.placeholder()) === -1) {\r\n                        body += elt.placeholder(); //append the element if no placeholder found\r\n                    }\r\n\r\n                    elt.setRootElement(this.getRootElement() || null);\r\n                    this.elements[elt.getSerial()] = elt;\r\n                    $(document).trigger('containerElementAdded', {\r\n                        element: elt,\r\n                        container: this\r\n                    });\r\n\r\n                    returnValue = true;\r\n                } else {\r\n                    returnValue = false;\r\n                    throw 'expected a qti element';\r\n                }\r\n            }\r\n\r\n            this.body(body);\r\n\r\n            return returnValue;\r\n        },\r\n        setElement: function(element, body) {\r\n            return this.setElements([element], body);\r\n        },\r\n        removeElement: function(element) {\r\n            var serial = '';\r\n            if (typeof element === 'string') {\r\n                serial = element;\r\n            } else if (element instanceof Element) {\r\n                serial = element.getSerial();\r\n            }\r\n            delete this.elements[serial];\r\n            this.body(this.body().replace('{{' + serial + '}}', ''));\r\n            return this;\r\n        },\r\n        getElements: function(qtiClass) {\r\n            var elts = {};\r\n            if (typeof qtiClass === 'string') {\r\n                for (var serial in this.elements) {\r\n                    if (Element.isA(this.elements[serial], qtiClass)) {\r\n                        elts[serial] = this.elements[serial];\r\n                    }\r\n                }\r\n            } else {\r\n                elts = _.clone(this.elements);\r\n            }\r\n            return elts;\r\n        },\r\n        getElement: function(serial) {\r\n            return this.elements[serial] ? this.elements[serial] : null;\r\n        },\r\n        getComposingElements: function() {\r\n            var elements = this.getElements();\r\n            var elts = {};\r\n            for (var serial in elements) {\r\n                elts[serial] = elements[serial]; //pass individual object by ref, instead of the whole list(object)\r\n                elts = _.extend(elts, elements[serial].getComposingElements());\r\n            }\r\n            return elts;\r\n        },\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                elementsData = [],\r\n                tpl = this.body();\r\n\r\n            for (var serial in this.elements) {\r\n                var elt = this.elements[serial];\r\n                if (typeof elt.render === 'function') {\r\n                    if (elt.qtiClass === '_container') {\r\n                        //@todo : container rendering merging, to be tested\r\n                        tpl = tpl.replace(elt.placeholder(), elt.render(renderer));\r\n                    } else {\r\n                        tpl = tpl.replace(elt.placeholder(), '{{{' + serial + '}}}');\r\n                        elementsData[serial] = elt.render(renderer);\r\n                    }\r\n                } else {\r\n                    throw 'render() is not defined for the qti element: ' + serial;\r\n                }\r\n            }\r\n\r\n            if (renderer.isRenderer) {\r\n                return this._super(\r\n                    {\r\n                        body: renderer.renderDirect(tpl, elementsData),\r\n                        contentModel: this.contentModel || 'flow'\r\n                    },\r\n                    renderer,\r\n                    args.placeholder\r\n                );\r\n            } else {\r\n                throw 'invalid qti renderer for qti container';\r\n            }\r\n        },\r\n        postRender: function(data, altClassName, renderer) {\r\n            renderer = renderer || this.getRenderer();\r\n\r\n            var res = _(this.elements)\r\n                .filter(function(elt) {\r\n                    return typeof elt.postRender === 'function';\r\n                })\r\n                .map(function(elt) {\r\n                    return elt.postRender(data, '', renderer);\r\n                })\r\n                .flatten(true)\r\n                .value()\r\n                .concat(this._super(data, altClassName, renderer));\r\n            return res;\r\n        },\r\n        toArray: function() {\r\n            var arr = {\r\n                serial: this.serial,\r\n                body: this.bdy,\r\n                elements: {}\r\n            };\r\n\r\n            for (var serial in this.elements) {\r\n                arr.elements[serial] = this.elements[serial].toArray();\r\n            }\r\n\r\n            return arr;\r\n        },\r\n        find: function(serial, parent) {\r\n            var found = null;\r\n\r\n            if (this.elements[serial]) {\r\n                found = { parent: parent || this, element: this.elements[serial], location: 'body' };\r\n            } else {\r\n                _.each(this.elements, function(elt) {\r\n                    found = elt.find(serial);\r\n                    if (found) {\r\n                        return false; //break loop\r\n                    }\r\n                });\r\n            }\r\n\r\n            return found;\r\n        },\r\n        isEmpty: function() {\r\n            return !this.bdy;\r\n        }\r\n    });\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Container',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/core/Container'], function (Mixin, Container$1) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container$1 = Container$1 && Object.prototype.hasOwnProperty.call(Container$1, 'default') ? Container$1['default'] : Container$1;\n\n    var methods = {\r\n        initContainer: function(body) {\r\n            this.bdy = new Container$1(body || '');\r\n            this.bdy.setRootElement(this.getRootElement() || null);\r\n            this.bdy.contentModel = 'blockStatic';\r\n        },\r\n        getBody: function() {\r\n            return this.bdy;\r\n        },\r\n        body: function(body) {\r\n            var ret = this.bdy.body(body);\r\n            return body ? this : ret; //for method chaining on get\r\n        },\r\n        setElement: function(element, body) {\r\n            this.bdy.setElement(element, body);\r\n            return this;\r\n        },\r\n        removeElement: function(element) {\r\n            return this.bdy.removeElement(element);\r\n        },\r\n        getElements: function(qtiClass) {\r\n            return this.bdy.getElements(qtiClass);\r\n        },\r\n        getElement: function(serial) {\r\n            return this.bdy.getElement(serial);\r\n        }\r\n    };\r\n\r\n    var Container = {\r\n        augment: function(targetClass) {\r\n            Mixin.augment(targetClass, methods);\r\n        },\r\n        methods: methods\r\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/ContainerChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/Container'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ContainerChoice = Choice.extend({\r\n        init: function(serial, attributes) {\r\n            this._super(serial, attributes);\r\n        },\r\n        is: function(qtiClass) {\r\n            return qtiClass === 'containerChoice' || this._super(qtiClass);\r\n        }\r\n    });\r\n\r\n    Container.augment(ContainerChoice);\n\n    return ContainerChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Gap',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n    var QtiGap = QtiChoice.extend({\r\n        qtiClass: 'gap'\r\n    });\n\n    return QtiGap;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Object',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiObject = Element.extend({\r\n        qtiClass: 'object',\r\n        getMediaType: function() {\r\n            var type = 'undefined';\r\n            var mimetype = this.attr('type');\r\n            if (mimetype) {\r\n                if (mimetype.indexOf('video') === 0) {\r\n                    type = 'video';\r\n                } else if (mimetype.indexOf('audio') === 0) {\r\n                    type = 'audio';\r\n                } else if (mimetype.indexOf('image') === 0) {\r\n                    type = 'image';\r\n                } else if (mimetype.indexOf('text/html') === 0) {\r\n                    type = 'html';\r\n                } else {\r\n                    type = 'object';\r\n                }\r\n            }\r\n            return type;\r\n        },\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {};\r\n\r\n            switch (this.getMediaType()) {\r\n                case 'video':\r\n                    defaultData.video = true;\r\n                    break;\r\n                case 'audio':\r\n                    defaultData.audio = true;\r\n                    break;\r\n                case 'html':\r\n                    defaultData.html = true;\r\n                    break;\r\n                case 'image':\r\n                default:\r\n                    defaultData.object = true;\r\n            }\r\n\r\n            defaultData.attributes = { data: renderer.resolveUrl(this.attr('data')) };\r\n            defaultData.body = this._alt;\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        },\r\n        isEmpty: function() {\r\n            return !this.attr('data');\r\n        }\r\n    });\n\n    return QtiObject;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapImg',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/core/Object'], function (QtiChoice, QtiObject) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiGapImg = QtiChoice.extend({\r\n        qtiClass: 'gapImg',\r\n        //common methods to object containers (start)\r\n        initObject: function(object) {\r\n            this.object = object || new QtiObject();\r\n        },\r\n        getObject: function() {\r\n            return this.object;\r\n        }\r\n        //common methods to object containers (end)\r\n    });\n\n    return QtiGapImg;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapText',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n     */\r\n\r\n    var QtiGapText = QtiContainerChoice.extend({\r\n        qtiClass: 'gapText'\r\n    });\n\n    return QtiGapText;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/HotspotChoice',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiHotspotChoice = QtiHotspot.extend({\r\n        qtiClass: 'hotspotChoice'\r\n    });\n\n    return QtiHotspotChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerInline',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\r\n    _.extend(methods, Container.methods);\r\n    _.extend(methods, {\r\n        initContainer: function(body) {\r\n            Container.methods.initContainer.call(this, body);\r\n            this.bdy.contentModel = 'inlineStatic';\r\n        }\r\n    });\r\n\r\n    var ContainerInline = {\r\n        augment: function(targetClass) {\r\n            Mixin.augment(targetClass, methods);\r\n        },\r\n        methods: methods\r\n    };\n\n    return ContainerInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hottext',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var Hottext = Choice.extend({\r\n        qtiClass: 'hottext'\r\n    });\r\n\r\n    Container.augment(Hottext);\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextVariableChoice',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, QtiChoice, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiTextVariableChoice = QtiChoice.extend({\r\n        init: function(serial, attributes, text) {\r\n            this._super(serial, attributes);\r\n            this.val(text || '');\r\n        },\r\n        is: function(qtiClass) {\r\n            return qtiClass === 'textVariableChoice' || this._super(qtiClass);\r\n        },\r\n        val: function(text) {\r\n            if (typeof text === 'undefined') {\r\n                return this.text;\r\n            } else {\r\n                if (typeof text === 'string') {\r\n                    this.text = text;\r\n                    $(document).trigger('choiceTextChange', {\r\n                        choice: this,\r\n                        text: text\r\n                    });\r\n                } else {\r\n                    throw 'text must be a string';\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {\r\n                    body: this.text\r\n                };\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        }\r\n    });\n\n    return QtiTextVariableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/InlineChoice',['taoQtiItem/qtiItem/core/choices/TextVariableChoice'], function (QtiTextVariableChoice) { 'use strict';\n\n    QtiTextVariableChoice = QtiTextVariableChoice && Object.prototype.hasOwnProperty.call(QtiTextVariableChoice, 'default') ? QtiTextVariableChoice['default'] : QtiTextVariableChoice;\n\n    var QtiInlineChoice = QtiTextVariableChoice.extend({\r\n        qtiClass: 'inlineChoice'\r\n    });\n\n    return QtiInlineChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleAssociableChoice = QtiContainerChoice.extend({\r\n        qtiClass: 'simpleAssociableChoice'\r\n    });\n\n    return QtiSimpleAssociableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleChoice = QtiContainerChoice.extend({\r\n        qtiClass: 'simpleChoice'\r\n    });\n\n    return QtiSimpleChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextEntry',['taoQtiItem/qtiItem/core/choices/TextVariableChoice'], function (QtiTextVariableChoice) { 'use strict';\n\n    QtiTextVariableChoice = QtiTextVariableChoice && Object.prototype.hasOwnProperty.call(QtiTextVariableChoice, 'default') ? QtiTextVariableChoice['default'] : QtiTextVariableChoice;\n\n    var QtiTextEntry = QtiTextVariableChoice.extend({\r\n        qtiClass: 'textEntry'\r\n    });\n\n    return QtiTextEntry;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/Feedback',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Feedback = IdentifiedElement.extend({\r\n        is: function(qtiClass) {\r\n            return qtiClass === 'feedback' || this._super(qtiClass);\r\n        }\r\n    });\n\n    return Feedback;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackBlock = Feedback.extend({});\n\n\treturn FeedbackBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackInline = Feedback.extend({});\n\n\treturn FeedbackInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',['taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/Container'], function (IdentifiedElement, Container) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ModalFeedback = IdentifiedElement.extend({\r\n        qtiClass: 'modalFeedback',\r\n        is: function(qtiClass) {\r\n            return qtiClass === 'feedback' || this._super(qtiClass);\r\n        }\r\n    });\r\n\r\n    Container.augment(ModalFeedback);\n\n    return ModalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigcaption',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    const methods = {};\r\n    _.extend(methods, Container.methods);\r\n    _.extend(methods, {\r\n        initContainer: function (body) {\r\n            Container.methods.initContainer.call(this, body);\r\n            this.bdy.contentModel = 'figcaption';\r\n        }\r\n    });\r\n\r\n    var ContainerFigcaption = {\r\n        augment: function (targetClass) {\r\n            Mixin.augment(targetClass, methods);\r\n        },\r\n        methods: methods\r\n    };\n\n    return ContainerFigcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/NamespacedElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n     *\r\n     */\r\n\r\n    var methods = {\r\n        getNamespace: function() {\r\n            var relatedItem;\r\n            var namespaces;\r\n            var ns;\r\n\r\n            if (this.ns && (this.ns.name || this.ns.uri)) {\r\n                return _.clone(this.ns);\r\n            } else {\r\n                relatedItem = this.getRootElement();\r\n                if (relatedItem) {\r\n                    namespaces = relatedItem.getNamespaces();\r\n                    for (ns in namespaces) {\r\n                        if (namespaces[ns].indexOf(this.nsUriFragment) > 0) {\r\n                            return {\r\n                                name: ns,\r\n                                uri: namespaces[ns]\r\n                            };\r\n                        }\r\n                    }\r\n                    //if no ns found in the item, set the default one!\r\n                    relatedItem.namespaces[this.defaultNsName] = this.defaultNsUri;\r\n                    return {\r\n                        name: this.defaultNsName,\r\n                        uri: this.defaultNsUri\r\n                    };\r\n                }\r\n            }\r\n\r\n            return {};\r\n        },\r\n        setNamespace: function(name, uri) {\r\n            this.ns = {\r\n                name: name,\r\n                uri: uri\r\n            };\r\n        }\r\n    };\r\n\r\n    var NamespacedElement = {\r\n        augment: function(targetClass) {\r\n            Mixin.augment(targetClass, methods);\r\n        },\r\n        methods: methods\r\n    };\n\n    return NamespacedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figcaption',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigcaption', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    const Figcaption = Element.extend({\r\n        qtiClass: 'figcaption',\r\n        defaultNsName: 'qh5',\r\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\r\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\r\n        init: function (serial, attributes) {\r\n            this._super(serial, attributes);\r\n        },\r\n        is: function (qtiClass) {\r\n            return qtiClass === 'figcaption' || this._super(qtiClass);\r\n        }\r\n    });\r\n\r\n    Container.augment(Figcaption);\r\n    NamespacedElement.augment(Figcaption);\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigure',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    const methods = {};\r\n    _.extend(methods, Container.methods);\r\n    _.extend(methods, {\r\n        initContainer: function (body) {\r\n            Container.methods.initContainer.call(this, body);\r\n            this.bdy.contentModel = 'figure';\r\n        }\r\n    });\r\n\r\n    var ContainerFigure = {\r\n        augment: function (targetClass) {\r\n            Mixin.augment(targetClass, methods);\r\n        },\r\n        methods: methods\r\n    };\n\n    return ContainerFigure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figure',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigure', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    const Figure = Element.extend({\r\n        qtiClass: 'figure',\r\n        defaultNsName: 'qh5',\r\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\r\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\r\n        init: function (serial, attributes) {\r\n            this._super(serial, attributes);\r\n        },\r\n        is: function (qtiClass) {\r\n            return qtiClass === 'figure' || this._super(qtiClass);\r\n        },\r\n        isEmpty: function () {\r\n            const imgElements = this.getElements('img');\r\n            if (imgElements && Object.values(imgElements).length) {\r\n                return Object.values(imgElements)[0].isEmpty();\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    });\r\n    Container.augment(Figure);\r\n    NamespacedElement.augment(Figure);\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Img',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Img = Element.extend({\r\n        qtiClass: 'img',\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {};\r\n\r\n            defaultData.attributes = {\r\n                src: renderer.resolveUrl(this.attr('src'))\r\n            };\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        },\r\n        isEmpty: function() {\r\n            return !this.attr('src');\r\n        }\r\n    });\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Include',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Include = Element.extend({\r\n        qtiClass: 'include',\r\n        defaultNsName: 'xi',\r\n        defaultNsUri: 'http://www.w3.org/2001/XInclude',\r\n        nsUriFragment: 'XInclude',\r\n        isEmpty: function() {\r\n            return !this.attr('href') || this.getBody().isEmpty();\r\n        }\r\n    });\r\n    Container.augment(Include);\r\n    NamespacedElement.augment(Include);\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Interaction',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util'], function (Element, _, rendererConfig, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    var QtiInteraction = Element.extend({\r\n        init: function(serial, attributes) {\r\n            this._super(serial, attributes);\r\n            this.choices = {};\r\n        },\r\n        is: function(qtiClass) {\r\n            return qtiClass === 'interaction' || this._super(qtiClass);\r\n        },\r\n        addChoice: function(choice) {\r\n            choice.setRootElement(this.getRootElement() || null);\r\n            this.choices[choice.getSerial()] = choice;\r\n            return this;\r\n        },\r\n        getChoices: function() {\r\n            var choices = {};\r\n            for (var i in this.choices) {\r\n                //prevent passing the whole array by ref\r\n                choices[i] = this.choices[i];\r\n            }\r\n            return choices;\r\n        },\r\n        getChoice: function(serial) {\r\n            var ret = null;\r\n            if (this.choices[serial]) {\r\n                ret = this.choices[serial];\r\n            }\r\n            return ret;\r\n        },\r\n        getChoiceByIdentifier: function(identifier) {\r\n            for (var i in this.choices) {\r\n                if (this.choices[i].id() === identifier) {\r\n                    return this.choices[i];\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getComposingElements: function() {\r\n            var elts = this._super();\r\n            //recursive to choices:\r\n            for (var serial in this.choices) {\r\n                if (Element.isA(this.choices[serial], 'choice')) {\r\n                    elts[serial] = this.choices[serial];\r\n                    elts = _.extend(elts, this.choices[serial].getComposingElements());\r\n                }\r\n            }\r\n            return elts;\r\n        },\r\n        find: function(serial) {\r\n            var found = this._super(serial);\r\n            if (!found) {\r\n                found = util.findInCollection(this, 'choices', serial);\r\n            }\r\n            return found;\r\n        },\r\n        getResponseDeclaration: function() {\r\n            var response = null;\r\n            var responseId = this.attr('responseIdentifier');\r\n            if (responseId) {\r\n                var item = this.getRootElement();\r\n                if (item) {\r\n                    response = item.getResponseDeclaration(responseId);\r\n                } else {\r\n                    throw 'cannot get response of an interaction out of its item context';\r\n                }\r\n            }\r\n            return response;\r\n        },\r\n        /**\r\n         * Render the interaction to the view.\r\n         * The optional argument \"subClass\" allows distinguishing customInteraction: e.g. customInteraction.matrix, customInteraction.likertScale ...\r\n         */\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {\r\n                    _type: this.qtiClass.replace(/([A-Z])/g, function($1) {\r\n                        return '_' + $1.toLowerCase();\r\n                    }),\r\n                    choices: [],\r\n                    choiceShuffle: true\r\n                };\r\n\r\n            if (!renderer) {\r\n                throw 'no renderer found for the interaction ' + this.qtiClass;\r\n            }\r\n\r\n            var choices =\r\n                this.attr('shuffle') && renderer.getOption('shuffleChoices')\r\n                    ? renderer.getShuffledChoices(this)\r\n                    : this.getChoices();\r\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\r\n            var _this = this;\r\n            _.each(choices, function(choice) {\r\n                if (Element.isA(choice, 'choice')) {\r\n                    try {\r\n                        var renderedChoice = choice.render(\r\n                            _.clone(interactionData, true),\r\n                            null,\r\n                            choice.qtiClass + '.' + _this.qtiClass,\r\n                            renderer\r\n                        ); //use interaction type as choice subclass\r\n                        defaultData.choices.push(renderedChoice);\r\n                    } catch (e) {\r\n                        //leave choices empty in case of error\r\n                    }\r\n                }\r\n            });\r\n\r\n            var tplName = args.subclass ? this.qtiClass + '.' + args.subclass : this.qtiClass;\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, tplName, renderer);\r\n        },\r\n        postRender: function(data, altClassName, renderer) {\r\n            var self = this;\r\n            renderer = renderer || this.getRenderer();\r\n\r\n            return _(this.getChoices())\r\n                .filter(function(elt) {\r\n                    return Element.isA(elt, 'choice');\r\n                })\r\n                .map(function(choice) {\r\n                    return choice.postRender({}, choice.qtiClass + '.' + self.qtiClass, renderer);\r\n                })\r\n                .value()\r\n                .concat(this._super(data, altClassName, renderer));\r\n        },\r\n        setResponse: function(values) {\r\n            var ret = null;\r\n            var renderer = this.getRenderer();\r\n            if (renderer) {\r\n                ret = renderer.setResponse(this, values);\r\n            } else {\r\n                throw 'no renderer found for the interaction ' + this.qtiClass;\r\n            }\r\n            return ret;\r\n        },\r\n        getResponse: function() {\r\n            var ret = null;\r\n            var renderer = this.getRenderer();\r\n            if (renderer) {\r\n                ret = renderer.getResponse(this);\r\n            } else {\r\n                throw 'no renderer found for the interaction ' + this.qtiClass;\r\n            }\r\n            return ret;\r\n        },\r\n        resetResponse: function() {\r\n            var ret = null;\r\n            var renderer = this.getRenderer();\r\n            if (renderer) {\r\n                ret = renderer.resetResponse(this);\r\n            } else {\r\n                throw 'no renderer found for the interaction ' + this.qtiClass;\r\n            }\r\n            return ret;\r\n        },\r\n\r\n        /**\r\n         * Retrieve the state of the interaction.\r\n         * The state is provided by the interaction's renderer.\r\n         *\r\n         * @returns {Object} the interaction's state\r\n         * @throws {Error} if no renderer is found\r\n         */\r\n        getState: function() {\r\n            var ret = null;\r\n            var renderer = this.getRenderer();\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.getState)) {\r\n                    ret = renderer.getState(this);\r\n                }\r\n            } else {\r\n                throw 'no renderer found for the interaction ' + this.qtiClass;\r\n            }\r\n            return ret;\r\n        },\r\n\r\n        /**\r\n         * Retrieve the state of the interaction.\r\n         * The state will be given to the interaction's renderer.\r\n         *\r\n         * @param {Object} state - the interaction's state\r\n         * @throws {Error} if no renderer is found\r\n         */\r\n        setState: function(state) {\r\n            var renderer = this.getRenderer();\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.setState)) {\r\n                    renderer.setState(this, state);\r\n                }\r\n            } else {\r\n                throw 'no renderer found for the interaction ' + this.qtiClass;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clean up an interaction rendering.\r\n         * Ask the renderer to run destroy if exists.\r\n         *\r\n         * @throws {Error} if no renderer is found\r\n         * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\r\n         */\r\n        clear: function() {\r\n            var renderer = this.getRenderer();\r\n            if (renderer && _.isFunction(renderer.destroy)) {\r\n                return renderer.destroy(this);\r\n            }\r\n        },\r\n\r\n        toArray: function() {\r\n            var arr = this._super();\r\n            arr.choices = {};\r\n            for (var serial in this.choices) {\r\n                if (Element.isA(this.choices[serial], 'choice')) {\r\n                    arr.choices[serial] = this.choices[serial].toArray();\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            //by default\r\n            return false;\r\n        }\r\n    });\n\n    return QtiInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Prompt',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Element, Container) { 'use strict';\n\n\tElement = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar Prompt = Element.extend({ qtiClass: 'prompt' });\r\n\tContainer.augment(Prompt);\n\n\treturn Prompt;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/BlockInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/core/interactions/Prompt', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Interaction, Prompt, _, rendererConfig) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    Prompt = Prompt && Object.prototype.hasOwnProperty.call(Prompt, 'default') ? Prompt['default'] : Prompt;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var BlockInteraction = Interaction.extend({\r\n        init: function(serial, attributes) {\r\n            this._super(serial, attributes);\r\n            this.prompt = new Prompt('');\r\n        },\r\n        is: function(qtiClass) {\r\n            return qtiClass === 'blockInteraction' || this._super(qtiClass);\r\n        },\r\n        getComposingElements: function() {\r\n            var elts = this._super();\r\n            elts = _.extend(elts, this.prompt.getComposingElements());\r\n            elts[this.prompt.getSerial()] = this.prompt;\r\n            return elts;\r\n        },\r\n        find: function(serial) {\r\n            return this._super(serial) || this.prompt.find(serial);\r\n        },\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {\r\n                    promptId: `prompt-${this.prompt.getSerial()}`,\r\n                    prompt: this.prompt.render(renderer)\r\n                };\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        },\r\n        postRender: function(data, altClassName, renderer) {\r\n            renderer = renderer || this.getRenderer();\r\n            return [].concat(this.prompt.postRender({}, '', renderer)).concat(this._super(data, altClassName, renderer));\r\n        },\r\n        toArray: function() {\r\n            var arr = this._super();\r\n            arr.prompt = this.prompt.toArray();\r\n            return arr;\r\n        }\r\n    });\n\n    return BlockInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/responseRules',[],function () { 'use strict';\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n    var responseRules = {\r\n        MATCH_CORRECT: (responseIdentifier, outcomeIdentifier) => ({\r\n            qtiClass: 'responseCondition',\r\n            responseIf: {\r\n                qtiClass: 'responseIf',\r\n                expression: {\r\n                    qtiClass: 'match',\r\n                    expressions: [\r\n                        {\r\n                            qtiClass: 'variable',\r\n                            attributes: {\r\n                                identifier: responseIdentifier,\r\n                            },\r\n                        },\r\n                        {\r\n                            qtiClass: 'correct',\r\n                            attributes: {\r\n                                identifier: responseIdentifier,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n                responseRules: [\r\n                    {\r\n                        qtiClass: 'setOutcomeValue',\r\n                        attributes: {\r\n                            identifier: outcomeIdentifier,\r\n                        },\r\n                        expression: {\r\n                            qtiClass: 'sum',\r\n                            expressions: [\r\n                                {\r\n                                    qtiClass: 'variable',\r\n                                    attributes: {\r\n                                        identifier: outcomeIdentifier,\r\n                                    },\r\n                                },\r\n                                {\r\n                                    qtiClass: 'baseValue',\r\n                                    attributes: {\r\n                                        baseType: 'integer'\r\n                                    },\r\n                                    value: '1',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        }),\r\n        MAP_RESPONSE: (responseIdentifier, outcomeIdentifier) => ({\r\n            qtiClass: 'responseCondition',\r\n            responseIf: {\r\n                qtiClass: 'responseIf',\r\n                expression: {\r\n                    qtiClass: 'not',\r\n                    expressions: [\r\n                        {\r\n                            qtiClass: 'isNull',\r\n                            expressions: [{\r\n                                qtiClass: 'variable',\r\n                                attributes: {\r\n                                    identifier: responseIdentifier,\r\n                                },\r\n                            }],\r\n                        },\r\n                    ],\r\n                },\r\n                responseRules: [\r\n                    {\r\n                        qtiClass: 'setOutcomeValue',\r\n                        attributes: {\r\n                            identifier: outcomeIdentifier,\r\n                        },\r\n                        expression: {\r\n                            qtiClass: 'sum',\r\n                            expressions: [\r\n                                {\r\n                                    qtiClass: 'variable',\r\n                                    attributes: {\r\n                                        identifier: outcomeIdentifier,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    qtiClass: 'mapResponse',\r\n                                    attributes: {\r\n                                        identifier: responseIdentifier,\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        }),\r\n        MAP_RESPONSE_POINT: (responseIdentifier, outcomeIdentifier) => ({\r\n            qtiClass: 'responseCondition',\r\n            responseIf: {\r\n                qtiClass: 'responseIf',\r\n                expression: {\r\n                    qtiClass: 'not',\r\n                    expressions: [\r\n                        {\r\n                            qtiClass: 'isNull',\r\n                            expressions: [{\r\n                                qtiClass: 'variable',\r\n                                attributes: {\r\n                                    identifier: responseIdentifier,\r\n                                },\r\n                            }],\r\n                        },\r\n                    ],\r\n                },\r\n                responseRules: [\r\n                    {\r\n                        qtiClass: 'setOutcomeValue',\r\n                        attributes: {\r\n                            identifier: outcomeIdentifier,\r\n                        },\r\n                        expression: {\r\n                            qtiClass: 'sum',\r\n                            expressions: [\r\n                                {\r\n                                    qtiClass: 'variable',\r\n                                    attributes: {\r\n                                        identifier: outcomeIdentifier,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    qtiClass: 'mapResponsePoint',\r\n                                    attributes: {\r\n                                        identifier: responseIdentifier,\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        }),\r\n    };\n\n    return responseRules;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/response',['lodash', 'taoQtiItem/qtiItem/helper/responseRules'], function (_, responseRulesHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    responseRulesHelper = responseRulesHelper && Object.prototype.hasOwnProperty.call(responseRulesHelper, 'default') ? responseRulesHelper['default'] : responseRulesHelper;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    const _templateNames = {\r\n        MATCH_CORRECT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\r\n        MAP_RESPONSE: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\r\n        MAP_RESPONSE_POINT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\r\n        NONE: 'no_response_processing'\r\n    };\r\n\r\n\r\n    var response = {\r\n        isUsingTemplate(response, tpl) {\r\n            if (_.isString(tpl)) {\r\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n        isValidTemplateName(tplName) {\r\n            return !!this.getTemplateUriFromName(tplName);\r\n        },\r\n        getTemplateUriFromName(tplName) {\r\n            return _templateNames[tplName] || '';\r\n        },\r\n        getTemplateNameFromUri(tplUri) {\r\n            let tplName = '';\r\n\r\n            _.forIn(_templateNames, (uri, name) => {\r\n                if (uri === tplUri) {\r\n                    tplName = name;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return tplName;\r\n        },\r\n        getTemplateNameFromResponseRules(responseIdentifier, responseRules) {\r\n            if (!responseRules) {\r\n                return 'NONE';\r\n            }\r\n\r\n            const {\r\n                responseIf: {\r\n                    responseRules: [outcomeRules = {}] = [],\r\n                } = {}\r\n            } = responseRules;\r\n            const {\r\n                attributes: {\r\n                    identifier: outcomeIdentifier,\r\n                } = {},\r\n            } = outcomeRules;\r\n\r\n            if (!outcomeIdentifier) {\r\n                return '';\r\n            }\r\n\r\n            return Object.keys(responseRulesHelper).find(\r\n                (key) => _.isEqual(responseRules, responseRulesHelper[key](responseIdentifier, outcomeIdentifier))\r\n            );\r\n        }\r\n    };\n\n    return response;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/VariableDeclaration',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA;\r\n     *\r\n     */\r\n\r\n    /**\r\n     * It is the top abstract class for all variable classes\r\n     * (so not renderable and qtiClass undefined)\r\n     */\r\n    var VariableDeclaration = IdentifiedElement.extend({\r\n        init: function init(serial, attributes) {\r\n            this._super(serial, attributes);\r\n            this.defaultValue = null;\r\n        },\r\n        is: function is(qtiClass) {\r\n            return qtiClass === 'variableDeclaration' || this._super(qtiClass);\r\n        },\r\n        toArray: function toArray() {\r\n            var arr = this._super();\r\n            arr.defaultValue = this.defaultValue;\r\n            return arr;\r\n        },\r\n        setDefaultValue: function setDefaultValue(value) {\r\n            this.defaultValue = value;\r\n        },\r\n        getDefaultValue: function getDefaultValue() {\r\n            return this.defaultValue;\r\n        }\r\n    });\n\n    return VariableDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration'], function (VariableDeclaration) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n\n    var OutcomeDeclaration = VariableDeclaration.extend({\r\n        qtiClass: 'outcomeDeclaration'\r\n    });\n\n    return OutcomeDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/maxScore',['lodash', 'lib/gamp/gamp', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration'], function (_, gamp, responseHelper, OutcomeDeclaration) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    gamp = gamp && Object.prototype.hasOwnProperty.call(gamp, 'default') ? gamp['default'] : gamp;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    OutcomeDeclaration = OutcomeDeclaration && Object.prototype.hasOwnProperty.call(OutcomeDeclaration, 'default') ? OutcomeDeclaration['default'] : OutcomeDeclaration;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n     *\r\n     */\r\n\r\n    var pairExists = function pairExists(collection, pair) {\r\n        if (pair.length !== 2) {\r\n            return false;\r\n        }\r\n        return collection[pair[0] + ' ' + pair[1]] || collection[pair[1] + ' ' + pair[0]];\r\n    };\r\n\r\n    var maxScore = {\r\n        /**\r\n         * Set the normal maximum to the item\r\n         * @param {Object} item - the standard qti item model object\r\n         */\r\n        setNormalMaximum: function setNormalMaximum(item) {\r\n            var normalMaximum,\r\n                scoreOutcome = item.getOutcomeDeclaration('SCORE');\r\n\r\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\r\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\r\n                normalMaximum = _.reduce(\r\n                    item.getInteractions(),\r\n                    function(acc, interaction) {\r\n                        var interactionMaxScore = interaction.getNormalMaximum();\r\n                        if (_.isNumber(interactionMaxScore)) {\r\n                            return gamp.add(acc, interactionMaxScore);\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    0\r\n                );\r\n\r\n                if (_.isNumber(normalMaximum)) {\r\n                    scoreOutcome.attr('normalMaximum', normalMaximum);\r\n                } else {\r\n                    scoreOutcome.removeAttr('normalMaximum');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the maximum score of the item\r\n         * @param {Object} item - the standard qti item model object\r\n         */\r\n        setMaxScore: function setMaxScore(item) {\r\n            var hasInvalidInteraction = false,\r\n                scoreOutcome = item.getOutcomeDeclaration('SCORE'),\r\n                customOutcomes,\r\n                maxScore,\r\n                maxScoreOutcome;\r\n\r\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\r\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\r\n                maxScore = _.reduce(\r\n                    item.getInteractions(),\r\n                    function(acc, interaction) {\r\n                        var interactionMaxScore = interaction.getNormalMaximum();\r\n                        if (_.isNumber(interactionMaxScore)) {\r\n                            return gamp.add(acc, interactionMaxScore);\r\n                        } else {\r\n                            hasInvalidInteraction = true;\r\n                            return acc;\r\n                        }\r\n                    },\r\n                    0\r\n                );\r\n\r\n                customOutcomes = _(item.getOutcomes()).filter(function(outcome) {\r\n                    return outcome.id() !== 'SCORE' && outcome.id() !== 'MAXSCORE';\r\n                });\r\n\r\n                if (customOutcomes.size()) {\r\n                    maxScore = customOutcomes.reduce(function(acc, outcome) {\r\n                        return gamp.add(acc, parseFloat(outcome.attr('normalMaximum') || 0));\r\n                    }, maxScore);\r\n                }\r\n\r\n                maxScoreOutcome = item.getOutcomeDeclaration('MAXSCORE');\r\n                if (!hasInvalidInteraction || customOutcomes.size()) {\r\n                    if (!maxScoreOutcome) {\r\n                        //add new outcome\r\n                        maxScoreOutcome = new OutcomeDeclaration({\r\n                            cardinality: 'single',\r\n                            baseType: 'float'\r\n                        });\r\n\r\n                        //attach the outcome to the item before generating item-level unique id\r\n                        item.addOutcomeDeclaration(maxScoreOutcome);\r\n                        maxScoreOutcome.buildIdentifier('MAXSCORE', false);\r\n                    }\r\n                    maxScoreOutcome.setDefaultValue(maxScore);\r\n                }\r\n\r\n                //handle special case when MAXSCORE is set up manually for some interaction like ExtendedText\r\n                if(hasInvalidInteraction && maxScoreOutcome) {\r\n                    if(maxScoreOutcome.attributes && maxScoreOutcome.attributes.externalScored) {\r\n                        if(_.isUndefined(maxScoreOutcome.defaultValue)) {\r\n                            maxScoreOutcome.setDefaultValue(1);\r\n                        }\r\n                    } else {\r\n                        item.removeOutcome('MAXSCORE');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sort an array of associable choices by its matchMax attr value\r\n         * @param {Array} choiceCollection\r\n         * @returns {Array}\r\n         */\r\n        getMatchMaxOrderedChoices: function getMatchMaxOrderedChoices(choiceCollection) {\r\n            return _(choiceCollection)\r\n                .map(function(choice) {\r\n                    var matchMax = parseInt(choice.attr('matchMax'), 10);\r\n                    if (_.isNaN(matchMax)) {\r\n                        matchMax = 0;\r\n                    }\r\n                    return {\r\n                        matchMax: matchMax === 0 ? Infinity : matchMax,\r\n                        id: choice.id()\r\n                    };\r\n                })\r\n                .sortBy('matchMax')\r\n                .reverse()\r\n                .valueOf();\r\n        },\r\n\r\n        /**\r\n         * Compute the maximum score of a \"choice\" typed interaction\r\n         * @param {Object} interaction - a standard interaction model object\r\n         * @returns {Number}\r\n         */\r\n        choiceInteractionBased: function choiceInteractionBased(interaction, options) {\r\n            var responseDeclaration = interaction.getResponseDeclaration();\r\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\r\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\r\n            var max,\r\n                maxChoice,\r\n                minChoice,\r\n                scoreMaps,\r\n                requiredChoiceCount,\r\n                totalAnswerableResponse,\r\n                sortedMapEntries,\r\n                missingMapsCount;\r\n\r\n            options = _.defaults(options || {}, { maxChoices: 0, minChoices: 0 });\r\n            maxChoice = parseInt(interaction.attr('maxChoices') || options.maxChoices, 10);\r\n            minChoice =  0 ;\r\n            if (maxChoice && minChoice && maxChoice < minChoice) {\r\n                return 0;\r\n            }\r\n\r\n            if (template === 'MATCH_CORRECT') {\r\n                if (\r\n                    maxChoice &&\r\n                    _.isArray(responseDeclaration.correctResponse) &&\r\n                    (responseDeclaration.correctResponse.length > maxChoice ||\r\n                        responseDeclaration.correctResponse.length < minChoice)\r\n                ) {\r\n                    //max choice does not enable selecting the correct responses\r\n                    max = 0;\r\n                } else if (\r\n                    !responseDeclaration.correctResponse ||\r\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\r\n                ) {\r\n                    //no correct response defined -> score always zero\r\n                    max = 0;\r\n                } else {\r\n                    max = 1;\r\n                }\r\n            } else if (template === 'MAP_RESPONSE') {\r\n                //at least a map entry is required to be valid QTI\r\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\r\n                    return 0;\r\n                }\r\n\r\n                //prepare constraint params\r\n                requiredChoiceCount = minChoice;\r\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\r\n\r\n                //sort the score map entries by the score\r\n                scoreMaps = _.values(responseDeclaration.mapEntries);\r\n                sortedMapEntries = _(scoreMaps)\r\n                    .map(function(v) {\r\n                        return parseFloat(v);\r\n                    })\r\n                    .sortBy()\r\n                    .reverse()\r\n                    .first(totalAnswerableResponse);\r\n\r\n                //if there is not enough map defined, compared to the minChoice constraint, fill in the rest of required choices with the default map\r\n                missingMapsCount = minChoice - sortedMapEntries.size();\r\n                _.times(missingMapsCount, function() {\r\n                    sortedMapEntries.push(mapDefault);\r\n                });\r\n\r\n                //if the map default is positive, the optimal strategy involves using as much mapDefault as possible\r\n                if (mapDefault && mapDefault > 0) {\r\n                    if (maxChoice) {\r\n                        missingMapsCount = maxChoice - sortedMapEntries.size();\r\n                    } else {\r\n                        missingMapsCount = _.size(interaction.getChoices()) - sortedMapEntries.size();\r\n                    }\r\n                    if (missingMapsCount > 0) {\r\n                        _.times(missingMapsCount, function() {\r\n                            sortedMapEntries.push(mapDefault);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //calculate the maximum reachable score by choice map\r\n                max = sortedMapEntries.reduce(function(acc, v) {\r\n                    var score = v;\r\n                    if (score < 0 && requiredChoiceCount <= 0) {\r\n                        //if the score is negative check if we have the choice not to pick it\r\n                        score = 0;\r\n                    }\r\n                    requiredChoiceCount--;\r\n                    return gamp.add(acc, score);\r\n                }, 0);\r\n\r\n                //compare the calculated maximum with the mapping upperbound\r\n                if (responseDeclaration.mappingAttributes.upperBound) {\r\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\r\n                }\r\n            } else if (template === 'MAP_RESPONSE_POINT') {\r\n                //map point response processing does not work on choice based interaction\r\n                max = 0;\r\n            }\r\n            return max;\r\n        },\r\n\r\n        /**\r\n         * Compute the maximum score of a \"order\" typed interaction\r\n         * @param {Object} interaction - a standard interaction model object\r\n         * @returns {Number}\r\n         */\r\n        orderInteractionBased: function orderInteractionBased(interaction) {\r\n            var minChoice =  0 ;\r\n            var maxChoice = parseInt(interaction.attr('maxChoices') || 0, 10);\r\n            var responseDeclaration = interaction.getResponseDeclaration();\r\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\r\n            var max;\r\n\r\n            if (maxChoice && minChoice && maxChoice < minChoice) {\r\n                return 0;\r\n            }\r\n\r\n            if (template === 'MATCH_CORRECT') {\r\n                if (\r\n                    (_.isArray(responseDeclaration.correctResponse) &&\r\n                        (maxChoice && responseDeclaration.correctResponse.length > maxChoice)) ||\r\n                    (minChoice )\r\n                ) {\r\n                    //max choice does not enable selecting the correct responses\r\n                    max = 0;\r\n                } else if (\r\n                    !responseDeclaration.correctResponse ||\r\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\r\n                ) {\r\n                    //no correct response defined -> score always zero\r\n                    max = 0;\r\n                } else {\r\n                    max = 1;\r\n                }\r\n            } else if (template === 'MAP_RESPONSE' || template === 'MAP_RESPONSE_POINT') {\r\n                //map response processing does not work on order based interaction\r\n                max = 0;\r\n            }\r\n            return max;\r\n        },\r\n\r\n        /**\r\n         * Compute the maximum score of a \"associate\" typed interaction\r\n         * @param {Object} interaction - a standard interaction model object\r\n         * @returns {Number}\r\n         */\r\n        associateInteractionBased: function associateInteractionBased(interaction, options) {\r\n            var responseDeclaration = interaction.getResponseDeclaration();\r\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\r\n            var maxAssoc = parseInt(interaction.attr('maxAssociations') || 0, 10);\r\n            var minAssoc =  0 ;\r\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\r\n            var max,\r\n                requiredAssoc,\r\n                totalAnswerableResponse,\r\n                usedChoices,\r\n                choicesIdentifiers,\r\n                sortedMapEntries,\r\n                i,\r\n                allPossibleMapEntries,\r\n                infiniteScoringPair;\r\n\r\n            options = _.defaults(options || {}, { possiblePairs: [], checkInfinitePair: false });\r\n\r\n            if (maxAssoc && minAssoc && maxAssoc < minAssoc) {\r\n                return 0;\r\n            }\r\n\r\n            if (template === 'MATCH_CORRECT') {\r\n                if (\r\n                    !responseDeclaration.correctResponse ||\r\n                    (_.isArray(responseDeclaration.correctResponse) &&\r\n                        (!responseDeclaration.correctResponse.length ||\r\n                            (maxAssoc && responseDeclaration.correctResponse.length > maxAssoc) ||\r\n                            (minAssoc )))\r\n                ) {\r\n                    //no correct response defined -> score always zero\r\n                    max = 0;\r\n                } else {\r\n                    max = 1; //is possible until proven otherwise\r\n\r\n                    //get the list of choices used in map entries\r\n                    choicesIdentifiers = [];\r\n                    _.forEach(responseDeclaration.correctResponse, function(pair) {\r\n                        var choices;\r\n                        if (!_.isString(pair)) {\r\n                            return;\r\n                        }\r\n                        choices = pair.trim().split(' ');\r\n                        if (_.isArray(choices) && choices.length === 2) {\r\n                            choicesIdentifiers.push(choices[0].trim());\r\n                            choicesIdentifiers.push(choices[1].trim());\r\n                        }\r\n                    });\r\n\r\n                    //check if the choices usage are possible within the constraint defined in the interaction\r\n                    _.forEach(_.countBy(choicesIdentifiers), function(count, identifier) {\r\n                        var matchMax;\r\n                        var choice = interaction.getChoiceByIdentifier(identifier);\r\n                        if (!choice) {\r\n                            max = 0;\r\n                            return false;\r\n                        }\r\n                        matchMax = parseInt(choice.attr('matchMax'), 10);\r\n                        if (matchMax && matchMax < count) {\r\n                            max = 0;\r\n                            return false;\r\n                        }\r\n                    });\r\n                }\r\n            } else if (template === 'MAP_RESPONSE') {\r\n                requiredAssoc = minAssoc;\r\n                totalAnswerableResponse = maxAssoc === 0 ? Infinity : maxAssoc;\r\n                usedChoices = {};\r\n\r\n                //at least a map entry is required to be valid QTI\r\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\r\n                    return 0;\r\n                }\r\n\r\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\r\n                if (mapDefault && mapDefault > 0) {\r\n                    _.forEachRight(options.possiblePairs, function(pair) {\r\n                        if (!pairExists(allPossibleMapEntries, pair)) {\r\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                //get the sorted list of mapentries ordered by the score\r\n                sortedMapEntries = _(allPossibleMapEntries)\r\n                    .map(function(score, pair) {\r\n                        return {\r\n                            score: parseFloat(score),\r\n                            pair: pair\r\n                        };\r\n                    })\r\n                    .sortBy('score')\r\n                    .reverse()\r\n                    .filter(function(mapEntry) {\r\n                        var pair = mapEntry.pair;\r\n                        var choices, choiceId, choice, _usedChoices;\r\n\r\n                        if (!_.isString(pair)) {\r\n                            return false;\r\n                        }\r\n\r\n                        //check that the pair is possible in term of matchMax\r\n                        choices = pair.trim().split(' ');\r\n                        if (_.isArray(choices) && choices.length === 2) {\r\n                            //clone the global used choices array to brings the changes in that object first before storing in the actual object\r\n                            _usedChoices = _.cloneDeep(usedChoices);\r\n\r\n                            for (i = 0; i < 2; i++) {\r\n                                choiceId = choices[i];\r\n\r\n                                //collect choices usage to check if the pair is possible\r\n                                if (!_usedChoices[choiceId]) {\r\n                                    choice = interaction.getChoiceByIdentifier(choiceId);\r\n                                    if (!choice) {\r\n                                        //unexisting choice, skip\r\n                                        return false;\r\n                                    }\r\n                                    _usedChoices[choiceId] = {\r\n                                        used: 0,\r\n                                        max: parseInt(choice.attr('matchMax'), 10)\r\n                                    };\r\n                                }\r\n                                if (\r\n                                    _usedChoices[choiceId].max &&\r\n                                    _usedChoices[choiceId].used === _usedChoices[choiceId].max\r\n                                ) {\r\n                                    //skip\r\n                                    return false;\r\n                                } else {\r\n                                    _usedChoices[choiceId].used++;\r\n                                }\r\n                            }\r\n\r\n                            //identify the edge case when we can get infinite association pair that create an infinite score\r\n                            infiniteScoringPair =\r\n                                infiniteScoringPair ||\r\n                                (options.checkInfinitePair &&\r\n                                    mapEntry.score > 0 &&\r\n                                    _usedChoices[choices[0]].max === 0 &&\r\n                                    _usedChoices[choices[1]].max === 0);\r\n\r\n                            //update the global used choices array\r\n                            _.assign(usedChoices, _usedChoices);\r\n                            return true;\r\n                        } else {\r\n                            //is not a correct response pair\r\n                            return false;\r\n                        }\r\n                    })\r\n                    .first(totalAnswerableResponse);\r\n\r\n                //infinite score => no normalMaximum should be generated for it\r\n                if (infiniteScoringPair) {\r\n                    return false;\r\n                }\r\n\r\n                //reduce the ordered list of map entries to calculate the max score\r\n                max = sortedMapEntries.reduce(function(acc, v) {\r\n                    var score = v.score;\r\n                    if (v.score < 0 && requiredAssoc <= 0) {\r\n                        //if the score is negative check if we have the choice not to pick it\r\n                        score = 0;\r\n                    }\r\n                    requiredAssoc--;\r\n                    return gamp.add(acc, score);\r\n                }, 0);\r\n\r\n                //compare the calculated maximum with the mapping upperbound\r\n                if (responseDeclaration.mappingAttributes.upperBound) {\r\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\r\n                }\r\n            } else if (template === 'MAP_RESPONSE_POINT') {\r\n                max = 0;\r\n            }\r\n            return max;\r\n        },\r\n\r\n        /**\r\n         * Compute the maximum score of a \"gap match\" typed interaction\r\n         * @param {Object} interaction - a standard interaction model object\r\n         * @returns {Number}\r\n         */\r\n        gapMatchInteractionBased: function gapMatchInteractionBased(interaction) {\r\n            var responseDeclaration = interaction.getResponseDeclaration();\r\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\r\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\r\n            var max,\r\n                skippableWrongResponse,\r\n                totalAnswerableResponse,\r\n                usedChoices,\r\n                usedGaps,\r\n                group1,\r\n                group2,\r\n                allPossibleMapEntries;\r\n            var getMatchMaxOrderedChoices = function getMatchMaxOrderedChoices(choiceCollection) {\r\n                return _(choiceCollection)\r\n                    .map(function(choice) {\r\n                        return {\r\n                            matchMax: choice.attr('matchMax') === 0 ? Infinity : choice.attr('matchMax') || 0,\r\n                            id: choice.id()\r\n                        };\r\n                    })\r\n                    .sortBy('matchMax')\r\n                    .reverse()\r\n                    .valueOf();\r\n            };\r\n            var calculatePossiblePairs = function calculatePossiblePairs(gapMatchInteraction) {\r\n                //get max number of pairs\r\n                var pairs = [];\r\n                var matchSet1 = getMatchMaxOrderedChoices(gapMatchInteraction.getChoices());\r\n                var matchSet2 = getMatchMaxOrderedChoices(gapMatchInteraction.getGaps());\r\n\r\n                _.forEach(matchSet1, function(choice1) {\r\n                    _.forEach(matchSet2, function(choice2) {\r\n                        pairs.push([choice1.id, choice2.id]);\r\n                    });\r\n                });\r\n\r\n                return pairs;\r\n            };\r\n\r\n            if (template === 'MATCH_CORRECT') {\r\n                if (\r\n                    !responseDeclaration.correctResponse ||\r\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\r\n                ) {\r\n                    //no correct response defined -> score always zero\r\n                    max = 0;\r\n                } else {\r\n                    max = 1; //is possible until proven otherwise\r\n                    group1 = [];\r\n                    group2 = [];\r\n                    _.forEach(responseDeclaration.correctResponse, function(pair) {\r\n                        var choices;\r\n                        if (!_.isString(pair)) {\r\n                            return;\r\n                        }\r\n                        choices = pair.trim().split(' ');\r\n                        if (_.isArray(choices) && choices.length === 2) {\r\n                            group1.push(choices[0].trim());\r\n                            group2.push(choices[1].trim());\r\n                        }\r\n                    });\r\n\r\n                    _.forEach(_.countBy(group1), function(count, identifier) {\r\n                        var choice = interaction.getChoiceByIdentifier(identifier);\r\n                        var matchMax = parseInt(choice.attr('matchMax'), 10);\r\n                        if (matchMax && matchMax < count) {\r\n                            max = 0;\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                    _.forEach(_.countBy(group2), function(count) {\r\n                        var matchMax = 1; //match max for a gap is always 1\r\n                        if ( matchMax < count) {\r\n                            max = 0;\r\n                            return false;\r\n                        }\r\n                    });\r\n                }\r\n            } else if (template === 'MAP_RESPONSE') {\r\n                skippableWrongResponse =  Infinity ;\r\n                totalAnswerableResponse =  Infinity ;\r\n                usedChoices = {};\r\n                usedGaps = {};\r\n\r\n                //at least a map entry is required to be valid QTI\r\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\r\n                    return 0;\r\n                }\r\n\r\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\r\n                if (mapDefault && mapDefault > 0) {\r\n                    _.forEachRight(calculatePossiblePairs(interaction), function(pair) {\r\n                        if (!pairExists(allPossibleMapEntries, pair)) {\r\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                max = _(allPossibleMapEntries)\r\n                    .map(function(score, pair) {\r\n                        return {\r\n                            score: parseFloat(score),\r\n                            pair: pair\r\n                        };\r\n                    })\r\n                    .sortBy('score')\r\n                    .reverse()\r\n                    .filter(function(mapEntry) {\r\n                        var pair = mapEntry.pair;\r\n                        var _usedChoices = _.cloneDeep(usedChoices);\r\n                        var choices, choiceId, gapId, choice;\r\n\r\n                        if (!_.isString(pair)) {\r\n                            return false;\r\n                        }\r\n\r\n                        choices = pair.trim().split(' ');\r\n                        if (_.isArray(choices) && choices.length === 2) {\r\n                            choiceId = choices[0];\r\n                            gapId = choices[1];\r\n                            if (!_usedChoices[choiceId]) {\r\n                                choice = interaction.getChoiceByIdentifier(choiceId);\r\n                                if (!choice) {\r\n                                    //inexisting choice, skip\r\n                                    return false;\r\n                                }\r\n                                _usedChoices[choiceId] = {\r\n                                    used: 0,\r\n                                    max: parseInt(choice.attr('matchMax'), 10)\r\n                                };\r\n                            }\r\n                            if (_usedChoices[choiceId].max && _usedChoices[choiceId].used === _usedChoices[choiceId].max) {\r\n                                //skip\r\n                                return false;\r\n                            }\r\n                            _usedChoices[choiceId].used++;\r\n\r\n                            if (!usedGaps[gapId]) {\r\n                                usedGaps[gapId] = {\r\n                                    used: 0,\r\n                                    max: 1\r\n                                };\r\n                            }\r\n                            if (usedGaps[gapId].max && usedGaps[gapId].used === usedGaps[gapId].max) {\r\n                                //skip\r\n                                return false;\r\n                            }\r\n                            usedGaps[gapId].used++;\r\n\r\n                            //if an only if it is ok, we merge the temporary used choices array into the global one\r\n                            _.assign(usedChoices, _usedChoices);\r\n                            return true;\r\n                        } else {\r\n                            //is not a correct response pair\r\n                            return false;\r\n                        }\r\n                    })\r\n                    .first(totalAnswerableResponse)\r\n                    .reduce(function(acc, v) {\r\n                        var score = v.score;\r\n                        if (score >= 0) {\r\n                            return acc + score;\r\n                        } else if (skippableWrongResponse > 0) {\r\n                            skippableWrongResponse--;\r\n                            return acc;\r\n                        } else {\r\n                            return acc + score;\r\n                        }\r\n                    }, 0);\r\n\r\n                //console.log(usedChoices, allPossibleMapEntries, sortedMaps);\r\n\r\n                //compare the calculated maximum with the mapping upperbound\r\n                if (responseDeclaration.mappingAttributes.upperBound) {\r\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\r\n                }\r\n            } else if (template === 'MAP_RESPONSE_POINT') {\r\n                max = false;\r\n            }\r\n            return max;\r\n        },\r\n\r\n        /**\r\n         * Compute the maximum score of a \"select point\" typed interaction\r\n         * @param {Object} interaction - a standard interaction model object\r\n         * @returns {Number}\r\n         */\r\n        selectPointInteractionBased: function selectPointInteractionBased(interaction) {\r\n            var maxChoice = parseInt(interaction.attr('maxChoices'), 10);\r\n            var responseDeclaration = interaction.getResponseDeclaration();\r\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\r\n            var max, skippableWrongResponse, totalAnswerableResponse;\r\n\r\n            if (template === 'MATCH_CORRECT' || template === 'MAP_RESPONSE') {\r\n                //such templates are not allowed\r\n                return 0;\r\n            } else if (template === 'MAP_RESPONSE_POINT') {\r\n                //calculate the maximum reachable score by choice map\r\n                skippableWrongResponse =  Infinity ;\r\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\r\n\r\n                max = _(responseDeclaration.mapEntries)\r\n                    .map(function(v) {\r\n                        return parseFloat(v.mappedValue);\r\n                    })\r\n                    .sortBy()\r\n                    .reverse()\r\n                    .first(totalAnswerableResponse)\r\n                    .reduce(function(acc, v) {\r\n                        if (v >= 0) {\r\n                            return acc + v;\r\n                        } else if (skippableWrongResponse > 0) {\r\n                            skippableWrongResponse--;\r\n                            return acc;\r\n                        } else {\r\n                            return acc + v;\r\n                        }\r\n                    }, 0);\r\n                max = parseFloat(max);\r\n\r\n                //compare the calculated maximum with the mapping upperbound\r\n                if (responseDeclaration.mappingAttributes.upperBound) {\r\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\r\n                }\r\n            }\r\n            return max;\r\n        },\r\n\r\n        /**\r\n         * Compute the maximum score of a \"slider\" typed interaction\r\n         * @param {Object} interaction - a standard interaction model object\r\n         * @returns {Number}\r\n         */\r\n        sliderInteractionBased: function sliderInteractionBased(interaction) {\r\n            var responseDeclaration = interaction.getResponseDeclaration();\r\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\r\n            var max, scoreMaps;\r\n\r\n            if (template === 'MATCH_CORRECT') {\r\n                if (\r\n                    !responseDeclaration.correctResponse ||\r\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\r\n                ) {\r\n                    //no correct response defined -> score always zero\r\n                    max = 0;\r\n                } else {\r\n                    max = 1;\r\n                }\r\n            } else if (template === 'MAP_RESPONSE') {\r\n                //at least a map entry is required to be valid QTI\r\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\r\n                    return 0;\r\n                }\r\n\r\n                //calculate the maximum reachable score by choice map\r\n                scoreMaps = _.values(responseDeclaration.mapEntries);\r\n                max = _(scoreMaps)\r\n                    .map(function(v) {\r\n                        return parseFloat(v);\r\n                    })\r\n                    .max();\r\n                max = parseFloat(max);\r\n\r\n                //compare the calculated maximum with the mapping upperbound\r\n                if (responseDeclaration.mappingAttributes.upperBound) {\r\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\r\n                }\r\n            } else if (template === 'MAP_RESPONSE_POINT') {\r\n                max = 0;\r\n            }\r\n            return max;\r\n        },\r\n\r\n        /**\r\n         * Compute the maximum score of a \"text entry\" typed interaction\r\n         * @param {Object} interaction - a standard interaction model object\r\n         * @returns {Number}\r\n         */\r\n        textEntryInteractionBased: function textEntryInteractionBased(interaction) {\r\n            var responseDeclaration = interaction.getResponseDeclaration();\r\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\r\n            var max, scoreMaps;\r\n\r\n            /**\r\n             * Check that a response is possible or not according to the defined patternmask\r\n             * @param {String} value\r\n             * @returns {Boolean}\r\n             */\r\n            var isPossibleResponse = function isPossibleResponse(value) {\r\n                var patternMask = interaction.attr('patternMask');\r\n                if (patternMask) {\r\n                    return !!value.match(new RegExp(patternMask));\r\n                } else {\r\n                    //no restriction by pattern so always possible\r\n                    return true;\r\n                }\r\n            };\r\n\r\n            if (template === 'MATCH_CORRECT') {\r\n                if (\r\n                    !responseDeclaration.correctResponse ||\r\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\r\n                ) {\r\n                    //no correct response defined -> score always zero\r\n                    max = 0;\r\n                } else {\r\n                    max = isPossibleResponse(responseDeclaration.correctResponse[0]) ? 1 : 0;\r\n                }\r\n            } else if (template === 'MAP_RESPONSE') {\r\n                //at least a map entry is required to be valid QTI\r\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\r\n                    return 0;\r\n                }\r\n\r\n                //calculate the maximum reachable score by choice map\r\n                scoreMaps = _.values(\r\n                    _.filter(responseDeclaration.mapEntries, function(score, key) {\r\n                        return isPossibleResponse(key);\r\n                    })\r\n                );\r\n                max = _(scoreMaps)\r\n                    .map(function(v) {\r\n                        return parseFloat(v);\r\n                    })\r\n                    .max();\r\n                max = parseFloat(max);\r\n\r\n                //compare the calculated maximum with the mapping upperbound\r\n                if (responseDeclaration.mappingAttributes.upperBound) {\r\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\r\n                }\r\n            } else if (template === 'MAP_RESPONSE_POINT') {\r\n                max = 0;\r\n            }\r\n            return max;\r\n        },\r\n\r\n        /**\r\n         * Compute the maximum score of a \"custom\" typed interaction\r\n         * @param {Object} interaction - a standard interaction model object\r\n         * @returns {Number}\r\n         */\r\n        customInteractionBased(interaction) {\r\n            const responseDeclaration = interaction.getResponseDeclaration();\r\n            const template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\r\n            let max;\r\n            if (template === 'MATCH_CORRECT') {\r\n                if (\r\n                    Array.isArray(responseDeclaration.correctResponse) &&\r\n                    (responseDeclaration.correctResponse.length)\r\n                ) {\r\n                    max = 1;\r\n                } else {\r\n                    max = 0;\r\n                }\r\n            } else if (template === 'MAP_RESPONSE') {\r\n                //at least a map entry is required to be valid QTI\r\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\r\n                    return 0;\r\n                }\r\n\r\n                const values = _.values(responseDeclaration.mapEntries)\r\n                    .map(function(v) {\r\n                        return parseFloat(v);\r\n                    });\r\n                max = _.max(values);\r\n\r\n                //compare the calculated maximum with the mapping upperbound\r\n                if (responseDeclaration.mappingAttributes.upperBound) {\r\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\r\n                }\r\n            } else {\r\n                max = 0;\r\n            }\r\n            return max;\r\n        }\r\n    };\n\n    return maxScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/AssociateInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var AssociateInteraction = BlockInteraction.extend({\r\n        qtiClass: 'associateInteraction',\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\r\n                var i,\r\n                    j,\r\n                    pairs = [];\r\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\r\n                for (i = 0; i < choices.length; i++) {\r\n                    for (j = i; j < choices.length; j++) {\r\n                        pairs.push([choices[i].id, choices[j].id]);\r\n                    }\r\n                }\r\n                return pairs;\r\n            };\r\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\r\n        }\r\n    });\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var ChoiceInteraction = BlockInteraction.extend({\r\n        qtiClass: 'choiceInteraction',\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.choiceInteractionBased(this);\r\n        }\r\n    });\n\n    return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ContainerInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/mixin/Container'], function (BlockInteraction, Container) { 'use strict';\n\n\tBlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar ContainerInteraction = BlockInteraction.extend({});\r\n\tContainer.augment(ContainerInteraction);\n\n\treturn ContainerInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/CustomElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {\r\n        prop: function(name, value) {\r\n            if (name) {\r\n                if (value !== undefined) {\r\n                    this.properties[name] = value;\r\n                } else {\r\n                    if (typeof name === 'object') {\r\n                        for (var prop in name) {\r\n                            this.prop(prop, name[prop]);\r\n                        }\r\n                    } else if (typeof name === 'string') {\r\n                        if (this.properties[name] === undefined) {\r\n                            return undefined;\r\n                        } else {\r\n                            return this.properties[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        removeProp: function(propNames) {\r\n            var _this = this;\r\n            if (typeof propNames === 'string') {\r\n                propNames = [propNames];\r\n            }\r\n            _.each(propNames, function(propName) {\r\n                delete _this.attributes[propName];\r\n            });\r\n            return this;\r\n        },\r\n        getProperties: function() {\r\n            return _.clone(this.properties);\r\n        },\r\n        getMarkupNamespace: function() {\r\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\r\n                return _.clone(this.markupNs);\r\n            } else {\r\n                var relatedItem = this.getRootElement();\r\n                if (relatedItem) {\r\n                    //set the default one:\r\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\r\n                    return {\r\n                        name: this.defaultMarkupNsName,\r\n                        uri: this.defaultMarkupNsUri\r\n                    };\r\n                }\r\n            }\r\n\r\n            return {};\r\n        },\r\n        setMarkupNamespace: function(name, uri) {\r\n            this.markupNs = {\r\n                name: name,\r\n                uri: uri\r\n            };\r\n        }\r\n    };\r\n\r\n    var CustomElement = {\r\n        augment: function(targetClass) {\r\n            Mixin.augment(targetClass, methods);\r\n        },\r\n        methods: methods\r\n    };\n\n    return CustomElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/CustomInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, Interaction, CustomElement, NamespacedElement, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    var CustomInteraction = Interaction.extend({\r\n        qtiClass: 'customInteraction',\r\n        defaultNsName: 'pci',\r\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableCustomInteraction',\r\n        nsUriFragment: 'portableCustomInteraction',\r\n        defaultMarkupNsName: 'html5',\r\n        defaultMarkupNsUri: 'html5',\r\n        init: function(serial, attributes) {\r\n            this._super(serial, attributes);\r\n\r\n            this.typeIdentifier = '';\r\n            this.markup = '';\r\n            this.properties = {};\r\n            this.libraries = [];\r\n            this.entryPoint = '';\r\n\r\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\r\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\r\n            this.markupNs = {};\r\n\r\n            this.pciReadyCallbacks = [];\r\n        },\r\n        is: function(qtiClass) {\r\n            return qtiClass === 'customInteraction' || this._super(qtiClass);\r\n        },\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {\r\n                    typeIdentifier: this.typeIdentifier,\r\n                    markup: this.markup,\r\n                    properties: this.properties,\r\n                    libraries: this.libraries,\r\n                    entryPoint: this.entryPoint,\r\n                    ns: {\r\n                        pci: this.getNamespace().name + ':'\r\n                    }\r\n                };\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        },\r\n        toArray: function() {\r\n            var arr = this._super();\r\n            arr.markup = this.markup;\r\n            arr.properties = this.properties;\r\n            return arr;\r\n        },\r\n        getMarkupNamespace: function() {\r\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\r\n                return _.clone(this.markupNs);\r\n            } else {\r\n                var relatedItem = this.getRootElement();\r\n                if (relatedItem) {\r\n                    //set the default one:\r\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\r\n                    return {\r\n                        name: this.defaultMarkupNsName,\r\n                        uri: this.defaultMarkupNsUri\r\n                    };\r\n                }\r\n            }\r\n\r\n            return {};\r\n        },\r\n        setMarkupNamespace: function(name, uri) {\r\n            this.markupNs = {\r\n                name: name,\r\n                uri: uri\r\n            };\r\n        },\r\n        onPciReady: function(callback) {\r\n            this.pciReadyCallbacks.push(callback);\r\n\r\n            if (this.data('pci')) {\r\n                //if pci is already ready, call it immediately\r\n                this.triggerPciReady();\r\n            }\r\n        },\r\n        triggerPciReady: function() {\r\n            var _this = this,\r\n                pci = this.data('pci');\r\n\r\n            if (pci) {\r\n                _.each(this.pciReadyCallbacks, function(fn) {\r\n                    fn.call(_this, pci);\r\n                });\r\n\r\n                //empty the stack of ready callbacks\r\n                this.pciReadyCallbacks = [];\r\n\r\n                //mark the interaction as ready\r\n                this.data('pciReady', true);\r\n            } else {\r\n                throw 'cannot trigger pci ready when no pci is actually attached to the interaction';\r\n            }\r\n        },\r\n        onPci: function(event, callback) {\r\n            this.onPciReady(function(pci) {\r\n                if (_.isFunction(pci.on)) {\r\n                    pci.on(event, callback);\r\n                } else {\r\n                    throw 'the pci does not implement on() function';\r\n                }\r\n            });\r\n            return this;\r\n        },\r\n        offPci: function(event) {\r\n            this.onPciReady(function(pci) {\r\n                if (_.isFunction(pci.off)) {\r\n                    pci.off(event);\r\n                } else {\r\n                    throw 'the pci does not implement off() function';\r\n                }\r\n            });\r\n            return this;\r\n        },\r\n        triggerPci: function(event, args) {\r\n            this.onPciReady(function(pci) {\r\n                if (_.isFunction(pci.off)) {\r\n                    pci.trigger(event, args);\r\n                } else {\r\n                    throw 'the pci does not implement off() function';\r\n                }\r\n            });\r\n            return this;\r\n        },\r\n        getNormalMaximum() {\r\n            return maxScore.customInteractionBased(this);\r\n        }\r\n    });\r\n\r\n    //add portable element standard functions\r\n    CustomElement.augment(CustomInteraction);\r\n    NamespacedElement.augment(CustomInteraction);\n\n    return CustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction'], function (Interaction) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    var InlineInteraction = Interaction.extend({\r\n        is: function(qtiClass) {\r\n            return qtiClass === 'inlineInteraction' || this._super(qtiClass);\r\n        }\r\n    });\n\n    return InlineInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var EndAttemptInteraction = InlineInteraction.extend({\r\n        qtiClass: 'endAttemptInteraction'\r\n    });\n\n    return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, BlockInteraction, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var ExtendedTextInteraction = BlockInteraction.extend({\r\n        qtiClass: 'extendedTextInteraction',\r\n        render: function render() {\r\n            var i,\r\n                args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {\r\n                    multiple: false,\r\n                    maxStringLoop: []\r\n                },\r\n                response = this.getResponseDeclaration();\r\n\r\n            if (\r\n                this.attr('maxStrings') &&\r\n                (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\r\n            ) {\r\n                defaultData.multiple = true;\r\n                for (i = 0; i < this.attr('maxStrings'); i++) {\r\n                    defaultData.maxStringLoop.push(i + ''); //need to convert to string. The tpl engine fails otherwise\r\n                }\r\n            }\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        },\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.textEntryInteractionBased(this);\r\n        }\r\n    });\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var GapMatchInteraction = ContainerInteraction.extend({\r\n        qtiClass: 'gapMatchInteraction',\r\n        getGaps: function getGaps() {\r\n            return this.getBody().getElements('gap');\r\n        },\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.gapMatchInteractionBased(this);\r\n        }\r\n    });\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ObjectInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/Object'], function (QtiBlockInteraction, QtiObject) { 'use strict';\n\n    QtiBlockInteraction = QtiBlockInteraction && Object.prototype.hasOwnProperty.call(QtiBlockInteraction, 'default') ? QtiBlockInteraction['default'] : QtiBlockInteraction;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiObjectInteraction = QtiBlockInteraction.extend({\r\n        //common methods to object containers (start)\r\n        initObject: function(object) {\r\n            this.object = object || new QtiObject();\r\n        },\r\n        getObject: function() {\r\n            return this.object;\r\n        }\r\n        //common methods to object containers (end)\r\n    });\n\n    return QtiObjectInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicInteraction',['taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (QtiObjectInteraction, _, rendererConfig) { 'use strict';\n\n    QtiObjectInteraction = QtiObjectInteraction && Object.prototype.hasOwnProperty.call(QtiObjectInteraction, 'default') ? QtiObjectInteraction['default'] : QtiObjectInteraction;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiGraphicInteraction = QtiObjectInteraction.extend({\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {\r\n                    backgroundImage: this.object.getAttributes(),\r\n                    object: this.object.render(renderer)\r\n                };\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        }\r\n    });\n\n    return QtiGraphicInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var GraphicAssociateInteraction = GraphicInteraction.extend({\r\n        qtiClass: 'graphicAssociateInteraction',\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\r\n                var i,\r\n                    j,\r\n                    pairs = [];\r\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\r\n                for (i = 0; i < choices.length; i++) {\r\n                    for (j = i; j < choices.length; j++) {\r\n                        if (i !== j) {\r\n                            pairs.push([choices[i].id, choices[j].id]);\r\n                        }\r\n                    }\r\n                }\r\n                return pairs;\r\n            };\r\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\r\n        }\r\n    });\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, Element, _, rendererConfig, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var GraphicGapMatchInteraction = GraphicInteraction.extend({\r\n        qtiClass: 'graphicGapMatchInteraction',\r\n        init: function init(serial, attributes) {\r\n            this._super(serial, attributes);\r\n            this.gapImgs = {};\r\n        },\r\n        addGapImg: function addGapImg(gapImg) {\r\n            if (Element.isA(gapImg, 'gapImg')) {\r\n                gapImg.setRootElement(this.getRootElement() || null);\r\n                this.gapImgs[gapImg.getSerial()] = gapImg;\r\n            }\r\n        },\r\n        removeGapImg: function removeGapImg(gapImg) {\r\n            var serial = '';\r\n            if (typeof gapImg === 'string') {\r\n                serial = gapImg;\r\n            } else if (Element.isA(gapImg, 'gapImg')) {\r\n                serial = gapImg.getSerial();\r\n            }\r\n            delete this.gapImgs[serial];\r\n            return this;\r\n        },\r\n        getGapImgs: function getGapImgs() {\r\n            return _.clone(this.gapImgs);\r\n        },\r\n        getGapImg: function getGapImg(serial) {\r\n            return this.gapImgs[serial];\r\n        },\r\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\r\n            var choice = this._super(identifier);\r\n            if (!choice) {\r\n                //if not found among the choices, search the gapImgs\r\n                choice = _.find(this.gapImgs, function(elt) {\r\n                    return elt && elt.id() === identifier;\r\n                });\r\n            }\r\n            return choice;\r\n        },\r\n        getComposingElements: function getComposingElements() {\r\n            var serial,\r\n                elts = this._super();\r\n            //recursive to choices:\r\n            for (serial in this.gapImgs) {\r\n                elts[serial] = this.gapImgs[serial];\r\n                elts = _.extend(elts, this.gapImgs[serial].getComposingElements());\r\n            }\r\n            return elts;\r\n        },\r\n        find: function find(serial) {\r\n            var found = this._super(serial);\r\n            if (!found) {\r\n                if (this.gapImgs[serial]) {\r\n                    found = { parent: this, element: this.gapImgs[serial] };\r\n                }\r\n            }\r\n            return found;\r\n        },\r\n        render: function render() {\r\n            var serial,\r\n                args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {\r\n                    gapImgs: []\r\n                };\r\n\r\n            //note: no choice shuffling option available for graphic gap match\r\n            var gapImgs = this.getGapImgs();\r\n            for (serial in gapImgs) {\r\n                if (Element.isA(gapImgs[serial], 'choice')) {\r\n                    defaultData.gapImgs.push(gapImgs[serial].render({}, null, '', renderer));\r\n                }\r\n            }\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        },\r\n        toArray: function toArray() {\r\n            var serial,\r\n                gapImgs,\r\n                arr = this._super();\r\n            arr.gapImgs = {};\r\n            gapImgs = this.getGapImgs();\r\n            for (serial in gapImgs) {\r\n                arr.gapImgs[serial] = gapImgs[serial].toArray();\r\n            }\r\n            return arr;\r\n        },\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            var calculatePossiblePairs = function calculatePossiblePairs(graphicGapInteraction) {\r\n                var pairs = [];\r\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getGapImgs());\r\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getChoices());\r\n\r\n                _.forEach(matchSet1, function(choice1) {\r\n                    _.forEach(matchSet2, function(choice2) {\r\n                        pairs.push([choice1.id, choice2.id]);\r\n                    });\r\n                });\r\n\r\n                return pairs;\r\n            };\r\n            return maxScore.associateInteractionBased(this, {\r\n                possiblePairs: calculatePossiblePairs(this),\r\n                checkInfinitePair: true\r\n            });\r\n        }\r\n    });\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var GraphicOrderInteraction = GraphicInteraction.extend({\r\n        qtiClass: 'graphicOrderInteraction',\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.orderInteractionBased(this);\r\n        }\r\n    });\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HotspotInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var HotspotInteraction = GraphicInteraction.extend({\r\n        qtiClass: 'hotspotInteraction',\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.choiceInteractionBased(this);\r\n        }\r\n    });\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HottextInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, Element, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var HottextInteraction = ContainerInteraction.extend({\r\n        qtiClass: 'hottextInteraction',\r\n        getChoices: function() {\r\n            return this.getBody().getElements('hottext');\r\n        },\r\n        getChoice: function(serial) {\r\n            var element = this.getBody().getElement(serial);\r\n            return Element.isA(element, 'choice') ? element : null;\r\n        },\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.choiceInteractionBased(this);\r\n        }\r\n    });\n\n    return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var InlineChoiceInteraction = InlineInteraction.extend({\r\n        qtiClass: 'inlineChoiceInteraction',\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.choiceInteractionBased(this, { maxChoices: 1 });\r\n        }\r\n    });\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MatchInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, SimpleAssociableChoice, _, rendererConfig, util, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    SimpleAssociableChoice = SimpleAssociableChoice && Object.prototype.hasOwnProperty.call(SimpleAssociableChoice, 'default') ? SimpleAssociableChoice['default'] : SimpleAssociableChoice;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var MatchInteraction = BlockInteraction.extend({\r\n        qtiClass: 'matchInteraction',\r\n        init: function init(serial, attributes) {\r\n            this._super(serial, attributes);\r\n            this.choices = [{}, {}];\r\n        },\r\n        addChoice: function addChoice(choice, matchSet) {\r\n            matchSet = parseInt(matchSet);\r\n            if (this.choices[matchSet]) {\r\n                choice.setRootElement(this.getRootElement() || null);\r\n                this.choices[matchSet][choice.getSerial()] = choice;\r\n            }\r\n        },\r\n        getChoices: function getChoices(matchSet) {\r\n            matchSet = parseInt(matchSet);\r\n            if (this.choices[matchSet]) {\r\n                return _.clone(this.choices[matchSet]);\r\n            } else {\r\n                return _.clone(this.choices);\r\n            }\r\n        },\r\n        getChoice: function getChoice(serial) {\r\n            return this.choices[0][serial] || this.choices[1][serial] || null;\r\n        },\r\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\r\n            var i, matchSet, serial;\r\n            //recursive to both match sets:\r\n            for (i = 0; i < 2; i++) {\r\n                matchSet = this.getChoices(i);\r\n                for (serial in matchSet) {\r\n                    if (matchSet[serial] instanceof SimpleAssociableChoice && matchSet[serial].id() === identifier) {\r\n                        return matchSet[serial];\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getComposingElements: function getComposingElements() {\r\n            var i, matchSet, serial;\r\n            var elts = this._super();\r\n            //recursive to both match sets:\r\n            for (i = 0; i < 2; i++) {\r\n                matchSet = this.getChoices(i);\r\n                for (serial in matchSet) {\r\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\r\n                        elts[serial] = matchSet[serial];\r\n                        elts = _.extend(elts, matchSet[serial].getComposingElements());\r\n                    }\r\n                }\r\n            }\r\n\r\n            return elts;\r\n        },\r\n        find: function find(serial) {\r\n            var found = this._super(serial);\r\n            if (!found) {\r\n                found = util.findInCollection(this, ['choices.0', 'choices.1'], serial);\r\n            }\r\n            return found;\r\n        },\r\n        render: function render() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments);\r\n            var renderer = args.renderer || this.getRenderer();\r\n            var defaultData = {\r\n                matchSet1: [],\r\n                matchSet2: []\r\n            };\r\n            var choices, i, matchSet, serial;\r\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\r\n\r\n            if (!renderer) {\r\n                throw 'no renderer found for the interaction ' + this.qtiClass;\r\n            }\r\n\r\n            if (this.attr('shuffle') && renderer.getOption('shuffleChoices')) {\r\n                choices = renderer.getShuffledChoices(this);\r\n            } else {\r\n                choices = this.getChoices();\r\n            }\r\n\r\n            for (i = 0; i < 2; i++) {\r\n                matchSet = choices[i];\r\n                for (serial in matchSet) {\r\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\r\n                        defaultData['matchSet' + (i + 1)].push(\r\n                            matchSet[serial].render(\r\n                                _.clone(interactionData, true),\r\n                                null,\r\n                                'simpleAssociableChoice.matchInteraction',\r\n                                renderer\r\n                            )\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        },\r\n        postRender: function postRender(data, altClassName, renderer) {\r\n            renderer = renderer || this.getRenderer();\r\n            return _(this.getChoices())\r\n                .map(function(choices) {\r\n                    return _(choices)\r\n                        .filter(function(choice) {\r\n                            return choice instanceof SimpleAssociableChoice;\r\n                        })\r\n                        .map(function(choice) {\r\n                            return choice.postRender({}, 'simpleAssociableChoice.matchInteraction', renderer);\r\n                        })\r\n                        .value();\r\n                })\r\n                .flatten(true)\r\n                .value()\r\n                .concat(this._super(data, altClassName, renderer));\r\n        },\r\n        toArray: function toArray() {\r\n            var i, matchSet, serial;\r\n            var arr = this._super();\r\n            arr.choices = { 0: {}, 1: {} };\r\n            for (i = 0; i < 2; i++) {\r\n                matchSet = this.getChoices(i);\r\n                for (serial in matchSet) {\r\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\r\n                        arr.choices[i][serial] = matchSet[serial].toArray();\r\n                    }\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            var calculatePossiblePairs = function calculatePossiblePairs(matchInteraction) {\r\n                //get max number of pairs\r\n                var pairs = [];\r\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(0));\r\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(1));\r\n\r\n                _.forEach(matchSet1, function(choice1) {\r\n                    _.forEach(matchSet2, function(choice2) {\r\n                        pairs.push([choice1.id, choice2.id]);\r\n                    });\r\n                });\r\n\r\n                return pairs;\r\n            };\r\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\r\n        }\r\n    });\n\n    return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MediaInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, ObjectInteraction, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    ObjectInteraction = ObjectInteraction && Object.prototype.hasOwnProperty.call(ObjectInteraction, 'default') ? ObjectInteraction['default'] : ObjectInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    var MediaInteraction = ObjectInteraction.extend({\r\n        qtiClass: 'mediaInteraction',\r\n        render: function render() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {\r\n                    object: this.object.render({}, null, '', renderer)\r\n                };\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        },\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return 0;\r\n        }\r\n    });\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/OrderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var OrderInteraction = BlockInteraction.extend({\r\n        qtiClass: 'orderInteraction',\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.orderInteractionBased(this);\r\n        }\r\n    });\n\n    return OrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var SelectPointInteraction = GraphicInteraction.extend({\r\n        qtiClass: 'selectPointInteraction',\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.selectPointInteractionBased(this);\r\n        }\r\n    });\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SliderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var SliderInteraction = BlockInteraction.extend({\r\n        qtiClass: 'sliderInteraction',\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.sliderInteractionBased(this);\r\n        }\r\n    });\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var TextEntryInteraction = InlineInteraction.extend({\r\n        qtiClass: 'textEntryInteraction',\r\n        getNormalMaximum: function getNormalMaximum() {\r\n            return maxScore.textEntryInteractionBased(this);\r\n        }\r\n    });\n\n    return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/UploadInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var UploadInteraction = InlineInteraction.extend({\r\n        qtiClass: 'uploadInteraction'\r\n    });\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerItemBody',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\r\n    _.extend(methods, Container.methods);\r\n    _.extend(methods, {\r\n        initContainer: function(body) {\r\n            Container.methods.initContainer.call(this, body);\r\n            this.bdy.contentModel = 'itemBody';\r\n        }\r\n    });\r\n\r\n    var ContainerItemBody = {\r\n        augment: function(targetClass) {\r\n            Mixin.augment(targetClass, methods);\r\n        },\r\n        methods: methods\r\n    };\n\n    return ContainerItemBody;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Item',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/ContainerItemBody', 'lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util'], function (Element, IdentifiedElement, Container, _, $, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var Item = IdentifiedElement.extend({\r\n        qtiClass: 'assessmentItem',\r\n        init: function init(serial, attributes) {\r\n            this._super(serial, attributes);\r\n            this.rootElement = this;\r\n            this.stylesheets = {};\r\n            this.responses = {};\r\n            this.outcomes = {};\r\n            this.modalFeedbacks = {};\r\n            this.namespaces = {};\r\n            this.schemaLocations = {};\r\n            this.responseProcessing = null;\r\n            this.apipAccessibility = null;\r\n        },\r\n        getInteractions: function getInteractions() {\r\n            var interactions = [];\r\n            var elts = this.getComposingElements();\r\n            for (var serial in elts) {\r\n                if (Element.isA(elts[serial], 'interaction')) {\r\n                    interactions.push(elts[serial]);\r\n                }\r\n            }\r\n            return interactions;\r\n        },\r\n        addResponseDeclaration: function addResponseDeclaration(response) {\r\n            if (Element.isA(response, 'responseDeclaration')) {\r\n                response.setRootElement(this);\r\n                this.responses[response.getSerial()] = response;\r\n            } else {\r\n                throw 'is not a qti response declaration';\r\n            }\r\n            return this;\r\n        },\r\n        getResponseDeclaration: function getResponseDeclaration(identifier) {\r\n            for (var i in this.responses) {\r\n                if (this.responses[i].attr('identifier') === identifier) {\r\n                    return this.responses[i];\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        addOutcomeDeclaration: function addOutcomeDeclaration(outcome) {\r\n            if (Element.isA(outcome, 'outcomeDeclaration')) {\r\n                outcome.setRootElement(this);\r\n                this.outcomes[outcome.getSerial()] = outcome;\r\n            } else {\r\n                throw 'is not a qti outcome declaration';\r\n            }\r\n            return this;\r\n        },\r\n        getOutcomeDeclaration: function getOutcomeDeclaration(identifier) {\r\n            var found;\r\n            _.forEach(this.outcomes, function(outcome) {\r\n                if (outcome.id() === identifier) {\r\n                    found = outcome;\r\n                    return false;\r\n                }\r\n            });\r\n            return found;\r\n        },\r\n        getOutcomes: function getOutcomes() {\r\n            return _.clone(this.outcomes);\r\n        },\r\n        removeOutcome: function removeOutcome(identifier) {\r\n            var outcome = this.getOutcomeDeclaration(identifier);\r\n            if (outcome) {\r\n                this.outcomes = _.omit(this.outcomes, outcome.getSerial());\r\n            }\r\n        },\r\n        addModalFeedback: function addModalFeedback(feedback) {\r\n            if (Element.isA(feedback, 'modalFeedback')) {\r\n                feedback.setRootElement(this);\r\n                this.modalFeedbacks[feedback.getSerial()] = feedback;\r\n            } else {\r\n                throw 'is not a qti modal feedback';\r\n            }\r\n            return this;\r\n        },\r\n        getComposingElements: function getComposingElements() {\r\n            var elts = this._super(),\r\n                _this = this;\r\n            _.forEach(['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], function(elementCollection) {\r\n                for (var i in _this[elementCollection]) {\r\n                    var elt = _this[elementCollection][i];\r\n                    elts[i] = elt;\r\n                    elts = _.extend(elts, elt.getComposingElements());\r\n                }\r\n            });\r\n            if (this.responseProcessing instanceof Element) {\r\n                elts[this.responseProcessing.getSerial()] = this.responseProcessing;\r\n            }\r\n            return elts;\r\n        },\r\n        find: function find(serial) {\r\n            var found = this._super(serial);\r\n\r\n            if (!found) {\r\n                found = util.findInCollection(this, ['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], serial);\r\n            }\r\n\r\n            return found;\r\n        },\r\n        getResponses: function getResponses() {\r\n            return _.clone(this.responses);\r\n        },\r\n        getRootElement: function getRootElement() {\r\n            return this;\r\n        },\r\n        addNamespace: function addNamespace(name, uri) {\r\n            this.namespaces[name] = uri;\r\n        },\r\n        setNamespaces: function setNamespaces(namespaces) {\r\n            this.namespaces = namespaces;\r\n        },\r\n        getNamespaces: function getNamespaces() {\r\n            return _.clone(this.namespaces);\r\n        },\r\n        setSchemaLocations: function setSchemaLocations(locations) {\r\n            this.schemaLocations = locations;\r\n        },\r\n        getSchemaLocations: function getSchemaLocations() {\r\n            return _.clone(this.schemaLocations);\r\n        },\r\n        setApipAccessibility: function setApipAccessibility(apip) {\r\n            this.apipAccessibility = apip || null;\r\n        },\r\n        getApipAccessibility: function getApipAccessibility() {\r\n            return this.apipAccessibility;\r\n        },\r\n        addStylesheet: function addStylesheet(stylesheet) {\r\n            if (Element.isA(stylesheet, 'stylesheet')) {\r\n                stylesheet.setRootElement(this);\r\n                this.stylesheets[stylesheet.getSerial()] = stylesheet;\r\n            } else {\r\n                throw 'is not a qti stylesheet declaration';\r\n            }\r\n            return this;\r\n        },\r\n        removeStyleSheet: function removeStyleSheet(stylesheet) {\r\n            delete this.stylesheets[stylesheet.getSerial()];\r\n            return this;\r\n        },\r\n        stylesheetExists: function stylesheetExists(href) {\r\n            var exists = false;\r\n            _.forEach(this.stylesheets, function(stylesheet) {\r\n                if (stylesheet.attr('href') === href) {\r\n                    exists = true;\r\n                    return false; //break each loop\r\n                }\r\n            });\r\n            return exists;\r\n        },\r\n        setResponseProcessing: function setResponseProcessing(rp) {\r\n            if (Element.isA(rp, 'responseProcessing')) {\r\n                rp.setRootElement(this);\r\n                this.responseProcessing = rp;\r\n            } else {\r\n                throw 'is not a response processing';\r\n            }\r\n            return this;\r\n        },\r\n        toArray: function toArray() {\r\n            var arr = this._super();\r\n            var toArray = function(elt) {\r\n                return elt.toArray();\r\n            };\r\n            arr.namespaces = this.namespaces;\r\n            arr.schemaLocations = this.schemaLocations;\r\n            arr.outcomes = _.map(this.outcomes, toArray);\r\n            arr.responses = _.map(this.responses, toArray);\r\n            arr.stylesheets = _.map(this.stylesheets, toArray);\r\n            arr.modalFeedbacks = _.map(this.modalFeedbacks, toArray);\r\n            arr.responseProcessing = this.responseProcessing.toArray();\r\n            return arr;\r\n        },\r\n        isEmpty: function isEmpty() {\r\n            var body = this.body().trim();\r\n\r\n            if (body) {\r\n                //hack to fix #2652\r\n                var $dummy = $('<div>').html(body),\r\n                    $children = $dummy.children();\r\n\r\n                if ($children.length === 1 && $children.hasClass('empty')) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clean up an item rendering.\r\n         * Ask the renderer to run destroy if exists.\r\n         */\r\n        clear: function clear() {\r\n            var renderer = this.getRenderer();\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.destroy)) {\r\n                    renderer.destroy(this);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    Container.augment(Item);\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[],function () { 'use strict';\n\n    var qtiClasses = {\r\n        _container: 'taoQtiItem/qtiItem/core/Container',\r\n        assessmentItem: 'taoQtiItem/qtiItem/core/Item',\r\n        responseProcessing: 'taoQtiItem/qtiItem/core/ResponseProcessing',\r\n        _simpleFeedbackRule: 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\r\n        stylesheet: 'taoQtiItem/qtiItem/core/Stylesheet',\r\n        math: 'taoQtiItem/qtiItem/core/Math',\r\n        figure: 'taoQtiItem/qtiItem/core/Figure',\r\n        img: 'taoQtiItem/qtiItem/core/Img',\r\n        figcaption: 'taoQtiItem/qtiItem/core/Figcaption',\r\n        object: 'taoQtiItem/qtiItem/core/Object',\r\n        outcomeDeclaration: 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\r\n        responseDeclaration: 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\r\n        rubricBlock: 'taoQtiItem/qtiItem/core/RubricBlock',\r\n        associableHotspot: 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\r\n        gap: 'taoQtiItem/qtiItem/core/choices/Gap',\r\n        gapImg: 'taoQtiItem/qtiItem/core/choices/GapImg',\r\n        gapText: 'taoQtiItem/qtiItem/core/choices/GapText',\r\n        hotspotChoice: 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\r\n        hottext: 'taoQtiItem/qtiItem/core/choices/Hottext',\r\n        inlineChoice: 'taoQtiItem/qtiItem/core/choices/InlineChoice',\r\n        simpleAssociableChoice: 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\r\n        simpleChoice: 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\r\n        associateInteraction: 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\r\n        choiceInteraction: 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\r\n        endAttemptInteraction: 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\r\n        extendedTextInteraction: 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\r\n        gapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\r\n        graphicAssociateInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\r\n        graphicGapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\r\n        graphicOrderInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\r\n        hotspotInteraction: 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\r\n        hottextInteraction: 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\r\n        inlineChoiceInteraction: 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\r\n        matchInteraction: 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\r\n        mediaInteraction: 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\r\n        orderInteraction: 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\r\n        prompt: 'taoQtiItem/qtiItem/core/interactions/Prompt',\r\n        selectPointInteraction: 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\r\n        sliderInteraction: 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\r\n        textEntryInteraction: 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\r\n        uploadInteraction: 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\r\n        feedbackBlock: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\r\n        feedbackInline: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\r\n        modalFeedback: 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\r\n        customInteraction: 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\r\n        infoControl: 'taoQtiItem/qtiItem/core/PortableInfoControl',\r\n        include: 'taoQtiItem/qtiItem/core/Include',\r\n        table: 'taoQtiItem/qtiItem/core/Table',\r\n        printedVariable: 'taoQtiItem/qtiItem/core/PrintedVariable',\r\n        _tooltip: 'taoQtiItem/qtiItem/core/Tooltip'\r\n    };\n\n    return qtiClasses;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xmlNsHandler',[],function () { 'use strict';\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA\r\n     */\r\n\r\n    /**\r\n     * XML namespace handling\r\n     */\r\n\r\n    /**\r\n     * Elements that need to be prefixed\r\n     *\r\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\r\n     * @type {string}\r\n     */\r\n    const prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\r\n\r\n    /**\r\n     * Find a possibly existing prefix\r\n     *\r\n     * @param namespaces\r\n     * @param html5Ns\r\n     * @returns {*}\r\n     */\r\n    function getPrefix(namespaces, html5Ns) {\r\n        let key;\r\n        for (key in namespaces) {\r\n            if (namespaces[key] === html5Ns) {\r\n                return key;\r\n            }\r\n        }\r\n        return 'qh5';\r\n    }\r\n\r\n    var xmlNsHandler = {\r\n        /**\r\n         * Remove prefix to make sure elements are properly displayed\r\n         *\r\n         * @param body\r\n         */\r\n        stripNs: function stripNs(body) {\r\n            const pattern = '([\\\\w]+)\\\\:(' + prefixed + ')';\r\n            const openRegEx = new RegExp('(<' + pattern + ')', 'gi');\r\n            const closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\r\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\r\n        },\r\n\r\n        /**\r\n         * Add a prefix to those elements that require one\r\n         *\r\n         * @param xml\r\n         * @param namespaces\r\n         * @returns {*}\r\n         */\r\n        restoreNs: function restoreNs(xml, namespaces, ignoreMarkup = false) {\r\n            let xmlCopy = xml;\r\n            if (ignoreMarkup) {\r\n                // cut from xmlCopy <markup...>...</markup>\r\n                // because markup should be html without namespace qh5\r\n                xmlCopy = xml.replace(/((?=<markup)(.|\\n)*?(?:<\\/markup>)+)/gim, '');\r\n            }\r\n            const xmlRe = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\r\n            const tagRe = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\r\n            const xmlMatch = xmlCopy.match(xmlRe);\r\n            const imsXsd = 'http://www.imsglobal.org/xsd';\r\n            const html5Ns = imsXsd + '/imsqtiv2p2_html5_v1p0';\r\n            const prefix = getPrefix(namespaces, html5Ns);\r\n            const prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\r\n            let i = xmlMatch ? xmlMatch.length : 0;\r\n\r\n            if (!xmlMatch) {\r\n                return xml;\r\n            }\r\n\r\n            while (i--) {\r\n                const tagMatch = xmlMatch[i].match(tagRe);\r\n                xml = xml.replace(\r\n                    xmlMatch[i],\r\n                    tagMatch[5]\r\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\r\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\r\n                );\r\n            }\r\n\r\n            // we found matches but no namespace has been set\r\n            if (xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\r\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\r\n            }\r\n\r\n            // make sure the item is set to qti 2.2\r\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\r\n            xml = xml.replace(\r\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\r\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\r\n            );\r\n\r\n            return xml;\r\n        }\r\n    };\n\n    return xmlNsHandler;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/itemScore',[],function () { 'use strict';\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Returns iteraction score response rule object\r\n     *\r\n     * @param {String} responseIdentifiers interactions reponse indentifiers\r\n     * @returns {Obeject}\r\n     */\r\n    var itemScore = (responseIdentifiers) => {\r\n        const outcomeExpressions = responseIdentifiers.map((outcomeIdentifier) => ({\r\n            qtiClass: 'variable',\r\n            attributes: {\r\n                identifier: `SCORE_${outcomeIdentifier}`,\r\n            },\r\n        }));\r\n\r\n        return {\r\n            qtiClass: 'setOutcomeValue',\r\n            attributes: {\r\n                identifier: 'SCORE',\r\n            },\r\n            expression: {\r\n                qtiClass: 'sum',\r\n                expressions: outcomeExpressions,\r\n            },\r\n        };\r\n    };\n\n    return itemScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/xmlNsHandler', 'core/moduleLoader', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/helper/itemScore'], function (_, _class, qtiClasses, Element, xmlNsHandler, moduleLoader, responseHelper, itemScoreHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    qtiClasses = qtiClasses && Object.prototype.hasOwnProperty.call(qtiClasses, 'default') ? qtiClasses['default'] : qtiClasses;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    xmlNsHandler = xmlNsHandler && Object.prototype.hasOwnProperty.call(xmlNsHandler, 'default') ? xmlNsHandler['default'] : xmlNsHandler;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    itemScoreHelper = itemScoreHelper && Object.prototype.hasOwnProperty.call(itemScoreHelper, 'default') ? itemScoreHelper['default'] : itemScoreHelper;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\r\n     *\r\n     */\r\n\r\n    /**\r\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\r\n     */\r\n    const loadPortableCustomElementProperties = (portableElement, rawProperties) => {\r\n        var properties = {};\r\n\r\n        _.forOwn(rawProperties, (value, key) => {\r\n            try {\r\n                properties[key] = JSON.parse(value);\r\n            } catch (e) {\r\n                properties[key] = value;\r\n            }\r\n        });\r\n        portableElement.properties = properties;\r\n    };\r\n\r\n    const loadPortableCustomElementData = (portableElement, data) => {\r\n        portableElement.typeIdentifier = data.typeIdentifier;\r\n        portableElement.markup = data.markup;\r\n        portableElement.entryPoint = data.entryPoint;\r\n        portableElement.libraries = data.libraries;\r\n        portableElement.setNamespace('', data.xmlns);\r\n\r\n        loadPortableCustomElementProperties(portableElement, data.properties);\r\n    };\r\n\r\n    var Loader = Class.extend({\r\n        init(item, classesLocation) {\r\n            this.qti = {}; //loaded qti classes are store here\r\n            this.classesLocation = {};\r\n            this.item = item || null; //starts either from scratch or with an existing item object\r\n\r\n            this.setClassesLocation(classesLocation || qtiClasses); //load default location for qti classes model\r\n        },\r\n        setClassesLocation(qtiClassesList) {\r\n            _.extend(this.classesLocation, qtiClassesList);\r\n\r\n            return this;\r\n        },\r\n        getRequiredClasses(data) {\r\n            let ret = [];\r\n\r\n            for (let i in data) {\r\n                if (i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement') {\r\n                    //although a _container is a concrete class in TAO, it is not defined in QTI standard\r\n                    ret.push(data[i]);\r\n                } else if (typeof data[i] === 'object' && i !== 'responseRules') {\r\n                    //responseRules should'nt be part of the parsing\r\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        },\r\n        loadRequiredClasses(data, callback, reload) {\r\n            let requiredClass;\r\n            const requiredClasses = this.getRequiredClasses(data, reload);\r\n            const required = [];\r\n\r\n            for (let i in requiredClasses) {\r\n                requiredClass = requiredClasses[i];\r\n                if (this.classesLocation[requiredClass]) {\r\n                    required.push({\r\n                        module: this.classesLocation[requiredClass],\r\n                        category: 'qti'\r\n                    });\r\n                } else {\r\n                    throw new Error(`missing qti class location declaration : ${requiredClass}`);\r\n                }\r\n            }\r\n\r\n            moduleLoader([], () => true).addList(required).load().then(loadeded => {\r\n                loadeded.forEach(QtiClass => {\r\n                    this.qti[QtiClass.prototype.qtiClass] = QtiClass;\r\n                });\r\n                callback.call(this, this.qti);\r\n            });\r\n        },\r\n        getLoadedClasses() {\r\n            return _.keys(this.qti);\r\n        },\r\n        loadItemData(data, callback) {\r\n            this.loadRequiredClasses(data, Qti => {\r\n                if (typeof data === 'object' && data.qtiClass === 'assessmentItem') {\r\n                    //unload an item from it's serial (in case of a reload)\r\n                    if (data.serial) {\r\n                        Element.unsetElement(data.serial);\r\n                    }\r\n\r\n                    this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\r\n                    this.loadContainer(this.item.getBody(), data.body);\r\n\r\n                    for (let i in data.outcomes) {\r\n                        const outcome = this.buildOutcome(data.outcomes[i]);\r\n\r\n                        if (outcome) {\r\n                            this.item.addOutcomeDeclaration(outcome);\r\n                        }\r\n                    }\r\n\r\n                    for (let i in data.feedbacks) {\r\n                        const feedback = this.buildElement(data.feedbacks[i]);\r\n\r\n                        if (feedback) {\r\n                            this.item.addModalFeedback(feedback);\r\n                        }\r\n                    }\r\n\r\n                    for (let i in data.stylesheets) {\r\n                        const stylesheet = this.buildElement(data.stylesheets[i]);\r\n\r\n                        if (stylesheet) {\r\n                            this.item.addStylesheet(stylesheet);\r\n                        }\r\n                    }\r\n\r\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\r\n                    let responseRules = data.responseProcessing && data.responseProcessing.responseRules\r\n                        ? [...data.responseProcessing.responseRules]\r\n                        : [];\r\n                    for (let i in data.responses) {\r\n                        const responseIdentifier = data.responses[i].identifier;\r\n                        const responseRuleItemIndex = responseRules.findIndex(({ responseIf: {\r\n                            expression: {\r\n                                expressions: [expression = {}] = [],\r\n                            } = {}\r\n                        } = {} }) => expression.attributes\r\n                        && expression.attributes.identifier === responseIdentifier\r\n                            || (\r\n                                expression.expressions\r\n                                && expression.expressions[0]\r\n                                && expression.expressions[0].attributes\r\n                                && expression.expressions[0].attributes.identifier === responseIdentifier\r\n                            )\r\n                        );\r\n                        const [responseRule] = responseRuleItemIndex !== -1\r\n                            ? responseRules.splice(responseRuleItemIndex, 1)\r\n                            : [];\r\n\r\n                        const response = this.buildResponse(\r\n                            data.responses[i],\r\n                            responseRule\r\n                        );\r\n\r\n                        if (response) {\r\n                            this.item.addResponseDeclaration(response);\r\n\r\n                            const feedbackRules = data.responses[i].feedbackRules;\r\n\r\n                            if (feedbackRules) {\r\n                                _.forIn(feedbackRules, (fbData, serial) => {\r\n                                    const {\r\n                                        attributes: {\r\n                                            identifier: feedbackOutcomeIdentifier,\r\n                                        } = {}\r\n                                    } = data.outcomes[fbData.feedbackOutcome] || {};\r\n                                    response.feedbackRules[serial] = this.buildSimpleFeedbackRule(fbData, response);\r\n\r\n                                    // remove feedback response rule from response rules array\r\n                                    const feedbackResponseRuleIndex = responseRules.findIndex(({\r\n                                        responseIf: {\r\n                                            responseRules: [setOutcomeResponseRule = {}] = [],\r\n                                        } = {}\r\n                                    }) => {\r\n                                        const { attributes = {}, qtiClass } = setOutcomeResponseRule;\r\n                                        const outcomeIdentifier = attributes.identifier;\r\n\r\n                                        return feedbackOutcomeIdentifier === outcomeIdentifier\r\n                                            && qtiClass === 'setOutcomeValue';\r\n                                    });\r\n\r\n                                    if (feedbackResponseRuleIndex !== -1) {\r\n                                        responseRules.splice(feedbackResponseRuleIndex, 1);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const responseIdentifiers = Object.keys(this.item.responses || {})\r\n                        .map((responseKey) => this.item.responses[responseKey].attributes.identifier);\r\n\r\n                    if (data.responseProcessing) {\r\n                        const customResponseProcessing =\r\n                            (\r\n                                responseRules.length > 0\r\n                                && !(\r\n                                    responseRules.length === 1\r\n                                    && _.isEqual(\r\n                                        responseRules[0],\r\n                                        itemScoreHelper(\r\n                                            responseIdentifiers\r\n                                        )\r\n                                    )\r\n                                )\r\n                            )\r\n                            || (\r\n                                this.item.responses\r\n                                && Object.keys(this.item.responses)\r\n                                    .some((responseKey) => !this.item.responses[responseKey].template)\r\n                            );\r\n\r\n                        this.item.setResponseProcessing(this.buildResponseProcessing(data.responseProcessing, customResponseProcessing));\r\n                    }\r\n                    this.item.setNamespaces(data.namespaces);\r\n                    this.item.setSchemaLocations(data.schemaLocations);\r\n                    this.item.setApipAccessibility(data.apipAccessibility);\r\n                }\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, this.item);\r\n                }\r\n            });\r\n        },\r\n        loadAndBuildElement(data, callback) {\r\n            this.loadRequiredClasses(data, () => {\r\n                const element = this.buildElement(data);\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, element);\r\n                }\r\n            });\r\n        },\r\n        loadElement(element, data, callback) {\r\n            this.loadRequiredClasses(data, () => {\r\n                this.loadElementData(element, data);\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, element);\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * Load ALL given elements into existing loaded item\r\n         *\r\n         * @todo to be renamed to loadItemElements\r\n         * @param {object} data\r\n         * @param {function} callback\r\n         * @returns {undefined}\r\n         */\r\n        loadElements(data, callback) {\r\n            if (!this.item) {\r\n                throw new Error('QtiLoader : cannot load elements in empty item');\r\n            }\r\n\r\n            this.loadRequiredClasses(data, () => {\r\n                const allElements = this.item.getComposingElements();\r\n\r\n                for (let i in data) {\r\n                    const elementData = data[i];\r\n\r\n                    if (elementData && elementData.qtiClass && elementData.serial) {\r\n                        //find and update element\r\n                        if (allElements[elementData.serial]) {\r\n                            this.loadElementData(allElements[elementData.serial], elementData);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, this.item);\r\n                }\r\n            });\r\n        },\r\n        buildResponse(data, responseRule) {\r\n            const response = this.buildElement(data);\r\n\r\n            response.template = responseHelper.getTemplateUriFromName(\r\n                responseHelper.getTemplateNameFromResponseRules(data.identifier, responseRule)\r\n            )\r\n                || data.howMatch\r\n                || null;\r\n\r\n            response.defaultValue = data.defaultValue || null;\r\n            response.correctResponse = data.correctResponses || null;\r\n\r\n            if (_.size(data.mapping)) {\r\n                response.mapEntries = data.mapping;\r\n            } else if (_.size(data.areaMapping)) {\r\n                response.mapEntries = data.areaMapping;\r\n            } else {\r\n                response.mapEntries = {};\r\n            }\r\n\r\n            response.mappingAttributes = data.mappingAttributes || {};\r\n\r\n            return response;\r\n        },\r\n        buildSimpleFeedbackRule(data, response) {\r\n            const feedbackRule = this.buildElement(data);\r\n\r\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\r\n\r\n            //            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\r\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\r\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\r\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\r\n\r\n            //associate the compared outcome to the feedbacks if applicable\r\n            const comparedOutcome = feedbackRule.comparedOutcome;\r\n\r\n            if (feedbackRule.feedbackThen) {\r\n                feedbackRule.feedbackThen.data('relatedResponse', comparedOutcome);\r\n            }\r\n\r\n            if (feedbackRule.feedbackElse) {\r\n                feedbackRule.feedbackElse.data('relatedResponse', comparedOutcome);\r\n            }\r\n\r\n            return feedbackRule;\r\n        },\r\n        buildOutcome(data) {\r\n            const outcome = this.buildElement(data);\r\n            outcome.defaultValue = data.defaultValue || null;\r\n\r\n            return outcome;\r\n        },\r\n        buildResponseProcessing(data, customResponseProcessing) {\r\n            const rp = this.buildElement(data);\r\n\r\n            if (customResponseProcessing) {\r\n                rp.xml = data.data;\r\n                rp.processingType = 'custom';\r\n            } else {\r\n                rp.processingType = 'templateDriven';\r\n            }\r\n\r\n            return rp;\r\n        },\r\n        loadContainer(bodyObject, bodyData) {\r\n            if (!Element.isA(bodyObject, '_container')) {\r\n                throw new Error('bodyObject must be a QTI Container');\r\n            }\r\n\r\n            if (!(bodyData && typeof bodyData.body === 'string' && typeof bodyData.elements === 'object')) {\r\n                throw new Error('wrong bodydata format');\r\n            }\r\n            //merge attributes when loading element data\r\n            const attributes = _.defaults(bodyData.attributes || {}, bodyObject.attributes || {});\r\n            bodyObject.setAttributes(attributes);\r\n\r\n            for (let serial in bodyData.elements) {\r\n                const eltData = bodyData.elements[serial];\r\n                const element = this.buildElement(eltData);\r\n\r\n                //check if class is loaded:\r\n                if (element) {\r\n                    bodyObject.setElement(element, bodyData.body);\r\n                }\r\n            }\r\n\r\n            bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\r\n        },\r\n        buildElement(elementData) {\r\n            if (!(elementData && elementData.qtiClass && elementData.serial)) {\r\n                throw new Error('wrong elementData format');\r\n            }\r\n\r\n            const className = elementData.qtiClass;\r\n\r\n            if (!this.qti[className]) {\r\n                throw new Error(`the qti element class does not exist: ${className}`);\r\n            }\r\n\r\n            const elt = new this.qti[className](elementData.serial);\r\n            this.loadElementData(elt, elementData);\r\n\r\n            return elt;\r\n        },\r\n        loadElementData(element, data) {\r\n            //merge attributes when loading element data\r\n            const attributes = _.defaults(data.attributes || {}, element.attributes || {});\r\n            element.setAttributes(attributes);\r\n\r\n            if (element.body && data.body) {\r\n                if (element.bdy) {\r\n                    this.loadContainer(element.getBody(), data.body);\r\n                }\r\n            }\r\n\r\n            if (element.object && data.object) {\r\n                if (element.object) {\r\n                    this.loadObjectData(element.object, data.object);\r\n                }\r\n            }\r\n\r\n            if (Element.isA(element, 'interaction')) {\r\n                this.loadInteractionData(element, data);\r\n            } else if (Element.isA(element, 'choice')) {\r\n                this.loadChoiceData(element, data);\r\n            } else if (Element.isA(element, 'math')) {\r\n                this.loadMathData(element, data);\r\n            } else if (Element.isA(element, 'infoControl')) {\r\n                this.loadPicData(element, data);\r\n            } else if (Element.isA(element, '_tooltip')) {\r\n                this.loadTooltipData(element, data);\r\n            }\r\n\r\n            return element;\r\n        },\r\n        loadInteractionData(interaction, data) {\r\n            if (Element.isA(interaction, 'blockInteraction')) {\r\n                if (data.prompt) {\r\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\r\n                }\r\n            }\r\n\r\n            this.buildInteractionChoices(interaction, data);\r\n\r\n            if (Element.isA(interaction, 'customInteraction')) {\r\n                this.loadPciData(interaction, data);\r\n            }\r\n        },\r\n        buildInteractionChoices(interaction, data) {\r\n            // note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\r\n            if (data.choices) {\r\n                if (Element.isA(interaction, 'matchInteraction')) {\r\n                    for (let set = 0; set < 2; set++) {\r\n                        if (!data.choices[set]) {\r\n                            throw new Error(`missing match set #${set}`);\r\n                        }\r\n\r\n                        const matchSet = data.choices[set];\r\n\r\n                        for (let serial in matchSet) {\r\n                            const choice = this.buildElement(matchSet[serial]);\r\n\r\n                            if (choice) {\r\n                                interaction.addChoice(choice, set);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let serial in data.choices) {\r\n                        const choice = this.buildElement(data.choices[serial]);\r\n\r\n                        if (choice) {\r\n                            interaction.addChoice(choice);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (Element.isA(interaction, 'graphicGapMatchInteraction')) {\r\n                    if (data.gapImgs) {\r\n                        for (let serial in data.gapImgs) {\r\n                            const gapImg = this.buildElement(data.gapImgs[serial]);\r\n\r\n                            if (gapImg) {\r\n                                interaction.addGapImg(gapImg);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        loadChoiceData(choice, data) {\r\n            if (Element.isA(choice, 'textVariableChoice')) {\r\n                choice.val(data.text);\r\n            } else if (Element.isA(choice, 'gapImg')) ; else if (Element.isA(choice, 'gapText')) {\r\n                // this ensure compatibility of Qti 2.1 items\r\n                if (!choice.body()) {\r\n                    choice.body(data.text);\r\n                }\r\n            } else if (Element.isA(choice, 'containerChoice')) ;\r\n        },\r\n        loadObjectData(object, data) {\r\n            object.setAttributes(data.attributes);\r\n\r\n            //@todo: manage object like a container\r\n            if (data._alt) {\r\n                if (data._alt.qtiClass === 'object') {\r\n                    object._alt = Loader.buildElement(data._alt);\r\n                } else {\r\n                    object._alt = data._alt;\r\n                }\r\n            }\r\n        },\r\n        loadMathData(math, data) {\r\n            math.ns = data.ns || {};\r\n            math.setMathML(data.mathML || '');\r\n            _.forIn(data.annotations || {}, (value, encoding) => {\r\n                math.setAnnotation(encoding, value);\r\n            });\r\n        },\r\n        loadTooltipData(tooltip, data) {\r\n            tooltip.content(data.content);\r\n        },\r\n        loadPciData(pci, data) {\r\n            loadPortableCustomElementData(pci, data);\r\n        },\r\n        loadPicData(pic, data) {\r\n            loadPortableCustomElementData(pic, data);\r\n        }\r\n    });\n\n    return Loader;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Math',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function ($, _, Element, rendererConfig, NamespacedElement) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Math;\r\n\r\n    /**\r\n     * Remove the closing MathML tags and remove useless line breaks before and after it\r\n     *\r\n     * @param {String} mathML\r\n     * @param {String} nsName\r\n     * @returns {String}\r\n     */\r\n    function _stripMathTags(mathML, nsName) {\r\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : '') + 'math[^>]*>', 'g');\r\n        return mathML\r\n            .replace(regex, '')\r\n            .replace(/^\\s*[\\r\\n]/gm, '') //remove first blank line\r\n            .replace(/\\s*[\\r\\n]$/gm, ''); //last blank line\r\n    }\r\n\r\n    /**\r\n     * Remove mathML ns name prefix from the mathML\r\n     *\r\n     * @param {String} mathML\r\n     * @param {String} nsName\r\n     * @returns {String}\r\n     */\r\n    function _stripNamespace(mathML, nsName) {\r\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : ''), 'g');\r\n        return mathML.replace(regex, '<$1');\r\n    }\r\n\r\n    /**\r\n     * Check if the mathML string is to be considered empty\r\n     *\r\n     * @param {String} mathStr\r\n     * @returns {Boolean}\r\n     */\r\n    function _isEmptyMathML(mathStr) {\r\n        var $math,\r\n            mathText,\r\n            hasContent = false;\r\n\r\n        if (mathStr && mathStr.trim()) {\r\n            $math = $($.parseHTML(mathStr));\r\n            mathText = $math.text();\r\n            hasContent = _.isString(mathText) && !!mathText.trim();\r\n        }\r\n\r\n        return !hasContent;\r\n    }\r\n\r\n    Math = Element.extend({\r\n        qtiClass: 'math',\r\n        defaultNsName: 'm',\r\n        defaultNsUri: 'http://www.w3.org/1998/Math/MathML',\r\n        nsUriFragment: 'MathML',\r\n        init: function(serial, attributes) {\r\n            this._super(serial, attributes);\r\n            this.ns = null;\r\n            this.mathML = '';\r\n            this.annotations = {};\r\n        },\r\n        setAnnotation: function(encoding, value) {\r\n            this.annotations[encoding] = _.unescape(value);\r\n        },\r\n        getAnnotation: function(encoding) {\r\n            return this.annotations[encoding];\r\n        },\r\n        removeAnnotation: function(encoding) {\r\n            delete this.annotations[encoding];\r\n        },\r\n        setMathML: function(mathML) {\r\n            var ns = this.getNamespace(),\r\n                nsName = ns.name && ns.uri ? ns.name : '';\r\n\r\n            mathML = _stripMathTags(mathML, nsName);\r\n            if (ns) {\r\n                mathML = _stripNamespace(mathML, nsName);\r\n            }\r\n            this.mathML = mathML;\r\n        },\r\n        getMathML: function() {\r\n            return this.mathML;\r\n        },\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                tag = this.qtiClass,\r\n                raw = this.mathML,\r\n                body = raw,\r\n                ns = this.getNamespace(),\r\n                annotations = '',\r\n                encoding,\r\n                defaultData;\r\n\r\n            for (encoding in this.annotations) {\r\n                annotations +=\r\n                    '<annotation encoding=\"' + encoding + '\">' + _.escape(this.annotations[encoding]) + '</annotation>';\r\n            }\r\n\r\n            if (annotations) {\r\n                if (raw.indexOf('</semantics>') > 0) {\r\n                    raw = raw.replace('</semantics>', annotations + '</semantics>');\r\n                } else {\r\n                    raw = '<semantics>' + raw + annotations + '</semantics>';\r\n                }\r\n            }\r\n\r\n            if (ns && ns.name) {\r\n                body = raw.replace(/<(\\/)?([^!<])/g, '<$1' + ns.name + ':$2');\r\n                tag = ns.name + ':' + tag;\r\n            }\r\n\r\n            body = body.replace(/<!--.*?-->/g, ''); // remove Mathjax-generated comments\r\n            body = body.replace(/&lt;!--.*?--&gt;/g, ''); // fix for broken items because of Mathjax comments\r\n\r\n            defaultData = {\r\n                block: this.attr('display') === 'block' ? true : false,\r\n                body: body,\r\n                raw: raw,\r\n                tag: tag,\r\n                ns: ns\r\n            };\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        },\r\n        isEmpty: function() {\r\n            return _isEmptyMathML(this.mathML) && (!this.annotations.latex || !this.annotations.latex.trim());\r\n        }\r\n    });\r\n\r\n    NamespacedElement.augment(Math);\r\n\r\n    var Math$1 = Math;\n\n    return Math$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PortableInfoControl',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, CustomElement, NamespacedElement, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var PortableInfoControl = Element.extend({\r\n        qtiClass: 'infoControl',\r\n        defaultNsName: 'pic',\r\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableInfoControl',\r\n        nsUriFragment: 'portableInfoControl',\r\n        defaultMarkupNsName: 'html5',\r\n        defaultMarkupNsUri: 'html5',\r\n\r\n        init: function(serial, attributes) {\r\n            this._super(serial, attributes);\r\n\r\n            this.typeIdentifier = '';\r\n            this.markup = '';\r\n            this.properties = {};\r\n            this.libraries = [];\r\n            this.entryPoint = '';\r\n\r\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\r\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\r\n            this.markupNs = {};\r\n\r\n            //stack of callback waiting to be ready\r\n            this.readyStack = [];\r\n        },\r\n\r\n        is: function(qtiClass) {\r\n            return qtiClass === 'infoControl' || this._super(qtiClass);\r\n        },\r\n\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {\r\n                    typeIdentifier: this.typeIdentifier,\r\n                    markup: this.markup,\r\n                    properties: this.properties,\r\n                    libraries: this.libraries,\r\n                    entryPoint: this.entryPoint,\r\n                    ns: {\r\n                        pic: this.getNamespace().name + ':'\r\n                    }\r\n                };\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        },\r\n\r\n        /**\r\n         * Retrieve the state of the infoControl\r\n         * The call will be delegated to the infoControl's renderer.\r\n         *\r\n         * @returns {Object} the state\r\n         */\r\n        getState: function getState() {\r\n            var ret = null;\r\n            var renderer = this.getRenderer();\r\n            if (renderer && _.isFunction(renderer.getState)) {\r\n                ret = renderer.getState(this);\r\n            }\r\n            return ret;\r\n        },\r\n\r\n        /**\r\n         * Set the state of the infoControl\r\n         * The state will be set to the infoControl's renderer.\r\n         *\r\n         * @param {Object} state - the infoControl's state\r\n         */\r\n        setState: function setState(state) {\r\n            var renderer = this.getRenderer();\r\n            if (renderer && _.isFunction(renderer.getState)) {\r\n                renderer.setState(this, state);\r\n            }\r\n        },\r\n\r\n        toArray: function() {\r\n            var arr = this._super();\r\n            arr.markup = this.markup;\r\n            arr.properties = this.properties;\r\n            return arr;\r\n        },\r\n\r\n        /**\r\n         * Execute a callback when the PIC is ready (ie. registered, loaded and rendererd)\r\n         * @param {Function} cb - the function to execute once ready\r\n         */\r\n        onReady: function onReady(cb) {\r\n            this.readyStack.push(cb);\r\n\r\n            //if we are ready this will pop the stack\r\n            if (this.data('_ready') && this.data('pic')) {\r\n                this.triggerReady();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Define the PIC as ready and consume the waiting functions in the stack.\r\n         */\r\n        triggerReady: function triggerReady() {\r\n            var self = this;\r\n            _.forEach(this.readyStack, function(cb) {\r\n                cb.call(self, self.data('pic'));\r\n            });\r\n\r\n            //empty the stack\r\n            this.readyStack = [];\r\n\r\n            //mark the infoControl as ready\r\n            this.data('_ready', true);\r\n        }\r\n    });\r\n\r\n    //add portable element standard functions\r\n    CustomElement.augment(PortableInfoControl);\r\n    NamespacedElement.augment(PortableInfoControl);\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PrintedVariable',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n     */\r\n\r\n    var PrintedVariable = Element.extend({\r\n        qtiClass: 'printedVariable'\r\n    });\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',['taoQtiItem/qtiItem/core/Element', 'lodash'], function (Element, _) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n     *\r\n     */\r\n\r\n    var SimpleFeedbackRule = Element.extend({\r\n        qtiClass: '_simpleFeedbackRule',\r\n        serial: '',\r\n        rootElement: null,\r\n        init: function(serial, feedbackOutcome, feedbackThen, feedbackElse) {\r\n            this._super(serial, {});\r\n\r\n            this.condition = 'correct';\r\n            this.comparedOutcome = null;\r\n            this.comparedValue = 0.0;\r\n\r\n            this.feedbackOutcome = feedbackOutcome;\r\n            if (Element.isA(feedbackThen, 'feedback')) {\r\n                this.feedbackThen = feedbackThen;\r\n            } else {\r\n                this.feedbackThen = null;\r\n            }\r\n            if (Element.isA(feedbackElse, 'feedback')) {\r\n                this.feedbackElse = feedbackThen;\r\n            } else {\r\n                this.feedbackElse = null;\r\n            }\r\n        },\r\n        setCondition: function(comparedOutcome, condition, comparedValue) {\r\n            var _comparedValues = [];\r\n            if (Element.isA(comparedOutcome, 'variableDeclaration')) {\r\n                switch (condition) {\r\n                    case 'correct':\r\n                    case 'incorrect':\r\n                        if (Element.isA(comparedOutcome, 'responseDeclaration')) {\r\n                            this.comparedOutcome = comparedOutcome;\r\n                            this.condition = condition;\r\n                        } else {\r\n                            throw 'invalid outcome type: must be a responseDeclaration';\r\n                        }\r\n                        break;\r\n                    case 'lt':\r\n                    case 'lte':\r\n                    case 'equal':\r\n                    case 'gte':\r\n                    case 'gt':\r\n                        if (comparedValue !== null && comparedValue !== undefined) {\r\n                            this.comparedOutcome = comparedOutcome;\r\n                            this.condition = condition;\r\n                            this.comparedValue = comparedValue;\r\n                        } else {\r\n                            throw 'compared value must not be null';\r\n                        }\r\n                        break;\r\n                    case 'choices':\r\n                        if (\r\n                            Element.isA(comparedOutcome, 'responseDeclaration') &&\r\n                            comparedValue !== null &&\r\n                            _.isArray(comparedValue)\r\n                        ) {\r\n                            var choices = _.values(comparedOutcome.getInteraction().getChoices());\r\n                            this.comparedOutcome = comparedOutcome;\r\n                            this.condition = condition;\r\n                            _.each(comparedValue, function(v) {\r\n                                if (v instanceof Element) {\r\n                                    _comparedValues.push(v);\r\n                                } else if (_.isString(v)) {\r\n                                    _.each(choices, function(c) {\r\n                                        if (c.attr('identifier') === v) {\r\n                                            _comparedValues.push(c);\r\n                                            return false; //break\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            this.comparedValue = _comparedValues;\r\n                        } else {\r\n                            throw 'compared value must not be null';\r\n                        }\r\n                        break;\r\n                    default:\r\n                        throw 'unknown condition type : '.condition;\r\n                }\r\n            } else {\r\n                throw 'invalid outcome type: must be a variableDeclaration';\r\n            }\r\n\r\n            return this;\r\n        },\r\n        setFeedbackElse: function(feedback) {\r\n            if (Element.isA(feedback, 'feedback')) {\r\n                this.feedbackElse = feedback;\r\n            }\r\n        },\r\n        toArray: function() {\r\n            var val = this.comparedValue;\r\n            var _toString = function(v) {\r\n                if (val instanceof Element) {\r\n                    return val.attr('identifier');\r\n                } else {\r\n                    return val + '';\r\n                }\r\n            };\r\n            if (_.isArray(val)) {\r\n                val = _.map(val, _toString);\r\n            } else {\r\n                val = _toString();\r\n            }\r\n            return {\r\n                condition: this.condition,\r\n                comparedOutcome: this.comparedOutcome.id(),\r\n                comparedValue: val\r\n            };\r\n        }\r\n    });\n\n    return SimpleFeedbackRule;\n\n});\n\n","define('taoQtiItem/qtiItem/core/ResponseProcessing',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    var ResponseProcessing = Element.extend({\r\n        qtiClass: 'responseProcessing',\r\n        processingType: '',\r\n        xml: '',\r\n        toArray: function() {\r\n            var arr = this._super();\r\n            arr.processingType = this.processingType;\r\n            arr.xml = this.xml;\r\n            return arr;\r\n        }\r\n    });\n\n    return ResponseProcessing;\n\n});\n\n","define('taoQtiItem/qtiItem/core/RubricBlock',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/Container'], function (Element, Container) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var RubricBlock = Element.extend({\r\n        qtiClass: 'rubricBlock',\r\n        isEmpty: function isEmpty() {\r\n            return !(this.bdy && this.bdy.body());\r\n        }\r\n    });\r\n\r\n    Container.augment(RubricBlock);\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Stylesheet',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Stylesheet = Element.extend({\r\n        qtiClass: 'stylesheet',\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {};\r\n\r\n            defaultData.attributes = { href: renderer.resolveUrl(this.attr('href')) };\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        }\r\n    });\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerTable',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n     */\r\n\r\n    var methods = {};\r\n    _.extend(methods, Container.methods);\r\n    _.extend(methods, {\r\n        initContainer: function(body) {\r\n            Container.methods.initContainer.call(this, body);\r\n            this.bdy.contentModel = 'table';\r\n        }\r\n    });\r\n\r\n    var ContainerTable = {\r\n        augment: function(targetClass) {\r\n            Mixin.augment(targetClass, methods);\r\n        },\r\n        methods: methods\r\n    };\n\n    return ContainerTable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Table',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerTable'], function (_, Element, Container) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n     */\r\n\r\n    var Table = Element.extend({\r\n        qtiClass: 'table'\r\n    });\r\n\r\n    Container.augment(Table);\r\n\r\n    Table = Table.extend({\r\n        // on table creation, we might get a body wrapped in a table element, that we need to get rid of\r\n        body: function(newBody) {\r\n            if (_.isString(newBody)) {\r\n                newBody = newBody.replace('<table>', '').replace('</table>', '');\r\n            }\r\n            return this._super(newBody);\r\n        }\r\n    });\r\n\r\n    var Table$1 = Table;\n\n    return Table$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Tooltip',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, ContainerInline, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ContainerInline = ContainerInline && Object.prototype.hasOwnProperty.call(ContainerInline, 'default') ? ContainerInline['default'] : ContainerInline;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n     */\r\n\r\n    var Tooltip = Element.extend({\r\n        qtiClass: '_tooltip',\r\n\r\n        init: function(serial, attributes, newContent) {\r\n            this._super(serial, attributes);\r\n            this.content(newContent || '');\r\n        },\r\n\r\n        /**\r\n         * Set/get the content of the tooltip\r\n         * @param {String} newContent - as HTML\r\n         * @returns {Element|String}\r\n         */\r\n        content: function content(newContent) {\r\n            if (typeof newContent === 'undefined') {\r\n                return this.tooltipContent;\r\n            } else {\r\n                if (typeof newContent === 'string') {\r\n                    this.tooltipContent = newContent;\r\n                } else {\r\n                    throw new Error('newContent must be a string');\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds the tooltip content to the template data\r\n         */\r\n        render: function() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments),\r\n                renderer = args.renderer || this.getRenderer(),\r\n                defaultData = {\r\n                    content: this.tooltipContent\r\n                };\r\n\r\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\r\n        }\r\n    });\r\n\r\n    ContainerInline.augment(Tooltip);\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/ResponseDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration', 'lodash'], function (VariableDeclaration, _) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n     *\r\n     */\r\n\r\n    var ResponseDeclaration = VariableDeclaration.extend({\r\n        qtiClass: 'responseDeclaration',\r\n        init: function(serial, attributes) {\r\n            this._super(serial, attributes);\r\n\r\n            //MATCH_CORRECT, MAP_RESPONSE, MAP_RESPONSE_POINT\r\n            this.template = ''; //previously called 'howMatch'\r\n\r\n            //when template equals ont of the \"map\" one (MAP_RESPONSE, MAP_RESPONSE_POINT)\r\n            this.mappingAttributes = {};\r\n            this.mapEntries = {};\r\n\r\n            //correct response [0..*]\r\n            this.correctResponse = null;\r\n\r\n            //tao internal usage:\r\n            this.feedbackRules = {};\r\n        },\r\n        getFeedbackRules: function() {\r\n            return _.values(this.feedbackRules);\r\n        },\r\n        getComposingElements: function() {\r\n            var elts = this._super();\r\n            elts = _.extend(elts, this.feedbackRules);\r\n            return elts;\r\n        },\r\n        toArray: function() {\r\n            var arr = this._super();\r\n            arr.howMatch = this.template;\r\n            arr.correctResponses = this.correctResponse;\r\n            arr.mapping = this.mapEntries;\r\n            arr.mappingAttributes = this.mappingAttributes;\r\n            arr.feedbackRules = _.map(this.feedbackRules, function(rule) {\r\n                return rule.toArray();\r\n            });\r\n            return arr;\r\n        },\r\n        getInteraction: function() {\r\n            var interaction = null;\r\n            var responseId = this.id();\r\n            var item = this.getRootElement();\r\n            var interactions = item.getInteractions();\r\n            _.each(interactions, function(i) {\r\n                if (i.attributes.responseIdentifier === responseId) {\r\n                    interaction = i;\r\n                    return false; //break\r\n                }\r\n            });\r\n            return interaction;\r\n        },\r\n        isCardinality: function(cardinalities) {\r\n            var comparison;\r\n            if (_.isArray(cardinalities)) {\r\n                comparison = cardinalities;\r\n            } else if (_.isString(cardinalities)) {\r\n                cardinalities = [cardinalities];\r\n            } else {\r\n                return false;\r\n            }\r\n            return _.indexOf(comparison, this.attr('cardinality')) >= 0;\r\n        }\r\n    });\n\n    return ResponseDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/EventMgr',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    //@todo : complete with namespace managements\r\n    function EventMgr() {\r\n        var events = {};\r\n\r\n        this.get = function(event) {\r\n            if (event && events[event]) {\r\n                return _.clone(events[event]);\r\n            } else {\r\n                return [];\r\n            }\r\n        };\r\n\r\n        this.on = function(event, callback) {\r\n            var tokens = event.split('.');\r\n            if (tokens[0]) {\r\n                var name = tokens.shift();\r\n                events[name] = events[name] || [];\r\n                events[name].push({\r\n                    ns: tokens,\r\n                    callback: callback\r\n                });\r\n            }\r\n        };\r\n\r\n        this.off = function(event) {\r\n            if (event && events[event]) {\r\n                events[event] = [];\r\n            }\r\n        };\r\n\r\n        this.trigger = function(event, data) {\r\n            if (events[event]) {\r\n                _.each(events[event], function(e) {\r\n                    //@todo check ns:\r\n                    e.callback.apply(\r\n                        {\r\n                            type: event,\r\n                            ns: []\r\n                        },\r\n                        data\r\n                    );\r\n                });\r\n            }\r\n        };\r\n    }\n\n    return EventMgr;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/pci',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var pci = {\r\n        getRawValues: function(pciVar) {\r\n            if (_.isPlainObject(pciVar)) {\r\n                if (pciVar.base !== undefined) {\r\n                    return _.values(pciVar.base);\r\n                } else if (pciVar.list) {\r\n                    return _.values(pciVar.list);\r\n                }\r\n            }\r\n            throw 'unsupported type ';\r\n        }\r\n    };\n\n    return pci;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/modalFeedback',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/pci', 'taoQtiItem/qtiItem/helper/container'], function ($, _, pci, containerHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\r\n     *\r\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\r\n     */\r\n\r\n    /**\r\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\r\n     *\r\n     * @param {type} feedback\r\n     * @returns {String}\r\n     */\r\n    var getFeedbackMessageSignature = function getFeedbackMessageSignature(feedback) {\r\n        return ('' + feedback.body() + feedback.attr('title'))\r\n            .toLowerCase()\r\n            .trim()\r\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\r\n    };\r\n\r\n    /**\r\n     * Extract the display information for an interaction-related feedback\r\n     *\r\n     * @private\r\n     * @param {Object} interaction - a qti interaction object\r\n     * @returns {Object} Object containing useful display information\r\n     */\r\n    var extractDisplayInfo = function extractDisplayInfo(interaction) {\r\n        var $interactionContainer = interaction.getContainer();\r\n        var responseIdentifier = interaction.attr('responseIdentifier');\r\n        var messageGroupId, $displayContainer;\r\n\r\n        if (interaction.is('inlineInteraction')) {\r\n            $displayContainer = $interactionContainer.closest('[class*=\" col-\"], [class^=\"col-\"]');\r\n            messageGroupId = $displayContainer.attr('data-messageGroupId');\r\n            if (!messageGroupId) {\r\n                //generate a messageFromId\r\n                messageGroupId = _.uniqueId('inline_message_group_');\r\n                $displayContainer.attr('data-messageGroupId', messageGroupId);\r\n            }\r\n        } else {\r\n            messageGroupId = responseIdentifier;\r\n            $displayContainer = $interactionContainer;\r\n        }\r\n\r\n        return {\r\n            responseIdentifier: responseIdentifier,\r\n            interactionContainer: $interactionContainer,\r\n            displayContainer: $displayContainer,\r\n            messageGroupId: messageGroupId,\r\n            order: -1\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Get interaction display information sorted in the order of appearance within the item\r\n     *\r\n     * @param {Object} item\r\n     * @returns {Array}\r\n     */\r\n    var getInteractionsDisplayInfo = function getInteractionsDisplayInfo(item) {\r\n        var interactionsDisplayInfo = [];\r\n        var $itemContainer = item.getContainer();\r\n        var interactionOrder = 0;\r\n\r\n        //extract all interaction related information needed to display their\r\n        _.forEach(item.getComposingElements(), function(element) {\r\n            if (element.is('interaction')) {\r\n                interactionsDisplayInfo.push(extractDisplayInfo(element));\r\n            }\r\n        });\r\n\r\n        //sort interactionsDisplayInfo on the item level\r\n        $itemContainer.find('.qti-interaction').each(function() {\r\n            var self = this;\r\n            _.forEach(interactionsDisplayInfo, function(_interactionInfo) {\r\n                if (_interactionInfo.interactionContainer[0] === self) {\r\n                    _interactionInfo.order = interactionOrder;\r\n                    return false;\r\n                }\r\n            });\r\n            interactionOrder++;\r\n        });\r\n        interactionsDisplayInfo = _.sortBy(interactionsDisplayInfo, 'order');\r\n\r\n        return interactionsDisplayInfo;\r\n    };\r\n\r\n    /**\r\n     * Returns feedbacks according to the given itemSession variables\r\n     *\r\n     * @param {Object} item - the standard tao qti item object\r\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\r\n     * @returns {Array} renderingFeedbacks - feedbacks to be displayed\r\n     */\r\n    var getFeedbacks = function getFeedbacks(item, itemSession) {\r\n        var messages = {};\r\n        var $itemContainer = item.getContainer();\r\n        var $itemBody = $('.qti-itemBody', $itemContainer);\r\n        var interactionsDisplayInfo = getInteractionsDisplayInfo(item);\r\n        var renderingQueue = [];\r\n\r\n        _.forEach(item.modalFeedbacks, function(feedback) {\r\n            var feedbackIds, message, $container, comparedOutcome, _currentMessageGroupId, interactionInfo;\r\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\r\n            var order = -1;\r\n\r\n            //verify if the feedback should be displayed\r\n            if (itemSession[outcomeIdentifier]) {\r\n                //is the feedback in the list of feedbacks to be displayed ?\r\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\r\n                if (!_.contains(feedbackIds, feedback.id())) {\r\n                    return true; //continue with next feedback\r\n                }\r\n\r\n                //which group of feedbacks (interaction related) the feedback belongs to ?\r\n                message = getFeedbackMessageSignature(feedback);\r\n                comparedOutcome = containerHelper.getEncodedData(feedback, 'relatedOutcome');\r\n                interactionInfo = _.find(interactionsDisplayInfo, { responseIdentifier: comparedOutcome });\r\n                if (comparedOutcome && interactionInfo) {\r\n                    $container = interactionInfo.displayContainer;\r\n                    _currentMessageGroupId = interactionInfo.messageGroupId;\r\n                    order = interactionInfo.order;\r\n                } else {\r\n                    $container = $itemBody;\r\n                    _currentMessageGroupId = '__item__';\r\n                }\r\n                //is this message already displayed ?\r\n                if (!messages[_currentMessageGroupId]) {\r\n                    messages[_currentMessageGroupId] = [];\r\n                }\r\n\r\n                if (_.contains(messages[_currentMessageGroupId], message)) {\r\n                    return true; //continue\r\n                } else {\r\n                    messages[_currentMessageGroupId].push(message);\r\n                }\r\n\r\n                //ok, display feedback\r\n                renderingQueue.push({\r\n                    feedback: feedback,\r\n                    $container: $container,\r\n                    order: order\r\n                });\r\n            }\r\n        });\r\n\r\n        renderingQueue = _.sortBy(renderingQueue, 'order');\r\n\r\n        return renderingQueue;\r\n    };\r\n\r\n    /**\r\n     * Provide helper function for collecting feedbacks\r\n     */\r\n    var modalFeedback = {\r\n        getFeedbacks: getFeedbacks\r\n    };\n\n    return modalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/Parser',['jquery'], function ($) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /**\r\n     * Experimental parser\r\n     *\r\n     */\r\n\r\n    var Parser = function() {\r\n        var _$xml = null;\r\n        this.loadXML = function(xml) {\r\n            _$xml = $.parseXML(xml);\r\n        };\r\n        this.getDOM = function() {\r\n            return _$xml;\r\n        };\r\n    };\n\n    return Parser;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/simpleParser',['lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/core/Loader'], function (_, $, util, Loader) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2021 (original work) Open Assessment Technologies SA\r\n     **/\r\n\r\n    const _parsableElements = ['img', 'object', 'printedVariable'];\r\n    const _qtiClassNames = {\r\n        rubricblock: 'rubricBlock',\r\n        printedvariable: 'printedVariable'\r\n    };\r\n    const _qtiAttributesNames = {\r\n        powerform: 'powerForm',\r\n        mappingindicator: 'mappingIndicator'\r\n    };\r\n\r\n    const _defaultOptions = {\r\n        ns: {\r\n            math: '',\r\n            include: 'xi',\r\n            table: 'table',\r\n            image: 'img',\r\n            object: '',\r\n            figure: 'qh5',\r\n            figcaption: 'qh5'\r\n        },\r\n        loaded: null,\r\n        model: null\r\n    };\r\n\r\n    let parser;\r\n\r\n    function _getElementSelector(qtiClass, ns) {\r\n        return ns ? ns + '\\\\:' + qtiClass + ',' + qtiClass : qtiClass;\r\n    }\r\n\r\n    function getQtiClassFromXmlDom($node) {\r\n        let qtiClass = $node.prop('tagName').toLowerCase();\r\n\r\n        //remove ns :\r\n        qtiClass = qtiClass.replace(/.*:/, '');\r\n\r\n        return _qtiClassNames[qtiClass] ? _qtiClassNames[qtiClass] : qtiClass;\r\n    }\r\n\r\n    function buildElement($elt) {\r\n        const qtiClass = getQtiClassFromXmlDom($elt);\r\n\r\n        const elt = {\r\n            qtiClass: qtiClass,\r\n            serial: util.buildSerial(qtiClass + '_'),\r\n            attributes: {}\r\n        };\r\n\r\n        $.each($elt[0].attributes, function () {\r\n            let attrName;\r\n            if (this.specified) {\r\n                attrName = _qtiAttributesNames[this.name] || this.name;\r\n                elt.attributes[attrName] = this.value;\r\n            }\r\n        });\r\n\r\n        return elt;\r\n    }\r\n\r\n    function buildMath($elt, options) {\r\n        const elt = buildElement($elt);\r\n\r\n        //set annotations:\r\n        elt.annotations = {};\r\n        $elt.find(_getElementSelector('annotation', options.ns.math)).each(function () {\r\n            const $annotation = $(this);\r\n            const encoding = $annotation.attr('encoding');\r\n            if (encoding) {\r\n                elt.annotations[encoding] = _.unescape($annotation.html());\r\n            }\r\n            $annotation.remove();\r\n        });\r\n\r\n        //set math xml\r\n        elt.mathML = $elt.html();\r\n\r\n        //set ns:\r\n        elt.ns = {\r\n            name: 'm',\r\n            uri: 'http://www.w3.org/1998/Math/MathML' //@todo : remove hardcoding there\r\n        };\r\n\r\n        return elt;\r\n    }\r\n\r\n    function buildTooltip(targetHtml, contentId, contentHtml) {\r\n        const qtiClass = '_tooltip';\r\n\r\n        return {\r\n            elements: {},\r\n            qtiClass: qtiClass,\r\n            serial: util.buildSerial(qtiClass + '_'),\r\n            attributes: {\r\n                'aria-describedby': contentId\r\n            },\r\n            content: contentHtml,\r\n            body: {\r\n                elements: {},\r\n                serial: util.buildSerial('container'),\r\n                body: targetHtml\r\n            }\r\n        };\r\n    }\r\n\r\n    function parseTable($elt, elt, options) {\r\n        elt.body = {\r\n            body: '',\r\n            elements: {}\r\n        };\r\n\r\n        const $parsedTable = parseContainer($elt, options);\r\n        elt.body.body = $parsedTable.body;\r\n        elt.body.elements = $parsedTable.elements;\r\n        return elt;\r\n    }\r\n\r\n    function parseFigure($elt, elt, options) {\r\n        elt.body = {\r\n            body: '',\r\n            elements: {}\r\n        };\r\n\r\n        const $parsedFigure= parseContainer($elt, options);\r\n        elt.body.body = $parsedFigure.body;\r\n        elt.body.elements = $parsedFigure.elements;\r\n        const $figcaption = $elt.find(_getElementSelector('figcaption', options.ns.figcaption));\r\n        if ($figcaption.length) {\r\n            const element = buildElement($figcaption);\r\n            element.body = {\r\n                body: $figcaption.html(),\r\n                elements: {}\r\n            };\r\n            elt.body.elements[element.serial] = element;\r\n            $figcaption.replaceWith(_placeholder(element));\r\n        }\r\n        elt.body.body = $elt.html();\r\n        return elt;\r\n    }\r\n\r\n    function parseContainer($container, options) {\r\n        const ret = {\r\n            serial: util.buildSerial('_container_'),\r\n            body: '',\r\n            elements: {}\r\n        };\r\n        // table should be in top as it needs to be parsed first\r\n        $container.find('table').each(function () {\r\n            const $qtiElement = $(this);\r\n            let element = buildElement($qtiElement);\r\n\r\n            element = parseTable($qtiElement, element, options);\r\n            ret.elements[element.serial] = element;\r\n            $qtiElement.replaceWith(_placeholder(element));\r\n        });\r\n\r\n        // figure should be in top as it needs to be parsed first\r\n        $container.find(_getElementSelector('figure', options.ns.figure)).each(function () {\r\n            const $qtiElement = $(this);\r\n            let element = buildElement($qtiElement);\r\n\r\n            element = parseFigure($qtiElement, element, options);\r\n            ret.elements[element.serial] = element;\r\n            $qtiElement.replaceWith(_placeholder(element));\r\n        });\r\n\r\n        $container.find(_getElementSelector('math', options.ns.math)).each(function () {\r\n            const $qtiElement = $(this);\r\n            const element = buildMath($qtiElement, options);\r\n\r\n            ret.elements[element.serial] = element;\r\n            $qtiElement.replaceWith(_placeholder(element));\r\n        });\r\n\r\n        $container.find(_getElementSelector('include', options.ns.include)).each(function () {\r\n            const $qtiElement = $(this);\r\n            const element = buildElement($qtiElement);\r\n\r\n            ret.elements[element.serial] = element;\r\n            $qtiElement.replaceWith(_placeholder(element));\r\n        });\r\n\r\n        $container.find('[data-role=\"tooltip-target\"]').each(function () {\r\n            let element,\r\n                $target = $(this),\r\n                $content,\r\n                contentId = $target.attr('aria-describedBy'),\r\n                contentHtml;\r\n\r\n            if (contentId) {\r\n                $content = $container.find('#' + contentId);\r\n                if ($content.length) {\r\n                    contentHtml = $content.html();\r\n\r\n                    element = buildTooltip($target.html(), contentId, contentHtml);\r\n\r\n                    ret.elements[element.serial] = element;\r\n                    $target.replaceWith(_placeholder(element));\r\n                    $content.remove();\r\n                }\r\n            }\r\n        });\r\n\r\n        _.each(_parsableElements, function (qtiClass) {\r\n            $container.find(qtiClass).each(function () {\r\n                const $qtiElement = $(this);\r\n                const element = buildElement($qtiElement);\r\n                ret.elements[element.serial] = element;\r\n                $qtiElement.replaceWith(_placeholder(element));\r\n            });\r\n        });\r\n\r\n        ret.body = $container.html();\r\n        return ret;\r\n    }\r\n\r\n    function _placeholder(element) {\r\n        return '{{' + element.serial + '}}';\r\n    }\r\n\r\n    parser = {\r\n        parse: function (xmlStr, opts) {\r\n            const options = _.merge(_.clone(_defaultOptions), opts || {});\r\n\r\n            const $container = $(xmlStr);\r\n\r\n            const element = buildElement($container);\r\n\r\n            const data = parseContainer($container, options);\r\n\r\n            let loader;\r\n\r\n            if (!_.isUndefined(data.body)) {\r\n                element.body = data;\r\n            }\r\n\r\n            if (_.isFunction(options.loaded) && options.model) {\r\n                loader = new Loader().setClassesLocation(options.model);\r\n                loader.loadAndBuildElement(element, options.loaded);\r\n            }\r\n\r\n            return element;\r\n        }\r\n    };\r\n\r\n    var parser$1 = parser;\n\n    return parser$1;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xincludeLoader',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/simpleParser', 'taoQtiItem/qtiItem/core/Loader'], function ($, _, simpleParser, Loader) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    simpleParser = simpleParser && Object.prototype.hasOwnProperty.call(simpleParser, 'default') ? simpleParser['default'] : simpleParser;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    function load(xinclude, baseUrl, callback) {\r\n        const href = xinclude.attr('href');\r\n        if (href && baseUrl) {\r\n            const fileUrl = `text!${baseUrl}${href}`;\r\n            // reset the previous definition of the XML, to receive updated passage\r\n            require.undef(fileUrl);\r\n            // require xml\r\n            require([fileUrl], function (stimulusXml) {\r\n                const $wrapper = $.parseXML(stimulusXml);\r\n                const $sampleXMLrootNode = $wrapper.children;\r\n                const $stimulus = $('<include>').append($sampleXMLrootNode);\r\n                const mathNs = 'm'; //for 'http://www.w3.org/1998/Math/MathML'\r\n                const data = simpleParser.parse($stimulus, {\r\n                    ns: {\r\n                        math: mathNs\r\n                    }\r\n                });\r\n\r\n                new Loader().loadElement(xinclude, data, function () {\r\n                    if (_.isFunction(callback)) {\r\n                        const loadedClasses = this.getLoadedClasses();\r\n                        loadedClasses.push('_container'); //the _container class is always required\r\n                        callback(xinclude, data, loadedClasses);\r\n                    }\r\n                });\r\n            }, function () {\r\n                //in case the file does not exist\r\n                callback(xinclude, false, []);\r\n            });\r\n        }\r\n    }\r\n\r\n    var xincludeLoader = {\r\n        load\r\n    };\n\n    return xincludeLoader;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/picManager',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element'], function ($, _, Element) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    /**\r\n     * The template of a PicManager instance\r\n     * @type {picManager}\r\n     */\r\n    var picManager = {\r\n        /**\r\n         * Creates a manager for a particular PIC\r\n         *\r\n         * @param {Object} pic\r\n         * @param {QtiItem} item\r\n         * @returns {picManager}\r\n         */\r\n        init: function init(pic, item) {\r\n            if (Element.isA(pic, 'infoControl')) {\r\n                this._pic = pic;\r\n            }\r\n\r\n            if (Element.isA(item, 'assessmentItem')) {\r\n                this._item = item;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets the managed PIC\r\n         *\r\n         * @returns {Object} the descriptor of the PIC\r\n         */\r\n        getPic: function getPic() {\r\n            return this._pic;\r\n        },\r\n\r\n        /**\r\n         * Gets the related Item\r\n         *\r\n         * @returns {QtiItem} the Item\r\n         */\r\n        getItem: function getItem() {\r\n            return this._item;\r\n        },\r\n\r\n        /**\r\n         * Gets the PIC serial\r\n         * @returns {String}\r\n         */\r\n        getSerial: function getSerial() {\r\n            return this._pic && this._pic.serial;\r\n        },\r\n\r\n        /**\r\n         * Gets the PIC type identifier\r\n         * @returns {String}\r\n         */\r\n        getTypeIdentifier: function getTypeIdentifier() {\r\n            return this._pic && this._pic.typeIdentifier;\r\n        },\r\n\r\n        /**\r\n         * Gets the underlying DOM element of the managed PIC\r\n         * @returns {{pic: (jQuery), tool: (jQuery), button: (jQuery), broken: (Boolean))}|*} An object providing the underlying DOM elements of the PIC and its tool\r\n         */\r\n        getDom: function getDom() {\r\n            if (!this._dom) {\r\n                var serial = this.getSerial();\r\n                var pic, tool;\r\n\r\n                if (serial) {\r\n                    pic = $('[data-serial=\"' + serial + '\"]');\r\n                    if (pic.length) {\r\n                        tool = $('[data-pic-serial=\"' + serial + '\"]');\r\n\r\n                        if (!tool.length) {\r\n                            tool = pic.children().first();\r\n                        }\r\n\r\n                        this._dom = {\r\n                            pic: pic,\r\n                            tool: tool,\r\n                            button: tool.find('.sts-button'),\r\n                            broken: pic.is(':empty') // tells if the tool has been moved outside of the PIC\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this._dom;\r\n        },\r\n\r\n        /**\r\n         * Enables the PIC.\r\n         * @fires enable\r\n         * @returns {picManager}\r\n         */\r\n        enable: function enable() {\r\n            // @todo: find a better solution for disabling/enabling a PIC\r\n            var dom = this.getDom();\r\n            if (dom) {\r\n                // just remove the disabled state and destroy the disable mask\r\n                dom.button.removeClass('disabled');\r\n                dom.tool.find('.sts-button-disable-mask').remove();\r\n\r\n                this.disabled = false;\r\n                this.trigger('enable');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Disables the PIC\r\n         * @fires disable\r\n         * @returns {picManager}\r\n         */\r\n        disable: function disable() {\r\n            // @todo: find a better solution for disabling/enabling a PIC\r\n            var dom = this.getDom();\r\n            var button;\r\n            if (dom) {\r\n                // set a disabled state by adding a CSS class, then mask the button with a top-level element\r\n                button = dom.button.addClass('disabled');\r\n\r\n                $('<div class=\"sts-button-disable-mask\" style=\"position:absolute;z-index:10000000000000\"></div>')\r\n                    .appendTo(dom.tool)\r\n                    .offset(button.offset())\r\n                    .width(button.outerWidth())\r\n                    .height(button.outerHeight());\r\n\r\n                // also hide any sub component\r\n                dom.tool.find('.sts-container, .sts-menu-container').addClass('sts-hidden-container');\r\n\r\n                this.disabled = true;\r\n                this.trigger('disable');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Shows the PIC\r\n         * @fires show\r\n         * @returns {picManager}\r\n         */\r\n        show: function show() {\r\n            var dom = this.getDom();\r\n            if (dom) {\r\n                dom.tool.show();\r\n\r\n                this.trigger('show');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hides the PIC\r\n         * @fires hide\r\n         * @returns {picManager}\r\n         */\r\n        hide: function hide() {\r\n            var dom = this.getDom();\r\n            if (dom) {\r\n                dom.tool.hide();\r\n\r\n                this.trigger('hide');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggers an event on the underlying DOM element\r\n         * @param {String} eventName\r\n         * @returns {picManager}\r\n         */\r\n        trigger: function trigger(eventName) {\r\n            var dom = this.getDom();\r\n            var args = _.rest(arguments, 1);\r\n\r\n            args.unshift(this);\r\n\r\n            if (dom) {\r\n                // trigger the event, if the tool has been moved outside of the PIC, trigger also the event on the PIC\r\n                dom.tool.trigger(eventName, args);\r\n                if (dom.broken) {\r\n                    dom.pic.trigger(eventName, args);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * The template of a PicManagerCollection instance\r\n     * @type {picManagerCollection}\r\n     */\r\n    var picManagerCollection = {\r\n        /**\r\n         * Creates the collection of PIC from an Item\r\n         *\r\n         * @param {QtiItem} item\r\n         * @returns {picManagerCollection}\r\n         */\r\n        init: function init(item) {\r\n            if (Element.isA(item, 'assessmentItem')) {\r\n                this._item = item;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets the list of PIC managers for the PIC provided by the running item.\r\n         *\r\n         * @param {Boolean} [force] Force a list rebuild\r\n         * @returns {Array} Returns the list of managers for the provided PIC\r\n         */\r\n        getList: function getList(force) {\r\n            var self = this;\r\n\r\n            // build the list if empty\r\n            if (force || !self._list) {\r\n                self._map = {};\r\n                self._list = [];\r\n                if (self._item) {\r\n                    _.forEach(self._item.getElements(), function(element) {\r\n                        var manager;\r\n\r\n                        if (Element.isA(element, 'infoControl')) {\r\n                            manager = managerFactory(element, self._item);\r\n                            self._list.push(manager);\r\n                            self._map[element.serial] = manager;\r\n                            self._map[element.typeIdentifier] = manager;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            return this._list;\r\n        },\r\n\r\n        /**\r\n         * Gets the manager of the first PIC matching the identifier from the list provided by the running item.\r\n         *\r\n         * @param {String} picId The PIC typeIdentifier or serial\r\n         * @returns {Object} The manager of the PIC\r\n         */\r\n        getPic: function getPic(picId) {\r\n            this.getList();\r\n            return this._map[picId];\r\n        },\r\n\r\n        /**\r\n         * Executes an action on a particular PIC from the running item.\r\n         * @param {String} picId The PIC typeIdentifier or serial\r\n         * @param {String} action The name of the action to call\r\n         * @returns {*} Returns the action result\r\n         */\r\n        execute: function execute(picId, action) {\r\n            var pic = this.getPic(picId);\r\n            if (pic && pic[action]) {\r\n                return pic[action].apply(pic, _.rest(arguments, 2));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Executes an action on each PIC provided by the running item.\r\n         * @param {String} action The name of the action to call\r\n         * @param {Function} [filter] An optional filter to reduce the list\r\n         * @returns {picManagerCollection}\r\n         */\r\n        executeAll: function executeAll(action, filter) {\r\n            var args = _.rest(arguments, 2);\r\n            var cb;\r\n\r\n            if (typeof filter === 'function') {\r\n                cb = function(pic) {\r\n                    if (filter.call(pic, pic) && pic[action]) {\r\n                        pic[action].apply(pic, args);\r\n                    }\r\n                };\r\n            } else {\r\n                cb = function(pic) {\r\n                    if (pic[action]) {\r\n                        pic[action].apply(pic, args);\r\n                    }\r\n                };\r\n            }\r\n\r\n            return this.each(cb);\r\n        },\r\n\r\n        /**\r\n         * Calls a callback function on each listed PIC from the running item.\r\n         * @param {Function} cb The callback function to apply on each listed PIC\r\n         * @returns {picManagerCollection}\r\n         */\r\n        each: function each(cb) {\r\n            _.forEach(this.getList(), cb);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enables a PIC provided by the running item.\r\n         *\r\n         * @param {String} picId The PIC typeIdentifier or serial\r\n         * @returns {picManagerCollection}\r\n         */\r\n        enablePic: function enablePic(picId) {\r\n            this.execute(picId, 'enable');\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Disables a PIC provided by the running item.\r\n         *\r\n         * @param {String} picId The PIC typeIdentifier or serial\r\n         * @returns {picManagerCollection}\r\n         */\r\n        disablePic: function disablePic(picId) {\r\n            this.execute(picId, 'disable');\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Shows a PIC provided by the running item.\r\n         *\r\n         * @param {String} picId The PIC typeIdentifier or serial\r\n         * @returns {picManagerCollection}\r\n         */\r\n        showPic: function showPic(picId) {\r\n            this.execute(picId, 'show');\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hides a PIC provided by the running item.\r\n         *\r\n         * @param {String} picId The PIC typeIdentifier or serial\r\n         * @returns {picManagerCollection}\r\n         */\r\n        hidePic: function hidePic(picId) {\r\n            this.execute(picId, 'hide');\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enables all PIC provided by the running item.\r\n         *\r\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to enable\r\n         * @returns {picManagerCollection}\r\n         */\r\n        enableAll: function enableAll(filter) {\r\n            this.executeAll('enable', filter);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Disables all PIC provided by the running item.\r\n         *\r\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to disable\r\n         * @returns {picManagerCollection}\r\n         */\r\n        disableAll: function disableAll(filter) {\r\n            this.executeAll('disable', filter);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Shows all PIC provided by the running item.\r\n         *\r\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to show\r\n         * @returns {picManagerCollection}\r\n         */\r\n        showAll: function showAll(filter) {\r\n            this.executeAll('show', filter);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hides all PIC provided by the running item.\r\n         *\r\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to hide\r\n         * @returns {picManagerCollection}\r\n         */\r\n        hideAll: function hideAll(filter) {\r\n            this.executeAll('hide', filter);\r\n            return this;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Creates a PIC manager for a particular Item.\r\n     * @param {Object} pic\r\n     * @param {QtiItem} item\r\n     * @returns {picManager} Returns the instance of the PIC manager\r\n     */\r\n    var managerFactory = function managerFactory(pic, item) {\r\n        var manager = _.clone(picManager, true);\r\n        return manager.init(pic, item);\r\n    };\r\n\r\n    /**\r\n     * Creates a PIC manager for a particular Item.\r\n     * @param {QtiItem} item\r\n     * @returns {picManager} Returns the instance of the PIC manager\r\n     */\r\n    var collectionFactory = function collectionFactory(item) {\r\n        var collection = _.clone(picManagerCollection, true);\r\n        return collection.init(item);\r\n    };\r\n\r\n    var picManager$1 = {\r\n        collection: collectionFactory,\r\n        manager: managerFactory\r\n    };\n\n    return picManager$1;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/userModules',['lodash', 'module'], function (_, module) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    var userModules = {\r\n        /**\r\n         * Load user modules defined in the module config\r\n         * @param {Array} [userModules] - manually specify user modules to load instead of getting them from the module config\r\n         * @returns {Promise}\r\n         */\r\n        load: function load(userModules) {\r\n            var config = module.config();\r\n\r\n            if (!userModules || !_.isArray(userModules)) {\r\n                if (config && config.userModules && _.isArray(config.userModules)) {\r\n                    userModules = config.userModules;\r\n                } else {\r\n                    userModules = [];\r\n                }\r\n            }\r\n            if(!userModules.length){\r\n                return Promise.resolve();\r\n            }\r\n            return new Promise(function(resolve, reject) {\r\n                window.require(userModules, function() {\r\n                    _.forEach(arguments, function(dependency) {\r\n                        if (dependency && _.isFunction(dependency.exec)) {\r\n                            dependency.exec();\r\n                        }\r\n                    });\r\n                    resolve();\r\n                }, function(err) {\r\n                    reject(err.message);\r\n                });\r\n            });\r\n        }\r\n    };\n\n    return userModules;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory',[],function(){\n    'use strict';\n\n    /**\n     * Generic portable element provider than loads portable elements directly on the client side\n     *\n     * Sample usage :\n     * var pciProvider = sideLoadingProviderFactory(pciManifestArray);\n     * pciProvider.add('anotherPciXYZ', anotherPciXYZObject);\n     *\n     */\n    return function sideLoadingProviderFactory(portableElements){\n\n        var _registry = portableElements;\n\n        return {\n            /**\n             * Side load the portable element here\n             * @param id\n             * @param pathToManifest\n             */\n            add : function add(id, portableElement){\n                _registry[id] = portableElement;\n                return this;\n            },\n            /**\n             * Implementation of the mandatory method load() of a portable element provider\n             *\n             * @returns {Promise} resolved when the added pci registered through their manifest are loaded\n             */\n            load : function load(){\n                return _registry;\n            }\n        };\n    };\n});\n","define('taoQtiItem/reviewRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    const itemThemes = themes.get('items');\r\n    const moduleConfig = module.config();\r\n\r\n    //Create asset manager stack\r\n    const assetManager = assetManagerFactory(\r\n        [\r\n            {\r\n                name: 'theme',\r\n                handle: url => {\r\n                    if (\r\n                        itemThemes &&\r\n                        url.path &&\r\n                        (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))\r\n                    ) {\r\n                        return context.root_url + url.toString();\r\n                    }\r\n                }\r\n            },\r\n            assetStrategies.taomedia,\r\n            assetStrategies.external,\r\n            assetStrategies.base64,\r\n            assetStrategies.itemCssNoCache,\r\n            assetStrategies.baseUrl,\r\n            portableAssetStrategy\r\n        ],\r\n        { baseUrl: '' }\r\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\r\n\r\n    //renderers locations\r\n    const locations = {\r\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\r\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\r\n        _simpleFeedbackRule: false,\r\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\r\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\r\n        outcomeDeclaration: false,\r\n        responseDeclaration: false,\r\n        responseProcessing: false,\r\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\r\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\r\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\r\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\r\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\r\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\r\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\r\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\r\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\r\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\r\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\r\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\r\n\r\n        // Interactions/Choices customised for reviewRenderer\r\n\r\n        choiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ChoiceInteraction',\r\n        extendedTextInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ExtendedTextInteraction',\r\n        orderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/OrderInteraction',\r\n        associateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/AssociateInteraction',\r\n        matchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MatchInteraction',\r\n        textEntryInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/TextEntryInteraction',\r\n        sliderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SliderInteraction',\r\n        inlineChoiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/InlineChoiceInteraction',\r\n        'simpleChoice.choiceInteraction': 'taoQtiItem/reviewRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\r\n        hottext: 'taoQtiItem/reviewRenderer/renderers/choices/Hottext',\r\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\r\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\r\n        hotspotInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/HotspotInteraction',\r\n        hotspotChoice: false,\r\n        associableHotspot: false,\r\n        gapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GapMatchInteraction',\r\n        selectPointInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SelectPointInteraction',\r\n        graphicOrderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicOrderInteraction',\r\n        graphicAssociateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicAssociateInteraction',\r\n        graphicGapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicGapMatchInteraction',\r\n        uploadInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/UploadInteraction',\r\n        customInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/PortableCustomInteraction',\r\n        mediaInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MediaInteraction',\r\n\r\n        // Interactions/Choices inherited from qtiCommonRenderer\r\n\r\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\r\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\r\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\r\n        'simpleAssociableChoice.matchInteraction':\r\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\r\n        'simpleAssociableChoice.associateInteraction':\r\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\r\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\r\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction',\r\n    };\r\n\r\n    var config = {\r\n        name: 'reviewRenderer',\r\n        locations,\r\n        options: {\r\n            assetManager,\r\n            themes: itemThemes,\r\n            enableDragAndDrop: {\r\n                associate: !!moduleConfig.associateDragAndDrop,\r\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\r\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\r\n                order: !!moduleConfig.orderDragAndDrop\r\n            },\r\n            messages: moduleConfig.messages\r\n        }\r\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/reviewRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/*\r\n\t * This program is free software; you can redistribute it and/or\r\n\t * modify it under the terms of the GNU General Public License\r\n\t * as published by the Free Software Foundation; under version 2\r\n\t * of the License (non-upgradable).\r\n\t *\r\n\t * This program is distributed in the hope that it will be useful,\r\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\t * GNU General Public License for more details.\r\n\t *\r\n\t * You should have received a copy of the GNU General Public License\r\n\t * along with this program; if not, write to the Free Software\r\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n\t *\r\n\t * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n\t *\r\n\t */\r\n\r\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/rendererProvider',['taoQtiItem/reviewRenderer/renderers/Renderer'], function (ReviewRenderer) { 'use strict';\n\n    ReviewRenderer = ReviewRenderer && Object.prototype.hasOwnProperty.call(ReviewRenderer, 'default') ? ReviewRenderer['default'] : ReviewRenderer;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * This is a provider wrapper for reviewRenderer\r\n     */\r\n    var rendererProvider = {\r\n        name: 'reviewRenderer',\r\n        init: () => {},\r\n        getRenderer: () => ReviewRenderer\r\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/runner/rendererStrategies',['core/logger', 'core/providerRegistry', 'taoQtiItem/qtiCommonRenderer/renderers/rendererProvider', 'taoQtiItem/reviewRenderer/renderers/rendererProvider'], function (loggerFactory, providerRegistry, qtiRenderer, reviewRenderer) { 'use strict';\n\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    providerRegistry = providerRegistry && Object.prototype.hasOwnProperty.call(providerRegistry, 'default') ? providerRegistry['default'] : providerRegistry;\n    qtiRenderer = qtiRenderer && Object.prototype.hasOwnProperty.call(qtiRenderer, 'default') ? qtiRenderer['default'] : qtiRenderer;\n    reviewRenderer = reviewRenderer && Object.prototype.hasOwnProperty.call(reviewRenderer, 'default') ? reviewRenderer['default'] : reviewRenderer;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    const logger = loggerFactory('taoQtiItem/runner/rendererStrategies');\r\n\r\n    /**\r\n     * The default renderer provider. It should be the QTI common renderer.\r\n     * @type string\r\n     */\r\n    const defaultRenderer = qtiRenderer.name;\r\n\r\n    /**\r\n     * Alias mapping for particular names.\r\n     * Gives the appropriate renderer based on the IMS view property.\r\n     * Read more about IMS view here:\r\n     * https://www.imsglobal.org/question/qtiv2p2p2/QTIv2p2p2-ASI-InformationModelv1p0/imsqtiv2p2p2_asi_v1p0_InfoModelv1p0.html#FigEnumeratedListClass_DataModel_View\r\n     *\r\n     * @type {Object}\r\n     */\r\n    const alias = {\r\n        author: qtiRenderer.name,\r\n        candidate: qtiRenderer.name,\r\n        proctor: reviewRenderer.name,\r\n        scorer: reviewRenderer.name,\r\n        testConstructor: qtiRenderer.name,\r\n        tutor: reviewRenderer.name\r\n    };\r\n\r\n    /**\r\n     * Gets the name of an existing renderer.\r\n     * If the wanted renderer does not exist, it will fallback to the default one.\r\n     * A warning will be issue for unknown names.\r\n     * @param {String} name\r\n     * @returns {String}\r\n     */\r\n    function getProviderName(name) {\r\n        const providers = rendererStrategies.getAvailableProviders();\r\n\r\n        if (providers.includes(name)) {\r\n            return name;\r\n        }\r\n\r\n        if (alias[name]) {\r\n            return alias[name];\r\n        }\r\n\r\n        if (name) {\r\n            logger.warn(`Unknown QTI Item Runner renderer ${name}!`);\r\n        }\r\n\r\n        return defaultRenderer;\r\n    }\r\n\r\n    /**\r\n     * This renderer manager registers two different renderers at the moment:\r\n     * - qtiCommonRenderer: Standard renderer used for test taker view\r\n     * - reviewRenderer: This renderer is meant to render items in review mode (which is ready-only with some enhancement)\r\n     *\r\n     * @param {string} rendererName\r\n     * @returns {*|{init(): *, getRenderer(): *}|init}\r\n     */\r\n    function rendererStrategies(rendererName) {\r\n        const providerName = getProviderName(rendererName);\r\n        const provider = rendererStrategies.getProvider(providerName);\r\n        const renderer = {\r\n            /**\r\n             * Initializes the renderer.\r\n             * @returns {renderer}\r\n             */\r\n            init() {\r\n                provider.init.call(this);\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Gets the renderer's name\r\n             * @returns {String}\r\n             */\r\n            getName() {\r\n                return provider.name;\r\n            },\r\n\r\n            /**\r\n             * Gets the renderer\r\n             * @returns {renderer}\r\n             */\r\n            getRenderer() {\r\n                return provider.getRenderer();\r\n            }\r\n        };\r\n\r\n        return renderer.init();\r\n    }\r\n\r\n    providerRegistry(rendererStrategies);\r\n\r\n    rendererStrategies.registerProvider(qtiRenderer.name, qtiRenderer);\r\n    rendererStrategies.registerProvider(reviewRenderer.name, reviewRenderer);\n\n    return rendererStrategies;\n\n});\n\n","define('taoQtiItem/runner/provider/qti',['jquery', 'lodash', 'i18n', 'context', 'taoQtiItem/qtiItem/core/Loader', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/portableElementRegistry/ciRegistry', 'taoQtiItem/portableElementRegistry/icRegistry', 'taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory', 'taoQtiItem/runner/rendererStrategies', 'taoQtiItem/runner/provider/manager/picManager', 'taoQtiItem/runner/provider/manager/userModules', 'taoQtiItem/qtiItem/helper/modalFeedback', 'taoItems/assets/manager', 'util/locale'], function ($, _, __, context, QtiLoader, Element, ciRegistry, icRegistry, sideLoadingProviderFactory, rendererStrategies, picManager, userModules, modalFeedbackHelper, manager, locale) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    QtiLoader = QtiLoader && Object.prototype.hasOwnProperty.call(QtiLoader, 'default') ? QtiLoader['default'] : QtiLoader;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n    sideLoadingProviderFactory = sideLoadingProviderFactory && Object.prototype.hasOwnProperty.call(sideLoadingProviderFactory, 'default') ? sideLoadingProviderFactory['default'] : sideLoadingProviderFactory;\n    rendererStrategies = rendererStrategies && Object.prototype.hasOwnProperty.call(rendererStrategies, 'default') ? rendererStrategies['default'] : rendererStrategies;\n    picManager = picManager && Object.prototype.hasOwnProperty.call(picManager, 'default') ? picManager['default'] : picManager;\n    userModules = userModules && Object.prototype.hasOwnProperty.call(userModules, 'default') ? userModules['default'] : userModules;\n    modalFeedbackHelper = modalFeedbackHelper && Object.prototype.hasOwnProperty.call(modalFeedbackHelper, 'default') ? modalFeedbackHelper['default'] : modalFeedbackHelper;\n    locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\r\n\r\n    /**\r\n     * @exports taoQtiItem/runner/provider/qti\r\n     */\r\n    var qtiItemRuntimeProvider = {\r\n        init: function (itemData, done) {\r\n            var self = this;\r\n\r\n            var rendererOptions = _.merge(\r\n                {\r\n                    assetManager: this.assetManager\r\n                },\r\n                _.pick(this.options, ['themes', 'preload', 'view'])\r\n            );\r\n\r\n            const Renderer = rendererStrategies(rendererOptions.view).getRenderer();\r\n\r\n            this._renderer = new Renderer(rendererOptions);\r\n\r\n            this._loader = new QtiLoader();\r\n\r\n            this._loader.loadItemData(itemData, function (item) {\r\n                if (!item) {\r\n                    return self.trigger('error', __('Unable to load item from the given data.'));\r\n                }\r\n\r\n                self._item = item;\r\n                self._renderer.load(function () {\r\n                    self._item.setRenderer(this);\r\n\r\n                    done();\r\n                }, this.getLoadedClasses());\r\n            });\r\n        },\r\n\r\n        render: function (elt, done, options) {\r\n            var self = this;\r\n\r\n            options = _.defaults(options || {}, { state: {} });\r\n\r\n            if (this._item) {\r\n                try {\r\n                    //render item html\r\n                    elt.innerHTML = this._item.render({});\r\n\r\n                    // apply RTL layout according to item language\r\n                    const $item = $(elt).find('.qti-item');\r\n                    const $itemBody = $item.find('.qti-itemBody');\r\n                    const itemDir = $itemBody.attr('dir');\r\n                    if (!itemDir) {\r\n                        const itemLang = $item.attr('lang');\r\n                        $itemBody.attr('dir', locale.getLanguageDirection(itemLang));\r\n                    }\r\n                } catch (e) {\r\n                    self.trigger('error', __('Error in template rendering: %s', e.message));\r\n                }\r\n                try {\r\n                    if (options.portableElements) {\r\n                        //if the option to directly load portable elements is provided, use only this one\r\n                        if (options.portableElements.pci) {\r\n                            ciRegistry.resetProviders();\r\n                            ciRegistry.registerProvider(\r\n                                'pciDeliveryProvider',\r\n                                sideLoadingProviderFactory(options.portableElements.pci)\r\n                            );\r\n                        }\r\n                        if (options.portableElements.pic) {\r\n                            icRegistry.resetProviders();\r\n                            icRegistry.registerProvider(\r\n                                'picDeliveryProvider',\r\n                                sideLoadingProviderFactory(options.portableElements.pic)\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    // Race between postRendering and timeout\r\n                    // postRendering waits for everything to be resolved or one reject\r\n                    Promise.race([\r\n                        Promise.all(this._item.postRender(options)),\r\n                        new Promise(function (resolve, reject) {\r\n                            _.delay(\r\n                                reject,\r\n                                timeout,\r\n                                new Error(__('It seems that there is an error during item loading. The error has been reported. The test will be paused.'))\r\n                            );\r\n                        })\r\n                    ])\r\n                        .then(function () {\r\n                            $(elt)\r\n                                .off('responseChange')\r\n                                .on('responseChange', function () {\r\n                                    self.trigger('statechange', self.getState());\r\n                                    self.trigger('responsechange', self.getResponses());\r\n                                })\r\n                                .off('endattempt')\r\n                                .on('endattempt', function (e, responseIdentifier) {\r\n                                    self.trigger('endattempt', responseIdentifier || e.originalEvent.detail);\r\n                                })\r\n                                .off('themechange')\r\n                                .on('themechange', function (e, themeName) {\r\n                                    var themeLoader = self._renderer.getThemeLoader();\r\n                                    themeName = themeName || e.originalEvent.detail;\r\n                                    if (themeLoader) {\r\n                                        themeLoader.change(themeName);\r\n                                    }\r\n                                });\r\n\r\n                            /**\r\n                             * Lists the PIC provided by this item.\r\n                             * @event qti#listpic\r\n                             */\r\n                            self.trigger('listpic', picManager.collection(self._item));\r\n\r\n                            return userModules.load().then(done);\r\n                        })\r\n                        .catch(function (renderingError) {\r\n                            done(); // in case of postRendering issue, we are also done\r\n                            const errorMsg = renderingError instanceof Error\r\n                                ? renderingError.message\r\n                                : renderingError;\r\n                            const error = new Error(__('Error in post rendering: %s', errorMsg));\r\n                            error.unrecoverable = true;\r\n                            self.trigger('error', error);\r\n                        });\r\n                } catch (err) {\r\n                    self.trigger('error', __('Error in post rendering: %s', err.message));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clean up stuffs\r\n         */\r\n        clear: function (elt, done) {\r\n            var self = this;\r\n\r\n            if (self._item) {\r\n                Promise.all(\r\n                    this._item.getInteractions().map(function (interaction) {\r\n                        return interaction.clear();\r\n                    })\r\n                )\r\n                    .then(function () {\r\n                        self._item.clear();\r\n\r\n                        $(elt).off('responseChange').off('endattempt').off('themechange').off('feedback').empty();\r\n\r\n                        if (self._renderer) {\r\n                            self._renderer.unload();\r\n                        }\r\n\r\n                        self._item = null;\r\n                    })\r\n                    .then(done)\r\n                    .catch(function (err) {\r\n                        self.trigger('error', __('Something went wrong while destroying an interaction: %s', err.message));\r\n                    });\r\n            } else {\r\n                done();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get state implementation.\r\n         * @returns {Object} that represents the state\r\n         */\r\n        getState: function getState() {\r\n            var state = {};\r\n            if (this._item) {\r\n                //get the state from interactions\r\n                _.forEach(this._item.getInteractions(), function (interaction) {\r\n                    state[interaction.attr('responseIdentifier')] = interaction.getState();\r\n                });\r\n\r\n                //get the state from infoControls\r\n                _.forEach(this._item.getElements(), function (element) {\r\n                    if (Element.isA(element, 'infoControl') && element.attr('id')) {\r\n                        state.pic = state.pic || {};\r\n                        state.pic[element.attr('id')] = element.getState();\r\n                    }\r\n                });\r\n            }\r\n            return state;\r\n        },\r\n\r\n        /**\r\n         * Set state implementation.\r\n         * @param {Object} state - the state\r\n         */\r\n        setState: function setState(state) {\r\n            if (this._item && state) {\r\n                //set interaction state\r\n                _.forEach(this._item.getInteractions(), function (interaction) {\r\n                    var id = interaction.attr('responseIdentifier');\r\n                    if (id && state[id]) {\r\n                        interaction.setState(state[id]);\r\n                    }\r\n                });\r\n\r\n                //set info control state\r\n                if (state.pic) {\r\n                    _.forEach(this._item.getElements(), function (element) {\r\n                        if (Element.isA(element, 'infoControl') && state.pic[element.attr('id')]) {\r\n                            element.setState(state.pic[element.attr('id')]);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        getResponses: function () {\r\n            var responses = {};\r\n            if (this._item) {\r\n                _.reduce(\r\n                    this._item.getInteractions(),\r\n                    function (res, interaction) {\r\n                        responses[interaction.attr('responseIdentifier')] = interaction.getResponse();\r\n                        return responses;\r\n                    },\r\n                    responses\r\n                );\r\n            }\r\n            return responses;\r\n        },\r\n\r\n        renderFeedbacks: function (feedbacks, itemSession, done) {\r\n            var self = this;\r\n\r\n            var _renderer = self._item.getRenderer();\r\n            var _loader = new QtiLoader(self._item);\r\n\r\n            // loading feedbacks from response into the current item\r\n            _loader.loadElements(feedbacks, function (item) {\r\n                _renderer.load(function () {\r\n                    var renderingQueue = modalFeedbackHelper.getFeedbacks(item, itemSession);\r\n\r\n                    done(renderingQueue);\r\n                }, this.getLoadedClasses());\r\n            });\r\n        }\r\n    };\n\n    return qtiItemRuntimeProvider;\n\n});\n\n","define('taoQtiItem/runner/qtiItemRunner',['taoItems/runner/api/itemRunner', 'taoQtiItem/runner/provider/qti'], function (itemRunner, qtiRuntimeProvider) { 'use strict';\n\n\titemRunner = itemRunner && Object.prototype.hasOwnProperty.call(itemRunner, 'default') ? itemRunner['default'] : itemRunner;\n\tqtiRuntimeProvider = qtiRuntimeProvider && Object.prototype.hasOwnProperty.call(qtiRuntimeProvider, 'default') ? qtiRuntimeProvider['default'] : qtiRuntimeProvider;\n\n\t/*\r\n\t * This program is free software; you can redistribute it and/or\r\n\t * modify it under the terms of the GNU General Public License\r\n\t * as published by the Free Software Foundation; under version 2\r\n\t * of the License (non-upgradable).\r\n\t *\r\n\t * This program is distributed in the hope that it will be useful,\r\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\t * GNU General Public License for more details.\r\n\t *\r\n\t * You should have received a copy of the GNU General Public License\r\n\t * along with this program; if not, write to the Free Software\r\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n\t *\r\n\t * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n\t *\r\n\t */\r\n\r\n\t//register the QTI Provider\r\n\titemRunner.register('qti', qtiRuntimeProvider);\n\n\treturn itemRunner;\n\n});\n\n","\ndefine(\"taoQtiItem/loader/taoQtiItemRunner.es5.bundle\", function(){});\n","define(\"taoQtiItem/loader/taoQtiItemRunner.es5.min\", [\"taoItems/loader/taoItemsRunner.es5.min\"], function(){});\n"]}