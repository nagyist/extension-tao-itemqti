{"version":3,"names":["define","ckConfigurator$1","Object","prototype","hasOwnProperty","call","getConfig","editor","toolbarType","options","underline","ckConfigurator","_","util","buildSerial","prefix","id","chars","i","charAt","Math","floor","random","length","buildId","item","suffix","exists","usedIds","TypeError","getUsedIds","includes","buildIdentifier","useSuffix","getUsedIdentifiers","isUndefined","replace","findInCollection","element","collectionNames","searchedSerial","found","isString","isArray","forEach","collectionName","collection","split","nameToken","elt","parent","isFunction","find","Error","addMarkupNamespace","markup","ns","$0","$1","$2","$3","$4","indexOf","removeMarkupNamespaces","removeMarkupNamespace","getMarkupUsedNamespaces","namespaces","original","slash","node","push","uniq","$","rendererConfigHelper","getOptionsFromArguments","args","data","placeholder","subclass","renderer","arg","isRenderer","isPlainObject","console","log","_class","loggerFactory","rendererConfig","_instances","logger","Element","Class","extend","qtiClass","serial","rootElement","init","attributes","metaData","match","setAttributes","initContainer","arguments","initObject","is","getSerial","elts","getComposingElements","attr","name","value","prop","document","trigger","key","removeData","removeAttr","removeAttributes","warn","getAttributes","clone","attrNames","append","getBody","getObject","v","isA","getUsedClasses","ret","composingElts","object","body","location","getRootElement","setRelatedItem","setRootElement","getRelatedItem","setRenderer","getRenderer","render","_renderer","tplData","defaultData","tag","rendering","resolveUrl","merge","getData","renderTpl","replaceWith","postRender","altClassName","postRenderers","compact","getContainer","$scope","toArray","arr","type","isEmpty","addClass","className","clazz","_containClass","hasClass","removeClass","regex","RegExp","trim","toggleClass","state","isset","issetElement","unset","unsetElement","allClassStr","test","qtiElement","getElementBySerial","composingElements","_containers","_$containerContext","_getSelector","selector","containerHelper","setContext","getContext","get","reset","omit","clear","eventType","triggerResponseChangeEvent","interaction","extraData","response","getResponse","targetBlank","$container","on","e","preventDefault","href","window","open","isItemWritingModeVerticalRl","itemBody","raphael","scaleRaphael","_Mathround","round","_Mathfloor","basic","stroke","\"stroke-width\"","\"stroke-dasharray\"","\"stroke-linejoin\"","fill","\"fill-opacity\"","cursor","hover","selectable","active","error","success","layer","opacity","creator","target","path","width","assoc","\"stroke-linecap\"","close","gstyle","\"imageset-rect-stroke\"","\"imageset-rect-no-stroke\"","\"imageset-img\"","\"order-text\"","\"font-family\"","\"font-weight\"","\"font-size\"","\"score-text-default\"","\"score-text\"","\"small-text\"","\"layer-pos-text\"","\"target-hover\"","\"target-success\"","\"assoc-layer\"","\"stroke-opacity\"","\"assoc-bullet\"","\"close-bg\"","\"touch-circle\"","shapeMap","default","poly","coordsValidator","rect","ellipse","circle","qti2raphCoordsMapper","coords","paper","height","a","size","join","raph2qtiCoordsMapper","x","y","cx","cy","r","rx","ry","GraphicHelper","_style","setStyle","responsivePaper","resizePaper","givenWidth","containerWidth","stopPropagation","diff","$editor","outerWidth","maxWidth","$body","responsive","innerWidth","factor","imgWidth","containerHeight","imgHeight","changeSize","resize","container","closest","resizer","throttle","innerHeight","image","img","imgId","setViewBox","createElement","self","shaper","shapeCoords","qtiCoords","raphaelCoords","apply","title","style","toFront","flashing","updateElementState","touchEffect","touchstart","createTouchCircle","getBBox","createTarget","point","w","baseSize","half","targetSize","transform","count","tBBox","click","p","select","remove","create","map","coord","parseInt","JSON","stringify","mapper","result","bbox","radius","tCircle","defer","animate","createText","top","left","content","disableEvents","text","hide","setAttribute","fontSize","scaledFontSize","updateTitle","createShapeText","shape","shapeClick","createBorderedImage","padding","halfPad","rw","rh","ix","iy","iw","ih","set","border","url","shadow","glow","offsetx","offsety","move","duration","animation","animateWith","children","child","nodeName","toLowerCase","removeChild","highlightError","restoredState","delay","event","evt","events","filter","el","f","Array","slice","getPoint","clickPoint","getBoundingClientRect","position","pw","cw","ph","ch","offset","pageX","pageY","clientX","clientY","scrollLeft","documentElement","scrollTop","Handlebars","Helpers0","instructionTpl","asString","html","Template","__initialized","template","depth0","helpers","partials","program1","buffer","stack1","escapeExpression","compilerInfo","functionType","helper","hash","inverse","noop","fn","program","message","_notificationLevels","Instruction","callback","defaultMessage","currentMessage","level","$dom","isValidLevel","setState","checkState","getId","update","timeout","start","stop","_this","timer","setTimeout","setLevel","getLevel","setMessage","validate","$$1","__","notifTpl","helperMissing","_instructions","instructionManager","validateInstructions","instruction","appendInstruction","validateCallback","removeInstructions","empty","resetInstructions","minMaxChoiceInstructions","min","max","onError","choiceCount","getChoices","minInstructionSet","msg","appendNotification","prepend","$notif","_remove","fadeOut","removeNotifications","informLoaded","leading","attach","stylesheets","$head","stylesheet","$link","onload","onerror","one","appendTo","detach","itemStylesheetHandler","regexChar","regexWords","patternMaskHelper","parsePattern","pattern","createMaxWordPattern","toString","createMaxCharPattern","printBase","withType","print","base","forIn","_formatters","formatter","baseType","printList","list","substring","printRecord","record","boolean","integer","float","string","pair","directedPair","file","uri","intOrIdentifier","identifier","PciPrettyPrint","pciPrettyPrint","_qtiModelPciResponseCardinalities","single","multiple","ordered","PciResponse","unserialize","responseDeclaration","getResponseDeclaration","cardinality","mappedCardinality","responseValues","isObject","serialize","prettyPrint","fixMarkupMediaSources","imgSrcPattern","substr","resolved","PortableElement","adaptSize","waitForMedia","itemSelector","sizeAdapter","$elements","first","addEventListener","rel","resetSize","resetHeight","mimeTypes","delimetr","uploadMime","getMimeTypes","getList","setExpectedTypes","types","classes","reduce","acc","selectedType","getExpectedTypes","includeEquivalents","equivalents","mimes","mime","mimeData","equivalent","union","exports","isSafari","ua","navigator","userAgent","defineProperty","tpl","Gap","program3","objetLabel","objectLabel","GapImg","GapText","Hottext","InlineChoice","SimpleAssociableChoice_AssociateInteraction","SimpleAssociableChoice_MatchInteraction","features","program5","program7","unique","allowElimination","SimpleChoice_ChoiceInteraction","choice","maxChoices","isVisible","SimpleChoice_OrderInteraction","Promise","eventifier","_requirejs","require","_defaultLoadingOptions","reload","loadModuleConfig","manifest","resolve","reject","requireConfigAliases","reqConfigs","modules","baseUrl","runtime","config","pciConfig","defaults","paths","runtimeModules","typeIdentifier","model","conf","isPortableElementProvider","provider","load","portableElementRegistry","methods","_loaded","__providers","_registry","version","last","registerProvider","moduleName","resetProviders","loadProviders","loadPromise","providerLoadingStack","shift","getAllVersions","all","versions","getRuntime","portableElement","assign","label","getCreator","xmlns","getLatestCreators","lastVersion","hook","enabled","getBaseUrl","loadRuntimes","then","providers","loadStack","results","configLoadingStack","_pcis","include","moduleConfigs","catch","err","loadCreators","requiredCreatorHooks","portableElementModel","creators","creatorHook","getTypeIdentifier","findIndex","module","enable","disable","isEnabled","featuresService","QtiElements","parents","contains","abstract","atomicBlock","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","xhtml","col","colgroup","div","dl","dt","dd","hr","math","li","ol","ul","param","table","tbody","tfoot","thead","td","th","tr","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","pre","br","infoControl","qti","textRun","feedbackInline","feedbackBlock","rubricBlock","blockInteraction","inlineInteraction","gap","hottext","printedVariable","prompt","templateElement","templateBlock","templateInline","choiceInteraction","associateInteraction","orderInteraction","matchInteraction","hottextInteraction","gapMatchInteraction","mediaInteraction","sliderInteraction","uploadInteraction","drawingInteraction","graphicInteraction","hotspotInteraction","graphicAssociateInteraction","graphicOrderInteraction","graphicGapMatchInteraction","selectPointInteraction","textEntryInteraction","extendedTextInteraction","inlineChoiceInteraction","endAttemptInteraction","customInteraction","_container","cache","containable","getAllowedContainersElements","getAllowedContainers","jqSelector","getParentClasses","aClass","intersect","intersection","getChildClasses","getAllowedContents","recursive","checked","contain","j","isAllowedClass","qtiContainerClass","qtiContentClass","allowedClasses","cacheType","isBlock","isInline","topClass","getAvailableAuthoringElements","tagTitles","commonInteractions","inlineInteractions","graphicInteractions","authoringElements","description","icon","short","tags","group","availableElements","elementId","entries","qtiElements","customInteractionRegistry","getAuthoringData","enabledOnly","pciModel","ciRegistry","registry","infoControlRegistry","icRegistry","getBaseUrlByIdentifier","handle","handlePortableElementLocation","source","relative","fullmatch","relPath","runtimeLocation","context","themes","assetManagerFactory","assetStrategies","portableAssetStrategy","itemThemes","moduleConfig","assetManager","handleTheme","available","val","root_url","taomedia","external","base64","itemCssNoCache","locations","assessmentItem","_simpleFeedbackRule","_tooltip","outcomeDeclaration","responseProcessing","figure","figcaption","modalFeedback","\"simpleChoice.choiceInteraction\"","\"simpleChoice.orderInteraction\"","gapText","\"simpleAssociableChoice.matchInteraction\"","\"simpleAssociableChoice.associateInteraction\"","inlineChoice","hotspotChoice","gapImg","associableHotspot","enableDragAndDrop","associate","associateDragAndDrop","gapMatch","gapMatchDragAndDrop","graphicGapMatch","graphicGapMatchDragAndDrop","order","orderDragAndDrop","messages","program2","program4","equal","contentModel","Container","Figcaption","imageTpl","widgetTpl","Template$1","program6","showFigure","DISABLE_FIGURE_WIDGET","featureFlags","FEATURE_FLAG_DISABLE_FIGURE_WIDGET","Figure","elem","class","FLOAT_LEFT_CLASS","FLOAT_RIGHT_CLASS","CENTER_CLASS","some","bdy","elements","childElement","$figure","$img","css","program9","program11","program13","program15","program17","program19","program21","role","src","alt","Img","Include","hider","instructionMgr","pciResponse","interact","interactUtils","pairTpl","blockHelperMissing","choices","setChoice","$choice","$target","choiceSerial","getChoice","usage","_setChoice","responseMappingMode","siblings","$resultArea","$pair","thisPairSerial","$otherRepeatedPair","not","each","$otherPair","otherPairSerial","fadeIn","show","color","unsetChoice","$filledChoice","triggerChange","$parent","$sibling","isNumberOfMaxAssociationsZero","swapping","getChoiceByIdentifier","renderEmptyPairs","scrollObserverFactory","$scrollContainer","resetScrollObserver","currentDraggable","beforeY","beforeX","afterY","afterX","onScrollCb","getAttribute","webkitTransform","findScrollContainer","$el","ovf","dynamicDrop","getScrollContainer","draggedElement","off","_getRawResponse","_setInstructions","_iFrameDragFix","draggableSelector","iFrameDragFixOn","$activeDrop","resultSelector","fire","eq","relatedTarget","choiceSelector","$choiceArea","$activeChoice","scrollObserver","$bin","binSelector","_getChoice","isDragAndDropEnabled","dragOptions","dropOptions","scaleX","scaleY","_resetSelection","_unsetChoice","_isInsertionMode","_isModeEditing","_activateChoice","_handleChoiceActivate","_activateResult","targetSerial","_handleResultActivate","currentTarget","getOption","inertia","autoScroll","restrict","restriction","endOnly","elementRect","bottom","right","draggable","onstart","scale","calculateScale","onmove","moveElement","dx","dy","onend","restoreOriginalPosition","iFrameDragFixOff","styleCursor","overlap","ondragenter","ondragleave","dropzone","ondrop","resetResponse","tapOn","_setPairs","pairs","addedPairs","$emptyPair","$divs","next","setResponse","destroy","sort","aIndex","bIndex","getState","AssociateInteraction","listStyle","allowEliminationVisible","horizontal","promptId","KEY_CODE_SPACE","KEY_CODE_ENTER","KEY_CODE_LEFT","KEY_CODE_UP","KEY_CODE_RIGHT","KEY_CODE_DOWN","_triggerInput","$choiceBox","$input","$choiceBoxes","add","isBoolean","_pseudoLabel","inputSelector","$qtiChoice","keyCode","charCode","prev","focus","eliminator","dataset","eliminable","input","querySelector","originalEvent","classList","toggle","removeAttribute","values","highlightInvalidInput","$icon","choiceStyle","iconStyle","clearTimeout","isEliminable","getCustomData","listStyleVisible","listStyles","pop","eliminated","ChoiceInteraction","_setVal","change","EndAttemptInteraction","strLimiter","ckEditor","tooltip","converter","_Mathround2","countTpl","expectedLength","minStrings","patternMask","placeholderType","_styleUpdater","themeLoaded","_getNumStrings","_isMultiple","limiter","inputLimiter","placeholderText","getItemLanguage","itemLang","itemLocale","ckOptions","resize_enabled","secure","protocol","forceCustomDomain","language","$element","num","_setPattern","_getFormat","hideXhtmlConstraints","hideXhtmlRecommendations","qtiItemStyle","$editorBody","qtiItem","currentStyle","getComputedStyle","\"background-color\"","_setUpCKEditor","status","listenTextInput","safariVerticalRlPatch","_patchSafariVerticalRl","_getCKEditor","setData","syncValue","_setMultipleVal","keys","setText","numericBase","maxStrings","editorValue","convertedValue","convert","isNaN","parseFloat","_getTextareaValue","expectedLines","isCke","patternRegEx","$textarea","$charsCounter","$wordsCounter","maxWords","maxLength","$maxLengthCounter","$maxWordsCounter","ignoreKeyCodes","spaceKeyCodes","isComposing","hasCompositionJustEnded","acceptKeyCode","emptyOrSpace","txt","hasSpace","getCharBefore","str","pos","getCharAfter","noSpaceNode","NODE_TEXT","isBlockBoundary","getName","getPreviousNotEmptyNode","range","getPreviousNode","getText","previousSourceNode","getPreviousSourceNode","nodeElement","parentNode","ownerDocument","getNextNotEmptyNode","getNextNode","nextSourceNode","getNextSourceNode","cancelEvent","cancel","stopImmediatePropagation","invalidToolip","patternHandler","newValue","debounce","dispose","keyLimitHandler","which","wordsCount","getWordsCount","charsCount","getCharsCount","middle","sel","getSelection","getRanges","startContainer","startOffset","endContainer","endOffset","getSelectedText","selectionStart","selectionEnd","textarea","updateCounter","nonKeyLimitHandler","dataValue","clipboardData","dataTransfer","limitByWordCount","limitByCharCount","insertHtml","end","handleCompositionStart","handleCompositionEnd","currentValue","handleBeforeInput","previousSnapshot","getSnapshot","createRange","editable","moveToElementEditablePosition","selectRanges","setShadowString","shadowString","$shadow","innerHTML","forceTextareaRepaint","repaintIdx","showHideCursor","$cursor","display","positionCursor","activeElement","shadowLetterEl","shadowLetterRect","shadowRect","textareaRect","cursorRect","bodyRect","cursorTop","cursorLeft","cursorTopStyle","cursorLeftStyle","syncShadowStyles","textareaStyles","shadowStyles","propName","textareaPropVal","getPropertyValue","shadowPropVal","after","debouncedPositionCursor","requestAnimationFrame","api","raw","_ckEditorData","patt","_destroyCkEditor","instances","_stripTags","tempNode","textContent","format","setReadOnly","readOnly","clearText","countChars","countWords","countExpectedLength","countMaxLength","countMaxWords","constraintHints","program14","program10","maxStringLoop","program12","program16","program18","program23","dompurify","program25","unless","program26","ExtendedTextInteraction","_choiceUsages","getGap","gapSelector","_handleChoiceSelect","_handleFilledGapSelect","_handleGapSelect","$flowContainer","filledGapSelector","$dragged","GapMatchInteraction","graphic","_getActiveElement","getById","_createPath","srcElement","destElement","onRemove","showCloser","closerBg","removeSet","closer","hideCloser","toBack","unclick","vset","_vsets","without","sx","sy","dest","srcBullet","destBullet","midPath","getPointAtLength","getTotalLength","selectLigne","attrs","_isMatchable","matchable","matchMax","matching","_shapesSelectable","assocs","activeChoice","assocsElement","_shapesUnSelectable","responses","concat","_paperUnSelect","_renderChoice","maxAssociations","pull","background","partial","res","responseValue","el1","el2","toRemove","GraphicAssociateInteraction","mouseEvent","gapImgs","activeDrop","isDirectedPairFlipped","flipDirectedPair","gapFillers","gapFiller","$gapImages","bgImage","getGapImg","usages","_selectShape","trackResponse","$clone","shapeOffset","activeOffset","currentCount","$gapList","$active","$imageBox","boxOffset","\"z-index\"","animationEnd","gapFillerImage","rElement","raphaelid","handleShapeSelect","onClickShape","_renderGapList","toggleActiveGapState","_setInactiveGapState","_setActiveGapState","gapFillersSelector","onClickGapImg","index","newSize","sortBy","responseChoice","responseGap","items","GraphicGapMatchInteraction","_createTexts","texts","times","number","_renderOrderList","$orderList","$orderer","$orderers","_showText","transf","_hideText","_unselectShape","unsetNumbers","activeNumber","GraphicOrderInteraction","HotspotInteraction","pseudoLabel","$inupt","currentChoices","HottextInteraction","select2","_emptyValue","_defaultOptions","allowEmpty","optionSelector","opts","required","choiceTooltip","getItemDir","itemDir","getItemWritingMode","itemWritingMode","dirClass","writingMode","isVertical","opt","outerHTML","formatResult","formatSelection","minimumResultsForSearch","containerCssClass","dropdownCssClass","warning","placement","$selectedIndex","selectedIndex","ev","choiceIdentifier","InlineChoiceInteraction","depth1","matchSet1","programWithDepth","matchSet2","inWarning","_onCheckboxSelected","_filterResponse","_inferValue","firstId","secondId","currentResponse","minAssociations","_countChoices","_maxMatchReached","association","overflow","_getChoiceDefinitionByIdentifier","matchMin","_countAssociations","rawResponse","rawChoices","_getRawChoices","matchset","superClosure","onMaxChoicesReached","report","onMatchMaxReached","originalBackgroundColor","originalColor","backgroundColor","responseCount","prependTo","MatchInteraction","inferValue","mediaplayer","canPreviewMedia","firefox","reFirefoxVersion","exec","webm","reWebM","media","$item","maxPlays","canBePlayed","currentWidth","mediaElement","initMediaPlayer","mediaUrl","preview","canPause","canSeek","volume","autoStart","loop","renderTo","timesPlayed","restorePlayerState","playerState","isNumber","setVolume","muted","mute","startMuted","seek","pause","player","getPosition","getVolume","MediaInteraction","program27","orientationSelectionEnabled","_freezeSize","$orderArea","instructionMax","orderState","isSingleOrder","initialOrder","$resultItems","deactivateChoice","item1","item2","$choices","choice1","choice2","_isDropzoneVisible","$dropzoneElement","_insertDropzone","draggedMiddle","_getMiddleOf","previousMiddle","insertPosition","currentMiddle","orientation","before","_adjustDropzonePosition","draggedBox","$prevResult","$nextResult","prevMiddle","nextMiddle","elementBox","$iconAdd","$iconRemove","$iconBefore","$iconAfter","$dragContainer","_activeControls","_resetControls","_setSelection","_addChoiceToSelection","$results","_toggleResultSelection","_removeChoice","_moveResultBefore","$prev","_moveResultAfter","$next","hasBeenDroppedInResultArea","dropzoneIndex","selectors","unbindInteractEvents","OrderInteraction","_pciHooks","register","pciHook","notifyReady","pciInstance","notifyDone","onready","ondone","createPciInstance","pciTypeIdentifier","registeredPCI","cloneDeep","qtiCustomInteractionContext","instanciator","getPci","pci","_taoCustomInteraction","setPci","instance","commonPciRenderer","getRequiredModules","requireEntries","libraries","lib","createInstance","properties","pciAssetManager","pciAssetResolve","resolveBy","initialize","setSerializedState","getSerializedState","sharedContext","defaultPciRenderer","setPCIConstructor","pciConstructor","pciConstructorDataKey","getPCIConstructor","contentLanguage","itemLanguage","userLanguage","locale","forOwn","propVal","propKey","pciReadyCallback","readyPromise","templateVariables","boundTo","pciDoneCallback","getInstance","oncompleted","setReviewState","RESPONSE","info","imsPciRenderer","_setPciModel","pciRenderer","_getPciRenderer","getAssetManager","onPci","serializedState","PortableCustomInteraction","Prompt","getRawResponse","points","addPoint","pointChange","isTouch","enableSelection","isResponsive","untouchstart","imageClicked","SelectPointInteraction","nouislider","_slideTo","sliderCurrentValue","sliderValue","direction","responseIdentifier","$sliderLabels","$sliderCurrentValue","$sliderValue","reverse","lowerBound","upperBound","step","steps","inArray","reversedLabels","sliderSize","maxHeight","stepLabel","middleStep","leftOffset","middleValue","noUiSlider","attributesNew","startValue","SliderInteraction","hideTooltip","showTooltip","theme","updateTitleContent","getIsVerticalWritingMode","tooltipOptions","textEntryTooltip","refreshTooltip","validateDecimalInput","allowMinusOnly","withTooltip","separatorName","\".\"","\",\"","\" \"","thousandsSeparator","getThousandsSeparator","decimalSeparator","getDecimalSeparator","thousandsSeparatorName","decimalSeparatorName","escapedThousandsSeparator","escapedDecimalSeparator","regexPattern","decimalError","validateIntegerInput","maxChars","updateMaxCharsTooltip","messageType","updatePatternMaskTooltip","inputValue","$interaction","validity","isValid","TextEntryInteraction","mimetype","uploadHelper","progressbar","previewer","modal","_Mathmin","_Mathround3","resetGui","callResetGui","changeListener","_initialInstructions","files","_handleSelectedFiles","getCustomMessage","FileReader","bind","blur","accept","_readyInstructions","validateFileType","expectedTypes","filetype","getMimeType","getMessageWrongType","userSelectedType","messageWrongType","expectedTypeLabels","filename","reader","base64Data","commaPosition","base64Raw","$previewArea","$originalImg","$largeDisplay","itemWidth","winWidth","fullHeight","imgNaturalWidth","isOversized","modalWidth","naturalWidth","$modalBody","modalOverlayClass","onloadstart","onprogress","_Mathceil","ceil","percentProgress","loaded","total","readAsDataURL","UploadInteraction","Item","MathJax","block","Hub","processSectionDelay","_Math","reference","$self","Queue","_checkContainerType","_getBodyDom","_setBodyDomClass","newClass","oldClass","$wrapper","_setDomClass","$bodyDom","wrapInner","setEncodedDataToDom","dataName","oldValue","_getEncodedDataString","setEncodedData","getEncodedData","removeEncodedData","hasEncodedData","matches","_prefix","coreContainerHelper","inline","feedbackStyle","modalFeedbackRenderer","fb","$modal","$itemBody","requiredHeight","outerHeight","startClosed","minHeight","_Object","obj","previewOptions","_picHooks","taoQtiInfoControlContext","picHook","picInstance","proto","constructor","qtiInfoControlContext","_getPic","pic","_taoInfoControl","picAssetManager","PortableInfoControl","PrintedVariable","_Mathfloor2","interactionHelper","convertChoices","outputType","c","findChoices","inputType","shuffleChoices","n","k","tmp","serialToIdentifier","themeLoader","themesHelper","moduleLoader","getDocumentBaseUrl","host","pathname","hb","compile","_renderableClasses","_dependencies","_renderableSubclasses","simpleAssociableChoice","simpleChoice","_defaults","_isValidRenderer","valid","classCorrect","subClass","Renderer","registerRendererClass","_locations","_renderers","shuffledChoices","_getClassRenderer","setOption","setOptions","elementName","messageKey","getThemeLoader","qtiSubclass","decorators","renderDirect","qtiInteraction","getLoadedRenderers","renderersLocations","requiredClasses","themeData","getCurrentThemeData","preload","reqClass","deps","requiredSubClasses","addList","category","unload","setShuffledChoices","identificationType","getShuffledChoices","reshuffle","returnedType","getRenderers","getLocations","getAbsoluteUrl","relUrl","absUrl","runtimeLocations","setAreaBroker","areaBroker","_areaBroker","getAreaBroker","getItemCreator","Renderer$1","build","defaultOptions","NewRenderer","QtiRenderer","rendererProvider","use","RubricBlock","rubric","Stylesheet","summary","Table","Tooltip","tooltipDOM","renderedTooltip","IdentifiedElement","Choice","_super","getInteraction","QtiChoice","QtiHotspot","QtiAssociableHotspot","Mixin","augment","targetClass","methodName","_parent","setElements","returnValue","setElement","removeElement","getElements","getElement","elementsData","flatten","Container$1","ContainerChoice","ContainerInline","QtiGap","QtiObject","getMediaType","video","audio","_alt","QtiGapImg","QtiContainerChoice","QtiGapText","QtiHotspotChoice","QtiInlineChoice","QtiSimpleAssociableChoice","QtiSimpleChoice","QtiTextVariableChoice","QtiTextEntry","Feedback","FeedbackBlock","FeedbackInline","ModalFeedback","ContainerFigcaption","getNamespace","relatedItem","getNamespaces","nsUriFragment","defaultNsName","defaultNsUri","setNamespace","NamespacedElement","ContainerFigure","imgElements","QtiInteraction","addChoice","responseId","_type","choiceShuffle","interactionData","renderedChoice","tplName","getNormalMaximum","Interaction","BlockInteraction","responseRules","MATCH_CORRECT","outcomeIdentifier","responseIf","expression","expressions","MAP_RESPONSE","MAP_RESPONSE_POINT","responseRulesHelper","_templateNames","NONE","isUsingTemplate","isValidTemplateName","getTemplateUriFromName","getTemplateNameFromUri","tplUri","getTemplateNameFromResponseRules","outcomeRules","isEqual","VariableDeclaration","defaultValue","setDefaultValue","getDefaultValue","OutcomeDeclaration","gamp","responseHelper","pairExists","externalScoredValues","maxScore","setNormalMaximum","scoreOutcome","getOutcomeDeclaration","normalMaximum","processingType","interactions","getInteractions","interactionMaxScore","setMaxScore","hasInvalidInteraction","maxScoreOutcome","normalMinimum","addOutcomeDeclaration","customOutcomes","getOutcomes","outcome","externalScored","removeOutcome","isAllResponseProcessingRulesNone","outcomesWithExternalScored","isResponsesEmpty","getMatchMaxOrderedChoices","choiceCollection","valueOf","choiceInteractionBased","mapDefault","mappingAttributes","maxChoice","minChoice","scoreMaps","requiredChoiceCount","totalAnswerableResponse","sortedMapEntries","missingMapsCount","minChoices","correctResponse","mapEntries","score","getMaxCutByUpperBound","orderInteractionBased","associateInteractionBased","maxAssoc","minAssoc","requiredAssoc","usedChoices","choicesIdentifiers","allPossibleMapEntries","infiniteScoringPair","possiblePairs","checkInfinitePair","countBy","forEachRight","mapEntry","choiceId","_usedChoices","used","gapMatchInteractionBased","calculatePossiblePairs","getGaps","skippableWrongResponse","usedGaps","group1","group2","gapId","selectPointInteractionBased","mappedValue","sliderInteractionBased","textEntryInteractionBased","isPossibleResponse","customInteractionBased","has","ContainerInteraction","removeProp","propNames","getProperties","getMarkupNamespace","markupNs","defaultMarkupNsName","defaultMarkupNsUri","setMarkupNamespace","CustomElement","CustomInteraction","entryPoint","pciReadyCallbacks","onPciReady","triggerPciReady","offPci","triggerPci","InlineInteraction","QtiBlockInteraction","QtiObjectInteraction","QtiGraphicInteraction","backgroundImage","GraphicInteraction","addGapImg","removeGapImg","getGapImgs","graphicGapInteraction","SimpleAssociableChoice","matchSet","ObjectInteraction","ContainerItemBody","outcomes","modalFeedbacks","schemaLocations","apipAccessibility","addResponseDeclaration","addModalFeedback","feedback","elementCollection","getResponses","addNamespace","setNamespaces","setSchemaLocations","getSchemaLocations","setApipAccessibility","apip","getApipAccessibility","addStylesheet","removeStyleSheet","stylesheetExists","setResponseProcessing","rp","$dummy","$children","qtiClasses","getPrefix","html5Ns","prefixed","xmlNsHandler","stripNs","openRegEx","closeRegEx","restoreNs","xml","ignoreMarkup","xmlCopy","xmlRe","tagRe","xmlMatch","imsXsd","prefixAtt","tagMatch","itemScore","responseIdentifiers","outcomeExpressions","itemScoreHelper","loadPortableCustomElementProperties","rawProperties","parse","loadPortableCustomElementData","Loader","classesLocation","setClassesLocation","qtiClassesList","getRequiredClasses","loadRequiredClasses","requiredClass","loadeded","QtiClass","getLoadedClasses","loadItemData","Qti","loadContainer","buildOutcome","feedbacks","buildElement","responseRuleItemIndex","_ref","responseRule","splice","buildResponse","feedbackRules","fbData","feedbackOutcomeIdentifier","feedbackOutcome","buildSimpleFeedbackRule","feedbackResponseRuleIndex","_ref2","setOutcomeResponseRule","responseKey","customResponseProcessing","buildResponseProcessing","loadAndBuildElement","loadElement","loadElementData","loadElements","allElements","elementData","howMatch","correctResponses","mapping","areaMapping","feedbackRule","setCondition","condition","comparedValue","feedbackThen","feedbackElse","comparedOutcome","bodyObject","bodyData","eltData","loadObjectData","loadInteractionData","loadChoiceData","loadMathData","loadPicData","loadTooltipData","buildInteractionChoices","loadPciData","setMathML","mathML","annotations","encoding","setAnnotation","_stripMathTags","nsName","_stripNamespace","_isEmptyMathML","mathStr","hasContent","$math","mathText","parseHTML","unescape","getAnnotation","removeAnnotation","getMathML","escape","latex","Math$1","readyStack","onReady","cb","triggerReady","SimpleFeedbackRule","_comparedValues","setFeedbackElse","_toString","ResponseProcessing","ContainerTable","newBody","Table$1","newContent","tooltipContent","ResponseDeclaration","getFeedbackRules","rule","isCardinality","cardinalities","comparison","EventMgr","tokens","getRawValues","pciVar","getFeedbackMessageSignature","extractDisplayInfo","$interactionContainer","messageGroupId","$displayContainer","uniqueId","interactionContainer","displayContainer","getInteractionsDisplayInfo","interactionsDisplayInfo","$itemContainer","interactionOrder","_interactionInfo","getFeedbacks","itemSession","renderingQueue","feedbackIds","_currentMessageGroupId","interactionInfo","Parser","_$xml","loadXML","parseXML","getDOM","_getElementSelector","getQtiClassFromXmlDom","$node","_qtiClassNames","$elt","attrName","specified","_qtiAttributesNames","buildMath","$annotation","buildTooltip","targetHtml","contentId","contentHtml","\"aria-describedby\"","parseTable","$parsedTable","parseContainer","parseFigure","$parsedFigure","$figcaption","_placeholder","$qtiElement","$content","_parsableElements","rubricblock","printedvariable","powerform","mappingindicator","parser","xmlStr","loader","parser$1","simpleParser","xinclude","fileUrl","undef","stimulusXml","$sampleXMLrootNode","$stimulus","mathNs","loadedClasses","xincludeLoader","picManager","_pic","_item","getPic","getItem","getDom","_dom","tool","button","broken","dom","disabled","eventName","rest","unshift","picManagerCollection","force","_list","_map","manager","managerFactory","picId","execute","action","executeAll","enablePic","disablePic","showPic","hidePic","enableAll","disableAll","showAll","hideAll","collectionFactory","picManager$1","userModules","dependency","sideLoadingProviderFactory","portableElements","lodash","ReviewRenderer","providerRegistry","qtiRenderer","reviewRenderer","getProviderName","rendererStrategies","getAvailableProviders","alias","defaultRenderer","rendererName","providerName","getProvider","author","candidate","proctor","scorer","testConstructor","tutor","QtiLoader","modalFeedbackHelper","qtiItemRuntimeProvider","itemData","done","rendererOptions","pick","view","_loader","getLanguageDirection","race","detail","themeName","renderingError","errorMsg","unrecoverable","renderFeedbacks","itemRunner","qtiRuntimeProvider","convertXMLToHTML","xmlNode","htmlNode","from","childNodes","childNode","nodeType","Node","ELEMENT_NODE","appendChild","TEXT_NODE","createTextNode","nodeValue","parseXmlToDom","xmlString","DOMParser","xmlDoc","parseFromString","loadXIncludeElement","xiIncludeElementHref","processContentItem","contentItem","tempDiv","xiIncludeElements","querySelectorAll","xiIncludePromises","flatMap","xiElement","loadByElementPages","pages","containsXIInclude","pageUpdatePromises","page","hasXIInclude","contentPromises","updatedContentItems"],"sources":["/mnt/d/oat/currgen/tao-community-new/tao/views/build/config-wrap-start-default.js","../qtiCommonRenderer/helpers/ckConfigurator.js","../qtiItem/helper/util.js","../qtiItem/helper/rendererConfig.js","../qtiItem/core/Element.js","../qtiCommonRenderer/helpers/container.js","../qtiCommonRenderer/helpers/Graphic.js","../qtiCommonRenderer/helpers/instructions/Instruction.js","../qtiCommonRenderer/helpers/instructions/instructionManager.js","../qtiCommonRenderer/helpers/itemStylesheetHandler.js","../qtiCommonRenderer/helpers/patternMask.js","../qtiCommonRenderer/helpers/PciPrettyPrint.js","../qtiCommonRenderer/helpers/PciResponse.js","../qtiCommonRenderer/helpers/PortableElement.js","../qtiCommonRenderer/helpers/sizeAdapter.js","../qtiCommonRenderer/helpers/uploadMime.js","../qtiCommonRenderer/helpers/userAgent.js","../qtiCommonRenderer/renderers/choices/Gap.js","../qtiCommonRenderer/renderers/choices/GapImg.js","../qtiCommonRenderer/renderers/choices/GapText.js","../qtiCommonRenderer/renderers/choices/Hottext.js","../qtiCommonRenderer/renderers/choices/InlineChoice.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction.js","../portableElementRegistry/factory/factory.js","../qtiCreator/helper/qtiElements.js","../portableElementRegistry/factory/ciRegistry.js","../portableElementRegistry/ciRegistry.js","../portableElementRegistry/factory/icRegistry.js","../portableElementRegistry/icRegistry.js","../portableElementRegistry/assetManager/portableAssetStrategy.js","../qtiCommonRenderer/renderers/config.js","../qtiCommonRenderer/renderers/Container.js","../qtiCommonRenderer/renderers/Figcaption.js","../qtiCommonRenderer/renderers/Figure.js","../qtiCommonRenderer/renderers/Img.js","../qtiCommonRenderer/renderers/Include.js","../qtiCommonRenderer/renderers/interactions/AssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/ChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/EndAttemptInteraction.js","../qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js","../qtiCommonRenderer/renderers/interactions/GapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction.js","../qtiCommonRenderer/renderers/interactions/HotspotInteraction.js","../qtiCommonRenderer/renderers/interactions/HottextInteraction.js","../qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/MatchInteraction.js","../qtiCommonRenderer/renderers/interactions/MediaInteraction.js","../qtiCommonRenderer/renderers/interactions/OrderInteraction.js","../../qtiCustomInteractionContext.js","../qtiCommonRenderer/renderers/interactions/pci/instanciator.js","../qtiCommonRenderer/renderers/interactions/pci/common.js","../qtiCommonRenderer/renderers/interactions/pci/ims.js","../qtiCommonRenderer/renderers/interactions/PortableCustomInteraction.js","../qtiCommonRenderer/renderers/interactions/Prompt.js","../qtiCommonRenderer/renderers/interactions/SelectPointInteraction.js","../qtiCommonRenderer/renderers/interactions/SliderInteraction.js","../qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js","../qtiCommonRenderer/renderers/interactions/UploadInteraction.js","../qtiCommonRenderer/renderers/Item.js","../qtiCommonRenderer/renderers/Math.js","../qtiItem/helper/container.js","../qtiCommonRenderer/renderers/ModalFeedback.js","../qtiCommonRenderer/renderers/Object.js","../../qtiInfoControlContext.js","../qtiCommonRenderer/renderers/PortableInfoControl.js","../qtiCommonRenderer/renderers/PrintedVariable.js","../qtiItem/helper/interactionHelper.js","../qtiRunner/core/Renderer.js","../qtiCommonRenderer/renderers/Renderer.js","../qtiCommonRenderer/renderers/rendererProvider.js","../qtiCommonRenderer/renderers/RubricBlock.js","../qtiCommonRenderer/renderers/Stylesheet.js","../qtiCommonRenderer/renderers/Table.js","../qtiCommonRenderer/renderers/Tooltip.js","../qtiItem/core/IdentifiedElement.js","../qtiItem/core/choices/Choice.js","../qtiItem/core/choices/Hotspot.js","../qtiItem/core/choices/AssociableHotspot.js","../qtiItem/mixin/Mixin.js","../qtiItem/core/Container.js","../qtiItem/mixin/Container.js","../qtiItem/core/choices/ContainerChoice.js","../qtiItem/mixin/ContainerInline.js","../qtiItem/core/choices/ContainerInlineChoice.js","../qtiItem/core/choices/Gap.js","../qtiItem/core/Object.js","../qtiItem/core/choices/GapImg.js","../qtiItem/core/choices/GapText.js","../qtiItem/core/choices/HotspotChoice.js","../qtiItem/core/choices/Hottext.js","../qtiItem/core/choices/InlineChoice.js","../qtiItem/core/choices/SimpleAssociableChoice.js","../qtiItem/core/choices/SimpleChoice.js","../qtiItem/core/choices/TextVariableChoice.js","../qtiItem/core/choices/TextEntry.js","../qtiItem/core/feedbacks/Feedback.js","../qtiItem/core/feedbacks/FeedbackBlock.js","../qtiItem/core/feedbacks/FeedbackInline.js","../qtiItem/core/feedbacks/ModalFeedback.js","../qtiItem/mixin/ContainerFigcaption.js","../qtiItem/mixin/NamespacedElement.js","../qtiItem/core/Figcaption.js","../qtiItem/mixin/ContainerFigure.js","../qtiItem/core/Figure.js","../qtiItem/core/Img.js","../qtiItem/core/Include.js","../qtiItem/core/interactions/Interaction.js","../qtiItem/core/interactions/Prompt.js","../qtiItem/core/interactions/BlockInteraction.js","../qtiItem/helper/responseRules.js","../qtiItem/helper/response.js","../qtiItem/core/variables/VariableDeclaration.js","../qtiItem/core/variables/OutcomeDeclaration.js","../qtiItem/helper/maxScore.js","../qtiItem/core/interactions/AssociateInteraction.js","../qtiItem/core/interactions/ChoiceInteraction.js","../qtiItem/core/interactions/ContainerInteraction.js","../qtiItem/mixin/CustomElement.js","../qtiItem/core/interactions/CustomInteraction.js","../qtiItem/core/interactions/InlineInteraction.js","../qtiItem/core/interactions/EndAttemptInteraction.js","../qtiItem/core/interactions/ExtendedTextInteraction.js","../qtiItem/core/interactions/GapMatchInteraction.js","../qtiItem/core/interactions/ObjectInteraction.js","../qtiItem/core/interactions/GraphicInteraction.js","../qtiItem/core/interactions/GraphicAssociateInteraction.js","../qtiItem/core/interactions/GraphicGapMatchInteraction.js","../qtiItem/core/interactions/GraphicOrderInteraction.js","../qtiItem/core/interactions/HotspotInteraction.js","../qtiItem/core/interactions/HottextInteraction.js","../qtiItem/core/interactions/InlineChoiceInteraction.js","../qtiItem/core/interactions/MatchInteraction.js","../qtiItem/core/interactions/MediaInteraction.js","../qtiItem/core/interactions/OrderInteraction.js","../qtiItem/core/interactions/SelectPointInteraction.js","../qtiItem/core/interactions/SliderInteraction.js","../qtiItem/core/interactions/TextEntryInteraction.js","../qtiItem/core/interactions/UploadInteraction.js","../qtiItem/mixin/ContainerItemBody.js","../qtiItem/core/Item.js","../qtiItem/core/qtiClasses.js","../qtiItem/helper/xmlNsHandler.js","../qtiItem/helper/itemScore.js","../qtiItem/core/Loader.js","../qtiItem/core/Math.js","../qtiItem/core/PortableInfoControl.js","../qtiItem/core/PrintedVariable.js","../qtiItem/core/response/SimpleFeedbackRule.js","../qtiItem/core/ResponseProcessing.js","../qtiItem/core/RubricBlock.js","../qtiItem/core/Stylesheet.js","../qtiItem/mixin/ContainerTable.js","../qtiItem/core/Table.js","../qtiItem/core/Tooltip.js","../qtiItem/core/variables/ResponseDeclaration.js","../qtiItem/helper/EventMgr.js","../qtiItem/helper/pci.js","../qtiItem/helper/modalFeedback.js","../qtiItem/helper/Parser.js","../qtiItem/helper/simpleParser.js","../qtiItem/helper/xincludeLoader.js","../runner/provider/manager/picManager.js","../runner/provider/manager/userModules.js","../portableElementRegistry/provider/sideLoadingProviderFactory.js","../reviewRenderer/renderers/config.js","../reviewRenderer/renderers/Renderer.js","../reviewRenderer/renderers/rendererProvider.js","../runner/rendererStrategies.js","../runner/provider/qti.js","../runner/qtiItemRunner.js","../qtiCreator/helper/xincludeLoader.js","module-create.js","/mnt/d/oat/currgen/tao-community-new/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","define('taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator'], function (ckConfigurator$1) { 'use strict';\n\n    ckConfigurator$1 = ckConfigurator$1 && Object.prototype.hasOwnProperty.call(ckConfigurator$1, 'default') ? ckConfigurator$1['default'] : ckConfigurator$1;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options) {\n        options = options || {};\n\n        options.underline = true;\n\n        return ckConfigurator$1.getConfig(editor, toolbarType, options);\n    };\n\n    var ckConfigurator = {\n        getConfig: getConfig\n    };\n\n    return ckConfigurator;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/util',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var util = {\n        buildSerial: function buildSerial(prefix) {\n            var id = prefix || '';\n            var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n            for (var i = 0; i < 22; i++) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId: function buildId(item, prefix) {\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds = item.getUsedIds();\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (usedIds && usedIds.includes(id)) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier: function buildIdentifier(item, prefix, useSuffix) {\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            if (!prefix) {\n                throw new TypeError('Prefix is required to build an identifier');\n            }\n\n            usedIds = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if (prefix) {\n                prefix = prefix\n                    .replace(/_[0-9]+$/gi, '_') //detect incremental id of type choice_12, response_3, etc.\n                    .replace(/[^a-zA-Z0-9_]/gi, '_')\n                    .replace(/(_)+/gi, '_');\n                if (useSuffix) {\n                    suffix = '_' + i;\n                }\n            }\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (usedIds[id]) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        findInCollection: function findInCollection(element, collectionNames, searchedSerial) {\n            var found = null;\n\n            if (_.isString(collectionNames)) {\n                collectionNames = [collectionNames];\n            }\n\n            if (_.isArray(collectionNames)) {\n                _.forEach(collectionNames, function (collectionName) {\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.forEach(collectionName.split('.'), function (nameToken) {\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if (elt) {\n                        found = { parent: element, element: elt };\n                        return false; //break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.forEach(collection, function (elt) {\n                        if (_.isFunction(elt.find)) {\n                            found = elt.find(searchedSerial);\n                            if (found) {\n                                return false; //break the each loop\n                            }\n                        }\n                    });\n\n                    if (found) {\n                        return false; //break the each loop\n                    }\n                });\n            } else {\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace: function addMarkupNamespace(markup, ns) {\n            if (ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function ($0, $1, $2, $3, $4) {\n                    if ($2.indexOf(':') > 0) {\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<' + $1 + ns + ':' + $2 + $3 + $4 + '>';\n                });\n                return markup;\n            }\n            return markup;\n        },\n        removeMarkupNamespaces: function removeMarkupNamespace(markup) {\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces: function getMarkupUsedNamespaces(markup) {\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function (original, slash, ns, node) {\n                namespaces.push(ns);\n                return '<' + slash + node + '>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function (args) {\n        var options = {\n            data: {},\n            placeholder: null,\n            subclass: '',\n            renderer: null\n        };\n\n        _.forEach(args, function (arg) {\n            if (arg) {\n                if (arg.isRenderer) {\n                    options.renderer = arg;\n                } else if (arg instanceof $ && arg.length) {\n                    options.placeholder = arg;\n                } else if (_.isString(arg)) {\n                    options.subclass = arg;\n                } else if (_.isPlainObject(arg)) {\n                    options.data = arg;\n                } else {\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n\n        return options;\n    };\n\n    return rendererConfigHelper;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'lodash', 'class', 'core/logger', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, _class, loggerFactory, util, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var _instances = {};\n\n    /**\n     * Create a logger\n     */\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\n\n    var Element = Class.extend({\n        qtiClass: '',\n        serial: '',\n        rootElement: null,\n        init: function (serial, attributes) {\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if (typeof serial === 'object') {\n                attributes = serial;\n                serial = '';\n            }\n\n            if (!serial) {\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if (serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))) {\n                throw 'invalid QTI serial : (' + typeof serial + ') ' + serial;\n            }\n\n            if (!_instances[serial]) {\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            } else {\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if (typeof this.initContainer === 'function') {\n                this.initContainer(arguments[2] || '');\n            }\n            if (typeof this.initObject === 'function') {\n                this.initObject();\n            }\n        },\n        is: function (qtiClass) {\n            return qtiClass === this.qtiClass;\n        },\n        placeholder: function () {\n            return '{{' + this.serial + '}}';\n        },\n        getSerial: function () {\n            return this.serial;\n        },\n        getUsedIdentifiers: function () {\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for (var i in elts) {\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if (id) {\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds: function getUsedIds() {\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function (elt) {\n                var id = elt.attr('id');\n                if (id && !usedIds.includes(id)) {\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr: function (name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.attributes[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.attr(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.attributes[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data: function (name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', { element: this, key: name, value: value });\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.data(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.metaData[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData: function (name) {\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr: function (name) {\n            return this.removeAttributes(name);\n        },\n        setAttributes: function (attributes) {\n            if (!_.isPlainObject(attributes)) {\n                logger.warn('attributes should be a plain object');\n            }\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes: function () {\n            return _.clone(this.attributes);\n        },\n        removeAttributes: function (attrNames) {\n            if (typeof attrNames === 'string') {\n                attrNames = [attrNames];\n            }\n            for (var i in attrNames) {\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements: function () {\n            var elts = {};\n            function append(element) {\n                elts[element.getSerial()] = element; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if (typeof this.initContainer === 'function') {\n                append(this.getBody());\n            }\n            if (typeof this.initObject === 'function') {\n                append(this.getObject());\n            }\n            _.forEach(this.metaData, function (v) {\n                if (Element.isA(v, '_container')) {\n                    append(v);\n                } else if (_.isArray(v)) {\n                    _.forEach(v, function (v) {\n                        if (Element.isA(v, '_container')) {\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses: function () {\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.forEach(composingElts, function (elt) {\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find: function (serial) {\n            var found = null;\n            var object, body;\n\n            if (typeof this.initObject === 'function') {\n                object = this.getObject();\n                if (object.serial === serial) {\n                    found = { parent: this, element: object, location: 'object' };\n                }\n            }\n\n            if (!found && typeof this.initContainer === 'function') {\n                body = this.getBody();\n                if (body.serial === serial) {\n                    found = { parent: this, element: body, location: 'body' };\n                } else {\n                    found = this.getBody().find(serial, this);\n                }\n            }\n\n            return found;\n        },\n        parent: function () {\n            var item = this.getRootElement();\n            if (item) {\n                var found = item.find(this.getSerial());\n                if (found) {\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        /**\n         * @deprecated - use setRootElement() instead\n         */\n        setRelatedItem: function (item) {\n            logger.warn('Deprecated use of setRelatedItem()');\n            this.setRootElement(item);\n        },\n        setRootElement: function (item) {\n            var composingElts, i;\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this.rootElement = item;\n                composingElts = this.getComposingElements();\n                for (i in composingElts) {\n                    composingElts[i].setRootElement(item);\n                }\n            }\n        },\n        /**\n         * @deprecated - use getRootElement() instead\n         */\n        getRelatedItem: function () {\n            logger.warn('Deprecated use of getRelatedItem()');\n            return this.getRootElement();\n        },\n        getRootElement: function () {\n            var ret = null;\n            if (Element.isA(this.rootElement, 'assessmentItem')) {\n                ret = this.rootElement;\n            }\n            return ret;\n        },\n        setRenderer: function (renderer) {\n            if (renderer && renderer.isRenderer) {\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for (var serial in elts) {\n                    elts[serial].setRenderer(renderer);\n                }\n            } else {\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer: function () {\n            return this.renderer;\n        },\n        /**\n         * Render the element. Arguments are all optional and can be given in any order.\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\n         * @param {Renderer} renderer - specify which renderer to use\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\n         * @param {Object} data - template data for the rendering\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\n         * @returns {String} - the rendered element as an HTML string\n         */\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n            var rendering;\n\n            var tplData = {},\n                defaultData = {\n                    tag: this.qtiClass,\n                    serial: this.serial,\n                    attributes: this.getAttributes()\n                };\n\n            if (!_renderer) {\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\n            }\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if (typeof this.initObject === 'function') {\n                defaultData.object = {\n                    attributes: this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if (args.placeholder) {\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender: function (data, altClassName, renderer) {\n            var postRenderers = [];\n            var _renderer = renderer || this.getRenderer();\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                postRenderers = this.getBody().postRender(data, '', renderer);\n            }\n\n            if (_renderer) {\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\n            } else {\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            return _.compact(postRenderers);\n        },\n        getContainer: function ($scope, subclass) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                return renderer.getContainer(this, $scope, subclass);\n            } else {\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray: function () {\n            var arr = {\n                serial: this.serial,\n                type: this.qtiClass,\n                attributes: this.getAttributes()\n            };\n\n            if (typeof this.initContainer === 'function') {\n                arr.body = this.getBody().toArray();\n            }\n            if (typeof this.initObject === 'function') {\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty: function () {\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass: function (className) {\n            var clazz = this.attr('class') || '';\n            if (!_containClass(clazz, className)) {\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass: function (className) {\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass: function (className) {\n            var clazz = this.attr('class') || '';\n            if (clazz) {\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n                clazz = clazz.replace(regex, ' ').trim();\n\n                if (clazz) {\n                    this.attr('class', clazz);\n                } else {\n                    this.removeAttr('class');\n                }\n            }\n        },\n        /**\n         * Add or remove class. Setting the optional state will force addition/removal.\n         * State is here to keep the jQuery syntax\n         *\n         * @param {String} className\n         * @param {Boolean} [state]\n         */\n        toggleClass: function (className, state) {\n            if (typeof state === 'boolean') {\n                return state ? this.addClass(className) : this.removeClass(className);\n            }\n\n            if (this.hasClass(className)) {\n                return this.removeClass(className);\n            }\n            return this.addClass(className);\n        },\n        isset: function () {\n            return Element.issetElement(this.serial);\n        },\n        unset: function () {\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function (allClassStr, className) {\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function (qtiElement, qtiClass) {\n        return qtiElement instanceof Element && qtiElement.is(qtiClass);\n    };\n\n    Element.getElementBySerial = function (serial) {\n        return _instances[serial];\n    };\n\n    Element.issetElement = function (serial) {\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function (serial) {\n        var element = Element.getElementBySerial(serial);\n\n        if (element) {\n            var composingElements = element.getComposingElements();\n            _.forEach(composingElements, function (elt) {\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/container',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element'], function (_, $, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    //containers are cached, so do not forget to remove them.\n    let _containers = {};\n    let _$containerContext = $();\n\n    /**\n     * Build the selector for your element (from the element serial)\n     * @private\n     * @param {QtiElement} element\n     * @returns {String} the selector\n     */\n    const _getSelector = function (element) {\n        const serial = element.getSerial();\n        let selector = `[data-serial=${serial}]`;\n\n        if (Element.isA(element, 'choice')) {\n            selector = `.qti-choice${selector}`;\n        } else if (Element.isA(element, 'interaction')) {\n            selector = `.qti-interaction${selector}`;\n        }\n\n        return selector;\n    };\n\n    /**\n     * Helps you to retrieve the DOM element (as a jquery element)\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/containerHelper\n     */\n    const containerHelper = {\n        /**\n         * Set a global scope to look for element container\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         */\n        setContext($scope) {\n            _$containerContext = $scope;\n        },\n\n        /**\n         * Returns current scope\n         * @returns {jQueryElement}\n         */\n        getContext() {\n            return _$containerContext;\n        },\n\n        /**\n         * Get the container of the given element\n         * @param {QtiElement} element - the QTI Element to find the container for\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         * @returns {jQueryElement} the container\n         */\n        get(element, $scope) {\n            const serial = element.getSerial();\n\n            if ($scope instanceof $ && $scope.length) {\n                //find in the given context\n                return $scope.find(_getSelector(element));\n            } else if (_$containerContext instanceof $ && _$containerContext.length) {\n                //find in the globally set context\n                return _$containerContext.find(_getSelector(element));\n            } else if (!_containers[serial] || !_containers[serial].length) {\n                //find in the global context\n                _containers[serial] = $(_getSelector(element));\n            }\n\n            return _containers[serial];\n        },\n\n        /**\n         * getContainer use a cache to store elements. This methods helps you to purge it.\n         * @param {Element} element - find the container of this element\n         */\n        reset(element) {\n            if (element instanceof Element && _containers[element.getSerial()]) {\n                _containers = _.omit(_containers, element.getSerial());\n            }\n        },\n\n        /**\n         * Clear the containers cache\n         */\n        clear() {\n            _containers = {};\n            _$containerContext = $();\n        },\n\n        /**\n         * Trigger an event on the element's container\n         * @param {String} eventType - the name of the event\n         * @param {QtiElement} element - find the container of this element\n         * @param {Array} [data] - data to give to the event\n         */\n        trigger(eventType, element, data) {\n            if (eventType) {\n                if (data && !_.isArray(data)) {\n                    data = [data];\n                }\n                this.get(element).trigger(eventType, data);\n            }\n        },\n\n        /**\n         * Alias to trigger a responseChange Event from an interaction\n         * @param {QtiElement} interaction - the interaction that had a response changed\n         * @param {Object} [extraData] - additionnal data to give to the event\n         */\n        triggerResponseChangeEvent(interaction, extraData) {\n            this.trigger('responseChange', interaction, [\n                {\n                    interaction: interaction,\n                    response: interaction.getResponse()\n                },\n                extraData\n            ]);\n        },\n\n        /**\n         * Make all links to opens in another tab/window\n         * @param {jQueryElement} $container\n         */\n        targetBlank($container) {\n            $container.on('click', 'a', function (e) {\n                e.preventDefault();\n                const href = $(this).attr('href');\n                if (href && href.match(/^http/i)) {\n                    window.open(href, '_blank');\n                }\n            });\n        },\n\n        /**\n         * If item has 'vertical-rl' writing mode\n         * @returns {Boolean}\n         */\n        isItemWritingModeVerticalRl() {\n            const itemBody = $('.qti-itemBody');\n            return itemBody.hasClass('writing-mode-vertical-rl');\n        }\n    };\n\n    return containerHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/Graphic',['jquery', 'lodash', 'raphael', 'scale.raphael'], function ($, _, raphael, scaleRaphael) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    raphael = raphael && Object.prototype.hasOwnProperty.call(raphael, 'default') ? raphael['default'] : raphael;\n    scaleRaphael = scaleRaphael && Object.prototype.hasOwnProperty.call(scaleRaphael, 'default') ? scaleRaphael['default'] : scaleRaphael;\n\n    var basic = {\n    \tstroke: \"#8D949E\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-dasharray\": \"\",\n    \t\"stroke-linejoin\": \"round\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5,\n    \tcursor: \"pointer\"\n    };\n    var hover = {\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.3\n    };\n    var selectable = {\n    \t\"stroke-dasharray\": \"-\",\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5\n    };\n    var active = {\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.5\n    };\n    var error = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \t\"fill-opacity\": 0.5,\n    \tfill: \"#661728\"\n    };\n    var success = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 0.5\n    };\n    var layer = {\n    \tfill: \"#ffffff\",\n    \topacity: 0,\n    \tcursor: \"pointer\"\n    };\n    var creator = {\n    \t\"fill-opacity\": 0.5,\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \tcursor: \"pointer\"\n    };\n    var target = {\n    \tpath: \"m 18,8.4143672 -1.882582,0 C 15.801891,4.9747852 13.071059,2.2344961 9.63508,1.9026738 L 9.63508,0 8.2305176,0 l 0,1.9026387 C 4.7947148,2.2343027 2.0637246,4.9746621 1.7481973,8.4143672 l -1.7481973,0 0,1.4045625 1.754877,0 c 0.3460429,3.4066753 3.0632871,6.1119843 6.4756406,6.4413813 l 0,1.739689 1.4045624,0 0,-1.739725 c 3.412547,-0.329537 6.129633,-3.034793 6.475641,-6.4413453 l 1.889279,0 z m -8.36492,6.5188648 0,-4.064673 -1.4045624,0 0,4.063882 C 5.5511016,14.612555 3.4232695,12.494619 3.0864551,9.8189297 l 4.0449512,0 0,-1.4045625 -4.0546368,0 C 3.3788672,5.6984941 5.5228887,3.5393379 8.2305176,3.2161113 l 0,3.9153125 1.4045624,0 0,-3.9160859 c 2.711162,0.3203965 4.858576,2.4808887 5.160955,5.1990293 l -3.927441,0 0,1.4045625 3.917773,0 C 14.449289,12.496957 12.318363,14.616158 9.63508,14.933232 z\",\n    \tfill: \"#0E914B\",\n    \twidth: 1,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var assoc = {\n    \t\"stroke-width\": 2,\n    \t\"stroke-linecap\": \"round\",\n    \tcursor: \"pointer\"\n    };\n    var close = {\n    \tpath: \"m 8.9997236,18.000001 c -4.9703918,0 -8.99972284217367,-4.02901 -8.99972284217367,-9 C 7.5782633e-7,4.029011 4.0293108,9.8531742e-7 8.9997236,9.8531742e-7 13.970691,9.8531742e-7 18.000001,4.029011 18.000001,9.000001 c 0,4.97099 -4.02931,9 -9.0002774,9 z m 0.0045,-16.37151 c -4.06191,0 -7.35492,3.29635 -7.35492,7.36251 0,4.06562 3.292989,7.36255 7.35492,7.36255 4.0630384,0 7.3554334,-3.29693 7.3554334,-7.36255 0,-4.06614 -3.292969,-7.36251 -7.3554334,-7.36251 v 0 z m 3.1314894,9.31167 -1.953823,-1.94014 1.953843,-1.94018 c 0.08964,-0.089 0.134622,-0.19099 0.135073,-0.30584 4.31e-4,-0.11488 -0.04383,-0.21712 -0.132838,-0.30681 l -0.54267,-0.54685 c -0.08898,-0.0897 -0.190903,-0.13473 -0.305719,-0.13514 -0.114837,-4.4e-4 -0.217064,0.0439 -0.306703,0.1329 l -1.9623724,1.94865 -1.962395,-1.94865 c -0.08964,-0.089 -0.191845,-0.13336 -0.306702,-0.1329 -0.114837,4.3e-4 -0.216736,0.0455 -0.305719,0.13514 l -0.54265,0.54685 c -0.08902,0.0897 -0.133269,0.19193 -0.132838,0.30681 4.3e-4,0.11485 0.04543,0.21681 0.135073,0.30584 l 1.953823,1.94018 -1.953782,1.94014 c -0.0896,0.089 -0.134684,0.19094 -0.135114,0.3058 -4.31e-4,0.11486 0.04386,0.21716 0.132838,0.30681 l 0.542671,0.54687 c 0.08896,0.0897 0.190923,0.13467 0.305718,0.13516 0.114857,3.9e-4 0.217105,-0.0439 0.306724,-0.13288 l 1.962332,-1.94863 1.9623324,1.94863 c 0.08962,0.089 0.191886,0.13323 0.306744,0.13288 0.114836,-4.5e-4 0.216736,-0.0455 0.305698,-0.13516 l 0.542691,-0.54687 c 0.089,-0.0897 0.133227,-0.19193 0.132838,-0.30681 -3.9e-4,-0.1149 -0.0455,-0.21683 -0.135073,-0.3058 z\",\n    \tfill: \"#0E5D91\",\n    \twidth: 1,\n    \topacity: 0,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var gstyle = {\n    \tbasic: basic,\n    \thover: hover,\n    \tselectable: selectable,\n    \tactive: active,\n    \terror: error,\n    \tsuccess: success,\n    \tlayer: layer,\n    \tcreator: creator,\n    \t\"imageset-rect-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#666666\",\n    \t\"stroke-width\": 1,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-rect-no-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#ffffff\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-img\": {\n    \tcursor: \"pointer\"\n    },\n    \t\"order-text\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.7,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"bold\",\n    \t\"font-size\": 22,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text-default\": {\n    \tstroke: \"#444444\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"small-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 16,\n    \tcursor: \"pointer\"\n    },\n    \t\"layer-pos-text\": {\n    \tstroke: \"#333\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 14\n    },\n    \ttarget: target,\n    \t\"target-hover\": {\n    \tfill: \"#3E7DA7\",\n    \t\"fill-opacity\": 1\n    },\n    \t\"target-success\": {\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 1\n    },\n    \tassoc: assoc,\n    \t\"assoc-layer\": {\n    \t\"stroke-width\": 12,\n    \tcursor: \"pointer\",\n    \t\"stroke-opacity\": 0\n    },\n    \t\"assoc-bullet\": {\n    \tfill: \"#000000\"\n    },\n    \tclose: close,\n    \t\"close-bg\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"none\",\n    \tcursor: \"pointer\",\n    \topacity: 0\n    },\n    \t\"touch-circle\": {\n    \tfill: \"none\",\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-width\": 2\n    }\n    };\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2023 (original work) Open Assessment Technologies SA ;\n     */\n\n    //maps the QTI shapes to Raphael shapes\n    const shapeMap = {\n        default: 'rect',\n        poly: 'path'\n    };\n\n    //length constraints to validate coords\n    const coordsValidator = {\n        rect: 4,\n        ellipse: 4,\n        circle: 3,\n        poly: 6,\n        default: 0\n    };\n\n    //transform the coords from the QTI system to Raphael system\n    const qti2raphCoordsMapper = {\n        /**\n         * Rectangle coordinate mapper:  from left-x,top-y,right-x-bottom-y to x,y,w,h\n         * @param {Array} coords - QTI coords\n         * @returns {Array} raphael coords\n         */\n        rect: function (coords) {\n            return [coords[0], coords[1], coords[2] - coords[0], coords[3] - coords[1]];\n        },\n\n        /**\n         * Creates the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        default: function (paper) {\n            return [0, 0, paper.width, paper.height];\n        },\n\n        /**\n         * polygone coordinate mapper:  from x1,y1,...,xn,yn to SVG path format\n         * @param {Array} coords - QTI coords\n         * @returns {Array} path desc\n         */\n        poly: function (coords) {\n            let a;\n            const size = coords.length;\n\n            // autoClose if needed\n            if (coords[0] !== coords[size - 2] && coords[1] !== coords[size - 1]) {\n                coords.push(coords[0]);\n                coords.push(coords[1]);\n            }\n\n            // move to first point\n            coords[0] = 'M' + coords[0];\n\n            for (a = 1; a < size; a++) {\n                if (a % 2 === 0) {\n                    coords[a] = 'L' + coords[a];\n                }\n            }\n\n            return [coords.join(' ')];\n        }\n    };\n\n    //transform the coords from a raphael shape to the QTI system\n    const raph2qtiCoordsMapper = {\n        /**\n         * Rectangle coordinate mapper: from x,y,w,h to left-x,top-y,right-x-bottom-y\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        rect: function (attr) {\n            return [attr.x, attr.y, attr.x + attr.width, attr.y + attr.height];\n        },\n\n        /**\n         * Circle coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        circle: function (attr) {\n            return [attr.cx, attr.cy, attr.r];\n        },\n\n        /**\n         * Ellispe coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        ellipse: function (attr) {\n            return [attr.cx, attr.cy, attr.rx, attr.ry];\n        },\n\n        /**\n         * Get the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        default: function (attr) {\n            return this.rect(attr);\n        },\n\n        /**\n         * polygone coordinate mapper:  from SVG path (available as segments) to x1,y1,...,xn,yn format\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        path: function (attr) {\n            const poly = [];\n            let i;\n\n            if (_.isArray(attr.path)) {\n                for (i = 1; i < attr.path.length; i++) {\n                    if (attr.path[i].length === 3) {\n                        poly.push(attr.path[i][1]);\n                        poly.push(attr.path[i][2]);\n                    }\n                }\n            }\n\n            return poly;\n        }\n    };\n\n    /**\n     * Graphic interaction helper\n     * @exports qtiCommonRenderer/helpers/Graphic\n     */\n    const GraphicHelper = {\n        /**\n         * Raw access to the styles\n         * @type {Object}\n         */\n        _style: gstyle,\n\n        /**\n         * Apply the style defined by name to the element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         */\n        setStyle: function (element, name) {\n            if (element && gstyle[name]) {\n                element.attr(gstyle[name]);\n            }\n        },\n\n        /**\n         * Create a Raphael paper with a bg image, that is width responsive\n         * @param {String} id - the id of the DOM element that will contain the paper\n         * @param {String} serial - the interaction unique indentifier\n         * @param {Object} options - the paper parameters\n         * @param {String} options.img - the url of the background image\n         * @param {jQueryElement} [options.container] - the parent of the paper element (got the closest parent by default)\n         * @param {Boolean} [options.responsive] - scale to container\n         * @param {Number} [options.width] - the paper width\n         * @param {Number} [options.height] - the paper height\n         * @param {String} [options.imgId] - an identifier for the image element\n         * @param {Function} [options.done] - executed once the image is loaded\n         * @returns {Raphael.Paper} the paper\n         */\n        responsivePaper: function (id, serial, options) {\n            const $container = options.container || $('#' + id).parent();\n            const $editor = $('.image-editor', $container);\n            const $body = $container.closest('.qti-itemBody');\n            const resizer = _.throttle(resizePaper, 10);\n\n            const imgWidth = options.width || $container.innerWidth();\n            const imgHeight = options.height || $container.innerHeight();\n\n            const paper = scaleRaphael(id, imgWidth, imgHeight);\n            const image = paper.image(options.img, 0, 0, imgWidth, imgHeight);\n            image.id = options.imgId || image.id;\n            paper.setViewBox(0, 0, imgWidth, imgHeight);\n\n            resizer();\n\n            //retry to resize once the SVG is loaded\n            $(image.node).attr('externalResourcesRequired', 'true').on('load', resizer);\n\n            if (raphael.type === 'SVG') {\n                // TODO: move listeners somewhere they can be easily turned off\n                $(window).on('resize.qti-widget.' + serial, resizer);\n                // TODO: favor window resize event and deprecate $container resive event (or don't allow $container to be destroyed and rebuilt\n                $container.on('resize.qti-widget.' + serial, resizer);\n                $(document).on('customcssloaded.styleeditor', resizer);\n            } else {\n                $container.find('.main-image-box').width(imgWidth);\n                if (typeof options.resize === 'function') {\n                    options.resize(imgWidth, 1);\n                }\n            }\n\n            /**\n             * scale the raphael paper\n             * @private\n             */\n            function resizePaper(e, givenWidth) {\n                let containerWidth;\n\n                if (e) {\n                    e.stopPropagation();\n                }\n\n                const diff = $editor.outerWidth() - $editor.width() + ($container.outerWidth() - $container.width()) + 1;\n                const maxWidth = $body.width();\n                if (options.responsive) {\n                    containerWidth = $container.innerWidth();\n                } else {\n                    containerWidth = $editor.innerWidth();\n                }\n\n                if ((options.responsive && containerWidth > 0) || givenWidth > 0 || containerWidth > maxWidth) {\n                    if (options.responsive) {\n                        if (givenWidth < containerWidth && givenWidth < maxWidth) {\n                            containerWidth = givenWidth - diff;\n                        } else if (containerWidth > maxWidth) {\n                            containerWidth = maxWidth - diff;\n                        } else {\n                            containerWidth -= diff;\n                        }\n                    } else {\n                        if (givenWidth > 0 && givenWidth < maxWidth) {\n                            containerWidth = givenWidth;\n                        } else if (containerWidth > maxWidth) {\n                            containerWidth = maxWidth;\n                        }\n                    }\n\n                    const factor = containerWidth / imgWidth;\n                    const containerHeight = imgHeight * factor;\n\n                    if (containerWidth > 0) {\n                        paper.changeSize(containerWidth, containerHeight, false, false);\n                    }\n\n                    if (typeof options.resize === 'function') {\n                        options.resize(containerWidth, factor);\n                    }\n                }\n                $container.trigger('resized.qti-widget');\n            }\n\n            return paper;\n        },\n\n        /**\n         * Create a new Element into a raphael paper\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @param {Object} [options] - additional creation options\n         * @param {String} [options.id] - to set the new element id\n         * @param {String} [options.title] - to set the new element title\n         * @param {String} [options.style = basic] - to default style\n         * @param {Boolean} [options.hover = true] - to disable the default hover state\n         * @param {Boolean} [options.touchEffect = true] - a circle appears on touch\n         * @param {Boolean} [options.qtiCoords = true] - if the coords are in QTI format\n         * @returns {Raphael.Element} the created element\n         */\n        createElement: function (paper, type, coords, options) {\n            const self = this;\n            let element;\n            const shaper = shapeMap[type] ? paper[shapeMap[type]] : paper[type];\n            const shapeCoords = options.qtiCoords !== false ? self.raphaelCoords(paper, type, coords) : coords;\n\n            if (typeof shaper === 'function') {\n                element = shaper.apply(paper, shapeCoords);\n                if (element) {\n                    if (options.id) {\n                        element.id = options.id;\n                    }\n\n                    if (options.title) {\n                        element.attr('title', options.title);\n                    }\n\n                    element.attr(gstyle[options.style || 'basic']).toFront();\n\n                    //prevent issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n\n                    if (options.hover !== false) {\n                        element.hover(\n                            function () {\n                                if (!element.flashing) {\n                                    self.updateElementState(this, 'hover');\n                                }\n                            },\n                            function () {\n                                if (!element.flashing) {\n                                    self.updateElementState(\n                                        this,\n                                        this.active ? 'active' : this.selectable ? 'selectable' : 'basic'\n                                    );\n                                }\n                            }\n                        );\n                    }\n\n                    if (options.touchEffect !== false) {\n                        element.touchstart(function () {\n                            self.createTouchCircle(paper, element.getBBox());\n                        });\n                    }\n                }\n            } else {\n                throw new Error('Unable to find method ' + type + ' on paper');\n            }\n\n            return element;\n        },\n\n        /**\n         * Create target point\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} [options]\n         * @param {Object} [options.id] - and id to identify the target\n         * @param {Object} [options.point] - the point to add to the paper\n         * @param {Number} [options.point.x = 0] - point's x coord\n         * @param {Number} [options.point.y = 0] - point's y coord\n         * @param {Boolean} [options.hover] = true - the target has an hover effect\n         * @param {Function} [options.create] - call once created\n         * @param {Function} [options.remove] - call once removed\n         */\n        createTarget: function createTarget(paper, options) {\n            options = options || {};\n\n            const point = options.point || { x: 0, y: 0 };\n            const factor = paper.w !== 0 ? paper.width / paper.w : 1;\n            const hover = typeof options.hover === 'undefined' ? true : !!options.hover;\n\n            const baseSize = 18; // this is the base size of the path element to be placed on svg (i.e. the path element crosshair is created to have a size of 18)\n            const half = baseSize / 2;\n            const x = point.x - half;\n            const y = point.y - half;\n            const targetSize = factor !== 0 ? 2 / factor : 2;\n\n            //create the target from a path\n            const target = paper\n                .path(gstyle.target.path)\n                .transform('t' + x + ',' + y + 's' + targetSize)\n                .attr(gstyle.target)\n                .attr('title', _('Click again to remove'));\n\n            //generate an id if not set in options\n            if (options.id) {\n                target.id = options.id;\n            } else {\n                let count = 0;\n                paper.forEach(function (element) {\n                    if (element.data('target')) {\n                        count++;\n                    }\n                });\n                target.id = 'target-' + count;\n            }\n\n            const tBBox = target.getBBox();\n\n            //create an invisible rect over the target to ensure path selection\n            const layer = paper\n                .rect(tBBox.x, tBBox.y, tBBox.width, tBBox.height)\n                .attr(gstyle.layer)\n                .click(function () {\n                    const id = target.id;\n                    const p = this.data('point');\n\n                    if (_.isFunction(options.select)) {\n                        options.select(target, p, this);\n                    }\n\n                    if (_.isFunction(options.remove)) {\n                        this.remove();\n                        target.remove();\n                        options.remove(id, p);\n                    }\n                });\n\n            if (hover) {\n                layer.hover(\n                    () => {\n                        if (!target.flashing) {\n                            this.setStyle(target, 'target-hover');\n                        }\n                    },\n                    () => {\n                        if (!target.flashing) {\n                            this.setStyle(target, 'target-success');\n                        }\n                    }\n                );\n            }\n\n            layer.id = 'layer-' + target.id;\n            layer.data('point', point);\n            target.data('target', point);\n\n            if (_.isFunction(options.create)) {\n                options.create(target);\n            }\n\n            return target;\n        },\n\n        /**\n         * Get the Raphael coordinate from QTI coordinate\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @returns {Array} the arguments array of coordinate to give to the approriate raphael shapre creator\n         */\n        raphaelCoords: function raphaelCoords(paper, type, coords) {\n            let shapeCoords;\n\n            if (_.isString(coords)) {\n                coords = _.map(coords.split(','), function (coord) {\n                    return parseInt(coord, 10);\n                });\n            }\n\n            if (!_.isArray(coords) || coords.length < coordsValidator[type]) {\n                throw new Error('Invalid coords ' + JSON.stringify(coords) + '  for type ' + type);\n            }\n\n            switch (type) {\n                case 'rect':\n                    shapeCoords = qti2raphCoordsMapper.rect(coords);\n                    break;\n                case 'default':\n                    shapeCoords = qti2raphCoordsMapper['default'].call(null, paper);\n                    break;\n                case 'poly':\n                    shapeCoords = qti2raphCoordsMapper.poly(coords);\n                    break;\n                default:\n                    shapeCoords = coords;\n                    break;\n            }\n\n            return shapeCoords;\n        },\n\n        /**\n         * Get the QTI coordinates from a Raphael Element\n         * @param {Raphael.Element} element - the shape to get the coords from\n         * @param {Raphael.Element} paper - the interaction paper\n         * @param {number} width - width of background image\n         * @returns {String} the QTI coords\n         */\n        qtiCoords: function qtiCoords(element, paper, width) {\n            const mapper = raph2qtiCoordsMapper[element.type];\n            let result = '';\n            const factor = paper && width ? width / paper.w : 1;\n\n            if (_.isFunction(mapper)) {\n                result = _.map(mapper.call(raph2qtiCoordsMapper, element.attr()), function (coord) {\n                    return Math.round(coord * factor);\n                }).join(',');\n            }\n\n            return result;\n        },\n\n        /**\n         * Create a circle that animate and disapear from a shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} element - used to get the bbox from\n         */\n        createTouchCircle: function (paper, bbox) {\n            const radius = bbox.width > bbox.height ? bbox.width : bbox.height;\n            const tCircle = paper.circle(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2, radius);\n\n            tCircle.attr(gstyle['touch-circle']);\n\n            _.defer(function () {\n                tCircle.animate({ r: radius + 5, opacity: 0.7 }, 300, function () {\n                    tCircle.remove();\n                });\n            });\n        },\n\n        /**\n         * Create a text, that scales.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - the text options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {String} [options.disableEvents] - ignore events for the node\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @returns {Raphael.Element} the created text\n         */\n        createText: function (paper, options) {\n            const top = options.top || 0;\n            const left = options.left || 0;\n            const content = options.content || '';\n            const style = options.style || 'small-text';\n            const title = options.title || '';\n            const disableEvents = options.disableEvents || false;\n            let factor = 1;\n\n            if (paper.width && paper.w) {\n                factor = paper.width / paper.w;\n            }\n\n            const text = paper.text(left, top, content).toFront();\n            if (options.id) {\n                text.id = options.id;\n            }\n\n            if (options.hide) {\n                text.hide();\n            }\n\n            text.attr(gstyle[style]);\n\n            if (disableEvents) {\n                text.node.setAttribute('pointer-events', 'none');\n            }\n\n            if (typeof factor !== 'undefined' && factor !== 1) {\n                const fontSize = parseInt(text.attr('font-size'), 10);\n                const scaledFontSize = Math.floor(fontSize / factor) + 1;\n\n                text.attr('font-size', scaledFontSize);\n            }\n\n            if (title) {\n                this.updateTitle(text, title);\n            }\n\n            return text;\n        },\n\n        /**\n         * Create a text in the middle of the related shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} shape - the shape to add the text to\n         * @param {Object} options - the text options\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @param {Boolean} [options.shapeClick = false] - clicking the text delegates to the shape\n         * @returns {Raphael.Element} the created text\n         */\n        createShapeText: function (paper, shape, options) {\n            const bbox = shape.getBBox();\n\n            const text = this.createText(\n                paper,\n                _.merge(\n                    {\n                        left: bbox.x + bbox.width / 2,\n                        top: bbox.y + bbox.height / 2\n                    },\n                    options\n                )\n            );\n\n            if (options.shapeClick) {\n                text.click(() => {\n                    this.trigger(shape, 'click');\n                });\n            }\n\n            return text;\n        },\n\n        /**\n         * Create an image with a padding and a border, using a set.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - image options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {Number} options.width - image width\n         * @param {Number} options.height - image height\n         * @param {Number} options.url - image ulr\n         * @param {Number} [options.padding = 6] - a multiple of 2 is welcomed\n         * @param {Boolean} [options.border = false] - add a border around the image\n         * @param {Boolean} [options.shadow = false] - add a shadow back the image\n         * @returns {Raphael.Element} the created set, augmented of a move(x,y) method\n         */\n        createBorderedImage: function (paper, options) {\n            const padding = options.padding >= 0 ? options.padding : 6;\n            const halfPad = padding / 2;\n\n            const rx = options.left,\n                ry = options.top,\n                rw = options.width + padding,\n                rh = options.height + padding;\n\n            const ix = options.left + halfPad,\n                iy = options.top + halfPad,\n                iw = options.width,\n                ih = options.height;\n\n            const set = paper.set();\n\n            //create a rectangle with a padding and a border.\n            const rect = paper\n                .rect(rx, ry, rw, rh)\n                .attr(options.border ? gstyle['imageset-rect-stroke'] : gstyle['imageset-rect-no-stroke']);\n\n            //and an image centered into the rectangle.\n            const image = paper.image(options.url, ix, iy, iw, ih).attr(gstyle['imageset-img']);\n\n            if (options.shadow) {\n                set.push(\n                    rect.glow({\n                        width: 2,\n                        offsetx: 1,\n                        offsety: 1\n                    })\n                );\n            }\n\n            set.push(rect, image);\n\n            /**\n             * Add a move method to set that keep the given coords during an animation\n             * @private\n             * @param {Number} x - destination\n             * @param {Number} y - destination\n             * @param {Number} [duration = 400] - the animation duration\n             * @returns {Raphael.Element} the set for chaining\n             */\n            set.move = function move(x, y, duration) {\n                const animation = raphael.animation({ x: x, y: y }, duration || 400);\n                const elt = rect.animate(animation);\n                image.animateWith(elt, animation, { x: x + halfPad, y: y + halfPad }, duration || 400);\n                return set;\n            };\n\n            return set;\n        },\n\n        /**\n         * Update the visual state of an Element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         * @param {String} [title] - a title linked to this step\n         */\n        updateElementState: function (element, state, title) {\n            if (element && element.animate) {\n                element.animate(gstyle[state], 200, 'linear', function () {\n                    element.attr(gstyle[state]); //for attr that don't animate\n\n                    //preven issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n                });\n\n                if (title) {\n                    this.updateTitle(element, title);\n                }\n            }\n        },\n\n        /**\n         * Update the title of an element (the attr method of Raphael adds only new node instead of updating exisitings).\n         * @param {Raphael.Element} element - the element to update the title\n         * @param {String} [title] - the new title\n         */\n        updateTitle: function (element, title) {\n            if (element && element.node) {\n                //removes all remaining titles nodes\n                _.forEach(element.node.children, function (child) {\n                    if (child.nodeName.toLowerCase() === 'title') {\n                        element.node.removeChild(child);\n                    }\n                });\n\n                //then set the new title\n                element.attr('title', title);\n            }\n        },\n\n        /**\n         * Highlight an element with the error style\n         * @param {Raphael.Element} element - the element to hightlight\n         * @param {String} [restorState = 'basic'] - the state to restore the elt into after flash\n         */\n        highlightError: function (element, restoredState) {\n            if (element) {\n                element.flashing = true;\n                this.updateElementState(element, 'error');\n                _.delay(() => {\n                    this.updateElementState(element, restoredState || 'basic');\n                    element.flashing = false;\n                }, 800);\n            }\n        },\n\n        /**\n         * Trigger an event already bound to a raphael element\n         * @param {Raphael.Element} element\n         * @param {String} event - the event name\n         *\n         */\n        trigger: function (element, event) {\n            const evt = element.events.filter(el => el.name === event);\n            if (evt.length && evt[0] && typeof evt[0].f === 'function') {\n                evt[0].f.apply(element, Array.prototype.slice.call(arguments, 2));\n            }\n        },\n\n        /**\n         * Get an x/y point from a MouseEvent\n         * @param {MouseEvent} event - the source event\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {jQueryElement} $container - the paper container\n         * @param {Boolean} isResponsive - if the paper is scaling\n         * @returns {Object} x,y point\n         */\n        getPoint: function getPoint(event, paper, $container) {\n            const point = this.clickPoint($container, event);\n            const rect = $container.get(0).getBoundingClientRect();\n            const factor = paper.w / rect.width;\n\n            point.x = Math.round(point.x * factor);\n            point.y = Math.round(point.y * factor);\n\n            return point;\n        },\n\n        /**\n         * Get paper position relative to the container\n         * @param {jQueryElement} $container - the paper container\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @returns {Object} position with top and left\n         */\n        position: function ($container, paper) {\n            const pw = parseInt(paper.w || paper.width, 10);\n            const cw = parseInt($container.width(), 10);\n            const ph = parseInt(paper.w || paper.width, 10);\n            const ch = parseInt($container.height(), 10);\n\n            return {\n                left: (cw - pw) / 2,\n                top: (ch - ph) / 2\n            };\n        },\n\n        /**\n         * Get a point from a click event\n         * @param {jQueryElement} $container - the element that contains the paper\n         * @param {MouseEvent} event - the event triggered by the click\n         * @returns {Object} the x,y point\n         */\n        clickPoint: function ($container, event) {\n            let x, y;\n            const offset = $container.offset();\n\n            if (event.pageX || event.pageY) {\n                x = event.pageX - offset.left;\n                y = event.pageY - offset.top;\n            } else if (event.clientX || event.clientY) {\n                x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft - offset.left;\n                y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop - offset.top;\n            }\n\n            return { x, y };\n        }\n    };\n\n    return GraphicHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction',['lodash', 'taoQtiItem/qtiItem/helper/util', 'handlebars', 'lib/handlebars/helpers'], function (_, util, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"small feedback-info item-instruction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <span class=\\\"icon-info icon\\\"></span><span class=\\\"instruction-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n</div>\";\n      return buffer;\n      });\n    function instructionTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    var _notificationLevels = ['info', 'warning', 'error', 'success'];\n\n    var Instruction = function(interaction, message, callback) {\n        this.interaction = interaction;\n        this.defaultMessage = message || '';\n        this.currentMessage = '';\n        this.level = 'info';\n        this.serial = util.buildSerial('instruction_');\n        this.callback = callback;\n        this.$dom = null;\n        this.state = false;\n    };\n\n    Instruction.isValidLevel = function(level) {\n        return _.indexOf(_notificationLevels, level) >= 0;\n    };\n\n    Instruction.prototype.setState = function(state) {\n        this.state = state;\n    };\n\n    Instruction.prototype.checkState = function(state) {\n        return this.state === state;\n    };\n\n    Instruction.prototype.getId = function() {\n        return this.serial;\n    };\n\n    Instruction.prototype.create = function($container) {\n        $container.append(\n            instructionTpl({\n                message: this.defaultMessage,\n                serial: this.serial\n            })\n        );\n\n        this.$dom = $container.find('#' + this.serial);\n    };\n\n    Instruction.prototype.update = function(options) {\n        var level = options && options.level ? options.level : '',\n            message = options && options.message ? options.message : '',\n            timeout = options && options.timeout ? options.timeout : 0,\n            start = options && typeof options.start === 'function' ? options.start : null,\n            stop = options && typeof options.stop === 'function' ? options.stop : null;\n\n        if (level && Instruction.isValidLevel(level)) {\n            this.$dom.removeClass('feedback-' + this.level).addClass('feedback-' + level);\n            this.$dom\n                .find('.icon')\n                .removeClass('icon-' + this.level)\n                .addClass('icon-' + level);\n            this.level = level;\n        }\n\n        if (message) {\n            this.$dom.find('.instruction-message').html(message);\n            this.currentMessage = message;\n        }\n\n        if (timeout) {\n            var _this = this;\n            if (start) {\n                start.call(_this);\n            }\n            _this.timer = setTimeout(function() {\n                if (stop) {\n                    stop.call(_this);\n                }\n                _this.timer = null;\n            }, timeout);\n        }\n    };\n\n    Instruction.prototype.setLevel = function(level, timeout) {\n        var options = {\n            level: level\n        };\n\n        if (timeout) {\n            options.timeout = parseInt(timeout);\n            options.stop = function() {\n                this.setLevel('info');\n            };\n        }\n\n        this.update(options);\n    };\n\n    Instruction.prototype.getLevel = function() {\n        return this.level;\n    };\n\n    Instruction.prototype.setMessage = function(message, timeout) {\n        this.update({ message: message, timeout: timeout });\n    };\n\n    Instruction.prototype.reset = function() {\n        this.update({ level: 'info', message: this.defaultMessage });\n        this.state = false;\n    };\n\n    Instruction.prototype.validate = function(data) {\n        if (typeof this.callback === 'function') {\n            this.callback.call(this, data);\n        }\n    };\n\n    return Instruction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',['lodash', 'jquery', 'i18n', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction', 'handlebars', 'lib/handlebars/helpers'], function (_, $$1, __, containerHelper, Instruction, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Instruction = Instruction && Object.prototype.hasOwnProperty.call(Instruction, 'default') ? Instruction['default'] : Instruction;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"small feedback-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \" item-notification\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <span class=\\\"icon-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"></span><span class=\\\"feedback-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n    <span title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Message\", options) : helperMissing.call(depth0, \"__\", \"Remove Message\", options)))\n        + \"\\\" class=\\\"icon-close close-trigger\\\"></span>\\n</div>\\n\";\n      return buffer;\n      });\n    function notifTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //stores the instructions\n    var _instructions = {};\n\n    /**\n     * The instruction manager helps you in managing instructions and\n     * constraints on a QTI Element, usually an interaction or a choice.\n     *\n     * @exports qtiCommonRenderer/helpers/Instructions/instructionManager\n     */\n    var instructionManager = {\n        /**\n         * Validate the instructions of an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {Object} [data] - any data to give to the instructions\n         */\n        validateInstructions: function (element, data) {\n            var serial = element.getSerial();\n            if (_instructions[serial]) {\n                _.forEach(_instructions[serial], function (instruction) {\n                    instruction.validate(data || {});\n                });\n            }\n        },\n\n        /**\n         * Add a new instructions to an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display to the user when the instruction is validated\n         * @param {Function} validateCallback - how to validate the instruction\n         * @returns {Instruction} the created instruction\n         */\n        appendInstruction: function (element, message, validateCallback) {\n            var serial = element.getSerial(),\n                instruction = new Instruction(element, message, validateCallback);\n\n            if (!_instructions[serial]) {\n                _instructions[serial] = {};\n            }\n            _instructions[serial][instruction.getId()] = instruction;\n\n            instruction.create($$1('.instruction-container', containerHelper.get(element)));\n\n            return instruction;\n        },\n\n        /**\n         * Remove instructions from an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         */\n        removeInstructions: function (element) {\n            _instructions[element.getSerial()] = {};\n            containerHelper.get(element).find('.instruction-container').empty();\n        },\n\n        /**\n         * Reset the instructions states for an element (but keeps configuration)\n         * @param {Object} element - the qti object, ie. interaction, choice, etc.\n         */\n        resetInstructions: function (element) {\n            var serial = element.getSerial();\n            if (_instructions[serial]) {\n                _.forEach(_instructions[serial], function (instruction) {\n                    instruction.reset();\n                });\n            }\n        },\n\n        /**\n         * Default instuction set with a min/max constraints.\n         * @param {Object} interaction\n         * @param {jQueryElement} $container\n         * @param {Object} options\n         * @param {Number} [options.min = 0] -\n         * @param {Number} [options.max = 0] -\n         * @param {Function} options.getResponse - a ref to a function that get the raw response (array) from the interaction in parameter\n         * @param {Function} [options.onError] - called by once an error occurs with validateInstruction data in parameters\n         */\n        minMaxChoiceInstructions: function (interaction, options) {\n            var self = this,\n                min = options.min || 0,\n                max = options.max || 0,\n                getResponse = options.getResponse,\n                onError = options.onError || _.noop(),\n                choiceCount = options.choiceCount === false ? false : _.size(interaction.getChoices()),\n                minInstructionSet = false,\n                msg;\n\n            if (!_.isFunction(getResponse)) {\n                throw 'invalid parameter getResponse';\n            }\n\n            //if maxChoice = 0, inifinite choice possible\n            if (max > 0 && (choiceCount === false || max < choiceCount)) {\n                if (max === min) {\n                    minInstructionSet = true;\n                    msg =\n                        max <= 1\n                            ? __('You must select exactly %d choice', max)\n                            : __('You must select exactly %d choices', max);\n\n                    self.appendInstruction(interaction, msg, function (data) {\n                        if (getResponse(interaction).length >= max) {\n                            this.setLevel('success');\n                            if (this.checkState('fulfilled')) {\n                                this.update({\n                                    level: 'warning',\n                                    message: __('Maximum choices reached'),\n                                    timeout: 2000,\n                                    start: function () {\n                                        onError(data);\n                                    },\n                                    stop: function () {\n                                        this.update({ level: 'success', message: msg });\n                                    }\n                                });\n                            }\n                            this.setState('fulfilled');\n                        } else {\n                            this.reset();\n                        }\n                    });\n                } else if (max > min) {\n                    msg =\n                        max <= 1\n                            ? __('You can select maximum %d choice', max)\n                            : __('You can select maximum %d choices', max);\n                    self.appendInstruction(interaction, msg, function (data) {\n                        if (getResponse(interaction).length >= max) {\n                            this.setLevel('success');\n                            this.setMessage(__('Maximum choices reached'));\n                            if (this.checkState('fulfilled')) {\n                                this.update({\n                                    level: 'warning',\n                                    timeout: 2000,\n                                    start: function () {\n                                        onError(data);\n                                    },\n                                    stop: function () {\n                                        this.setLevel('info');\n                                    }\n                                });\n                            }\n\n                            this.setState('fulfilled');\n                        } else {\n                            this.reset();\n                        }\n                    });\n                }\n            }\n\n            if (!minInstructionSet && min > 0 && (choiceCount === false || min < choiceCount)) {\n                msg =\n                    min <= 1\n                        ? __('You must select at least %d choice', min)\n                        : __('You must select at least %d choices', min);\n                self.appendInstruction(interaction, msg, function () {\n                    if (getResponse(interaction).length >= min) {\n                        this.setLevel('success');\n                    } else {\n                        this.reset();\n                    }\n                });\n            }\n        },\n\n        /**\n         * Appends a instruction  notification message\n         * @deprecated in favor of instructions\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display\n         * @param {String} [level = 'info'] - the notification level in info, success, error or warning\n         */\n        appendNotification: function (element, message, level) {\n            level = level || 'info';\n\n            if (Instruction.isValidLevel(level)) {\n                var $container = containerHelper.get(element);\n\n                $container.find('.notification-container').prepend(\n                    notifTpl({\n                        level: level,\n                        message: message\n                    })\n                );\n\n                var $notif = $container.find('.item-notification:first');\n                var _remove = function () {\n                    $notif.fadeOut();\n                };\n\n                $notif.find('.close-trigger').on('click', _remove);\n                setTimeout(_remove, 2000);\n\n                return $notif;\n            }\n        },\n\n        /**\n         * Removes all the displayed notifications\n         * @deprecated in favor of instructions\n         */\n        removeNotifications: function (element) {\n            containerHelper.get(element).find('.item-notification').remove();\n        }\n    };\n\n    return instructionManager;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler',['jquery', 'lodash'], function ($, _) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    //throttle events because of the loop\n    var informLoaded = _.throttle(\n        function() {\n            $(document).trigger('customcssloaded.styleeditor',[{}]);\n        },\n        10,\n        { leading: false }\n    );\n\n    /**\n     * Attach QTI Stylesheets to the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     * @fires customcssloaded.styleeditor on document 10ms after stylesheets are loaded\n     */\n    var attach = function attach(stylesheets) {\n        var $head = $('head');\n\n        //fallback\n        if (!$head.length) {\n            $head = $('body');\n        }\n\n        // relative links with cache buster\n        _(stylesheets).forEach(function(stylesheet) {\n            var $link, href;\n\n            //if the href is something\n            if (stylesheet.attr('href')) {\n                $link = $(stylesheet.render());\n\n                //get the resolved href once rendererd\n                href = $link.attr('href');\n\n                //we need to set the href after the link is appended to the head (for our dear IE)\n                $link.removeAttr('href').attr('href', href);\n\n                if (stylesheet.attr('onload')) {\n                    $link[0].onload = stylesheet.attr('onload');\n                }\n\n                if (stylesheet.attr('onerror')) {\n                    $link[0].onerror = stylesheet.attr('onerror');\n                }\n\n                $link.one('load', informLoaded).appendTo($head);\n            }\n        });\n    };\n\n    /**\n     * Remove QTI Stylesheets from the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     */\n    var detach = function detach(stylesheets) {\n        _(stylesheets).forEach(function(stylesheet) {\n            if (stylesheet.serial) {\n                $('link[data-serial=\"' + stylesheet.serial + '\"]').remove();\n            }\n        });\n    };\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler\n     */\n    var itemStylesheetHandler = {\n        attach: attach,\n        detach: detach\n    };\n\n    return itemStylesheetHandler;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/patternMask',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var regexChar = /\\^\\[\\\\s\\\\S\\]\\{\\d+\\,(\\d+)\\}\\$/,\n        regexWords = /\\^\\(\\?\\:\\(\\?\\:\\[\\^\\\\s\\\\:\\\\!\\\\\\?\\\\\\;\\\\\\…\\\\\\€\\]\\+\\)\\[\\\\s\\\\:\\\\!\\\\\\?\\\\;\\\\\\…\\\\\\€\\]\\*\\)\\{\\d+\\,(\\d+)\\}\\$/;\n\n    var patternMaskHelper = {\n        /**\n         * Parse the pattern string and according to the given type, try to extract the associate number\n         *\n         * @param {String} pattern - the pattern string to be parsed\n         * @param {String} type - words or chars\n         * @returns {*}\n         */\n        parsePattern: function parsePattern(pattern, type) {\n            if (pattern === undefined || pattern === null) {\n                return null;\n            }\n            if (type === 'words') {\n                //expre = /^(?:(?:[^\\s\\:\\!\\?\\;\\…\\€]+)[\\s\\:\\!\\?\\;\\…\\€]*){0,3}$/;\n                var result = pattern.match(regexWords);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                } else {\n                    return null;\n                }\n            } else if (type === 'chars') {\n                // This is the original regExp generated by our code\n                // expre = /^[\\s\\S]{0,10}$/;\n                // and we will try to extract the top limit from it with this regexp\n                // which is mostly just escaped version of the first one.\n                var result = pattern.match(regexChar);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                } else {\n                    return null;\n                }\n            } else {\n                return null;\n            }\n        },\n        /**\n         * Reverse function of parsePattern for word type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxWordPattern: function createMaxWordPattern(max) {\n            return '^(?:(?:[^\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]+)[\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]*){0,' + max.toString() + '}$';\n        },\n        /**\n         * Reverse function of parsePattern for char type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxCharPattern: function createMaxCharPattern(max) {\n            return '^[\\\\s\\\\S]{0,' + max.toString() + '}$';\n        }\n    };\n\n    return patternMaskHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    var _formatters = {\n        boolean: function (value) {\n            return value ? 'true' : 'false';\n        },\n        integer: function (value) {\n            return value;\n        },\n        float: function (value) {\n            return value;\n        },\n        string: function (value) {\n            return value === '' ? 'NULL' : '\"' + value + '\"';\n        },\n        point: function (value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        pair: function (value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        directedPair: function (value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        duration: function (value) {\n            return value;\n        },\n        file: function (value) {\n            return 'binary data';\n        },\n        uri: function (value) {\n            return value;\n        },\n        intOrIdentifier: function (value) {\n            return value;\n        },\n        identifier: function (value) {\n            return value;\n        }\n    };\n\n    /**\n     * Return the pretty print string for a qti base variable\n     *\n     * @param {type} value\n     * @param {type} withType - the qti baseType\n     * @returns {String}\n     */\n    function printBase(value, withType) {\n        var print = '',\n            base = value.base;\n\n        withType = typeof withType !== 'undefined' ? withType : true;\n\n        if (base) {\n            _.forIn(_formatters, function (formatter, baseType) {\n                if (base[baseType] !== undefined) {\n                    print += withType ? '(' + baseType + ') ' : '';\n                    print += formatter(base[baseType]);\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    }\n\n    /**\n     * Return the pretty print string for a qti list variable\n     *\n     * @param {object} value\n     * @param {string} withType - the qti basetype of the list\n     * @returns {string}\n     */\n    function printList(value, withType) {\n        var print = '',\n            list = value.list;\n\n        withType = typeof withType !== 'undefined' ? withType : true;\n\n        if (list) {\n            _.forIn(_formatters, function (formatter, baseType) {\n                if (list[baseType] !== undefined) {\n                    print += withType ? '(' + baseType + ') ' : '';\n\n                    print += '[';\n\n                    _.forEach(list[baseType], function (value) {\n                        print += formatter(value) + ', ';\n                    });\n\n                    if (_.size(list[baseType])) {\n                        print = print.substring(0, print.length - 2);\n                    }\n\n                    print += ']';\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    }\n\n    /**\n     * Return the pretty print string for a qti record variable\n     *\n     * @param {object} value\n     * @returns {String}\n     */\n    function printRecord(value) {\n        if (value && value.record) {\n            return '(record) ' + JSON.stringify(value.record);\n        }\n        return '';\n    }\n\n    var PciPrettyPrint = {\n        printBase: printBase,\n        printList: printList,\n        printRecord: printRecord\n    };\n\n    return PciPrettyPrint;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciResponse',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint'], function (_, pciPrettyPrint) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pciPrettyPrint = pciPrettyPrint && Object.prototype.hasOwnProperty.call(pciPrettyPrint, 'default') ? pciPrettyPrint['default'] : pciPrettyPrint;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    var _qtiModelPciResponseCardinalities = {\n        single: 'base',\n        multiple: 'list',\n        ordered: 'list',\n        record: 'record'\n    };\n\n    var PciResponse = {\n        /**\n         * Parse a response variable formatted according to IMS PCI: http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * @see serialize\n         * @param {Object} response\n         * @param {Object} interaction\n         * @returns {Array}\n         */\n        unserialize: function(response, interaction) {\n            var ret = [],\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                var responseValues = response[mappedCardinality];\n\n                if (responseValues === null) {\n                    ret = [];\n                } else if (_.isObject(responseValues)) {\n                    if (responseValues[baseType] !== undefined) {\n                        ret = responseValues[baseType];\n                        ret = _.isArray(ret) ? ret : [ret];\n                    } else {\n                        throw 'invalid response baseType';\n                    }\n                } else {\n                    throw 'invalid response cardinality, expected ' + cardinality + ' (' + mappedCardinality + ')';\n                }\n            } else {\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return ret;\n        },\n        /**\n         * Serialize the input response array into the format to be send to result server according to IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * With the only exception for empty response, which is represented by a javascript \"null\" value\n         *\n         * @see http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * @param {Array} responseValues\n         * @param {Object} interaction\n         * @returns {Object|null}\n         */\n        serialize: function(responseValues, interaction) {\n            if (!_.isArray(responseValues)) {\n                throw 'invalid argument : responseValues must be an Array';\n            }\n\n            var response = {},\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            responseValues = _.map(responseValues || [], function(v) {\n                return baseType === 'boolean' ? v === true || v === 'true' : v;\n            });\n\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                if (mappedCardinality === 'base') {\n                    if (responseValues.length === 0) {\n                        //return empty response:\n                        response.base = null;\n                    } else {\n                        response.base = {};\n                        response.base[baseType] = responseValues[0];\n                    }\n                } else {\n                    response[mappedCardinality] = {};\n                    response[mappedCardinality][baseType] = responseValues;\n                }\n            } else {\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return response;\n        },\n        isEmpty: function(response) {\n            return (\n                response === null ||\n                _.isEmpty(response) ||\n                response.base === null ||\n                (_.isArray(response.list) && _.isEmpty(response.list)) ||\n                (_.isArray(response.record) && _.isEmpty(response.record))\n            );\n        },\n\n        /**\n         * Print a PCI JSON response into a human-readable string.\n         *\n         * @param {Object} response A response in PCI JSON representation.\n         * @returns {String} A human-readable version of the PCI JSON representation.\n         */\n        prettyPrint: function(response) {\n            var print = '';\n\n            if (typeof response.base !== 'undefined') {\n                // -- BaseType.\n                print += pciPrettyPrint.printBase(response, true);\n            } else if (typeof response.list !== 'undefined') {\n                // -- ListType\n                print += pciPrettyPrint.printList(response, true);\n            } else if (typeof response.record !== 'undefined') {\n                // -- RecordType\n                print += pciPrettyPrint.printRecord(response, true);\n            } else {\n                throw 'Not a valid PCI JSON Response';\n            }\n\n            return print;\n        }\n    };\n\n    return PciResponse;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PortableElement',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Portable element helper\n     */\n\n    var imgSrcPattern = /(<img[^>]*\\ssrc=[\"'])([^\"']+)([\"'])/gi;\n\n    /**\n     * Replace all identified relative media urls by the absolute one.\n     * For now only images are supported.\n     *\n     * @param {String} html - the html to parse\n     * @param {Object} the renderer\n     * @returns {String} the html without updated URLs\n     */\n    function fixMarkupMediaSources(html, renderer) {\n        html = html || '';\n\n        return html.replace(imgSrcPattern, function(substr, $1, $2, $3) {\n            var resolved = renderer.resolveUrl($2) || $2;\n            return $1 + resolved + $3;\n        });\n    }\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/PortableElement\n     */\n    var PortableElement = {\n        fixMarkupMediaSources: fixMarkupMediaSources\n    };\n\n    return PortableElement;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter',['jquery', 'util/adaptSize', 'ui/waitForMedia'], function ($, adaptSize, waitForMedia) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    const itemSelector = '.add-option, .result-area .target, .choice-area .qti-choice';\n\n    var sizeAdapter = {\n        /**\n         * Resize jQueryElement that have changed their dimensions due to a change of the content\n         *\n         * @param {jQueryElement|widget} target\n         */\n        adaptSize(target) {\n            let $elements;\n            let $container;\n\n            switch (true) {\n                // widget\n                case typeof target.$container !== 'undefined':\n                    $elements = target.$container.find(itemSelector);\n                    $container = target.$container;\n                    break;\n\n                // jquery elements\n                default:\n                    $elements = target;\n                    $container = $($elements).first().parent();\n            }\n\n            $container.waitForMedia(function () {\n                // Occasionally in caching scenarios, after waitForMedia(), image.height is reporting its naturalHeight instead of its CSS height\n                // The timeout allows adaptSize.height() to work with the true rendered heights of elements, instead of naturalHeights\n                setTimeout(() => {\n                    adaptSize.height($elements);\n\n                    // detect any CSS load, and adapt heights again after\n                    document.addEventListener(\n                        'load',\n                        e => {\n                            if (e.target && e.target.rel === 'stylesheet') {\n                                adaptSize.height($elements);\n                            }\n                        },\n                        true\n                    );\n                }, 1);\n            });\n        },\n\n        /**\n         * Reset height to jQueryElement(s) to auto\n         *\n         * @param {jQueryElement|widget} target\n         */\n        resetSize(target) {\n            adaptSize.resetHeight(target.$container.find(itemSelector));\n        }\n    };\n\n    return sizeAdapter;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/uploadMime',['lodash', 'i18n', 'core/mimetype/definitions'], function (_, __, mimeTypes) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimeTypes = mimeTypes && Object.prototype.hasOwnProperty.call(mimeTypes, 'default') ? mimeTypes['default'] : mimeTypes;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-21 (original work) Open Assessment Technologies SA ;\n     */\n\n    const delimetr = ' ';\n\n    const uploadMime = {\n        /**\n         * Fetch mime type definitions\n         * (translation function for labels must be injected from here)\n         * @returns {Array}\n         */\n        getMimeTypes: function getMimeTypes() {\n            return mimeTypes.getList(__);\n        },\n\n        /**\n         * Set the expected types in the format according to the number of types\n         *\n         * @param {Object} interaction\n         * @param {Array} types\n         */\n        setExpectedTypes: function setExpectedTypes(interaction, types) {\n            let classes = interaction.attr('class') || '';\n            classes = classes.replace(/x-tao-upload-type-[-_a-zA-Z+.0-9]*/g, '').trim();\n            interaction.attr('class', classes);\n            interaction.removeAttr('type');\n\n            if (!types) {\n                return;\n            }\n\n            if (types.length === 1) {\n                //if there is only one value set into the qti standard type attribute\n                if (types[0] !== 'any/kind') {\n                    interaction.attr('type', types[0]);\n                }\n            } else {\n                //For backward compatibility:\n                //if there is more than one value, set into into TAO specific css classes\n                interaction.attr(\n                    'class',\n                    _.reduce(\n                        types,\n                        function (acc, selectedType) {\n                            return acc + ' x-tao-upload-type-' + selectedType.replace('/', '_');\n                        },\n                        classes\n                    ).trim()\n                );\n\n                interaction.attr('type', types.join(delimetr));\n            }\n        },\n\n        /**\n         * Return the array of authorized mime types\n         * Get the standard \"type\" attribute value with mime types separated by space.\n         * @param {Object} interaction - standard QTI interaction model object\n         * @param {Boolean} [includeEquivalents] - enable including all recognized as equivalent types\n         * @returns {Array}\n         */\n        getExpectedTypes: function getExpectedTypes(interaction, includeEquivalents) {\n            let equivalents = [];\n            let types = [];\n            let mimes;\n\n            if (interaction.attr('type')) {\n                types = interaction.attr('type').split(delimetr);\n            }\n\n            // add in equivalent mimetypes to the list of expected types\n            if (includeEquivalents === true) {\n                mimes = uploadMime.getMimeTypes();\n                _.forEach(types, function (mime) {\n                    const mimeData = _.find(mimes, { mime: mime });\n                    if (mimeData && _.isArray(mimeData.equivalent)) {\n                        equivalents = _.union(equivalents, mimeData.equivalent);\n                    }\n                });\n            }\n\n            return _.union(types, equivalents);\n        }\n    };\n\n    return uploadMime;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/userAgent',['exports'], function (exports) { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2025 (original work) Open Assessment Technologies SA ;\n     */\n\n    const isSafari = () => {\n        const ua = navigator.userAgent.toLowerCase();\n        return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0;\n    };\n\n    exports.isSafari = isSafari;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-gap\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <span data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"gapmatch-content\\\">&nbsp;</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Gap = {\n        qtiClass: 'gap',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Gap;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objetLabel)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-gapImg selectable\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <img src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.data)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n         width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n         height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n         \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objectLabel), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapImg = {\n        qtiClass: 'gapImg',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return GapImg;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapText = {\n        qtiClass: 'gapText',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return GapText;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-hottext hottext\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <label class=\\\"hottext-checkmark\\\">\\r\\n        <input type=\\\"checkbox\\\" value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\r\\n        <span class=\\\"icon-checkbox small\\\"></span>\\r\\n    </label>\\r\\n    <span class=\\\"hottext-content\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Hottext = {\n        qtiClass: 'hottext',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span role=\\\"option\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var InlineChoice = {\n        qtiClass: 'inlineChoice',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return InlineChoice;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleAssociableChoice_AssociateInteraction = {\n        qtiClass: 'simpleAssociableChoice.associateInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleAssociableChoice_AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<th class=\\\"qti-choice qti-associableChoice qti-simpleAssociableChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</th>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleAssociableChoice_MatchInteraction = {\n        qtiClass: 'simpleAssociableChoice.matchInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleAssociableChoice_MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'services/features'], function (Handlebars, Helpers0, containerHelper, features) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            <input\\n                type=\\\"radio\\\"\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                tabindex=\\\"1\\\"\\n            >\\n            <span class=\\\"icon-radio\\\"></span>\\n            \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            <input\\n                type=\\\"checkbox\\\"\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                tabindex=\\\"1\\\"\\n            >\\n            <span class=\\\"icon-checkbox\\\"></span>\\n            \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"\\n    <label data-eliminable=\\\"container\\\" data-label=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Eliminate\", options) : helperMissing.call(depth0, \"__\", \"Eliminate\", options)))\n        + \"\\\">\\n        <span data-eliminable=\\\"trigger\\\" class=\\\"icon-checkbox\\\"></span>\\n    </label>\\n    \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-simpleChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"pseudo-label-box\\\">\\n        <label class=\\\"real-label\\\">\\n            \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.unique), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </label>\\n        <div class=\\\"label-box\\\">\\n            <div class=\\\"label-content clear\\\" contenteditable=\\\"false\\\" id=\\\"choice-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\n                \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                <svg class=\\\"overlay-answer-eliminator\\\">\\n                    <line x1=\\\"0\\\" y1=\\\"100%\\\" x2=\\\"100%\\\" y2=\\\"0\\\"/>\\n                    <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"100%\\\" y2=\\\"100%\\\"/>\\n                </svg>\\n            </div>\\n        </div>\\n    </div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowElimination), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleChoice_ChoiceInteraction = {\n        qtiClass: 'simpleChoice.choiceInteraction',\n        getContainer: containerHelper.get,\n        getData: function(choice, data) {\n            data.unique = parseInt(data.interaction.attributes.maxChoices) === 1;\n            data.allowElimination = features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination');\n            return data;\n        },\n        template: tpl\n    };\n\n    return SimpleChoice_ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleChoice_OrderInteraction = {\n        qtiClass: 'simpleChoice.orderInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleChoice_OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\n    'use strict';\n\n    var _requirejs = window.require;\n    var _defaultLoadingOptions = {\n        reload: false\n    };\n\n    var loadModuleConfig = function loadModuleConfig(manifest){\n        return new Promise(function(resolve, reject){\n            var requireConfigAliases = {};\n            var baseUrl;\n            var reqConfigs = [];\n            var modules = {};\n\n            if(!manifest || !manifest.runtime){\n                return reject('invalid manifest');\n            }\n\n            baseUrl = manifest.baseUrl;\n\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\n                _.forEach(manifest.runtime.config, function(pciConfig){\n                    if(_.isString(pciConfig)){\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\n                    }else{\n                        if(pciConfig.data){\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\n                        }else if(pciConfig.file){\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\n                        }\n                    }\n                });\n            }\n\n            require(reqConfigs, function(){\n\n                var runtimeModules = {};\n\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\n\n                if(manifest.model === 'IMSPCI'){\n\n                    modules = _.reduce(arguments, function(acc, conf){\n                        return _.defaults(acc, conf.paths || {});\n                    }, modules);\n\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\n                            runtimeModules[id] = paths;\n                        }\n                    });\n\n                    modules = _.merge(modules, runtimeModules);\n\n                    _.forEach(modules, function(paths, id){\n                        paths = _.isArray(paths) ? paths : [paths];\n                        requireConfigAliases[id] = _.map(paths, function(path){\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\n                        });\n                    });\n                }\n\n                resolve(requireConfigAliases);\n\n            }, reject);\n\n\n        });\n    };\n\n    /**\n     * Evaluate if the given object is a proper portable element provider\n     * @param {Object} provider\n     * @returns {Boolean}\n     */\n    var isPortableElementProvider = function isPortableElementProvider(provider){\n        return (provider && _.isFunction(provider.load));\n    };\n\n    return function portableElementRegistry(methods){\n\n        var _loaded = false;\n        var __providers = {};\n\n        /**\n         * The portable element registry instance\n         * @typedef {portableElementRegistry}\n         */\n        return eventifier(_.defaults(methods || {}, {\n            _registry : {},\n\n            /**\n             * Get a register portable element\n             * @param {String} typeIdentifier\n             * @param {String} version\n             * @returns {Object}\n             */\n            get : function get(typeIdentifier, version){\n\n                if(this._registry[typeIdentifier]){\n                    //check version\n                    if(version){\n                        return _.find(this._registry[typeIdentifier], {version : version});\n                    }else{\n                        //latest\n                        return _.last(this._registry[typeIdentifier]);\n                    }\n                }\n            },\n\n            /**\n             * Register a portable element provider\n             * @param moduleName\n             * @param {String|Object }provider - the portable provider object or module name\n             * @returns {portableElementRegistry}\n             */\n            registerProvider : function registerProvider(moduleName, provider){\n                __providers[moduleName] = isPortableElementProvider(provider) ? provider : null;\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Clear all previously registered providers\n             * @returns {portableElementRegistry}\n             */\n            resetProviders : function resetProviders(){\n                __providers = {};\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Load the providers\n             * @param {Object} [options]\n             * @param {Boolean} [options.reload] - force to reload the registered providers\n             * @returns {Promise}\n             */\n            loadProviders : function loadProviders(options){\n                var self = this;\n                var loadPromise;\n\n                if(_loaded && !options.reload){\n                    loadPromise = Promise.resolve([]);\n                } else {\n                    loadPromise = new Promise(function(resolve, reject) {\n                        var providerLoadingStack = [];\n                        _.forIn(__providers, function(provider, id){\n                            if(provider === null){\n                                providerLoadingStack.push(id);\n                            }\n                        });\n                        _requirejs(providerLoadingStack, function(){\n                            _.forEach([].slice.call(arguments), function(provider){\n                                if(isPortableElementProvider(provider)){\n                                    __providers[providerLoadingStack.shift()] = provider;\n                                }\n                            });\n                            resolve(__providers);\n                            _loaded = true;\n                            self.trigger('providersloaded', __providers);\n                        }, reject);\n                    });\n                }\n\n                return loadPromise;\n            },\n\n            /**\n             * Get all versions of all portable elements registered\n             * @returns {Object} - all portable elements and their versions\n             */\n            getAllVersions : function getAllVersions(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    all[id] = _.map(versions, 'version');\n                });\n                return all;\n            },\n\n            /**\n             * Get the runtime for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the runtime model\n             */\n            getRuntime : function getRuntime(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    return _.assign(portableElement.runtime, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        model : portableElement.model\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Get the creator model for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the creator model\n             */\n            getCreator : function getCreator(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement && portableElement.creator){\n                    return _.assign(portableElement.creator, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        response : portableElement.response,\n                        model : portableElement.model,\n                        xmlns : portableElement.xmlns\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Returned all enabled created from the registry\n             * @returns {Object} the collection of creators\n             */\n            getLatestCreators : function getLatestCreators(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    var lastVersion = _.last(versions);\n\n                    //check if the portable element is creatable:\n                    if(lastVersion.creator && lastVersion.creator.hook && lastVersion.enabled){\n                        all[id] = lastVersion;\n                    }\n                });\n                return all;\n            },\n\n            /**\n             * Get the baseUrl for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {String} the base url\n             */\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\n                var runtime = this.get(typeIdentifier, version);\n                if(runtime){\n                    return runtime.baseUrl;\n                }\n                return '';\n            },\n\n            /**\n             * Load the runtimes from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadRuntimes : function loadRuntimes(options){\n                var self = this;\n                var loadPromise;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                    loadPromise = self.loadProviders(options).then(function(providers){\n\n                        var loadStack = [];\n\n                        _.forEach(providers, function (provider){\n                            if(provider){//check that the provider is loaded\n                                loadStack.push(provider.load());\n                            }\n                        });\n\n                        //performs the loadings in parallel\n                            return Promise.all(loadStack).then(function (results){//TODO could remove one level of promise\n\n                                var configLoadingStack = [];\n\n                                //update registry\n                                self._registry = _.reduce(results, function (acc, _pcis){\n                                    return _.merge(acc, _pcis);\n                                }, self._registry || {});//incremental loading\n\n                                //pre-configuring the baseUrl of the portable element's source\n                                _.forIn(self._registry, function (versions, typeIdentifier){\n                                    if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                        return true;\n                                    }\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\n                                });\n\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\n                                        return _.merge(acc, paths);\n                                    }, {});\n\n                                    //save the required libs name => path to global require alias\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\n                                    _requirejs.config({paths : requireConfigAliases});\n                                });\n                            });\n\n                    });\n\n\n                loadPromise\n                    .then(function() {\n                        self.trigger('runtimesloaded');\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * Load the creators from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadCreators : function loadCreators(options){\n                var loadPromise;\n                var self = this;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                loadPromise = self.loadRuntimes(options).then(function(){\n                    var requiredCreatorHooks = [];\n\n                    _.forIn(self._registry, function (versions, typeIdentifier){\n                        var portableElementModel = self.get(typeIdentifier);//currently use the latest version only\n                        if(portableElementModel.creator && portableElementModel.creator.hook){\n                            if(portableElementModel.enabled){\n                                if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }else{\n                                if(!_.isArray(options.include) || _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }\n                            requiredCreatorHooks.push(portableElementModel.creator.hook.replace(/\\.js$/, ''));\n                        }\n                    });\n\n                    if(requiredCreatorHooks.length){\n                        return new Promise(function(resolve, reject){\n                            //@todo support caching?\n                            _requirejs(requiredCreatorHooks, function (){\n                                var creators = {};\n                                _.forEach(arguments, function (creatorHook){\n                                    var id = creatorHook.getTypeIdentifier();\n                                    var portableElementModel = self.get(id);\n                                    var i = _.findIndex(self._registry[id], {version : portableElementModel.version});\n                                    if(i < 0){\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + portableElementModel.version);\n                                    }else{\n                                        self._registry[id][i].creator.module = creatorHook;\n                                        creators[id] = creatorHook;\n                                    }\n                                });\n                                resolve(creators);\n                            }, reject);\n                        });\n                    }else{\n                        return Promise.resolve({});\n                    }\n\n                });\n\n                loadPromise\n                    .then(function(creators) {\n                        self.trigger('creatorsloaded', creators);\n                        return creators;\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * enable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            enable: function enable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = true;\n                }\n                return this;\n            },\n\n            /**\n             * disable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            disable: function disable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = false;\n                }\n                return this;\n            },\n\n            /**\n             * check is a portable element is enabled\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            isEnabled: function isEnabled(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                return (portableElement && portableElement.enabled === true);\n            }\n        }));\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Utility to retrieve and manipualte QTI Elements\n */\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n', 'services/features'], function ($, _, __, featuresService) {\n    'use strict';\n\n    const QtiElements = {\n        classes: {\n            //abstract classes:\n            itemBody: { parents: ['bodyElement'], contains: ['block'], abstract: true },\n            atomicBlock: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            atomicInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            simpleBlock: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['block'], abstract: true },\n            simpleInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            flowStatic: { parents: ['flow'], abstract: true },\n            blockStatic: { parents: ['block'], abstract: true },\n            inlineStatic: { parents: ['inline'], abstract: true },\n            flow: { parents: ['objectFlow'], abstract: true },\n            tableCell: { parents: ['bodyElement'], contains: ['flow'], abstract: true },\n            //html-derived qti elements:\n            caption: { parents: ['bodyElement'], contains: ['inline'], xhtml: true },\n            col: { parents: ['bodyElement'], xhtml: true },\n            colgroup: { parents: ['bodyElement'], contains: ['col'], xhtml: true },\n            div: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['flow'], xhtml: true },\n            dl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['dlElement'], xhtml: true },\n            dt: { parents: ['dlElement'], contains: ['inline'], xhtml: true },\n            dd: { parents: ['dlElement'], contains: ['flow'], xhtml: true },\n            hr: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], xhtml: true },\n            math: { parents: ['blockStatic', 'flowStatic', 'inlineStatic'], xhtml: true },\n            li: { parents: ['bodyElement'], contains: ['flow'], xhtml: true },\n            ol: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            ul: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            object: { parents: ['bodyElement', 'flowStatic', 'inlineStatic'], contains: ['objectFlow'], xhtml: true },\n            param: { parents: ['objectFlow'], xhtml: true },\n            table: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'],\n                xhtml: true\n            },\n            tbody: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            tfoot: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            thead: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            td: { parents: ['tableCell'], xhtml: true },\n            th: { parents: ['tableCell'], xhtml: true },\n            tr: { parents: ['bodyElement'], contains: ['tableCell'], xhtml: true },\n            a: { parents: ['simpleInline'], xhtml: true },\n            abbr: { parents: ['simpleInline'], xhtml: true },\n            acronym: { parents: ['simpleInline'], xhtml: true },\n            b: { parents: ['simpleInline'], xhtml: true },\n            big: { parents: ['simpleInline'], xhtml: true },\n            cite: { parents: ['simpleInline'], xhtml: true },\n            code: { parents: ['simpleInline'], xhtml: true },\n            dfn: { parents: ['simpleInline'], xhtml: true },\n            em: { parents: ['simpleInline'], xhtml: true },\n            i: { parents: ['simpleInline'], xhtml: true },\n            kbd: { parents: ['simpleInline'], xhtml: true },\n            q: { parents: ['simpleInline'], xhtml: true },\n            samp: { parents: ['simpleInline'], xhtml: true },\n            small: { parents: ['simpleInline'], xhtml: true },\n            span: { parents: ['simpleInline'], xhtml: true },\n            strong: { parents: ['simpleInline'], xhtml: true },\n            sub: { parents: ['simpleInline'], xhtml: true },\n            sup: { parents: ['simpleInline'], xhtml: true },\n            tt: { parents: ['simpleInline'], xhtml: true },\n            var: { parents: ['simpleInline'], xhtml: true },\n            blockquote: { parents: ['simpleBlock'], xhtml: true },\n            address: { parents: ['atomicBlock'], xhtml: true },\n            h1: { parents: ['atomicBlock'], xhtml: true },\n            h2: { parents: ['atomicBlock'], xhtml: true },\n            h3: { parents: ['atomicBlock'], xhtml: true },\n            h4: { parents: ['atomicBlock'], xhtml: true },\n            h5: { parents: ['atomicBlock'], xhtml: true },\n            h6: { parents: ['atomicBlock'], xhtml: true },\n            p: { parents: ['atomicBlock'], xhtml: true },\n            pre: { parents: ['atomicBlock'], xhtml: true },\n            img: { parents: ['atomicInline'], xhtml: true, attributes: ['src', 'alt', 'longdesc', 'height', 'width'] },\n            br: { parents: ['atomicInline'], xhtml: true },\n            //qti elements:\n            infoControl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], qti: true },\n            textRun: { parents: ['inlineStatic', 'flowstatic'], qti: true },\n            feedbackInline: { parents: ['simpleInline', 'feedbackElement'], qti: true },\n            feedbackBlock: { parents: ['simpleBlock'], qti: true },\n            rubricBlock: { parents: ['simpleBlock'], qti: true }, //strange qti 2.1 exception, marked as simpleBlock instead of\n            blockInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            inlineInteraction: { parents: ['inline', 'flow', 'interaction'], qti: true },\n            gap: { parents: ['inlineStatic'], qti: true },\n            hottext: { parents: ['flowstatic', 'inlineStatic'], contains: ['inlineStatic'], qti: true },\n            printedVariable: { parents: ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], qti: true },\n            prompt: { parents: ['bodyElement'], contains: ['inlineStatic'], qti: true },\n            templateElement: { parents: ['bodyElement'], qti: true },\n            templateBlock: {\n                parents: ['blockStatic', 'flowStatic', 'templateElement'],\n                contains: ['blockStatic'],\n                qti: true\n            },\n            templateInline: {\n                parents: ['inlineStatic', 'flowStatic', 'templateElement'],\n                contains: ['inlineStatic'],\n                qti: true\n            },\n            choiceInteraction: { parents: ['blockInteraction'], qti: true },\n            associateInteraction: { parents: ['blockInteraction'], qti: true },\n            orderInteraction: { parents: ['blockInteraction'], qti: true },\n            matchInteraction: { parents: ['blockInteraction'], qti: true },\n            hottextInteraction: { parents: ['blockInteraction'], qti: true },\n            gapMatchInteraction: { parents: ['blockInteraction'], qti: true },\n            mediaInteraction: { parents: ['blockInteraction'], qti: true },\n            sliderInteraction: { parents: ['blockInteraction'], qti: true },\n            uploadInteraction: { parents: ['blockInteraction'], qti: true },\n            drawingInteraction: { parents: ['blockInteraction'], qti: true },\n            graphicInteraction: { parents: ['blockInteraction'], qti: true },\n            hotspotInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicAssociateInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicOrderInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicGapMatchInteraction: { parents: ['graphicInteraction'], qti: true },\n            selectPointInteraction: { parents: ['graphicInteraction'], qti: true },\n            textEntryInteraction: { parents: ['stringInteraction', 'inlineInteraction'], qti: true },\n            extendedTextInteraction: { parents: ['stringInteraction', 'blockInteraction'], qti: true },\n            inlineChoiceInteraction: { parents: ['inlineInteraction'], qti: true },\n            endAttemptInteraction: { parents: ['inlineInteraction'], qti: true },\n            customInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            _container: { parents: ['block'], qti: true } //a pseudo class introduced in TAO\n        },\n\n        cache: { containable: {}, children: {}, parents: {} },\n\n        getAllowedContainersElements(qtiClass, $container) {\n            const classes = QtiElements.getAllowedContainers(qtiClass);\n            let jqSelector = '';\n            for (let i in classes) {\n                if (!classes[i].qti) {\n                    //html element:\n                    jqSelector += `${classes[i]}, `;\n                }\n            }\n\n            if (jqSelector) {\n                jqSelector = jqSelector.substring(0, jqSelector.length - 2);\n            }\n\n            return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\n        },\n\n        getAllowedContainers(qtiClass) {\n            let ret;\n            if (QtiElements.cache.containable[qtiClass]) {\n                ret = QtiElements.cache.containable[qtiClass];\n            } else {\n                ret = [];\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (model.contains) {\n                        const intersect = _.intersection(model.contains, parents);\n                        if (intersect.length) {\n                            if (!model.abstract) {\n                                ret.push(aClass);\n                            }\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\n                        }\n                    }\n                }\n                QtiElements.cache.containable[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getAllowedContents(qtiClass, recursive, checked) {\n            let ret = [];\n            checked = checked || {};\n\n            const model = QtiElements.classes[qtiClass];\n            if (model && model.contains) {\n                for (let i in model.contains) {\n                    const contain = model.contains[i];\n                    if (!checked[contain]) {\n                        checked[contain] = true;\n\n                        //qtiClass can contain everything defined as its contents\n                        ret.push(contain);\n\n                        //qtiClass can also contain subclass of its contents\n                        const children = QtiElements.getChildClasses(contain, true);\n                        for (let j in children) {\n                            const child = children[j];\n                            if (!checked[child]) {\n                                checked[child] = true;\n\n                                ret.push(child);\n\n                                //adding children allowed contents depends on the option \"recursive\"\n                                if (recursive) {\n                                    ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\n                                }\n                            }\n                        }\n\n                        //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\n                        }\n                    }\n                }\n            }\n\n            //qtiClass can contain all allowed contents of its parents:\n            const parents = QtiElements.getParentClasses(qtiClass, true);\n            for (let i in parents) {\n                ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\n            }\n\n            return _.uniq(ret);\n        },\n\n        isAllowedClass(qtiContainerClass, qtiContentClass) {\n            const allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\n            return _.indexOf(allowedClasses, qtiContentClass) >= 0;\n        },\n\n        getParentClasses(qtiClass, recursive) {\n            let ret;\n            if (recursive && QtiElements.cache.parents[qtiClass]) {\n                ret = QtiElements.cache.parents[qtiClass];\n            } else {\n                ret = [];\n                if (QtiElements.classes[qtiClass]) {\n                    ret = QtiElements.classes[qtiClass].parents;\n                    if (recursive) {\n                        for (let i in ret) {\n                            ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\n                        }\n                        ret = _.uniq(ret);\n                    }\n                }\n                QtiElements.cache.parents[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getChildClasses(qtiClass, recursive, type) {\n            let ret;\n            const cacheType = type ? type : 'all';\n            if (recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]) {\n                ret = QtiElements.cache.children[qtiClass][cacheType];\n            } else {\n                ret = [];\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (_.indexOf(model.parents, qtiClass) >= 0) {\n                        if (type) {\n                            if (model[type]) {\n                                ret.push(aClass);\n                            }\n                        } else {\n                            ret.push(aClass);\n                        }\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\n                        }\n                    }\n                }\n                if (!QtiElements.cache.children[qtiClass]) {\n                    QtiElements.cache.children[qtiClass] = {};\n                }\n                QtiElements.cache.children[qtiClass][cacheType] = ret;\n            }\n\n            return ret;\n        },\n\n        isBlock(qtiClass) {\n            return QtiElements.is(qtiClass, 'block');\n        },\n\n        isInline(qtiClass) {\n            return QtiElements.is(qtiClass, 'inline');\n        },\n\n        is(qtiClass, topClass) {\n            if (qtiClass === topClass) {\n                return true;\n            } else {\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                return _.indexOf(parents, topClass) >= 0;\n            }\n        },\n\n        /**\n         * Check wether an element is visible, using the feature viibility service\n         * @param {string} qtiClass - see the list of available classes\n         * @returns {boolean} true by default and false only if the element is explicitely registered as hidden\n         */\n        isVisible(qtiClass) {\n            if (this.is(qtiClass, 'customInteraction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/customInteraction/${qtiClass.replace(/Interaction$/, '').replace(/^customInteraction\\./, '')}`);\n            }\n            if (this.is(qtiClass, 'interaction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/interaction/${qtiClass.replace(/Interaction$/, '')}`);\n            }\n            return true;\n        },\n\n        /**\n         * Get the list of available elements for the authoring side\n         * The list of those element is statically defined, but we filter out elements that should be visible\n         * @returns {Object} the available elements\n         */\n        getAvailableAuthoringElements() {\n            const tagTitles = {\n                commonInteractions: __('Common Interactions'),\n                inlineInteractions: __('Inline Interactions'),\n                graphicInteractions: __('Graphic Interactions')\n            };\n\n            const authoringElements = {\n                choiceInteraction: {\n                    label: __('Choice Interaction'),\n                    description: __(\n                        'Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'\n                    ),\n                    icon: 'icon-choice',\n                    short: __('Choice'),\n                    qtiClass: 'choiceInteraction',\n                    tags: [tagTitles.commonInteractions, 'mcq'],\n                    group: 'common-interactions'\n                },\n                orderInteraction: {\n                    label: __('Order Interaction'),\n                    icon: 'icon-order',\n                    description: __('Arrange a list of choices in the correct order.'),\n                    short: __('Order'),\n                    qtiClass: 'orderInteraction',\n                    tags: [tagTitles.commonInteractions, 'ordering'],\n                    group: 'common-interactions'\n                },\n                associateInteraction: {\n                    label: __('Associate Interaction'),\n                    icon: 'icon-associate',\n                    description: __('Create pair(s) from a series of choices.'),\n                    short: __('Associate'),\n                    qtiClass: 'associateInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                matchInteraction: {\n                    label: __('Match Interaction'),\n                    icon: 'icon-match',\n                    description: __(\n                        'Create association(s) between two sets of choices displayed in a table (row and column).'\n                    ),\n                    short: __('Match'),\n                    qtiClass: 'matchInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                hottextInteraction: {\n                    label: __('Hottext Interaction'),\n                    icon: 'icon-hottext',\n                    description: __('Select one or more text parts (hottext) within a text.'),\n                    short: __('Hottext'),\n                    qtiClass: 'hottextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                gapMatchInteraction: {\n                    label: __('Gap Match Interaction'),\n                    icon: 'icon-gap-match',\n                    description: __(' Fill in the gaps in a text from a set of choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'gapMatchInteraction',\n                    tags: [tagTitles.commonInteractions, 'text', 'association'],\n                    group: 'common-interactions'\n                },\n                sliderInteraction: {\n                    label: __('Slider Interaction'),\n                    icon: 'icon-slider',\n                    description: __('Select a value within a numerical range.'),\n                    short: __('Slider'),\n                    qtiClass: 'sliderInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                extendedTextInteraction: {\n                    label: __('Extended Text Interaction'),\n                    icon: 'icon-extended-text',\n                    description: __(\n                        'Collect open-ended information in one or more text area(s) (strings or numeric values).'\n                    ),\n                    short: __('Extended Text'),\n                    qtiClass: 'extendedTextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                uploadInteraction: {\n                    label: __('File Upload Interaction'),\n                    icon: 'icon-upload',\n                    description: __('Upload a file (e.g. document, picture...) as a response.'),\n                    short: __('File Upload'),\n                    qtiClass: 'uploadInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                mediaInteraction: {\n                    label: __('Media Interaction'),\n                    icon: 'icon-media',\n                    description: __(\n                        'Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'\n                    ),\n                    short: __('Media'),\n                    qtiClass: 'mediaInteraction',\n                    tags: [tagTitles.commonInteractions, 'media'],\n                    group: 'common-interactions'\n                },\n                _container: {\n                    label: __('Text Block'),\n                    icon: 'icon-font',\n                    description: __(\n                        'Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'\n                    ),\n                    short: __('Block'),\n                    qtiClass: '_container',\n                    tags: [tagTitles.inlineInteractions, 'text'],\n                    group: 'inline-interactions'\n                },\n                inlineChoiceInteraction: {\n                    label: __('Inline Choice Interaction'),\n                    icon: 'icon-inline-choice',\n                    description: __('Select a choice from a drop-down list.'),\n                    short: __('Inline Choice'),\n                    qtiClass: 'inlineChoiceInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'mcq'],\n                    group: 'inline-interactions'\n                },\n                textEntryInteraction: {\n                    label: __('Text Entry Interaction'),\n                    icon: 'icon-text-entry',\n                    description: __(\n                        'Collect open-ended information in a short text input (strings or numeric values).'\n                    ),\n                    short: __('Text Entry'),\n                    qtiClass: 'textEntryInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'text'],\n                    group: 'inline-interactions'\n                },\n                endAttemptInteraction: {\n                    label: __('End Attempt Interaction'),\n                    icon: 'icon-end-attempt',\n                    description: __('Trigger the end of the item attempt.'),\n                    short: __('End Attempt'),\n                    qtiClass: 'endAttemptInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'button', 'submit'],\n                    group: 'inline-interactions'\n                },\n                hotspotInteraction: {\n                    label: __('Hotspot Interaction'),\n                    icon: 'icon-hotspot',\n                    description: __('Select one or more areas (hotspots) displayed on an picture.'),\n                    short: __('Hotspot'),\n                    qtiClass: 'hotspotInteraction',\n                    tags: [tagTitles.graphicInteractions, 'mcq'],\n                    group: 'graphic-interactions'\n                },\n                graphicOrderInteraction: {\n                    label: __('Graphic Order Interaction'),\n                    icon: 'icon-graphic-order',\n                    description: __('Order the areas (hotspots) displayed on a picture.'),\n                    short: __('Order'),\n                    qtiClass: 'graphicOrderInteraction',\n                    tags: [tagTitles.graphicInteractions, 'ordering'],\n                    group: 'graphic-interactions'\n                },\n                graphicAssociateInteraction: {\n                    label: __('Graphic Associate Interaction'),\n                    icon: 'icon-graphic-associate',\n                    description: __('Create association(s) between areas (hotspots) displayed on a picture.'),\n                    short: __('Associate'),\n                    qtiClass: 'graphicAssociateInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                graphicGapMatchInteraction: {\n                    label: __('Graphic Gap Match Interaction'),\n                    icon: 'icon-graphic-gap',\n                    description: __('Fill in the gaps on a picture with a set of image choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'graphicGapMatchInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                selectPointInteraction: {\n                    label: __('Select Point Interaction'),\n                    icon: 'icon-select-point',\n                    description: __('Position one or more points on a picture (response areas are not displayed).'),\n                    short: __('Select Point'),\n                    qtiClass: 'selectPointInteraction',\n                    tags: [tagTitles.graphicInteractions],\n                    group: 'graphic-interactions'\n                }\n            };\n\n            //filter out hidden elements\n            const availableElements = {};\n            for (const [elementId, element] of Object.entries(authoringElements)) {\n                if (this.isVisible(elementId)) {\n                    availableElements[elementId] = element;\n                }\n            }\n            return availableElements;\n        }\n    };\n\n    return QtiElements;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2022 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\n    'lodash',\n    'i18n',\n    'taoQtiItem/portableElementRegistry/factory/factory',\n    'taoQtiItem/qtiCreator/helper/qtiElements'\n], function (_, __, portableElementRegistry, qtiElements) {\n    'use strict';\n\n    /**\n     * Create a new interaction registry instance\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\n     *\n     * @returns {Object} registry instance\n     */\n    return function customInteractionRegistry() {\n        return portableElementRegistry({\n            /**\n             * Get the authoring information for a given custom interaction\n             * @param {string} typeIdentifier - the interaction type identifier\n             * @param {Object} [options]\n             * @param {string|number} [options.version] - the interaction version\n             * @param {boolean} [options.enabledOnly] - to only get interaction enabled && visible\n             * @returns {Object} the authoring info\n             */\n            getAuthoringData(typeIdentifier, options = {}) {\n                options = _.defaults(options || {}, { version: 0, enabledOnly: false });\n                const pciModel = this.get(typeIdentifier, options.version);\n                const qtiClass = `customInteraction.${pciModel.typeIdentifier}`;\n                if (\n                    pciModel &&\n                    pciModel.creator &&\n                    pciModel.creator.hook &&\n                    pciModel.creator.icon &&\n                    ((pciModel.enabled && qtiElements.isVisible(qtiClass)) || !options.enabledOnly)\n                ) {\n                    return {\n                        label: pciModel.label, //currently no translation available\n                        icon: pciModel.creator.icon.replace(new RegExp(`^${typeIdentifier}/`), pciModel.baseUrl),\n                        short: pciModel.short,\n                        description: pciModel.description,\n                        qtiClass, //custom interaction is block type\n                        tags: _.union([__('Custom Interactions')], pciModel.tags),\n                        group: 'custom-interactions'\n                    };\n                }\n            }\n        }).on('creatorsloaded', function () {\n            const creators = this.getLatestCreators();\n            _.forEach(creators, function (creator, typeIdentifier) {\n                qtiElements.classes[`customInteraction.${typeIdentifier}`] = {\n                    parents: ['customInteraction'],\n                    qti: true\n                };\n            });\n        });\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of ciRegistry\n    var registry = ciRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.forEach(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory'\n], function (_, portableElementRegistry){\n    'use strict';\n\n    /**\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\n     *\n     * @returns {Object} registry instance\n     */\n    return function infoControlRegistry(){\n        return portableElementRegistry();\n    }\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of icRegistry\n    var registry = icRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.forEach(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\n    'taoQtiItem/portableElementRegistry/ciRegistry',\n    'taoQtiItem/portableElementRegistry/icRegistry'\n], function (ciRegistry, icRegistry) {\n    'use strict';\n\n    function getBaseUrlByIdentifier(typeIdentifier) {\n        if (ciRegistry.get(typeIdentifier)) {\n            return ciRegistry.getBaseUrl(typeIdentifier);\n        }\n        if (icRegistry.get(typeIdentifier)) {\n            return icRegistry.getBaseUrl(typeIdentifier);\n        }\n        return typeIdentifier;\n    }\n\n    //strategy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\n    return {\n        name: 'portableElementLocation',\n        handle: function handlePortableElementLocation(url) {\n\n            if (url.file === url.path) {\n                return getBaseUrlByIdentifier(url.file);\n            } else if (url.source === url.relative) {\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\n                    if (runtimeLocation) {\n                        return runtimeLocation + '/' + relPath;\n                    }\n                    return fullmatch;\n                });\n            }\n        }\n    };\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var itemThemes = themes.get('items');\n    var moduleConfig = module.config();\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: function handleTheme(url) {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base ||\n                            (itemThemes.available && itemThemes.available.map(val => val.path).includes(url.path)))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    var locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        choiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        hottext: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        gapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        mediaInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        uploadInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        graphicAssociateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        associableHotspot: false,\n        customInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    var config = {\n        name: 'commonRenderer',\n        locations: locations,\n        options: {\n            assetManager: assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Container',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<div class=\\\"qti-block\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      return buffer;\n      }\n\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data},helper ? helper.call(depth0, (depth0 && depth0.contentModel), \"blockStatic\", options) : helperMissing.call(depth0, \"equal\", (depth0 && depth0.contentModel), \"blockStatic\", options));\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Container = {\n        qtiClass: '_container',\n        template: tpl\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figcaption',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figcaption\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figcaption>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Figcaption = {\n        qtiClass: 'figcaption',\n        template: tpl\n    };\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figure',['context', 'lodash', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'handlebars', 'lib/handlebars/helpers', 'ui/mediaEditor/plugins/mediaAlignment/helper'], function (context, _, containerHelper, Handlebars, Helpers0, helper) { 'use strict';\n\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figure data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figure>\\n\";\n      return buffer;\n      });\n    function imageTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<figure \\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figure>\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-figure=\\\"true\\\">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.showFigure), {hash:{},inverse:self.program(6, program6, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\";\n      return buffer;\n      });\n    function widgetTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022-2023 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    const DISABLE_FIGURE_WIDGET = context.featureFlags['FEATURE_FLAG_DISABLE_FIGURE_WIDGET'];\n\n    var Figure = {\n        qtiClass: 'figure',\n        getContainer: containerHelper.get,\n        template: DISABLE_FIGURE_WIDGET ? imageTpl : widgetTpl,\n        getData(elem, data) {\n            if (DISABLE_FIGURE_WIDGET) {\n                return data;\n            }\n\n            let showFigure = false;\n            if (data.attributes.class && [helper.FLOAT_LEFT_CLASS, helper.FLOAT_RIGHT_CLASS, helper.CENTER_CLASS].includes(data.attributes.class)) {\n                showFigure = true;\n            } else {\n                _.some(elem.bdy['elements'], childElement => {\n                    if (childElement.serial.includes('figcaption')) {\n                        showFigure = true;\n                        data.attributes.class = 'wrap-left';\n                        elem.attributes.class = 'wrap-left';\n                    }\n                });\n            }\n            data.attributes.showFigure = showFigure;\n            elem.attributes.showFigure = showFigure;\n            return data;\n        },\n        render(figure) {\n            const $figure = containerHelper.get(figure);\n            const $img = $figure.find('img');\n            if ($img.length && (DISABLE_FIGURE_WIDGET || $figure.prop('tagName') === 'FIGURE')) {\n                // move width from image to figure\n                $figure.css({ width: $img.attr('width') });\n                $img.attr('width', '100%');\n            }\n        }\n    };\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Img',['ui/waitForMedia', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (waitForMedia, Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-describedby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-hidden=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-label=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-labelledby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-live=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" role=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<img\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"img\\\"\\n    src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.src)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n    alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.alt)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby']), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden']), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label']), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby']), {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live']), {hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role), {hash:{},inverse:self.noop,fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Img = {\n        qtiClass: 'img',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(img, data) {\n            return new Promise(function(resolve, reject) {\n                containerHelper.get(img).waitForMedia(resolve);\n            });\n        }\n    };\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Include',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-include\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Include = {\n        qtiClass: 'include',\n        template: tpl\n    };\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',['jquery', 'lodash', 'i18n', 'ui/hider', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'interact', 'ui/interactUtils'], function ($$1, _, __, hider, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, sizeAdapter, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    class=\\\"qti-interaction qti-blockInteraction qti-associateInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"associateInteraction\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <ul class=\\\"choice-area clearfix  none block-listing solid horizontal source\\\">\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </ul>\\n    <ul class=\\\"result-area none target clearfix\\\">\\n    </ul>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"hidden incomplete-pair\";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"target lft\\\"></div>\\n    <div class=\\\"target rgt\\\"></div>\\n</li>\\n\";\n      return buffer;\n      });\n    function pairTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const setChoice = function (interaction, $choice, $target) {\n        const $container = containerHelper.get(interaction);\n        const choiceSerial = $choice.data('serial');\n        const choice = interaction.getChoice(choiceSerial);\n        let usage = $choice.data('usage') || 0;\n\n        if (!choiceSerial) {\n            throw new Error('empty choice serial');\n        }\n\n        //to track number of times a choice is used in a pair\n        usage++;\n        $choice.data('usage', usage);\n\n        const _setChoice = function () {\n            $target.data('serial', choiceSerial).html($choice.html()).addClass('filled');\n\n            if (!interaction.responseMappingMode && choice.attr('matchMax') && usage >= choice.attr('matchMax')) {\n                $choice.addClass('deactivated');\n            }\n        };\n\n        if ($target.siblings('div').hasClass('filled')) {\n            const $resultArea = $$1('.result-area', $container);\n            const $pair = $target.parent();\n            const thisPairSerial = [$target.siblings('div').data('serial'), choiceSerial];\n            let $otherRepeatedPair = $$1();\n\n            //check if it is not a repeating association!\n            $resultArea\n                .children()\n                .not($pair)\n                .each(function () {\n                    let $otherPair = $$1(this).children('.filled');\n                    if ($otherPair.length === 2) {\n                        let otherPairSerial = [$$1($otherPair[0]).data('serial'), $$1($otherPair[1]).data('serial')];\n                        if (_.intersection(thisPairSerial, otherPairSerial).length === 2) {\n                            $otherRepeatedPair = $otherPair;\n                            return false;\n                        }\n                    }\n                });\n\n            if ($otherRepeatedPair.length === 0) {\n                //no repeated pair, so allow the choice to be set:\n                _setChoice();\n\n                //trigger pair made event\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type: 'added',\n                    $pair: $pair,\n                    choices: thisPairSerial\n                });\n\n                instructionMgr.validateInstructions(interaction, { choice: $choice, target: $target });\n\n                if (interaction.responseMappingMode || parseInt(interaction.attr('maxAssociations')) === 0) {\n                    $pair.removeClass('incomplete-pair');\n\n                    //append new pair option?\n                    if (!$resultArea.children('.incomplete-pair').length) {\n                        $resultArea.append(pairTpl({ empty: true }));\n                        $resultArea.children('.incomplete-pair').fadeIn(600, function () {\n                            hider.show(this);\n                        });\n                    }\n                }\n            } else {\n                //repeating pair: show it:\n\n                //@todo add a notification message here in warning\n                $otherRepeatedPair.css('border', '1px solid orange');\n                $target.html(__('identical pair already exists')).css({\n                    color: 'orange',\n                    border: '1px solid orange'\n                });\n                setTimeout(function () {\n                    $otherRepeatedPair.removeAttr('style');\n                    $target.empty().css({ color: '', border: '' });\n                }, 2000);\n            }\n        } else {\n            _setChoice();\n        }\n    };\n\n    const unsetChoice = function (interaction, $filledChoice, animate, triggerChange) {\n        const $container = containerHelper.get(interaction);\n        const choiceSerial = $filledChoice.data('serial');\n        const $choice = $container.find('.choice-area [data-serial=' + choiceSerial + ']');\n        const $parent = $filledChoice.parent();\n        const $sibling = $container.find(\n            '.choice-area [data-serial=' + $filledChoice.siblings('.target').data('serial') + ']'\n        );\n        const isNumberOfMaxAssociationsZero = parseInt(interaction.attr('maxAssociations')) === 0;\n        let usage = $choice.data('usage') || 0;\n\n        //decrease the  use for this choice\n        usage--;\n\n        $choice.data('usage', usage).removeClass('deactivated');\n\n        $filledChoice.removeClass('filled').removeData('serial').empty();\n\n        if (!interaction.swapping) {\n            if (triggerChange !== false) {\n                //a pair with one single element is not valid, so consider the response to be modified:\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type: 'removed',\n                    $pair: $filledChoice.parent()\n                });\n                instructionMgr.validateInstructions(interaction, { choice: $choice });\n            }\n\n            // if we are removing the sibling too, update its usage\n            // but only if number of maximum assotiations is zero\n            if (isNumberOfMaxAssociationsZero) {\n                $sibling.data('usage', $sibling.data('usage') - 1).removeClass('deactivated');\n            }\n\n            //completely empty pair:\n            if (\n                !$choice.siblings('div').hasClass('filled') &&\n                (isNumberOfMaxAssociationsZero || interaction.responseMappingMode)\n            ) {\n                //shall we remove it?\n                if (!$parent.hasClass('incomplete-pair')) {\n                    if (animate) {\n                        $parent.addClass('removing').fadeOut(500, function () {\n                            $$1(this).remove();\n                        });\n                    } else {\n                        $parent.remove();\n                    }\n                }\n            }\n        }\n    };\n\n    const getChoice = function (interaction, identifier) {\n        const $container = containerHelper.get(interaction);\n\n        //warning: do not use selector data-identifier=identifier because data-identifier may change dynamically\n        const choice = interaction.getChoiceByIdentifier(identifier);\n        if (!choice) {\n            throw new Error('cannot find a choice with the identifier : ' + identifier);\n        }\n        return $$1('.choice-area [data-serial=' + choice.getSerial() + ']', $container);\n    };\n\n    const renderEmptyPairs = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const max = parseInt(interaction.attr('maxAssociations'));\n        const $resultArea = $$1('.result-area', $container);\n\n        if (interaction.responseMappingMode || max === 0) {\n            $resultArea.append(pairTpl({ empty: true }));\n            hider.show($resultArea.children('.incomplete-pair'));\n        } else {\n            for (let i = 0; i < max; i++) {\n                $resultArea.append(pairTpl());\n            }\n        }\n    };\n\n    /**\n     * Builds a scroll observer that will make sure the dragged element keeps an accurate positioning\n     * @param {jQuery} $scrollContainer\n     * @returns {scrollObserver}\n     */\n    const scrollObserverFactory = function scrollObserverFactory($scrollContainer) {\n        let currentDraggable = null;\n        let beforeY = 0;\n        let beforeX = 0;\n        let afterY = 0;\n        let afterX = 0;\n\n        // reset the scroll observer context\n        function resetScrollObserver() {\n            currentDraggable = null;\n            beforeY = 0;\n            beforeX = 0;\n            afterY = 0;\n            afterX = 0;\n        }\n\n        // keep the position of the dragged element accurate with the scroll position\n        function onScrollCb() {\n            let x;\n            let y;\n            if (currentDraggable) {\n                beforeY = afterY;\n                beforeX = afterX;\n\n                if (afterY === 0 && beforeY === 0) beforeY = this.scrollTop;\n                if (afterX === 0 && beforeX === 0) beforeX = this.scrollLeft;\n\n                afterY = this.scrollTop;\n                afterX = this.scrollLeft;\n\n                y = (parseInt(currentDraggable.getAttribute('data-y'), 10) || 0) + (afterY - beforeY);\n                x = (parseInt(currentDraggable.getAttribute('data-x'), 10) || 0) + (afterX - beforeX);\n\n                // translate the element\n                currentDraggable.style.webkitTransform = currentDraggable.style.transform = `translate(${x}px, ${y}px)`;\n\n                // update the position attributes\n                currentDraggable.setAttribute('data-x', x);\n                currentDraggable.setAttribute('data-y', y);\n            }\n        }\n\n        // find the scroll container within the parents if any\n        $scrollContainer.parents().each(function findScrollContainer() {\n            const $el = $$1(this);\n            const ovf = $el.css('overflow');\n            if (ovf !== 'hidden' && ovf !== 'visible') {\n                $scrollContainer = $el;\n                return false;\n            }\n        });\n\n        // make sure the drop zones will follow the scroll\n        interact.dynamicDrop(true);\n\n        /**\n         * @typedef {Object} scrollObserver\n         */\n        return {\n            /**\n             * Gets the scroll container\n             * @returns {jQuery}\n             */\n            getScrollContainer: function getScrollContainer() {\n                return $scrollContainer;\n            },\n\n            /**\n             * Initializes the scroll observer while dragging a choice\n             * @param {HTMLElement|jQuery} draggedElement\n             */\n            start: function start(draggedElement) {\n                resetScrollObserver();\n                currentDraggable = draggedElement instanceof $$1 ? draggedElement.get(0) : draggedElement;\n                $scrollContainer.on('scroll.scrollObserver', _.throttle(onScrollCb, 50));\n            },\n\n            /**\n             * Tears down the the scroll observer once the dragging is done\n             */\n            stop: function stop() {\n                $scrollContainer.off('.scrollObserver');\n                resetScrollObserver();\n            }\n        };\n    };\n    const _getRawResponse = function (interaction) {\n        const response = [];\n        const $container = containerHelper.get(interaction);\n        $$1('.result-area>li', $container).each(function () {\n            const pair = [];\n            $$1(this)\n                .find('div')\n                .each(function () {\n                    const serial = $$1(this).data('serial');\n                    if (serial) {\n                        const choice = interaction.getChoice(serial);\n                        if (choice) {\n                            pair.push(choice.id());\n                        }\n                    }\n                });\n            if (pair.length === 2) {\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n    const _setInstructions = function (interaction) {\n        const min = parseInt(interaction.attr('minAssociations'), 10);\n        const max = parseInt(interaction.attr('maxAssociations'), 10);\n\n        //infinite association:\n        if (min === 0) {\n            if (max === 0) {\n                instructionMgr.appendInstruction(interaction, __('You may make as many association pairs as you want.'));\n            }\n        } else {\n            if (max === 0) {\n                instructionMgr.appendInstruction(interaction, __('The maximum number of association is unlimited.'));\n            }\n            //the max value is implicit since the appropriate number of empty pairs have already been created\n            let msg = __('You need to make') + ' ';\n            msg += min > 1 ? __('at least') + ' ' + min + ' ' + __('association pairs') : __('one association pair');\n            instructionMgr.appendInstruction(interaction, msg, function () {\n                if (_getRawResponse(interaction).length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    const render = function (interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const $choiceArea = $container.find('.choice-area');\n            const $resultArea = $container.find('.result-area');\n\n            let $activeChoice = null;\n            let scrollObserver = null;\n\n            let isDragAndDropEnabled;\n            let dragOptions;\n            let dropOptions;\n            let scaleX, scaleY;\n\n            let $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\n\n            let choiceSelector = $choiceArea.selector + ' >li';\n            let resultSelector = $resultArea.selector + ' >li>div';\n            let binSelector = $container.selector + ' .remove-choice';\n\n            let _getChoice = function (serial) {\n                return $choiceArea.find('[data-serial=' + serial + ']');\n            };\n\n            /**\n             * @todo Tried to store $resultArea.find[...] in a variable but this fails\n             * @param $choice\n             * @param $target\n             * @private\n             */\n            const _setChoice = function ($choice, $target) {\n                setChoice(interaction, $choice, $target);\n                sizeAdapter.adaptSize(\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\n                );\n            };\n\n            const _resetSelection = function () {\n                if ($activeChoice) {\n                    $resultArea.find('.remove-choice').remove();\n                    $activeChoice.removeClass('active');\n                    $container.find('.empty').removeClass('empty');\n                    $activeChoice = null;\n                }\n            };\n\n            const _unsetChoice = function ($choice) {\n                unsetChoice(interaction, $choice, true);\n                sizeAdapter.adaptSize(\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\n                );\n            };\n\n            const _isInsertionMode = function () {\n                return $activeChoice && $activeChoice.data('identifier');\n            };\n\n            const _isModeEditing = function () {\n                return $activeChoice && !$activeChoice.data('identifier');\n            };\n            const _activateChoice = function ($choice) {\n                _resetSelection();\n                $activeChoice = $choice;\n                $choice.addClass('active');\n                $resultArea.find('>li>.target').addClass('empty');\n            };\n\n            const _handleChoiceActivate = function ($target) {\n                if ($target.hasClass('deactivated')) {\n                    return;\n                }\n\n                if (_isModeEditing()) {\n                    //swapping:\n                    interaction.swapping = true;\n                    _unsetChoice($activeChoice);\n                    _setChoice($target, $activeChoice);\n                    _resetSelection();\n                    interaction.swapping = false;\n                } else {\n                    if ($target.hasClass('active')) {\n                        _resetSelection();\n                    } else {\n                        _activateChoice($target);\n                    }\n                }\n            };\n            const _activateResult = function ($target) {\n                const targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $resultArea\n                    .find('>li>.target')\n                    .filter(function () {\n                        return $$1(this).data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                $choiceArea\n                    .find('>li:not(.deactivated)')\n                    .filter(function () {\n                        return $$1(this).data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n            };\n\n            const _handleResultActivate = function ($target) {\n                let choiceSerial,\n                    targetSerial = $target.data('serial');\n\n                if (_isInsertionMode()) {\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if (targetSerial !== choiceSerial) {\n                        if ($target.hasClass('filled')) {\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\n                        }\n                        //set choices:\n                        if (targetSerial) {\n                            _unsetChoice($target);\n                        }\n                        _setChoice($activeChoice, $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n                } else if (_isModeEditing()) {\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if (targetSerial !== choiceSerial) {\n                        if ($target.hasClass('filled') || $activeChoice.siblings('div')[0] === $target[0]) {\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\n                        }\n\n                        _unsetChoice($activeChoice);\n                        if (targetSerial) {\n                            //swapping:\n                            _unsetChoice($target);\n                            _setChoice(_getChoice(targetSerial), $activeChoice);\n                        }\n                        _setChoice(_getChoice(choiceSerial), $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n                } else if (targetSerial) {\n                    _activateResult($target);\n                    $target.append($bin);\n                }\n            };\n\n            // Point & click handlers\n\n            interact($container.selector).on('tap', function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                _resetSelection();\n            });\n\n            interact($choiceArea.selector + ' >li').on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _handleChoiceActivate($target);\n                e.preventDefault();\n            });\n\n            interact($resultArea.selector + ' >li>div').on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _handleResultActivate($target);\n                e.preventDefault();\n            });\n\n            interact(binSelector).on('tap', function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _unsetChoice($activeChoice);\n                _resetSelection();\n                e.preventDefault();\n            });\n\n            if (!interaction.responseMappingMode) {\n                _setInstructions(interaction);\n            }\n\n            // Drag & drop handlers\n\n            if (self.getOption && self.getOption('enableDragAndDrop') && self.getOption('enableDragAndDrop').associate) {\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').associate;\n            }\n\n            function _iFrameDragFix(draggableSelector, target) {\n                interactUtils.iFrameDragFixOn(function () {\n                    let $activeDrop = $$1(resultSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(resultSelector).fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    $activeDrop = $$1(choiceSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(choiceSelector + '.empty').fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    interact(draggableSelector).fire({\n                        type: 'dragend',\n                        target: target\n                    });\n                });\n            }\n\n            if (isDragAndDropEnabled) {\n                scrollObserver = scrollObserverFactory($container);\n                dragOptions = {\n                    inertia: false,\n                    autoScroll: {\n                        container: scrollObserver.getScrollContainer().get(0)\n                    },\n                    restrict: {\n                        restriction: '.qti-interaction',\n                        endOnly: false,\n                        elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                    }\n                };\n\n                // makes choices draggables\n                interact(choiceSelector + ':not(.deactivated)')\n                    .draggable(\n                        _.defaults(\n                            {\n                                onstart: function (e) {\n                                    let $target = $$1(e.target);\n                                    let scale;\n                                    $target.addClass('dragged');\n                                    _activateChoice($target);\n                                    _iFrameDragFix(choiceSelector + ':not(.deactivated)', e.target);\n                                    scale = interactUtils.calculateScale(e.target);\n                                    scaleX = scale[0];\n                                    scaleY = scale[1];\n\n                                    scrollObserver.start($activeChoice);\n                                },\n                                onmove: function (e) {\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                                },\n                                onend: function (e) {\n                                    let $target = $$1(e.target);\n                                    $target.removeClass('dragged');\n                                    // The reason of placing delay here is that there was timing conflict between \"draggable\" and \"drag-zone\" elements.\n                                    _.delay(function () {\n                                        _resetSelection();\n                                    });\n                                    interactUtils.restoreOriginalPosition($target);\n                                    interactUtils.iFrameDragFixOff();\n\n                                    scrollObserver.stop();\n                                }\n                            },\n                            dragOptions\n                        )\n                    )\n                    .styleCursor(false);\n\n                // makes results draggables\n                interact(resultSelector + '.filled')\n                    .draggable(\n                        _.defaults(\n                            {\n                                onstart: function (e) {\n                                    let $target = $$1(e.target);\n                                    let scale;\n                                    $target.addClass('dragged');\n                                    _resetSelection();\n                                    _activateResult($target);\n                                    _iFrameDragFix(resultSelector + '.filled', e.target);\n                                    scale = interactUtils.calculateScale(e.target);\n                                    scaleX = scale[0];\n                                    scaleY = scale[1];\n\n                                    scrollObserver.start($activeChoice);\n                                },\n                                onmove: function (e) {\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                                },\n                                onend: function (e) {\n                                    let $target = $$1(e.target);\n                                    $target.removeClass('dragged');\n\n                                    interactUtils.restoreOriginalPosition($target);\n\n                                    if ($activeChoice) {\n                                        _unsetChoice($activeChoice);\n                                    }\n                                    _resetSelection();\n\n                                    interactUtils.iFrameDragFixOff();\n\n                                    scrollObserver.stop();\n                                }\n                            },\n                            dragOptions\n                        )\n                    )\n                    .styleCursor(false);\n\n                dropOptions = {\n                    overlap: 'pointer',\n                    ondragenter: function (e) {\n                        $$1(e.target).addClass('dropzone');\n                        $$1(e.relatedTarget).addClass('droppable');\n                    },\n                    ondragleave: function (e) {\n                        $$1(e.target).removeClass('dropzone');\n                        $$1(e.relatedTarget).removeClass('droppable');\n                    }\n                };\n\n                // makes hotspots droppables\n                interact(resultSelector).dropzone(\n                    _.defaults(\n                        {\n                            ondrop: function (e) {\n                                this.ondragleave(e);\n                                _handleResultActivate($$1(e.target));\n                            }\n                        },\n                        dropOptions\n                    )\n                );\n\n                // makes available choices droppables\n                interact(choiceSelector + '.empty').dropzone(\n                    _.defaults(\n                        {\n                            ondrop: function (e) {\n                                this.ondragleave(e);\n                                _handleChoiceActivate($$1(e.target));\n                            }\n                        },\n                        dropOptions\n                    )\n                );\n            }\n\n            // interaction init\n\n            renderEmptyPairs(interaction);\n\n            sizeAdapter.adaptSize($$1('.result-area .target, .choice-area .qti-choice', $container));\n            resolve();\n        });\n    };\n\n    const resetResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //destroy selected choice:\n        $container.find('.result-area .active').each(function () {\n            interactUtils.tapOn(this);\n        });\n\n        $$1('.result-area>li>div', $container).each(function () {\n            unsetChoice(interaction, $$1(this), false, false);\n        });\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    const _setPairs = function (interaction, pairs) {\n        const $container = containerHelper.get(interaction);\n        let addedPairs = 0;\n        let $emptyPair = $$1('.result-area>li:first', $container);\n        if (pairs && interaction.getResponseDeclaration().attr('cardinality') === 'single' && pairs.length) {\n            pairs = [pairs];\n        }\n        _.forEach(pairs, function (pair) {\n            if ($emptyPair.length) {\n                let $divs = $emptyPair.children('div');\n                setChoice(interaction, getChoice(interaction, pair[0]), $$1($divs[0]));\n                setChoice(interaction, getChoice(interaction, pair[1]), $$1($divs[1]));\n                addedPairs++;\n                $emptyPair = $emptyPair.next('li');\n            } else {\n                //the number of pairs exceeds the maximum allowed pairs: break;\n                return false;\n            }\n        });\n\n        return addedPairs;\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        _setPairs(interaction, pciResponse.unserialize(response, interaction));\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' >li').unset();\n        interact($container.find('.result-area').selector + ' >li>div').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        $$1('.result-area', $container).empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        let $container;\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function (a, b) {\n                        let aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        let bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        let $container;\n        let state = {};\n        let response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the associate interaction\n     * @exports qtiCommonRenderer/renderers/interactions/AssociateInteraction\n     */\n    var AssociateInteraction = {\n        qtiClass: 'associateInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n\n        renderEmptyPairs: renderEmptyPairs\n    };\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',['lodash', 'jquery', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'util/adaptSize', 'services/features'], function (_, $$1, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, sizeAdapter, adaptSize, features) { 'use strict';\n\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n  sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n  adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n  features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    \n    return \" allow-elimination-visible\";\n    }\n\n  function program7(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program9(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program11(depth0,data) {\n    \n    \n    return \" horizontal\";\n    }\n\n  function program13(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.listStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.listStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program15(depth0,data) {\n    \n    var stack1;\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n    buffer += \"<div\\n  \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  class=\\\"qti-interaction qti-blockInteraction qti-choiceInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowEliminationVisible), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\"\\n  data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"\\n  data-qti-class=\\\"choiceInteraction\\\"\\n  \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n>\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <ol\\n    class=\\\"plain block-listing solid choice-area\";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.listStyle), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\"\\n    aria-labelledby=\\\"\";\n    if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"\\n  >\\n      \";\n    options={hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data};\n    if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  </ol>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014-2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  const KEY_CODE_SPACE = 32;\n  const KEY_CODE_ENTER = 13;\n  const KEY_CODE_LEFT = 37;\n  const KEY_CODE_UP = 38;\n  const KEY_CODE_RIGHT = 39;\n  const KEY_CODE_DOWN = 40;\n\n  /**\n   * Propagate the checked state to the actual input.\n   * @type {Function}\n   * @param {jQuery} $choiceBox - list element with the class `.qti-choice`\n   * @param {Boolean} state\n   * @private\n   */\n  const _triggerInput = function _triggerInput($choiceBox, state) {\n      const $input = $choiceBox.find('input:radio,input:checkbox').not('[disabled]').not('.disabled');\n      const $choiceBoxes = $choiceBox.add($choiceBox.siblings());\n\n      if (!$input.length) {\n          return;\n      }\n\n      if (!_.isBoolean(state)) {\n          state = !$input.prop('checked');\n      }\n\n      $input.prop('checked', state);\n      $input.trigger('change');\n\n      $choiceBoxes.removeClass('user-selected');\n      $choiceBoxes\n          .find('input:checked')\n          .not('[disabled]')\n          .not('.disabled')\n          .parents('.qti-choice')\n          .addClass('user-selected');\n  };\n\n  /**\n   * 'pseudo-label' is technically a div that behaves like a label.\n   * This allows the usage of block elements inside the fake label\n   *\n   * @private\n   * @param {Object} interaction - the interaction instance\n   * @param {jQueryElement} $container\n   */\n  const _pseudoLabel = function _pseudoLabel(interaction, $container) {\n      const inputSelector =\n          '.qti-choice input:radio:not([disabled]):not(.disabled), .qti-choice input:checkbox:not([disabled]):not(.disabled)';\n      $container.off('.commonRenderer');\n\n      $container\n          .on('keydown.commonRenderer.keyNavigation', inputSelector, function (e) {\n              const $qtiChoice = $$1(this).closest('.qti-choice');\n              const keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n              if (keyCode === KEY_CODE_UP || keyCode === KEY_CODE_LEFT) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  $qtiChoice\n                      .prev('.qti-choice')\n                      .find('input:radio,input:checkbox')\n                      .not('[disabled]')\n                      .not('.disabled')\n                      .focus();\n              } else if (keyCode === KEY_CODE_DOWN || keyCode === KEY_CODE_RIGHT) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  $qtiChoice\n                      .next('.qti-choice')\n                      .find('input:radio,input:checkbox')\n                      .not('[disabled]')\n                      .not('.disabled')\n                      .focus();\n              }\n          })\n          .on('keyup.commonRenderer.keyNavigation', inputSelector, function (e) {\n              const keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n              if (keyCode === KEY_CODE_SPACE || keyCode === KEY_CODE_ENTER) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  _triggerInput($$1(this).closest('.qti-choice'));\n              }\n          });\n\n      $container.on('click.commonRenderer', '.qti-choice', function (e) {\n          const $choiceBox = $$1(this);\n          let state;\n          const eliminator = e.target.dataset && e.target.dataset.eliminable;\n          const input = this.querySelector('.real-label > input');\n\n          // if the click has been triggered by a keyboard check, prevent this listener to cancel this check\n          if (e.originalEvent && $$1(e.originalEvent.target).is('input')) {\n              return;\n          }\n\n          //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n          if ($choiceBox.closest('.qti-item').hasClass('prevent-click-handler')) {\n              return;\n          }\n\n          e.preventDefault();\n          e.stopPropagation(); //required otherwise any tao scoped, form initialization might prevent it from working\n\n          if (!_.isUndefined(eliminator)) {\n              state = false;\n              if (eliminator === 'trigger') {\n                  this.classList.toggle('eliminated');\n              }\n          }\n\n          _triggerInput($choiceBox, state);\n\n          if (this.classList.contains('eliminated')) {\n              input.setAttribute('disabled', 'disabled');\n          } else {\n              input.removeAttribute('disabled');\n          }\n\n          instructionMgr.validateInstructions(interaction, { choice: $choiceBox });\n          containerHelper.triggerResponseChangeEvent(interaction);\n          $$1(input).focus();\n      });\n  };\n\n  /**\n   * Get the responses from the DOM.\n   * @private\n   * @param {Object} interaction - the interaction instance\n   * @returns {Array} the list of choices identifiers\n   */\n  const _getRawResponse = function _getRawResponse(interaction) {\n      const values = [];\n      const $container = containerHelper.get(interaction);\n      $$1('.real-label > input[name=response-' + interaction.getSerial() + ']:checked', $container).each(function () {\n          values.push($$1(this).val());\n      });\n      return values;\n  };\n\n  /**\n   * Define the instructions for the interaction\n   * @private\n   * @param {Object} interaction - the interaction instance\n   */\n  const _setInstructions = function _setInstructions(interaction) {\n      const min = interaction.attr('minChoices');\n      const max = interaction.attr('maxChoices');\n      let msg;\n      const choiceCount = _.size(interaction.getChoices());\n\n      const highlightInvalidInput = function highlightInvalidInput($choice) {\n          const $input = $choice.find('.real-label > input');\n          const $icon = $choice.find('.real-label > span');\n\n          const choiceStyle = $choice.attr('style');\n          const iconStyle = $icon.attr('style');\n          $choice.css('color', '#BA122B');\n          $icon.css('color', '#BA122B').addClass('cross error');\n\n          let timeout = interaction.data('__instructionTimeout');\n\n          if (timeout) {\n              clearTimeout(timeout);\n          }\n          timeout = setTimeout(function () {\n              $input.prop('checked', false);\n              $choice.attr('style', choiceStyle);\n              $icon.attr('style', iconStyle).removeClass('cross');\n              $choice.toggleClass('user-selected', false);\n              containerHelper.triggerResponseChangeEvent(interaction);\n          }, 150);\n          interaction.data('__instructionTimeout', timeout);\n      };\n\n      // if maxChoice = 1, use the radio group behaviour\n      // if maxChoice = 0, infinite choice possible\n      // there are 5 cases according AUT-345 Choice interaction: reduce edge cases constraints\n      if (min === 1 && (max === 0 || max === choiceCount || typeof max === 'undefined')) {\n          // Multiple Choice: 4.Constraint: Answer required -> minChoices = 1 / maxChoices = 0 -> “You need to select at least 1 choice”\n          // Multiple Choice: 5.Constraint: Other constraints -> minChoices = 1 / maxChoices = (N or Disabled)\n          msg = __('You need to select at least 1 choice.');\n          instructionMgr.appendInstruction(interaction, msg, function () {\n              if (_getRawResponse(interaction).length >= 1) {\n                  this.setLevel('success');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min >= 1 && max >= 2 && min !== max) {\n          // Multiple Choice: 5. Constraint: Other constraints -> “You must select from minChoices to maxChoices choices. for the correct answer“\n          msg = __('You need to select from %s to %s choices.', min, max);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length >= min && _getRawResponse(interaction).length < max) {\n                  this.reset();\n                  this.setLevel('success');\n              } else if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  if (this.checkState('fulfilled')) {\n                      this.update({\n                          level: 'warning',\n                          timeout: 2000,\n                          start: function () {\n                              if (data && data.choice) {\n                                  highlightInvalidInput(data.choice);\n                              }\n                          },\n                          stop: function () {\n                              this.setLevel('info');\n                          }\n                      });\n                  }\n                  this.setState('fulfilled');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min > 1 && min === max) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices ≠ Disabled -> “You need to select {minChoices = maxChoices value} choices.“\n          msg = __('You need to select %s choices', min);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length === min) {\n                  this.setLevel('success');\n              } else if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  this.update({\n                      level: 'warning',\n                      timeout: 2000,\n                      start: function () {\n                          if (data && data.choice) {\n                              highlightInvalidInput(data.choice);\n                          }\n                      },\n                      stop: function () {\n                          this.setLevel('info');\n                      }\n                  });\n                  this.setState('fulfilled');\n              }  else {\n                  this.reset();\n              }\n          });\n      } else if (max > 1 && max < choiceCount && (typeof min === 'undefined' || min === 0)) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices = Disabled / maxChoices ≠ Disabled  -> \"You can select up to {maxChoices value} choices.\"\n          msg = __('You can select up to %s choices.', max);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  if (this.checkState('fulfilled')) {\n                      this.update({\n                          level: 'warning',\n                          timeout: 2000,\n                          start: function () {\n                              if (data && data.choice) {\n                                  highlightInvalidInput(data.choice);\n                              }\n                          },\n                          stop: function () {\n                              this.setLevel('info');\n                          }\n                      });\n                  }\n                  this.setState('fulfilled');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min > 1 && (typeof max === 'undefined' || max === 0)) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices = Disabled or 0   -> \"You need to select at least {minChoices value} choices.\"\"\n          msg = __('You need to select at least %s choices.', min);\n          instructionMgr.appendInstruction(interaction, msg, function () {\n              if (_getRawResponse(interaction).length >= min) {\n                  this.setLevel('success');\n              } else {\n                  this.reset();\n              }\n          });\n      }\n      // Single choice: 1.Constraint: None -> minChoices = 0 / maxChoices = 1 -> No messages\n      // Single choice: 2.Constraint: Answer required  -> minChoices = 1, maxChoices = 1 -> No messages\n      // Multiple Choice: 3.Constraint: None  -> minChoices = 0, maxChoices = 0 -> No messages\n  };\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   */\n  const render = function render(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      _pseudoLabel(interaction, $container);\n\n      _setInstructions(interaction);\n\n      if (interaction.attr('orientation') === 'horizontal') {\n          const $elements = $$1('.add-option, .result-area .target, .choice-area .qti-choice', $container);\n          sizeAdapter.adaptSize($elements);\n\n          $$1(document).on('themeapplied.choiceInteraction', () => adaptSize.height($elements));\n      }\n  };\n\n  /**\n   * Reset the responses previously set\n   *\n   * @param {Object} interaction - the interaction instance\n   */\n  const resetResponse = function resetResponse(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      $$1('.real-label > input', $container).prop('checked', false);\n  };\n\n  /**\n   * Set a new response to the rendered interaction.\n   * Please note that it does not reset previous responses.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} response - the PCI formatted response\n   */\n  const setResponse = function setResponse(interaction, response) {\n      const $container = containerHelper.get(interaction);\n\n      try {\n          _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n              const $input = $container.find('.real-label > input[value=\"' + identifier + '\"]').prop('checked', true);\n              $input.closest('.qti-choice').toggleClass('user-selected', true);\n          });\n          instructionMgr.validateInstructions(interaction);\n      } catch (e) {\n          throw new Error('wrong response format in argument : ' + e);\n      }\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the response formatted in PCI\n   */\n  const getResponse = function getResponse(interaction) {\n      return pciResponse.serialize(_getRawResponse(interaction), interaction);\n  };\n\n  /**\n   * Check if a choice interaction is choice-eliminable\n   *\n   * @param {Object} interaction\n   * @returns {boolean}\n   */\n  const isEliminable = function isEliminable(interaction) {\n      return /\\beliminable\\b/.test(interaction.attr('class'));\n  };\n\n  /**\n   * Set additional data to the template (data that are not really part of the model).\n   * @param {Object} interaction - the interaction\n   * @param {Object} [data] - interaction custom data\n   * @returns {Object} custom data\n   */\n  const getCustomData = function getCustomData(interaction, data) {\n      const listStyleVisible = features.isVisible('taoQtiItem/creator/interaction/choice/property/listStyle');\n      const listStyles = (interaction.attr('class') || '').match(/\\blist-style-[\\w-]+/) || [];\n      return _.merge(data || {}, {\n          horizontal: interaction.attr('orientation') === 'horizontal',\n          listStyle: listStyleVisible ? listStyles.pop() : void 0,\n          eliminable: isEliminable(interaction),\n          allowEliminationVisible: features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination')\n      });\n  };\n\n  /**\n   * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n   * @param {Object} interaction - the interaction\n   */\n  const destroy = function destroy(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      const timeout = interaction.data('__instructionTimeout');\n\n      if (timeout) {\n          clearTimeout(timeout);\n      }\n\n      //remove event\n      $container.off('.commonRenderer');\n      $$1(document).off('.commonRenderer').off('.choiceInteraction');\n\n      //remove instructions\n      instructionMgr.removeInstructions(interaction);\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  const setState = function setState(interaction, state) {\n      if (_.isObject(state)) {\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n\n          const $container = containerHelper.get(interaction);\n\n          //restore order of previously shuffled choices\n          if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n              $$1('.qti-simpleChoice', $container)\n                  .sort(function (a, b) {\n                      const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                      const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .appendTo($$1('.choice-area', $container));\n          }\n\n          //restore eliminated choices\n          if (isEliminable(interaction) && _.isArray(state.eliminated) && state.eliminated.length) {\n              _.forEach(state.eliminated, function (identifier) {\n                  $container.find('.qti-simpleChoice[data-identifier=\"' + identifier + '\"]').addClass('eliminated');\n              });\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  const getState = function getState(interaction) {\n      const $container = containerHelper.get(interaction);\n      const state = {};\n      const response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n\n      //we store also the choice order if shuffled\n      if (interaction.attr('shuffle') === true) {\n          state.order = [];\n          $$1('.qti-simpleChoice', $container).each(function () {\n              state.order.push($$1(this).data('identifier'));\n          });\n      }\n\n      //store the eliminated choices\n      if (isEliminable(interaction)) {\n          state.eliminated = [];\n          $container.find('.qti-simpleChoice.eliminated').each(function () {\n              state.eliminated.push($$1(this).data('identifier'));\n          });\n      }\n\n      return state;\n  };\n\n  /**\n   * Expose the common renderer for the choice interaction\n   * @exports qtiCommonRenderer/renderers/interactions/ChoiceInteraction\n   */\n  var ChoiceInteraction = {\n      qtiClass: 'choiceInteraction',\n      template: tpl,\n      getData: getCustomData,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState\n  };\n\n  return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'i18n'], function (_, Handlebars, Helpers0, containerHelper, pciResponse, __) { 'use strict';\n\n        _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n        Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n        Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n        containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n        pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n        __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n\n        if (!Helpers0.__initialized) {\n          Helpers0(Handlebars);\n          Helpers0.__initialized = true;\n        }\n        var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n          this.compilerInfo = [4,'>= 1.0.0'];\n        helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n          var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n        function program1(depth0,data) {\n          \n          var buffer = \"\", stack1;\n          buffer += \" lang=\\\"\"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\\"\";\n          return buffer;\n          }\n\n          buffer += \"<a class=\\\"qti-interaction qti-inlineInteraction qti-endAttemptInteraction btn small btn-info\\\"\\n        data-serial=\\\"\";\n          if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n          else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n          buffer += escapeExpression(stack1)\n            + \"\\\" \\n        data-qti-class=\\\"endAttemptInteraction\\\"\\n        value=\\\"false\\\"\\n        tabindex=\\\"0\\\"\\n        \";\n          stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n          if(stack1 || stack1 === 0) { buffer += stack1; }\n          buffer += \">\\n        \"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\n</a>\\n\";\n          return buffer;\n          });\n        function tpl(data, options, asString) {\n          var html = Template(data, options);\n          return (asString || true) ? html : $(html);\n        }\n\n        /**\n         * This program is free software; you can redistribute it and/or\n         * modify it under the terms of the GNU General Public License\n         * as published by the Free Software Foundation; under version 2\n         * of the License (non-upgradable).\n         *\n         * This program is distributed in the hope that it will be useful,\n         * but WITHOUT ANY WARRANTY; without even the implied warranty of\n         * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n         * GNU General Public License for more details.\n         *\n         * You should have received a copy of the GNU General Public License\n         * along with this program; if not, write to the Free Software\n         * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n         *\n         * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n         */\n\n        /**\n         * Init rendering, called after template injected into the DOM\n         * All options are listed in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @fires endattempt with the response identifier\n         */\n        function render(interaction, options) {\n            var $container = containerHelper.get(interaction);\n\n            //on click,\n            $container.on('click.commonRenderer', function(e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if (\n                    $(e.currentTarget)\n                        .closest('.qti-item')\n                        .hasClass('prevent-click-handler')\n                ) {\n                    return;\n                }\n                $container.val(true);\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n\n                $container.trigger('endattempt', [interaction.attr('responseIdentifier')]);\n            });\n        }\n\n        /**\n         * Set the response to the rendered interaction.\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @param {object} response\n         */\n        function setResponse(interaction, response) {\n            _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n        }\n\n        /**\n         * Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n        function getResponse(interaction) {\n            var val = containerHelper.get(interaction).val();\n            val = val && val !== 'false' && val !== '0';\n            return pciResponse.serialize([val], interaction);\n        }\n\n        /**\n             * Reset the response ... wondering if it is useful ...\n\n             * @param {type} interaction\n             */\n        function resetResponse(interaction) {\n            _setVal(interaction, false);\n        }\n\n        /**\n         * Set the interaction state. It could be done anytime with any state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @param {Object} state - the interaction state\n         */\n        function setState(interaction, state) {\n            if (_.isObject(state)) {\n                if (state.response) {\n                    interaction.resetResponse();\n                    interaction.setResponse(state.response);\n                }\n            }\n        }\n\n        /**\n         * Get the interaction state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @returns {Object} the interaction current state\n         */\n        function getState(interaction) {\n            var state = {};\n            var response = interaction.getResponse();\n\n            if (response) {\n                state.response = response;\n            }\n            return state;\n        }\n\n        /**\n         *\n         * @param {Object} interaction\n         * @param {Boolean} val\n         */\n        function _setVal(interaction, val) {\n            containerHelper\n                .get(interaction)\n                .val(val)\n                .change();\n        }\n\n        /**\n         * Destroy the interaction to restore the dom as it is before render() is called\n         *\n         * @param {Object} interaction\n         */\n        function destroy(interaction) {\n            //remove event\n            containerHelper.get(interaction).off('.commonRenderer');\n        }\n\n        /**\n         * Define default template data\n         *\n         * @param {Object} interaction\n         * @param {Object} data\n         * @returns {Object}\n         */\n        function getCustomData(interaction, data) {\n            if (!data.attributes.title) {\n                data.attributes.title = __('End Attempt');\n            }\n            return data;\n        }\n\n        var EndAttemptInteraction = {\n            qtiClass: 'endAttemptInteraction',\n            template: tpl,\n            getData: getCustomData,\n            render: render,\n            getContainer: containerHelper.get,\n            setResponse: setResponse,\n            getResponse: getResponse,\n            resetResponse: resetResponse,\n            destroy: destroy,\n            setState: setState,\n            getState: getState\n        };\n\n        return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',['jquery', 'lodash', 'i18n', 'services/features', 'util/strLimiter', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'ckeditor', 'taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'taoQtiItem/qtiCommonRenderer/helpers/userAgent', 'ui/tooltip', 'util/converter', 'core/logger'], function ($$1, _, __, features, strLimiter, Handlebars, Helpers0, containerHelper, instructionMgr, ckEditor, ckConfigurator, patternMaskHelper, userAgent, tooltip, converter, loggerFactory) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    strLimiter = strLimiter && Object.prototype.hasOwnProperty.call(strLimiter, 'default') ? strLimiter['default'] : strLimiter;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    ckEditor = ckEditor && Object.prototype.hasOwnProperty.call(ckEditor, 'default') ? ckEditor['default'] : ckEditor;\n    ckConfigurator = ckConfigurator && Object.prototype.hasOwnProperty.call(ckConfigurator, 'default') ? ckConfigurator['default'] : ckConfigurator;\n    patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n    converter = converter && Object.prototype.hasOwnProperty.call(converter, 'default') ? converter['default'] : converter;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(14, program14, data),fn:self.program(10, program10, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n                <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\" contenteditable></div>\\n            \";\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      \n      return \" attributes.class\";\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n                <textarea\\n                    class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                    name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n                    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                    aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n                ></textarea>\\n            \";\n      return buffer;\n      }\n    function program16(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"pattern=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program18(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" contenteditable></div>\\n        \";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n            <textarea\\n                class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n            ></textarea>\\n        \";\n      return buffer;\n      }\n\n    function program23(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n            \";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n\n    function program25(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n            <span class=\\\"text-counter-chars\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxLength), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n            <span class=\\\"text-counter-words\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxWords), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n        \";\n      return buffer;\n      }\n    function program26(depth0,data) {\n      \n      \n      return \" style=\\\"display: none\\\"\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-extendedTextInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"extendedTextInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.multiple), {hash:{},inverse:self.program(18, program18, data),fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"text-counter\\\">\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<span class=\\\"\";\n      if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n\";\n      return buffer;\n      });\n    function countTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Create a logger\n     */\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js');\n\n    const hideXhtmlConstraints = !features.isVisible(\n        'taoQtiItem/creator/interaction/extendedText/property/xhtmlConstraints'\n    );\n    const hideXhtmlRecommendations = !features.isVisible(\n        'taoQtiItem/creator/interaction/extendedText/property/xhtmlRecommendations'\n    );\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Promise} rendering is async\n     */\n    function render(interaction) {\n        return new Promise(function (resolve, reject) {\n            let $el, expectedLength, minStrings, patternMask, placeholderType, editor;\n            let _styleUpdater, themeLoaded, _getNumStrings;\n            let $container = containerHelper.get(interaction);\n\n            const multiple = _isMultiple(interaction);\n            const limiter = inputLimiter(interaction);\n\n            const placeholderText = interaction.attr('placeholderText');\n            const serial = $container.data('serial');\n\n            const getItemLanguage = () => {\n                let itemLang = $container.closest('.qti-item').attr('lang');\n                let itemLocale = itemLang && itemLang.split('-')[0];\n                if (!itemLocale) {\n                    itemLang = window.document.documentElement.getAttribute('lang');\n                    itemLocale = itemLang && itemLang.split('-')[0];\n                }\n                return itemLocale;\n            };\n\n            const toolbarType = 'extendedText';\n            const ckOptions = {\n                resize_enabled: true,\n                secure: location.protocol === 'https:',\n                forceCustomDomain: true,\n                language: getItemLanguage()\n            };\n\n            if (!multiple) {\n                $el = $container.find('textarea');\n                if (placeholderText) {\n                    $el.attr('placeholder', placeholderText);\n                }\n                if (_getFormat(interaction) === 'xhtml') {\n                    if (hideXhtmlConstraints && hideXhtmlRecommendations) {\n                        $container.find('.text-counter').hide();\n                    }\n\n                    if (hideXhtmlConstraints) {\n                        limiter.enabled = false;\n                    }\n\n                    _styleUpdater = function () {\n                        let qtiItemStyle, $editorBody, qtiItem;\n\n                        if (editor.document) {\n                            qtiItem = $$1('.qti-item').get(0);\n                            qtiItemStyle = qtiItem.currentStyle || window.getComputedStyle(qtiItem);\n\n                            if (editor.document.$ && editor.document.$.body) {\n                                $editorBody = $$1(editor.document.$.body);\n                            } else {\n                                $editorBody = $$1(editor.document.getBody().$);\n                            }\n\n                            $editorBody.css({\n                                'background-color': 'transparent',\n                                color: qtiItemStyle.color\n                            });\n                        }\n                    };\n                    themeLoaded = function () {\n                        _styleUpdater();\n                    };\n\n                    editor = _setUpCKEditor(interaction, ckOptions);\n                    if (!editor) {\n                        reject('Unable to instantiate ckEditor');\n                    }\n\n                    editor.on('instanceReady', function () {\n                        _styleUpdater();\n\n                        //TAO-6409, disable navigation from cke toolbar\n                        if (editor.container && editor.container.$) {\n                            $$1(editor.container.$).addClass('no-key-navigation');\n                        }\n\n                        //it seems there's still something done after loaded, so resolved must be defered\n                        _.delay(resolve, 300);\n                    });\n                    if (editor.status === 'ready' || editor.status === 'loaded') {\n                        _.defer(resolve);\n                    }\n                    editor.on('configLoaded', function () {\n                        editor.config = ckConfigurator.getConfig(editor, toolbarType, ckOptions);\n\n                        if (limiter.enabled) {\n                            limiter.listenTextInput();\n                        }\n                    });\n                    editor.on('change', function () {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    $$1(document).on('themechange.themeloader', themeLoaded);\n                } else {\n                    $el.on('keyup.commonRenderer change.commonRenderer', function () {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    if (limiter.enabled) {\n                        limiter.listenTextInput();\n                    }\n\n                    interaction.safariVerticalRlPatch = _patchSafariVerticalRl($el, serial);\n\n                    resolve();\n                }\n\n                //multiple inputs\n            } else {\n                $el = $container.find('input');\n                minStrings = interaction.attr('minStrings');\n                expectedLength = interaction.attr('expectedLength');\n                patternMask = interaction.attr('patternMask');\n\n                //setting the checking for minimum number of answers\n                if (minStrings) {\n                    //get the number of filled inputs\n                    _getNumStrings = function ($element) {\n                        let num = 0;\n                        $element.each(function () {\n                            if ($$1(this).val() !== '') {\n                                num++;\n                            }\n                        });\n\n                        return num;\n                    };\n\n                    minStrings = parseInt(minStrings, 10);\n                    if (minStrings > 0) {\n                        $el.on('blur.commonRenderer', function () {\n                            setTimeout(function () {\n                                //checking if the user was clicked outside of the input fields\n\n                                //TODO remove notifications in favor of instructions\n\n                                if (!$el.is(':focus') && _getNumStrings($el) < minStrings) {\n                                    instructionMgr.appendNotification(\n                                        interaction,\n                                        `${__('The minimum number of answers is ')} : ${minStrings}`,\n                                        'warning'\n                                    );\n                                }\n                            }, 100);\n                        });\n                    }\n                }\n\n                //set the fields width\n                if (expectedLength) {\n                    expectedLength = parseInt(expectedLength, 10);\n\n                    if (expectedLength > 0) {\n                        $el.each(function () {\n                            $$1(this).css('width', `${expectedLength}em`);\n                        });\n                    }\n                }\n\n                //set the fields pattern mask\n                if (patternMask) {\n                    $el.each(function () {\n                        _setPattern($$1(this), patternMask);\n                    });\n                }\n\n                //set the fields placeholder\n                if (placeholderText) {\n                    /**\n                     * The type of the fileds placeholder:\n                     * multiple - set placeholder for each field\n                     * first - set placeholder only for first field\n                     * none - dont set placeholder\n                     */\n                    placeholderType = 'first';\n\n                    if (placeholderType === 'multiple') {\n                        $el.each(function () {\n                            $$1(this).attr('placeholder', placeholderText);\n                        });\n                    } else if (placeholderType === 'first') {\n                        $el.first().attr('placeholder', placeholderText);\n                    }\n                }\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * Reset the textarea / ckEditor\n     * @param {Object} interaction - the extended text interaction model\n     */\n    function resetResponse(interaction) {\n        if (_getFormat(interaction) === 'xhtml') {\n            _getCKEditor(interaction).setData('');\n        } else {\n            containerHelper.get(interaction).find('input, textarea').val('');\n            if (interaction.safariVerticalRlPatch) {\n                interaction.safariVerticalRlPatch.syncValue();\n            }\n        }\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {object} response\n     */\n    function setResponse(interaction, response) {\n        const _setMultipleVal = (identifier, value) => {\n            interaction.getContainer().find(`#${identifier}`).val(value);\n        };\n\n        const baseType = interaction.getResponseDeclaration().attr('baseType');\n\n        if (response.base === null && Object.keys(response).length === 1) {\n            response = { base: { string: '' } };\n        }\n\n        if (response.base && typeof response.base[baseType] !== 'undefined') {\n            setText(interaction, response.base[baseType]);\n        } else if (response.list && response.list[baseType]) {\n            for (let i in response.list[baseType]) {\n                const serial = typeof response.list.serial === 'undefined' ? '' : response.list.serial[i];\n                _setMultipleVal(`${serial}_${i}`, response.list[baseType][i]);\n            }\n        } else {\n            throw new Error('wrong response format in argument.');\n        }\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {object}\n     */\n    function getResponse(interaction) {\n        const $container = containerHelper.get(interaction);\n        const attributes = interaction.getAttributes();\n        const responseDeclaration = interaction.getResponseDeclaration();\n        const baseType = responseDeclaration.attr('baseType');\n        const numericBase = attributes.base || 10;\n        const multiple = !!(\n            attributes.maxStrings &&\n            (responseDeclaration.attr('cardinality') === 'multiple' ||\n                responseDeclaration.attr('cardinality') === 'ordered')\n        );\n        const ret = multiple ? { list: {} } : { base: {} };\n        let values;\n        let value = '';\n\n        if (multiple) {\n            values = [];\n\n            $container.find('input').each(function (i) {\n                const editorValue = $$1(this).val();\n\n                if (attributes.placeholderText && value === attributes.placeholderText) {\n                    values[i] = '';\n                } else {\n                    const convertedValue = converter.convert(editorValue);\n                    if (baseType === 'integer') {\n                        values[i] = parseInt(convertedValue, numericBase);\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    } else if (baseType === 'float') {\n                        values[i] = parseFloat(convertedValue);\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    } else if (baseType === 'string') {\n                        values[i] = convertedValue;\n                    }\n                }\n            });\n\n            ret.list[baseType] = values;\n        } else {\n            if (attributes.placeholderText && _getTextareaValue(interaction) === attributes.placeholderText) {\n                value = '';\n            } else {\n                if (baseType === 'integer') {\n                    value = parseInt(converter.convert(_getTextareaValue(interaction)), numericBase);\n                } else if (baseType === 'float') {\n                    value = converter.convert(_getTextareaValue(interaction));\n                } else if (baseType === 'string') {\n                    value = converter.convert(_getTextareaValue(interaction, true));\n                }\n            }\n\n            ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n        }\n\n        return ret;\n    }\n\n    /**\n     * Creates an input limiter object\n     * @param {Object} interaction - the extended text interaction\n     * @returns {Object} the limiter\n     */\n    function inputLimiter(interaction) {\n        const $container = containerHelper.get(interaction);\n        const expectedLength = interaction.attr('expectedLength');\n        const expectedLines = interaction.attr('expectedLines');\n        const patternMask = interaction.attr('patternMask');\n        const isCke = _getFormat(interaction) === 'xhtml';\n        let patternRegEx;\n        let $textarea, $charsCounter, $wordsCounter, maxWords, maxLength, $maxLengthCounter, $maxWordsCounter;\n        let enabled = false;\n\n        if (expectedLength || expectedLines || patternMask) {\n            enabled = true;\n            $textarea = $$1('.text-container', $container);\n            $charsCounter = $$1('.count-chars', $container);\n            $wordsCounter = $$1('.count-words', $container);\n            $maxLengthCounter = $$1('.count-max-length', $container);\n            $maxWordsCounter = $$1('.count-max-words', $container);\n\n            if (patternMask !== '') {\n                maxWords = parseInt(patternMaskHelper.parsePattern(patternMask, 'words'), 10);\n                maxLength = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\n                maxWords = _.isNaN(maxWords) ? 0 : maxWords;\n                maxLength = _.isNaN(maxLength) ? 0 : maxLength;\n                if (!maxLength && !maxWords) {\n                    patternRegEx = new RegExp(patternMask);\n                }\n                $maxLengthCounter.text(maxLength);\n                $maxWordsCounter.text(maxWords);\n            }\n        }\n\n        /**\n         * The limiter instance\n         */\n        const limiter = {\n            /**\n             * Is the limiter enabled regarding the interaction configuration\n             */\n            enabled,\n\n            /**\n             * Listen for text input into the interaction and limit it if necessary\n             */\n            listenTextInput() {\n                const ignoreKeyCodes = [\n                    8, // backspace\n                    13, // enter\n                    16, // shift\n                    17, // control\n                    46, // delete\n                    37, // arrow left\n                    38, // arrow up\n                    39, // arrow right\n                    40, // arrow down\n                    35, // home\n                    36, // end\n\n                    // ckeditor specific:\n                    1114177, // home\n                    3342401, // Shift + home\n                    1114181, // end\n                    3342405, // Shift + end\n\n                    2228232, // Shift + backspace\n                    2228261, // Shift + arrow left\n                    4456485, // Alt   + arrow left\n                    2228262, // Shift + arrow up\n                    2228263, // Shift + arrow right\n                    4456487, // Alt   + arrow right\n                    2228264, // Shift + arrow down\n                    2228237, // Shift + enter\n\n                    1114120, // Ctrl + backspace\n                    1114177, // Ctrl + a\n                    1114202, // Ctrl + z\n                    1114200 // Ctrl + x\n                ];\n                const spaceKeyCodes = [\n                    32, // space\n                    13, // enter\n                    2228237 // shift + enter in ckEditor\n                ];\n                let isComposing = false;\n                let hasCompositionJustEnded = false;\n\n                const acceptKeyCode = keyCode => ignoreKeyCodes.includes(keyCode);\n                const emptyOrSpace = txt => (txt && txt.trim() === '') || /\\^s*$/.test(txt);\n                const hasSpace = txt => /\\s+/.test(txt);\n                const getCharBefore = (str, pos) => str && str.substring(Math.max(0, pos - 1), pos);\n                const getCharAfter = (str, pos) => str && str.substring(pos, pos + 1);\n                const noSpaceNode = node =>\n                    node.type === ckEditor.NODE_TEXT || (!node.isBlockBoundary() && node.getName() !== 'br');\n                const getPreviousNotEmptyNode = range => {\n                    let node = range.getPreviousNode();\n                    /**\n                     * The previous node isn't always the right one, because it can be an empty <b> tag for example.\n                     * So we need to get the previous node until we find a non empty one, but we should not go above body.\n                     */\n                    while (node && (node.isEmpty ? node.isEmpty() : node.getText() === '')) {\n                        let previousSourceNode = node.getPreviousSourceNode();\n                        let nodeElement = previousSourceNode;\n                        if (previousSourceNode && previousSourceNode.type === ckEditor.NODE_TEXT) {\n                            nodeElement = previousSourceNode.parentNode || previousSourceNode.$.parentNode;\n                        }\n                        if (\n                            !nodeElement ||\n                            !nodeElement.ownerDocument ||\n                            !nodeElement.ownerDocument.body.contains(nodeElement)\n                        ) {\n                            return null;\n                        }\n                        node = previousSourceNode;\n                    }\n                    return node;\n                };\n                const getNextNotEmptyNode = range => {\n                    let node = range.getNextNode();\n                    while (node && (node.isEmpty ? node.isEmpty() : node.getText() === '')) {\n                        let nextSourceNode = node.getNextSourceNode();\n                        let nodeElement = nextSourceNode;\n                        if (nextSourceNode && nextSourceNode.type === ckEditor.NODE_TEXT) {\n                            nodeElement = nextSourceNode.parentNode || nextSourceNode.$.parentNode;\n                        }\n                        if (\n                            !nodeElement ||\n                            !nodeElement.ownerDocument ||\n                            !nodeElement.ownerDocument.body.contains(nodeElement)\n                        ) {\n                            return null;\n                        }\n                        node = nextSourceNode;\n                    }\n                    return node;\n                };\n                const cancelEvent = e => {\n                    if (e.cancel) {\n                        e.cancel();\n                    } else {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                    }\n                    return false;\n                };\n                const invalidToolip = tooltip.error($container, __('This is not a valid answer'), {\n                    position: 'bottom',\n                    trigger: 'manual'\n                });\n                const patternHandler = function patternHandler(e) {\n                    if (isComposing || hasCompositionJustEnded) {\n                        // IME composing fires keydown/keyup events\n                        hasCompositionJustEnded = false;\n                        return;\n                    }\n\n                    if (patternRegEx) {\n                        let newValue;\n                        if (isCke) {\n                            // cke has its own object structure\n                            newValue = this.getData();\n                        } else {\n                            // covers input\n                            newValue = e.currentTarget.value;\n                        }\n\n                        if (!newValue) {\n                            return false;\n                        }\n                        _.debounce(function () {\n                            if (!patternRegEx.test(newValue)) {\n                                $container.addClass('invalid');\n                                $container.show();\n                                invalidToolip.show();\n                                containerHelper.triggerResponseChangeEvent(interaction);\n                            } else {\n                                $container.removeClass('invalid');\n                                invalidToolip.dispose();\n                            }\n                        }, 400)();\n                    }\n                };\n\n                /**\n                 * This part works on keyboard input\n                 *\n                 * @param {Event} e\n                 * @returns {boolean}\n                 */\n                const keyLimitHandler = e => {\n                    if (isComposing) {\n                        return;\n                    }\n                    // Safari on OS X may send a keydown of 229 after compositionend\n                    if (e.which !== 229) {\n                        hasCompositionJustEnded = false;\n                    }\n\n                    const keyCode = e.data ? e.data.keyCode : e.which;\n                    const wordsCount = maxWords && this.getWordsCount();\n                    const charsCount = maxLength && this.getCharsCount();\n\n                    if (maxWords && wordsCount >= maxWords) {\n                        let left, right, middle;\n\n                        if (isCke) {\n                            const editor = _getCKEditor(interaction);\n                            const sel = editor.getSelection();\n                            const range = sel.getRanges()[0];\n\n                            if (range.startContainer && range.startContainer.type === ckEditor.NODE_TEXT) {\n                                left = getCharBefore(range.startContainer.getText(), range.startOffset);\n                            }\n                            if (!left) {\n                                const node = getPreviousNotEmptyNode(range);\n                                if (node && noSpaceNode(node)) {\n                                    const text = node.getText();\n                                    left = getCharBefore(text, text && text.length);\n                                } else {\n                                    left = ' ';\n                                }\n                            }\n\n                            if (range.endContainer && range.endContainer.type === ckEditor.NODE_TEXT) {\n                                right = getCharAfter(range.endContainer.getText(), range.endOffset);\n                            }\n                            if (!right) {\n                                const node = getNextNotEmptyNode(range);\n                                if (node && noSpaceNode(node)) {\n                                    right = getCharAfter(node.getText(), 0);\n                                } else {\n                                    right = ' ';\n                                }\n                            }\n\n                            middle = sel.getSelectedText();\n                        } else {\n                            const { selectionStart, selectionEnd, value } = $textarea[0];\n                            left = getCharBefore(value, selectionStart);\n                            right = getCharAfter(value, selectionEnd);\n                            middle = value.substring(selectionStart, selectionEnd);\n                        }\n\n                        // Will prevent the keystroke:\n                        // - IF there is a word part before and after the selection,\n                        //   AND the selection does not contain spaces,\n                        //   AND the keystroke is either a space or enter\n                        // - IF there is no word part before and after the selection,\n                        //   AND the selection is empty,\n                        //   AND the keystroke is not from the list of accepted codes,\n                        //   AND the keystroke is not a space\n                        if (\n                            (!emptyOrSpace(left) &&\n                                !emptyOrSpace(right) &&\n                                !hasSpace(middle) &&\n                                spaceKeyCodes.includes(keyCode)) ||\n                            (emptyOrSpace(left) &&\n                                emptyOrSpace(right) &&\n                                !middle &&\n                                !acceptKeyCode(keyCode) &&\n                                keyCode !== 32)\n                        ) {\n                            return cancelEvent(e);\n                        }\n                    }\n\n                    if (maxLength && charsCount >= maxLength && !acceptKeyCode(keyCode)) {\n                        if (!isCke && charsCount > maxLength) {\n                            const textarea = $textarea[0];\n                            textarea.value = textarea.value.substring(0, maxLength);\n                            $textarea.trigger('inputlimiter-limited');\n                            textarea.focus();\n                        }\n                        return cancelEvent(e);\n                    }\n\n                    _.defer(() => this.updateCounter());\n                };\n\n                /**\n                 * This part works on drop or paste\n                 * @param {Event} e\n                 * @returns {boolean}\n                 */\n                const nonKeyLimitHandler = e => {\n                    let newValue;\n\n                    if (typeof $$1(e.target).attr('data-clipboard') === 'string') {\n                        newValue = $$1(e.target).attr('data-clipboard');\n                    } else if (isCke) {\n                        // cke has its own object structure\n                        newValue = e.data.dataValue;\n                    } else {\n                        // covers input via paste or drop\n                        newValue = e.originalEvent.clipboardData\n                            ? e.originalEvent.clipboardData.getData('text')\n                            : e.originalEvent.dataTransfer.getData('text') ||\n                              e.originalEvent.dataTransfer.getData('text/plain') ||\n                              '';\n                    }\n\n                    // prevent insertion of non-limited data\n                    cancelEvent(e);\n\n                    if (!newValue) {\n                        return false;\n                    }\n\n                    // limit by word or character count if required\n                    if (maxWords) {\n                        newValue = strLimiter.limitByWordCount(newValue, maxWords - this.getWordsCount());\n                    } else if (maxLength) {\n                        newValue = strLimiter.limitByCharCount(newValue, maxLength - this.getCharsCount());\n                    }\n\n                    // insert the cut-off text\n                    if (isCke) {\n                        _getCKEditor(interaction).insertHtml(newValue);\n                    } else {\n                        let elements = containerHelper.get(interaction).find('textarea');\n                        let el = elements[0];\n                        let { selectionStart: start, selectionEnd: end, value: text } = el;\n                        elements.val(text.substring(0, start) + newValue + text.substring(end, text.length));\n                        el.focus();\n                        el.selectionStart = start + newValue.length;\n                        el.selectionEnd = el.selectionStart;\n                        elements.trigger('inputlimiter-limited');\n                    }\n\n                    _.defer(() => this.updateCounter());\n                };\n\n                const handleCompositionStart = e => {\n                    isComposing = true;\n                    return e;\n                };\n\n                const handleCompositionEnd = e => {\n                    isComposing = false;\n                    hasCompositionJustEnded = true;\n                    // if plain text - then limit input right after composition end event\n                    if (_getFormat(interaction) !== 'xhtml' && maxLength !== null) {\n                        const currentValue = $textarea[0].value;\n                        $textarea[0].value = currentValue.substring(0, maxLength);\n                        $textarea.trigger('inputlimiter-limited');\n                    }\n                    _.defer(() => this.updateCounter());\n                    return e;\n                };\n\n                const handleBeforeInput = e => {\n                    _.defer(() => this.updateCounter());\n                    return e;\n                };\n\n                if (_getFormat(interaction) === 'xhtml') {\n                    const editor = _getCKEditor(interaction);\n\n                    if (maxLength) {\n                        let previousSnapshot = editor.getSnapshot();\n\n                        editor.on('key', function () {\n                            const range = this.createRange();\n                            if (limiter.getCharsCount() > limiter.maxLength) {\n                                const editable = this.editable();\n                                editable.setData(previousSnapshot, true);\n                                range.moveToElementEditablePosition(editable, true);\n                                editor.getSelection().selectRanges([range]);\n                                return;\n                            }\n                            previousSnapshot = editor.getSnapshot();\n                        });\n                    }\n                    editor.on('key', keyLimitHandler);\n                    editor.on('change', evt => {\n                        patternHandler(evt);\n                        _.defer(() => this.updateCounter());\n                    });\n                    editor.on('paste', nonKeyLimitHandler);\n                    // @todo: drop requires cke 4.5\n                    // cke.on('drop', nonKeyLimitHandler);\n                } else {\n                    $textarea\n                        .on('beforeinput.commonRenderer', handleBeforeInput)\n                        .on('input.commonRenderer', () => {\n                            _.defer(() => this.updateCounter());\n                        })\n                        .on('compositionstart.commonRenderer', handleCompositionStart)\n                        .on('compositionend.commonRenderer', handleCompositionEnd)\n                        .on('keyup.commonRenderer', patternHandler)\n                        .on('keydown.commonRenderer', keyLimitHandler)\n                        .on('paste.commonRenderer drop.commonRenderer', nonKeyLimitHandler);\n                }\n            },\n\n            /**\n             * Get the number of words that are actually written in the response field\n             * @returns {Number} number of words\n             */\n            getWordsCount() {\n                const value = _getTextareaValue(interaction) || '';\n                if (_.isEmpty(value)) {\n                    return 0;\n                }\n                // leading and trailing white space don't qualify as words\n                return value.trim().replace(/\\s+/gi, ' ').split(' ').length;\n            },\n\n            /**\n             * Get the number of characters that are actually written in the response field\n             * @returns {Number} number of characters\n             */\n            getCharsCount() {\n                const value = _getTextareaValue(interaction) || '';\n                // remove NO-BREAK SPACE in empty lines added and all new line symbols\n                return value.replace(/[\\r\\n]{1}\\xA0[\\r\\n]{1}/gm, '\\r').replace(/[\\r\\n]+/gm, '').length;\n            },\n\n            /**\n             * Update the counter element\n             */\n            updateCounter() {\n                $charsCounter.text(this.getCharsCount());\n                $wordsCounter.text(this.getWordsCount());\n            },\n\n            maxLength\n        };\n\n        return limiter;\n    }\n\n    /**\n     * In Safari & `writing-mode: vertical-rl`, for *multiline* text:\n     *   - when user is typing, browser doesn't always repaint, so user doesn't see what he's typing.\n     *   - when user clicks (or key-navigates) inside text, cursor is shown in wrong position.\n     *     `textarea.selectionStart/textarea.selectionEnd` are set correctly, just visually cursor is painted in a wrong place.\n     * Create a workaround:\n     *   - force browser to repaint on every typed letter, using a trick\n     *   - hide native cursor, show custom div as a cursor instead\n     *   - position this custom cursor:\n     *     - create a shadow div contianing same text as textarea (<textarea>ab</textarea> -> <shadow><span>a</span><span>b</span></shadow>)\n     *     - shadow div should also have same size, font, and text-wrapping rules.\n     *     - when after click/key-nav browser changes `textarea.selectionStart` to N, use shadow to understand what are the coordinates of the Nth letter of text\n     *     - then draw custom cursor at those coordinates.\n     * Unsolved issues:\n     *   - when user clicks between lines (in a space left by the difference of line-height & font-size), `textarea.selectionStart` is wrong, cursor jumps randomly\n     *   - when user clicks on empty space left in the line, or at empty lines, `textarea.selectionStart` is wrong, cursor jumps randomly\n     *   - key-navigation is not intuitive (left/right still jump letters, and up/down - lines, as in horizontal-tb)\n     * @param {JQuery} $textarea\n     * @param {string} serial\n     * @returns {Object|null} if safari & vertical-rl,`{ syncValue: () => void, destroy: () => void }` . Otherwise `null`.\n     */\n    function _patchSafariVerticalRl($textarea, serial) {\n        if (!containerHelper.isItemWritingModeVerticalRl() || !userAgent.isSafari()) {\n            return null;\n        }\n\n        $textarea.addClass('hide-caret');\n\n        const $shadow = $$1('<div>', { class: 'shadow-textarea' });\n        const $cursor = $$1('<div>', { class: 'extendedText-shadow-caret' });\n        $$1(document.body).append($cursor);\n        $textarea.after($$1('<div>', { class: 'shadow-container' }).append($shadow));\n\n        let repaintIdx = 0;\n\n        function setShadowString(str) {\n            const shadowString = [...str, ' ']\n                .map(i => {\n                    if (i === '\\n') {\n                        return '<br/>';\n                    } else if (i === ' ') {\n                        return `<span>&#x20;</span>`;\n                    } else {\n                        return `<span>${i}</span>`;\n                    }\n                })\n                .join('');\n\n            $shadow.get(0).innerHTML = shadowString;\n        }\n\n        function forceTextareaRepaint() {\n            if (repaintIdx % 2 === 0) {\n                $textarea.get(0).style.opacity = '99%';\n            } else {\n                $textarea.get(0).style.opacity = '98%';\n            }\n            repaintIdx++;\n        }\n\n        function showHideCursor(show) {\n            if (show && ($cursor.get(0).style.display === 'none' || !$cursor.get(0).style.display)) {\n                $cursor.get(0).style.display = 'block';\n            }\n            if (!show && ($cursor.get(0).style.display !== 'none' || !$cursor.get(0).style.display)) {\n                $cursor.get(0).style.display = 'none';\n            }\n        }\n\n        function positionCursor() {\n            const selectionStart = $textarea.get(0).selectionStart;\n            const selectionEnd = $textarea.get(0).selectionEnd;\n            //range selection seems to be painted fine\n            if (selectionStart === selectionEnd && document.activeElement === $textarea.get(0)) {\n                const shadowLetterEl = $shadow.get(0).children[selectionStart];\n\n                const shadowLetterRect = shadowLetterEl.getBoundingClientRect();\n                const shadowRect = $shadow.get(0).getBoundingClientRect();\n                const textareaRect = $textarea.get(0).getBoundingClientRect();\n                const cursorRect = $cursor.get(0).getBoundingClientRect();\n                const bodyRect = document.body.getBoundingClientRect();\n\n                //iPad, when keyboard opened: 'position:fixed' is off because of addressbar height,\n                //  so for cursor use 'position:absolute' from 'body', and 'bodyRect.top' (='-window.scrollY')\n                const cursorTop = textareaRect.top + (shadowLetterRect.top - shadowRect.top) - bodyRect.top;\n                const cursorLeft =\n                    textareaRect.left -\n                    $textarea.get(0).scrollLeft +\n                    (shadowLetterRect.left - shadowRect.left + $shadow.get(0).scrollLeft);\n\n                const cursorTopStyle = `${Math.round(cursorTop)}px`;\n                const cursorLeftStyle = `${Math.round(cursorLeft)}px`;\n                if ($cursor.get(0).style.top !== cursorTopStyle) {\n                    $cursor.get(0).style.top = cursorTopStyle;\n                }\n                if ($cursor.get(0).style.left !== cursorLeftStyle) {\n                    $cursor.get(0).style.left = cursorLeftStyle;\n                }\n\n                //hide if out of bounds (after scroll for example)\n                if (\n                    cursorLeft > textareaRect.left + textareaRect.width ||\n                    cursorLeft + cursorRect.width < textareaRect.left\n                ) {\n                    showHideCursor(false);\n                } else {\n                    showHideCursor(true);\n                }\n            } else {\n                showHideCursor(false);\n            }\n        }\n\n        function syncShadowStyles() {\n            const textareaStyles = getComputedStyle($textarea.get(0));\n            const shadowStyles = getComputedStyle($shadow.get(0));\n            for (const propName of [\n                'width',\n                'height',\n                'padding',\n                'writing-mode',\n                'dir',\n                'line-height',\n                'font-family',\n                'font-size',\n                'word-break',\n                'white-space',\n                'overflow-wrap',\n                'hyphens',\n                'tab-size'\n            ]) {\n                const textareaPropVal = textareaStyles.getPropertyValue(propName);\n                const shadowPropVal = shadowStyles.getPropertyValue(propName);\n                if (textareaPropVal !== shadowPropVal) {\n                    $shadow.get(0).style[propName] = textareaPropVal;\n                }\n            }\n        }\n\n        const debouncedPositionCursor = _.debounce(() => {\n            if (document.activeElement === $textarea.get(0)) {\n                requestAnimationFrame(() => {\n                    positionCursor();\n                });\n            }\n        }, 100);\n\n        $textarea.on('input', e => {\n            forceTextareaRepaint();\n            setShadowString(e.target.value);\n            positionCursor();\n        });\n        $textarea.on('inputlimiter-limited', () => {\n            forceTextareaRepaint();\n            setShadowString($textarea.get(0).value);\n            positionCursor();\n        });\n        $textarea.on('selectionchange', e => {\n            positionCursor();\n        });\n        $textarea.on('focus', e => {\n            syncShadowStyles();\n            positionCursor();\n        });\n        $textarea.on('blur', e => {\n            showHideCursor(false);\n        });\n        $textarea.on('scroll', e => {\n            requestAnimationFrame(() => {\n                positionCursor();\n            });\n        });\n\n        //scroll containers\n        $$1('.qti-itemBody, .tao-overflow-y').on(`scroll.exttext-verticalsafari-${serial}`, debouncedPositionCursor);\n        //document is scrolled on iPad when keyboard opens\n        $$1(document).on(`scroll.exttext-verticalsafari-${serial}`, debouncedPositionCursor);\n        $$1(window).on(`resize.exttext-verticalsafari-${serial}`, debouncedPositionCursor);\n\n        $$1(document).on(`themeapplied.exttext-verticalsafari-${serial}`, () => {\n            syncShadowStyles();\n            positionCursor();\n        });\n\n        syncShadowStyles();\n        setShadowString($textarea.get(0).value);\n\n        const api = {\n            syncValue: function () {\n                setShadowString($textarea.get(0).value);\n                positionCursor();\n            },\n            destroy: function () {\n                $$1(document).off(`themeapplied.exttext-verticalsafari-${serial}`);\n                $$1(window).off(`resize.exttext-verticalsafari-${serial}`);\n                $$1('.qti-itemBody, .tao-overflow-y').off(`scroll.exttext-verticalsafari-${serial}`);\n                $cursor.remove();\n            }\n        };\n        return api;\n    }\n\n    /**\n     * return the value of the textarea or ckeditor data\n     * @param  {Object} interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {String} the value\n     */\n    function _getTextareaValue(interaction, raw) {\n        if (_getFormat(interaction) === 'xhtml') {\n            return _ckEditorData(interaction, raw);\n        } else {\n            return containerHelper.get(interaction).find('textarea').val();\n        }\n    }\n\n    /**\n     * Setting the pattern mask for the input, for browsers which doesn't support this feature\n     * @param {jQuery} $element\n     * @param {string} pattern\n     */\n    function _setPattern($element, pattern) {\n        const patt = new RegExp(pattern);\n\n        //test when some data is entering in the input field\n        //@todo plug the validator + tooltip\n        $element.on('keyup.commonRenderer', function () {\n            $element.removeClass('field-error');\n            if (!patt.test($element.val())) {\n                $element.addClass('field-error');\n            }\n        });\n    }\n\n    /**\n     * Whether or not multiple strings are expected from the candidate to\n     * compose a valid response.\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Boolean} true if a multiple\n     */\n    function _isMultiple(interaction) {\n        const attributes = interaction.getAttributes();\n        const response = interaction.getResponseDeclaration();\n        return !!(\n            attributes.maxStrings &&\n            (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\n        );\n    }\n\n    /**\n     * Instantiate CkEditor for the interaction\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {Object} [options= {}] - the CKEditor configuration options\n     * @returns {Object} the ckEditor instance (or you'll be in trouble\n     */\n    function _setUpCKEditor(interaction, options) {\n        const $container = containerHelper.get(interaction);\n        const editor = ckEditor.replace($container.find('.text-container')[0], options || {});\n        if (editor) {\n            $container.data('editor', editor.name);\n            return editor;\n        }\n    }\n\n    /**\n     * Destroy CKEditor\n     *\n     * @param {Object} interaction - the extended text interaction model\n     */\n    function _destroyCkEditor(interaction) {\n        const $container = containerHelper.get(interaction);\n        const name = $container.data('editor');\n        let editor;\n        if (name) {\n            editor = ckEditor.instances[name];\n        }\n        if (editor) {\n            editor.destroy();\n            $container.removeData('editor');\n        }\n    }\n\n    /**\n     * Gets the CKEditor instance\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Object}  CKEditor instance\n     */\n    function _getCKEditor(interaction) {\n        const $container = containerHelper.get(interaction);\n        const name = $container.data('editor');\n\n        return ckEditor.instances[name];\n    }\n\n    /**\n     * get the text content of the ckEditor ( not the entire html )\n     * @param  {object} interaction the interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {string}             text content of the ckEditor\n     */\n    function _ckEditorData(interaction, raw) {\n        const editor = _getCKEditor(interaction);\n        let data = (editor && editor.getData()) || '';\n\n        if (!raw) {\n            data = _stripTags(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * Remove HTML tags from a string\n     * @param {String} str\n     * @returns {String}\n     */\n    function _stripTags(str) {\n        const tempNode = document.createElement('div');\n        tempNode.innerHTML = str;\n        return tempNode.textContent;\n    }\n\n    /**\n     * Get the interaction format\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {String} format in 'plain', 'xhtml', 'preformatted'\n     */\n    function _getFormat(interaction) {\n        const format = interaction.attr('format');\n        if (['plain', 'xhtml', 'preformatted'].includes(format)) {\n            return format;\n        }\n        return 'plain';\n    }\n\n    function enable(interaction) {\n        const $container = containerHelper.get(interaction);\n        let editor;\n\n        $container.find('input, textarea').removeAttr('disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(false);\n                } else {\n                    editor.readOnly = false;\n                }\n            }\n        }\n    }\n\n    function disable(interaction) {\n        const $container = containerHelper.get(interaction);\n        let editor;\n\n        $container.find('input, textarea').attr('disabled', 'disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(true);\n                } else {\n                    editor.readOnly = true;\n                }\n            }\n        }\n    }\n\n    function clearText(interaction) {\n        setText(interaction, '');\n    }\n\n    function setText(interaction, text) {\n        const limiter = inputLimiter(interaction);\n        if (_getFormat(interaction) === 'xhtml') {\n            try {\n                _getCKEditor(interaction).setData(text, function () {\n                    if (limiter.enabled) {\n                        limiter.updateCounter();\n                    }\n                });\n            } catch (e) {\n                logger.warn(`setText error ${e}!`);\n            }\n        } else {\n            containerHelper.get(interaction).find('textarea').val(text);\n            if (limiter.enabled) {\n                limiter.updateCounter();\n            }\n            if (interaction.safariVerticalRlPatch) {\n                interaction.safariVerticalRlPatch.syncValue();\n            }\n        }\n    }\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $el = $container.find('input, textarea');\n        const serial = $container.data('serial');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            _destroyCkEditor(interaction);\n        }\n\n        //remove event\n        $el.off('.commonRenderer');\n        $$1(document).off('.commonRenderer');\n\n        if (interaction.safariVerticalRlPatch) {\n            interaction.safariVerticalRlPatch.destroy();\n        }\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                try {\n                    interaction.setResponse(state.response);\n                } catch (e) {\n                    interaction.resetResponse();\n                    throw e;\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    }\n\n    /**\n     * Hydrates the dataset for the interaction with respect to its attributes.\n     *\n     * @param {object} interaction - the interaction instance\n     * @param {object} data - the default data object\n     * @returns {object} the hydrated data set\n     */\n    function getData(interaction, data) {\n        const pattern = interaction.attr('patternMask');\n        const maxWords = parseInt(patternMaskHelper.parsePattern(pattern, 'words'), 10);\n        const maxLength = parseInt(patternMaskHelper.parsePattern(pattern, 'chars'), 10);\n        const expectedLines = parseInt(interaction.attr('expectedLines'), 10);\n        const expectedLength = !isNaN(expectedLines)\n            ? expectedLines * 72\n            : parseInt(interaction.attr('expectedLength'), 10);\n\n        // Build DOM placeholders, this is needed to properly assemble the constraint hints\n        // The interaction will later rely on this to bind the values\n        const countChars = countTpl({ name: 'count-chars', value: 0 });\n        const countWords = countTpl({ name: 'count-words', value: 0 });\n        const countExpectedLength = countTpl({ name: 'count-expected-length', value: expectedLength });\n        const countMaxLength = countTpl({ name: 'count-max-length', value: maxLength });\n        const countMaxWords = countTpl({ name: 'count-max-words', value: maxWords });\n\n        return _.merge(data || {}, {\n            maxWords: !isNaN(maxWords) ? maxWords : 0,\n            maxLength: !isNaN(maxLength) ? maxLength : 0,\n            attributes: !isNaN(expectedLines) ? { expectedLength } : void 0,\n            // Build the constraint hints from translated text and DOM placeholders\n            // The template will render them as it, then the interaction will update the value from the binding\n            constraintHints: {\n                expectedLength: __('%s of %s characters recommended.', countChars, countExpectedLength),\n                maxLength: __('%s of %s characters maximum.', countChars, countMaxLength),\n                maxWords: __('%s of %s words maximum.', countWords, countMaxWords)\n            }\n        });\n    }\n\n    /**\n     * Expose the common renderer for the extended text interaction\n     * @exports qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction\n     */\n    var ExtendedTextInteraction = {\n        qtiClass: 'extendedTextInteraction',\n        getContainer: containerHelper.get,\n        template,\n        render,\n        setResponse,\n        getResponse,\n        getData,\n        resetResponse,\n        destroy,\n        getState,\n        setState,\n        enable,\n        disable,\n        clearText,\n        setText,\n        inputLimiter\n    };\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',['lodash', 'i18n', 'jquery', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, __, $$1, Handlebars, Helpers0, containerHelper, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-gapMatchInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"gapMatchInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <ul class=\\\"choice-area none block-listing solid horizontal source\\\">\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </ul>\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"qti-flow-container\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    var _choiceUsages = {};\n\n    var setChoice = function(interaction, $choice, $target) {\n        var choiceSerial = $choice.data('serial'),\n            choice = interaction.getChoice(choiceSerial);\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n        _choiceUsages[choiceSerial]++;\n\n        $target\n            .data('serial', choiceSerial)\n            .html($choice.html())\n            .addClass('filled');\n\n        if (\n            !interaction.responseMappingMode &&\n            choice.attr('matchMax') &&\n            _choiceUsages[choiceSerial] >= choice.attr('matchMax')\n        ) {\n            $choice.attr('class', 'deactivated');\n        }\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n    };\n\n    var unsetChoice = function(interaction, $choice) {\n        var serial = $choice.data('serial');\n        var $container = containerHelper.get(interaction);\n\n        $container\n            .find('.choice-area [data-serial=' + serial + ']')\n            .removeClass()\n            .addClass('qti-choice');\n\n        _choiceUsages[serial]--;\n\n        $choice\n            .removeClass('filled')\n            .removeData('serial')\n            .empty();\n\n        if (!interaction.swapping) {\n            //set correct response\n            containerHelper.triggerResponseChangeEvent(interaction);\n        }\n    };\n\n    var getChoice = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n        return $$1('.choice-area [data-identifier=\"' + identifier + '\"]', $container);\n    };\n\n    var getGap = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n        return $$1('.qti-flow-container [data-identifier=\"' + identifier + '\"]', $container);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        var $choiceArea = $container.find('.choice-area');\n        var $flowContainer = $container.find('.qti-flow-container');\n\n        var $activeChoice = null;\n        var $activeDrop = null;\n\n        var isDragAndDropEnabled;\n        var dragOptions;\n        var scaleX, scaleY;\n\n        var $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\n\n        var choiceSelector = $choiceArea.selector + ' .qti-choice';\n        var gapSelector = $flowContainer.selector + ' .gapmatch-content';\n        var filledGapSelector = gapSelector + '.filled';\n        var binSelector = $container.selector + ' .remove-choice';\n\n        var _getChoice = function(serial) {\n            return $choiceArea.find('[data-serial=' + serial + ']');\n        };\n\n        var _setChoice = function($choice, $target) {\n            return setChoice(interaction, $choice, $target);\n        };\n\n        var _resetSelection = function() {\n            if ($activeChoice) {\n                $flowContainer.find('.remove-choice').remove();\n                $activeChoice.removeClass('deactivated active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            }\n        };\n\n        var _unsetChoice = function($choice) {\n            return unsetChoice(interaction, $choice);\n        };\n\n        var _isInsertionMode = function() {\n            return $activeChoice && !$activeChoice.hasClass('filled');\n        };\n\n        var _isModeEditing = function() {\n            return $activeChoice && $activeChoice.hasClass('filled');\n        };\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').gapMatch) {\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').gapMatch;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function() {\n                if ($activeDrop) {\n                    interact(gapSelector).fire({\n                        type: 'drop',\n                        target: $activeDrop.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 1, bottom: 1, right: 1 }\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function(e) {\n                            var $target = $$1(e.target);\n                            var scale;\n                            $target.addClass('dragged');\n                            _handleChoiceSelect($target);\n\n                            _iFrameDragFix(choiceSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function(e) {\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                        },\n                        onend: function(e) {\n                            var $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes filled gaps draggables\n            interact(filledGapSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function(e) {\n                            var $target = $$1(e.target);\n                            var scale;\n                            $target.addClass('dragged');\n                            _handleFilledGapSelect($target);\n\n                            _iFrameDragFix(filledGapSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function(e) {\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                        },\n                        onend: function(e) {\n                            var $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n\n                            if ($activeChoice) {\n                                _unsetChoice($activeChoice);\n                                _resetSelection();\n                            }\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes gaps droppables\n            interact(gapSelector).dropzone({\n                overlap: 0.05,\n                ondragenter: function(e) {\n                    var $target = $$1(e.target),\n                        $dragged = $$1(e.relatedTarget);\n\n                    $activeDrop = $target;\n                    $target.addClass('dropzone');\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function(e) {\n                    _handleGapSelect($$1(e.target));\n\n                    this.ondragleave(e);\n                },\n                ondragleave: function(e) {\n                    var $target = $$1(e.target),\n                        $dragged = $$1(e.relatedTarget);\n\n                    $target.removeClass('dropzone');\n                    $dragged.removeClass('droppable');\n\n                    $activeDrop = null;\n                }\n            });\n        }\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function(e) {\n            e.stopPropagation();\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleChoiceSelect($$1(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(gapSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleGapSelect($$1(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(binSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _unsetChoice($activeChoice);\n            _resetSelection();\n            e.preventDefault();\n        });\n\n        // Common handlers\n\n        function _handleChoiceSelect($target) {\n            if (($activeChoice && $target.hasClass('active')) || $target.hasClass('deactivated')) {\n                return;\n            }\n            _resetSelection();\n\n            $activeChoice = $target.addClass('active');\n            $$1(gapSelector).addClass('empty');\n        }\n\n        function _handleFilledGapSelect($target) {\n            $activeChoice = $target;\n            $$1(gapSelector).addClass('active');\n        }\n\n        function _handleGapSelect($target) {\n            var choiceSerial, targetSerial;\n\n            if (_isInsertionMode()) {\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if (targetSerial !== choiceSerial) {\n                    //set choices:\n                    if (targetSerial) {\n                        _unsetChoice($target);\n                    }\n\n                    _setChoice($activeChoice, $target);\n                }\n\n                $activeChoice.removeClass('active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            } else if (_isModeEditing()) {\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if (targetSerial !== choiceSerial) {\n                    _unsetChoice($activeChoice);\n                    if (targetSerial) {\n                        //swapping:\n                        _unsetChoice($target);\n                        _setChoice(_getChoice(targetSerial), $activeChoice);\n                    }\n                    _setChoice(_getChoice(choiceSerial), $target);\n                }\n\n                _resetSelection();\n            } else if ($target.data('serial') && $target.hasClass('filled')) {\n                targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $flowContainer\n                    .find('>li>div')\n                    .filter(function() {\n                        return $target.data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                $choiceArea\n                    .find('>li:not(.deactivated)')\n                    .filter(function() {\n                        return $target.data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                //append trash bin:\n                $target.append($bin);\n            }\n        }\n    };\n\n    var resetResponse = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        $$1('.gapmatch-content.active', $container).removeClass('active');\n        $$1('.gapmatch-content', $container).each(function() {\n            unsetChoice(interaction, $$1(this));\n        });\n    };\n\n    var _setPairs = function(interaction, pair) {\n        if (pair && pair.length) {\n            setChoice(interaction, getChoice(interaction, pair[0]), getGap(interaction, pair[1]).find('.gapmatch-content'));\n        }\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        resetResponse(interaction);\n        let pairs = pciResponse.unserialize(response, interaction);\n        if ( _.isArray(pairs) && _.isArray(pairs[0])) {\n            _.forEach(pairs, pair => _setPairs(interaction, pair));\n        } else {\n            _setPairs(interaction, pairs);\n        }\n    };\n\n    var _getRawResponse = function(interaction) {\n        var response = [];\n        var $container = containerHelper.get(interaction);\n        $$1('.gapmatch-content', $container).each(function() {\n            var choiceSerial = $$1(this).data('serial'),\n                pair = [];\n\n            if (choiceSerial) {\n                pair.push(interaction.getChoice(choiceSerial).attr('identifier'));\n            }\n            pair.push($$1(this).data('identifier'));\n\n            if (pair.length === 2) {\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10307\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    var destroy = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' .qti-choice').unset();\n        interact($container.find('.qti-flow-container').selector + ' .gapmatch-content').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //restore selection\n        $container.find('.gapmatch-content').empty();\n        $container.find('.active').removeClass('active');\n        $container.find('.remove-choice').remove();\n        $container.find('.empty').removeClass('empty');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        var $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function(a, b) {\n                        var aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var $container;\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function() {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the gapmatch interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GapMatchInteraction\n     */\n    var GapMatchInteraction = {\n        qtiClass: 'gapMatchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicAssociateInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Get the element that has the active state\n     * @private\n     * @param {Object} interaction\n     * @returns {Raphael.Element} the active element\n     */\n    const _getActiveElement = function _getActiveElement(interaction) {\n        let active;\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element && element.active === true) {\n                active = element;\n                return false;\n            }\n        });\n        return active;\n    };\n\n    /**\n     * Create a path from a src element to a destination.\n     * The path is selectable and can be removed by itself\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} srcElement - the path starts from this shape\n     * @param {Raphael.Element} destElement - the path ends to this shape\n     * @param {Function} onRemove - called back on path remove\n     */\n    const _createPath = function _createPath(interaction, srcElement, destElement, onRemove) {\n        const $container = containerHelper.get(interaction);\n\n        //virtual set, not a raphael one, just to group the elements\n        let vset = [];\n\n        //get the middle point of the source shape\n        const src = srcElement.getBBox();\n        const sx = src.x + src.width / 2;\n        const sy = src.y + src.height / 2;\n\n        //get the middle point of the source shape\n        const dest = destElement.getBBox();\n        const dx = dest.x + dest.width / 2;\n        const dy = dest.y + dest.height / 2;\n\n        //create a path with bullets at the beginning and the end\n        const srcBullet = interaction.paper.circle(sx, sy, 3).attr(graphic._style['assoc-bullet']);\n\n        const destBullet = interaction.paper.circle(dx, dy, 3).attr(graphic._style['assoc-bullet']);\n\n        const path = interaction.paper\n            .path('M' + sx + ',' + sy + 'L' + sx + ',' + sy)\n            .attr(graphic._style.assoc)\n            .animate({ path: 'M' + sx + ',' + sy + 'L' + dx + ',' + dy }, 300);\n\n        //create an overall layer that make easier the path selection\n        const layer = interaction.paper.path('M' + sx + ',' + sy + 'L' + dx + ',' + dy).attr(graphic._style['assoc-layer']);\n\n        //get the middle of the path\n        const midPath = layer.getPointAtLength(layer.getTotalLength() / 2);\n\n        //create an hidden background for the closer\n        const closerBg = interaction.paper.circle(midPath.x, midPath.y, 9).attr(graphic._style['close-bg']).toBack();\n\n        //create an hidden closer\n        const closer = interaction.paper\n            .path(graphic._style.close.path)\n            .attr(graphic._style.close)\n            .transform('T' + (midPath.x - 9) + ',' + (midPath.y - 9))\n            .attr('title', __('Click again to remove'))\n            .toBack();\n\n        //the path is below the shapes\n        srcElement.toFront();\n        destElement.toFront();\n\n        //add the path into a set\n        vset = [srcBullet, path, destBullet, layer, closerBg, closer];\n        interaction._vsets.push(vset);\n\n        //to identify the element of the set outside the context\n        vset.forEach(el => {\n            el.data('assoc-path', true);\n        });\n\n        //enable to select the path by clicking the invisible layer\n        layer.click(function selectLigne() {\n            if (closer.attrs.opacity === 0) {\n                showCloser();\n            } else {\n                hideCloser();\n            }\n        });\n\n        $container.on('unselect.graphicassociate', function () {\n            hideCloser();\n        });\n\n        function showCloser() {\n            closerBg.toFront().animate({ opacity: 0.8 }, 300).click(removeSet);\n            closer.toFront().animate({ opacity: 1 }, 300).click(removeSet);\n        }\n\n        function hideCloser() {\n            if (closerBg && closerBg.type) {\n                closerBg\n                    .animate({ opacity: 0 }, 300, function () {\n                        closerBg.toBack();\n                    })\n                    .unclick();\n                closer\n                    .animate({ opacity: 0 }, 300, function () {\n                        closer.toBack();\n                    })\n                    .unclick();\n            }\n        }\n\n        //remove set handler\n        function removeSet() {\n            vset.forEach(item => item.remove());\n            interaction._vsets = _.without(interaction._vsets, vset);\n            if (typeof onRemove === 'function') {\n                onRemove();\n            }\n        }\n    };\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    const _isMatchable = function (element) {\n        let matchable = false;\n        if (element) {\n            const matchMax = element.data('max') || 0;\n            const matching = element.data('matching') || 0;\n            matchable = matchMax === 0 || matchMax > matching;\n        }\n        return matchable;\n    };\n    /**\n     * Makes the shapes selectable\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} active - the active shape\n     */\n    const _shapesSelectable = function _shapesSelectable(interaction, active) {\n        const assocs = active.data('assocs') || [];\n        const choices = interaction.getChoices();\n        const activeChoice = choices[active.id];\n\n        //update the shape state\n        _.forEach(choices, function (choice) {\n            if (!assocs.includes(choice.id())) {\n                const element = interaction.paper.getById(choice.serial);\n                const assocsElement = element.data('assocs') || [];\n                if (\n                    !element.active &&\n                    element.id !== active.id &&\n                    _isMatchable(element) &&\n                    !assocsElement.includes(activeChoice.id())\n                ) {\n                    element.selectable = true;\n                    graphic.updateElementState(element, 'selectable');\n                }\n            }\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesUnSelectable = function _shapesUnSelectable(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.selectable = false;\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        let responses = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            const assocs = element.data('assocs');\n            if (element && assocs) {\n                responses = responses.concat(\n                    _.map(assocs, function (id) {\n                        return [choice.id(), id];\n                    })\n                );\n            }\n        });\n        return responses;\n    };\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    const _paperUnSelect = function _paperUnSelect(interaction) {\n        const $container = containerHelper.get(interaction);\n        const image = interaction.paper.getById('bg-image-' + interaction.serial);\n        if (image) {\n            image.click(function () {\n                _shapesUnSelectable(interaction);\n                $container.trigger('unselect.graphicassociate');\n            });\n        }\n    };\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        const shape = choice.attr('shape');\n        const coords = choice.attr('coords');\n        const maxAssociations = interaction.attr('maxAssociations');\n\n        graphic\n            .createElement(interaction.paper, shape, coords, {\n                id: choice.serial,\n                title: __('Select this area to start an association')\n            })\n            .data('max', choice.attr('matchMax'))\n            .data('matching', 0)\n            .removeData('assocs')\n            .click(function () {\n                //can't create more associations than the maxAssociations attr\n                if (maxAssociations > 0 && _getRawResponse(interaction).length >= maxAssociations) {\n                    _shapesUnSelectable(interaction);\n                    instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n                    return;\n                }\n                const active = _getActiveElement(interaction);\n                if (this.selectable) {\n                    if (active) {\n                        //increment the matching counter\n                        active.data('matching', active.data('matching') + 1);\n                        this.data('matching', this.data('matching') + 1);\n\n                        //attach the response to the active (not the dest)\n                        const assocs = active.data('assocs') || [];\n                        assocs.push(choice.id());\n                        active.data('assocs', assocs);\n\n                        //and create the path\n                        _createPath(interaction, active, this, () => {\n                            //decrement the matching counter\n                            active.data('matching', active.data('matching') - 1);\n                            this.data('matching', this.data('matching') - 1);\n\n                            //detach the response from the active\n                            active.data('assocs', _.pull(active.data('assocs') || [], choice.id()));\n\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n                        });\n                    }\n                    _shapesUnSelectable(interaction);\n                } else if (this.active) {\n                    _shapesUnSelectable(interaction);\n                } else if (_isMatchable(this)) {\n                    if (active) {\n                        _shapesUnSelectable(interaction);\n                    }\n                    graphic.updateElementState(this, 'active', __('Select this area to start an association'));\n                    this.active = true;\n                    _shapesSelectable(interaction, this);\n                }\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n            });\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {Promise}\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n            interaction._vsets = [];\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //make the paper clear the selection by clicking it\n            _paperUnSelect(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minAssociations'),\n                max: interaction.attr('maxAssociations'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    if (data && data.target) {\n                        graphic.highlightError(data.target);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n                if (responseValues.length === 2 && !Array.isArray(responseValues[0]) && !Array.isArray(responseValues[1])) {\n                    responseValues = [responseValues];\n                }\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                //create an object with choiceId => shapeElement\n                const map = _.transform(interaction.getChoices(), function (res, choice) {\n                    res[choice.id()] = interaction.paper.getById(choice.serial);\n                });\n                _.forEach(responseValues, function (responseValue) {\n                    if (_.isArray(responseValue) && responseValue.length === 2) {\n                        const el1 = map[responseValue[0]];\n                        const el2 = map[responseValue[1]];\n                        if (el1 && el2) {\n                            graphic.trigger(el1, 'click');\n                            graphic.trigger(el2, 'click');\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        const toRemove = [];\n        //reset response and state bound to shapes\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.data({\n                    max: choice.attr('matchMax'),\n                    matching: 0,\n                    assocs: []\n                });\n            }\n        });\n\n        if (interaction && interaction.paper) {\n            //remove the paths, but outside the forEach as it is implemented as a linked list\n            interaction.paper.forEach(function (elt) {\n                if (elt.data('assoc-path')) {\n                    toRemove.push(elt);\n                }\n            });\n        }\n        toRemove.forEach(el => el.remove());\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        const response = pciResponse.serialize(raw, interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $container.off('.graphicassociate');\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction\n     */\n    var GraphicAssociateInteraction = {\n        qtiClass: 'graphicAssociateInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',['jquery', 'lodash', 'i18n', 'module', 'core/mouseEvent', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'interact', 'ui/interactUtils'], function ($$1, _, __, module, mouseEvent, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicGapMatchInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal source\\\">\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.gapImgs) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.gapImgs); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.gapImgs) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    let isDragAndDropEnabled;\n\n    // this represents the state for the active droppable zone\n    // we need it only to access the active dropzone in the iFrameFix\n    // should be removed when the old test runner is discarded\n    let activeDrop = null;\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    const _choiceUsages = {};\n\n    /**\n     * This options enables to support old items created with the wrong\n     * direction in the directedpairs.\n     *\n     * @deprecated\n     */\n    const isDirectedPairFlipped = module.config().flipDirectedPair;\n\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    const _isMatchable = function (element) {\n        let matchable = false;\n        if (element) {\n            const matchMax = element.data('max') || 0;\n            const matching = element.data('matching') || [];\n            matchable = matchMax === 0 || matchMax > matching.length;\n        }\n        return matchable;\n    };\n\n    /**\n     * Makes the shapes selectable (at least those who can still accept matches)\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesSelectable = function _shapesSelectable(interaction) {\n        const tooltip = __('Select the area to add an image');\n\n        //update the shape state\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (_isMatchable(element)) {\n                element.selectable = true;\n                graphic.setStyle(element, 'selectable');\n                graphic.updateTitle(element, tooltip);\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            gapFiller.forEach(function (element) {\n                graphic.updateTitle(element, tooltip);\n            });\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesUnSelectable = function _shapesUnSelectable(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.selectable = false;\n                graphic.setStyle(element, 'basic');\n                graphic.updateTitle(element, __('Select an image first'));\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            gapFiller.forEach(function (element) {\n                graphic.updateTitle(element, __('Remove'));\n            });\n        });\n    };\n\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    const _paperUnSelect = function _paperUnSelect(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $gapImages = $$1('ul > li', $container);\n        const bgImage = interaction.paper.getById('bg-image-' + interaction.serial);\n        if (bgImage) {\n            interact(bgImage.node).on('tap', function () {\n                _shapesUnSelectable(interaction);\n                $gapImages.removeClass('active');\n            });\n        }\n    };\n\n    /**\n     * Sets a choice and marks as disabled if at max\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    const _setChoice = function _setChoice(interaction, $choice) {\n        const choiceSerial = $choice.data('serial');\n        const choice = interaction.getGapImg(choiceSerial);\n        let matchMax;\n        let usages;\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n\n        _choiceUsages[choiceSerial]++;\n\n        // disable choice if maxium usage reached\n        if (!interaction.responseMappingMode && choice.attr('matchMax')) {\n            matchMax = +choice.attr('matchMax');\n            usages = +_choiceUsages[choiceSerial];\n\n            // note: if matchMax is 0, then test taker is allowed unlimited usage of that choice\n            if (matchMax !== 0 && matchMax <= usages) {\n                interact($choice.get(0)).draggable(false);\n                $choice.addClass('disabled');\n                $choice.removeClass('selectable');\n            }\n        }\n    };\n\n    /**\n     * Unset a choice and unmark as disabled\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    const _unsetChoice = function _unsetChoice(interaction, $choice) {\n        const choiceSerial = $choice.data('serial');\n\n        _choiceUsages[choiceSerial]--;\n\n        $choice.removeClass('disabled');\n        $choice.addClass('selectable');\n        interact($choice.get(0)).draggable(true);\n    };\n\n    /**\n     * Select a shape (= hotspot) (a gap image must be active)\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} element - the selected shape\n     * @param {Boolean} [trackResponse = true] - if the selection trigger a response chane\n     */\n    const _selectShape = function _selectShape(interaction, element, trackResponse) {\n        let $img, $clone, id, bbox, shapeOffset, activeOffset, matching, currentCount;\n\n        //lookup for the active element\n        const $container = containerHelper.get(interaction);\n        const $gapList = $$1('ul', $container);\n        const $active = $gapList.find('.active:first');\n        const $imageBox = $$1('.main-image-box', $container);\n        const boxOffset = $imageBox.offset();\n\n        if ($active.length) {\n            //the macthing elements are linked to the shape\n            id = $active.data('identifier');\n            matching = element.data('matching') || [];\n            matching.push(id);\n            element.data('matching', matching);\n            currentCount = matching.length;\n\n            //the image to clone\n            $img = $active.find('img');\n\n            //then reset the state of the shapes and the gap images\n            _shapesUnSelectable(interaction);\n            $gapList.children().removeClass('active');\n\n            _setChoice(interaction, $active);\n\n            $clone = $img.clone();\n            shapeOffset = $$1(element.node).offset();\n            activeOffset = $active.offset();\n\n            $clone.css({\n                position: 'absolute',\n                display: 'block',\n                'z-index': 10000,\n                opacity: 0.8,\n                top: activeOffset.top - boxOffset.top,\n                left: activeOffset.left - boxOffset.left\n            });\n\n            $clone.appendTo($imageBox);\n            $clone.animate(\n                {\n                    top: shapeOffset.top - boxOffset.top,\n                    left: shapeOffset.left - boxOffset.left\n                },\n                200,\n                function animationEnd() {\n                    $clone.remove();\n\n                    //extract some coords for positioning\n                    bbox = element.getBBox();\n\n                    //create an image into the paper and move it to the selected shape\n                    const gapFiller = graphic\n                        .createBorderedImage(interaction.paper, {\n                            url: $img.attr('src'),\n                            left: bbox.x + 8 * (currentCount - 1),\n                            top: bbox.y + 8 * (currentCount - 1),\n                            width: parseInt($img.attr('width'), 10),\n                            height: parseInt($img.attr('height'), 10),\n                            padding: 0,\n                            border: false,\n                            shadow: true\n                        })\n                        .data('identifier', id)\n                        .toFront();\n\n                    const gapFillerImage = gapFiller[2].node;\n                    interact(gapFillerImage).on('tap', function (e) {\n                        const target = e.currentTarget;\n                        const rElement = interaction.paper.getById(target.raphaelid);\n\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        // adding a new gapfiller on the hotspot by simulating a click on the underlying shape...\n                        if ($gapList.find('.active').length > 0) {\n                            interactUtils.tapOn(element.node);\n\n                            // ... or removing the existing gapfiller\n                        } else {\n                            //update the element matching array\n                            element.data(\n                                'matching',\n                                _.without(element.data('matching') || [], rElement.data('identifier'))\n                            );\n\n                            //delete interaction.gapFillers[interaction.gapFillers.indexOf(gapFiller)];\n                            interaction.gapFillers = _.without(interaction.gapFillers, gapFiller);\n\n                            gapFiller.remove();\n\n                            _unsetChoice(interaction, $active);\n\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                        }\n                    });\n\n                    interaction.gapFillers.push(gapFiller);\n\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                }\n            );\n        }\n    };\n\n    /**\n     * Render a choice (= hotspot) inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     *\n     * @private\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        //create the shape\n        const rElement = graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select an image first'),\n                hover: false\n            })\n            .data('max', choice.attr('matchMax'))\n            .data('matching', []);\n\n        interact(rElement.node).on('tap', function onClickShape() {\n            handleShapeSelect();\n        });\n\n        if (isDragAndDropEnabled) {\n            interact(rElement.node).dropzone({\n                overlap: 0.15,\n                ondragenter: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'hover');\n                        activeDrop = rElement.node;\n                    }\n                },\n                ondrop: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        handleShapeSelect();\n                        activeDrop = null;\n                    }\n                },\n                ondragleave: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        activeDrop = null;\n                    }\n                }\n            });\n        }\n\n        function handleShapeSelect() {\n            // check if can make the shape selectable on click\n            if (_isMatchable(rElement) && rElement.selectable === true) {\n                _selectShape(interaction, rElement);\n            }\n        }\n    };\n\n    const _iFrameDragFix = function _iFrameDragFix(draggableSelector, target) {\n        interactUtils.iFrameDragFixOn(function () {\n            if (activeDrop) {\n                interact(activeDrop).fire({\n                    type: 'drop',\n                    target: activeDrop,\n                    relatedTarget: target\n                });\n            }\n            interact(draggableSelector).fire({\n                type: 'dragend',\n                target: target\n            });\n        });\n    };\n\n    /**\n     * Render the list of gap fillers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $gapList - the list than contains the orderers\n     */\n    const _renderGapList = function _renderGapList(interaction, $gapList) {\n        const gapFillersSelector = $gapList.selector + ' li';\n        let dragOptions;\n        let scaleX, scaleY;\n\n        interact(gapFillersSelector).on('tap', function onClickGapImg(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            toggleActiveGapState($$1(e.currentTarget));\n        });\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                }\n            };\n\n            $$1(gapFillersSelector).each(function (index, gap) {\n                interact(gap)\n                    .draggable(\n                        _.assign({}, dragOptions, {\n                            onstart: function (e) {\n                                const $target = $$1(e.target);\n                                _setActiveGapState($target);\n                                $target.addClass('dragged');\n\n                                _iFrameDragFix(gapFillersSelector, e.target);\n                                const scale = interactUtils.calculateScale(e.target);\n                                scaleX = scale[0];\n                                scaleY = scale[1];\n                            },\n                            onmove: function (e) {\n                                interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            },\n                            onend: function (e) {\n                                _.defer(() => {\n                                    const $target = $$1(e.target);\n                                    _setInactiveGapState($target);\n                                    $target.removeClass('dragged');\n                                    interactUtils.restoreOriginalPosition($target);\n                                    interactUtils.iFrameDragFixOff();\n                                });\n                            }\n                        })\n                    )\n                    .styleCursor(false);\n            });\n        }\n\n        function toggleActiveGapState($target) {\n            if (!$target.hasClass('disabled')) {\n                if ($target.hasClass('active')) {\n                    _setInactiveGapState($target);\n                } else {\n                    _setActiveGapState($target);\n                }\n            }\n        }\n\n        function _setActiveGapState($target) {\n            $gapList.children('li').removeClass('active');\n            $target.addClass('active');\n            _shapesSelectable(interaction);\n        }\n\n        function _setInactiveGapState($target) {\n            $target.removeClass('active');\n            _shapesUnSelectable(interaction);\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @return {Promise}\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const $gapList = $$1('ul.source', $container);\n            const background = interaction.object.attributes;\n\n            interaction.gapFillers = [];\n\n            if (\n                self.getOption &&\n                self.getOption('enableDragAndDrop') &&\n                self.getOption('enableDragAndDrop').graphicGapMatch\n            ) {\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').graphicGapMatch;\n            }\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                resize: function (newSize, factor) {\n                    $gapList.css('max-width', newSize + 'px');\n                    if (factor !== 1) {\n                        $gapList.find('img').each(function () {\n                            const $img = $$1(this);\n                            $img.width($img.attr('width') * factor);\n                            $img.height($img.attr('height') * factor);\n                        });\n                    }\n                },\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //create the list of gap images\n            _renderGapList(interaction, $gapList);\n\n            //clicking the paper to reset selection\n            _paperUnSelect(interaction);\n        });\n    };\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of matches\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        const pairs = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element && _.isArray(element.data('matching'))) {\n                _.forEach(element.data('matching'), function (gapImg) {\n                    //backward support of previous order\n                    if (isDirectedPairFlipped) {\n                        pairs.push([choice.id(), gapImg]);\n                    } else {\n                        pairs.push([gapImg, choice.id()]);\n                    }\n                });\n            }\n        });\n        return _.sortBy(pairs, [0, 1]);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        const $container = containerHelper.get(interaction);\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                responseValues = null;\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(interaction.getChoices(), function (choice) {\n                    const element = interaction.paper.getById(choice.serial);\n                    if (element) {\n                        _.forEach(responseValues, function (pair) {\n                            if (pair.length === 2) {\n                                //backward support of previous order\n                                const responseChoice = isDirectedPairFlipped ? pair[0] : pair[1];\n                                const responseGap = isDirectedPairFlipped ? pair[1] : pair[0];\n                                if (responseChoice === choice.id()) {\n                                    $$1('[data-identifier=\"' + responseGap + '\"]', $container).addClass('active');\n                                    _selectShape(interaction, element);\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     */\n    const resetResponse = function resetResponse(interaction) {\n        _shapesUnSelectable(interaction);\n\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            interactUtils.tapOn(gapFiller.items[2][0]); // this refers to the gapFiller image\n        });\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        return pciResponse.serialize(raw, interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n\n            interact($container.find('ul.source li').selector).unset(); // gapfillers\n            interact($container.find('.main-image-box rect').selector).unset(); // choices/hotspot\n        }\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    var GraphicGapMatchInteraction = {\n        qtiClass: 'graphicGapMatchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        isDirectedPairFlipped: isDirectedPairFlipped\n    };\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicOrderInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal ordinals\\\"></ul>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Creates ALL the texts (the numbers to display in the shapes). They are created styled but hidden.\n     *\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Number} size - the number of numbers to create...\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @return {Array} the creates text element\n     */\n    const _createTexts = function _createTexts(paper, size) {\n        const texts = [];\n        _.times(size, function (index) {\n            const number = index + 1;\n            const text = graphic.createText(paper, {\n                id: 'text-' + number,\n                content: number,\n                title: __('Remove'),\n                style: 'order-text',\n                hide: true,\n                disableEvents: true\n            });\n\n            texts.push(text);\n        });\n        return texts;\n    };\n    /**\n     * Render the list of numbers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _renderOrderList = function _renderOrderList(interaction, $orderList) {\n        let size = _.size(interaction.getChoices());\n        const min = interaction.attr('minChoices');\n        const max = interaction.attr('maxChoices');\n\n        //calculate the number of orderer to display\n        if (max > 0 && max <= size) {\n            size = max;\n        } else if (min > 0 && min <= size) {\n            size = min;\n        }\n\n        //add them to the list\n        _.times(size, function (index) {\n            const position = index + 1;\n            const $orderer = $$1('<li class=\"selectable\" data-number=\"' + position + '\">' + position + '</li>');\n            if (index === 0) {\n                $orderer.addClass('active');\n            }\n            $orderList.append($orderer);\n        });\n\n        //create related svg texts\n        _createTexts(interaction.paper, size);\n\n        //bind the activation event\n        const $orderers = $orderList.children('li');\n        $orderers.click(function (e) {\n            e.preventDefault();\n            const $orderer = $$1(this);\n\n            if (!$orderer.hasClass('active') && !$orderer.hasClass('disabled')) {\n                $orderers.removeClass('active');\n                $orderer.addClass('active');\n            }\n        });\n    };\n    /**\n     * Show the text that match the element's number.\n     * We need to display it at the center of the shape.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to show the text for\n     */\n    const _showText = function _showText(paper, element) {\n        const bbox = element.getBBox();\n\n        //we retrieve the good text from it's id\n        const text = paper.getById('text-' + element.data('number'));\n        if (text) {\n            //move it to the center of the shape (using absolute transform), and than display it\n            const transf = 'T' + (bbox.x + bbox.width / 2) + ',' + (bbox.y + bbox.height / 2);\n            text.transform(transf).show().toFront();\n        }\n    };\n    /**\n     * Select a shape to position an order\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the selected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _selectShape = function _selectShape(paper, element, $orderList) {\n        //lookup for the active number\n        const $active = $orderList.find('.active:first');\n        if ($active.length && $active.data('number') > 0) {\n            //associate the current number directly to the element\n            element.data('number', $active.data('number'));\n            element.active = true;\n            _showText(paper, element);\n            graphic.updateElementState(element, 'active');\n\n            //update the state of the order list\n            $active.toggleClass('active disabled').siblings(':not(.disabled)').first().toggleClass('active');\n        }\n    };\n    /**\n     * Hide an element text.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to hide the text for\n     */\n    const _hideText = function _hideText(paper, element) {\n        const text = paper.getById('text-' + element.data('number'));\n        if (text) {\n            text.hide();\n        }\n    };\n    /**\n     * Unselect a shape to free the position\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the unselected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _unselectShape = function _unselectShape(paper, element, $orderList) {\n        const number = element.data('number');\n        const unsetNumbers = [number];\n\n        $orderList.children(':not(.disabled)').each(function () {\n            unsetNumbers.push($$1(this).data('number'));\n        });\n\n        const activeNumber = Math.min.apply(Math, unsetNumbers) || number;\n\n        //update element state\n        element.active = false;\n        _hideText(paper, element);\n        element.removeData('number');\n        graphic.updateElementState(element, 'basic');\n\n        //reset order list state and activate the removed number\n        $orderList\n            .children()\n            .removeClass('active')\n            .filter('[data-number=' + number + ']')\n            .removeClass('disabled');\n\n        // Set (min) active number\n        $orderList.find('li[data-number=\"' + activeNumber + '\"]').addClass('active');\n    };\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, $orderList, choice) {\n        graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select this area')\n            })\n            .click(function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n                if (this.active) {\n                    _unselectShape(interaction.paper, this, $orderList);\n                } else {\n                    _selectShape(interaction.paper, this, $orderList);\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice });\n            });\n    };\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        const response = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const elt = interaction.paper.getById(choice.serial);\n            if (elt && elt.data('number')) {\n                response.push({\n                    index: elt.data('number'),\n                    id: choice.id()\n                });\n            }\n        });\n        return _(response).sortBy('index').map('id').value();\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    const render = function render(interaction) {\n        return new Promise(resolve => {\n            const $container = containerHelper.get(interaction);\n            const $orderList = $$1('ul', $container);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: this.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //create the list of number to order\n            _renderOrderList(interaction, $orderList);\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction, $orderList));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    graphic.highlightError(data.target);\n                }\n            });\n        });\n    };\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        const $container = containerHelper.get(interaction);\n        const $orderList = $$1('ul', $container);\n        if (response && interaction.paper) {\n            try {\n                //try to unserualize tthe pci response\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(responseValues, function (responseValue, index) {\n                    const number = index + 1;\n\n                    //get the choice that match the response\n                    const choice = _(interaction.getChoices())\n                        .filter({ attributes: { identifier: responseValue } })\n                        .first();\n                    if (choice) {\n                        const element = interaction.paper.getById(choice.serial);\n                        if (element) {\n                            //activate the orderer to be consistant\n                            $orderList.children('[data-number=' + number + ']').addClass('active');\n\n                            //select the related shape\n                            _selectShape(interaction.paper, element, $orderList);\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $orderList = $$1('ul', $container);\n\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                _unselectShape(interaction.paper, element, $orderList);\n            }\n        });\n\n        $orderList.children('li').removeClass('active disabled').first().addClass('active');\n    };\n\n    /**\n         i* Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    var GraphicOrderInteraction = {\n        qtiClass: 'graphicOrderInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-hotspotInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        const $container = containerHelper.get(interaction);\n        graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select this area')\n            })\n            .click(function () {\n                if (this.active) {\n                    graphic.updateElementState(this, 'basic', __('Select this area'));\n                    this.active = false;\n                    $container.trigger('inactiveChoice.qti-widget', [choice, this]);\n                } else {\n                    graphic.updateElementState(this, 'active', __('Click again to remove'));\n                    this.active = true;\n                    $container.trigger('activeChoice.qti-widget', [choice, this]);\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n            });\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        return _(interaction.getChoices())\n            .map(function (choice) {\n                const rElement = interaction.paper.getById(choice.serial);\n                return rElement && rElement.active === true ? choice.id() : false;\n            })\n            .filter(_.isString)\n            .value();\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    const render = function render(interaction) {\n        return new Promise(resolve => {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: this.resolveUrl(background.data),\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    if (data.target.active) {\n                        data.target.active = false;\n                        graphic.updateElementState(this, 'basic', __('Select this area'));\n                        graphic.highlightError(data.target);\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                        $container.trigger('inactiveChoice.qti-widget', [data.choice, data.target]);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(interaction.getChoices(), function (choice) {\n                    if (responseValues.includes(choice.attributes.identifier)) {\n                        const rElement = interaction.paper.getById(choice.serial);\n                        if (rElement) {\n                            rElement.active = true;\n                            graphic.updateElementState(rElement, 'active', __('Click again to remove'));\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: rElement });\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n        instructionMgr.resetInstructions(interaction);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        const response = pciResponse.serialize(raw, interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    var HotspotInteraction = {\n        qtiClass: 'hotspotInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n    buffer += \"<div \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-hottextInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\" data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" data-qti-class=\\\"hottextInteraction\\\"\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \">\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"qti-flow-container\\\">\";\n    if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"</div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  /**\n   * 'pseudo-label' is technically a div that behaves like a label.\n   * This allows the usage of block elements inside the fake label\n   */\n  var pseudoLabel = function (interaction) {\n      var $container = containerHelper.get(interaction);\n\n      var setChoice = function ($choice, interaction) {\n          var $inupt = $choice.find('input');\n\n          if ($inupt.prop('checked') || $inupt.hasClass('disabled')) {\n              $inupt.prop('checked', false);\n          } else {\n              var maxChoices = parseInt(interaction.attr('maxChoices'));\n              var currentChoices = _.values(_getRawResponse(interaction)).length;\n\n              if (currentChoices < maxChoices || maxChoices === 0) {\n                  $inupt.prop('checked', true);\n              }\n          }\n          containerHelper.triggerResponseChangeEvent(interaction);\n          instructionMgr.validateInstructions(interaction, { choice: $choice });\n      };\n\n      $$1('.hottext', $container).on('click', function (e) {\n          e.preventDefault();\n          setChoice($$1(this), interaction);\n      });\n  };\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {object} interaction\n   */\n  var render = function (interaction) {\n      pseudoLabel(interaction);\n\n      //set up the constraints instructions\n      instructionMgr.minMaxChoiceInstructions(interaction, {\n          min: interaction.attr('minChoices'),\n          max: interaction.attr('maxChoices'),\n          getResponse: _getRawResponse,\n          onError: function (data) {\n              var $input, $choice, $icon;\n              if (data.choice && data.choice.length) {\n                  $choice = data.choice.addClass('error');\n                  $input = $choice.find('input');\n                  $icon = $choice.find(' > label > span').addClass('error cross');\n\n                  setTimeout(function () {\n                      $input.prop('checked', false);\n                      $choice.removeClass('error');\n                      $icon.removeClass('error cross');\n                  }, 350);\n              }\n          }\n      });\n  };\n\n  var resetResponse = function (interaction) {\n      var $container = containerHelper.get(interaction);\n      $$1('input', $container).prop('checked', false);\n  };\n\n  /**\n   * Set the response to the rendered interaction.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n   *\n   * @param {object} interaction\n   * @param {object} response\n   */\n  var setResponse = function (interaction, response) {\n      var $container = containerHelper.get(interaction);\n\n      try {\n          _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n              $container.find('input[value=\"' + identifier + '\"]').prop('checked', true);\n          });\n          instructionMgr.validateInstructions(interaction);\n      } catch (e) {\n          throw new Error('wrong response format in argument : ' + e);\n      }\n  };\n\n  var _getRawResponse = function (interaction) {\n      var values = [];\n      var $container = containerHelper.get(interaction);\n      $$1('input:checked', $container).each(function () {\n          values.push($$1(this).val());\n      });\n      return values;\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n   *\n   * @param {object} interaction\n   * @returns {object}\n   */\n  var getResponse = function (interaction) {\n      return pciResponse.serialize(_getRawResponse(interaction), interaction);\n  };\n\n  /**\n   * Clean interaction destroy\n   * @param {Object} interaction\n   */\n  var destroy = function destroy(interaction) {\n      var $container = containerHelper.get(interaction);\n\n      //restore selected choices:\n      $container.find('.hottext').off('click');\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  var setState = function setState(interaction, state) {\n      if (_.isObject(state)) {\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  var getState = function getState(interaction) {\n      var state = {};\n      var response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n      return state;\n  };\n\n  var HottextInteraction = {\n      qtiClass: 'hottextInteraction',\n      template: tpl,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState\n  };\n\n  return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'ui/tooltip', 'select2'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, tooltip, select2) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<span role=\\\"listbox\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-inlineInteraction qti-inlineChoiceInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n        data-qti-class=\\\"inlineChoiceInteraction\\\"\\n        data-has-search=\\\"false\\\"\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <span role=\\\"option\\\" data-identifier=\\\"empty\\\"></span>\\n    \";\n      options={hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * The value of the \"empty\" option\n     * @type String\n     */\n    const _emptyValue = 'empty';\n\n    const _defaultOptions = {\n        allowEmpty: true,\n        placeholderText: __('select a choice')\n    };\n\n    const optionSelector = 'span[role=\"option\"]';\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} options - object containing available options\n     */\n    const render = function (interaction, options) {\n        const opts = _.clone(_defaultOptions);\n        const required = !!interaction.attr('required');\n        let choiceTooltip;\n        const $container = containerHelper.get(interaction);\n\n        _.extend(opts, options);\n\n        if (opts.allowEmpty && !required) {\n            $container.find(`span[data-identifier=${_emptyValue}]`).text(`--- ${__(`leave empty`)}---`);\n        } else {\n            $container.find(`span[data-identifier=${_emptyValue}]`).remove();\n        }\n\n        const getItemDir = () => {\n            const itemBody = $$1('.qti-itemBody');\n            const itemDir = itemBody.attr('dir') || 'ltr';\n            return itemDir;\n        };\n\n        const getItemWritingMode = () => {\n            const itemBody = $$1('.qti-itemBody');\n            const itemWritingMode = itemBody.hasClass('writing-mode-vertical-rl') ? 'vertical-rl' : '';\n            return itemWritingMode;\n        };\n\n        const dirClass = getItemDir();\n        const writingMode = getItemWritingMode();\n        const isVertical = writingMode === 'vertical-rl';\n        const serial = $container.data('serial');\n\n        $container.select2({\n            data: $container\n                .find(optionSelector)\n                .map((i, opt) => ({\n                    id: $$1(opt).data('identifier'),\n                    markup: opt.outerHTML\n                }))\n                .get(),\n            formatResult: function (result) {\n                return result.markup;\n            },\n            formatSelection: function (data) {\n                return data.markup;\n            },\n            width: 'fit-content',\n            placeholder: opts.placeholderText,\n            minimumResultsForSearch: -1,\n            containerCssClass: `${dirClass}`,\n            dropdownCssClass: `qti-inlineChoiceInteraction-dropdown ${dirClass}`,\n            writingMode\n        });\n\n        const $el = $container.select2('container');\n\n        if (required) {\n            //set up the tooltip plugin for the input\n            choiceTooltip = tooltip.warning($el, __('A choice must be selected'), {\n                placement: isVertical ? 'right' : 'top'\n            });\n            if ($container.val() === '') {\n                choiceTooltip.show();\n            }\n            //refresh tooltip position when all styles loaded.\n            $$1(document).on(`themeapplied.inlineChoiceInteraction-${serial}`, () => {\n                choiceTooltip.hide();\n                choiceTooltip.show();\n            });\n        }\n\n        $container\n            .on('change', function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we must fix the situation when select2 prevents tts from working\n                //for this a \"one-moment\" handler of option click is added and removed after event fired\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    const $selectedIndex = $$1(e.currentTarget)[0].options.selectedIndex\n                        ? $$1(e.currentTarget)[0].options.selectedIndex\n                        : null;\n                    $container.find(optionSelector).one('click', function (ev) {\n                        ev.stopPropagation();\n                    });\n                    $container.find(optionSelector).eq($selectedIndex).trigger('click');\n                }\n\n                if (required && $container.val() !== '') {\n                    choiceTooltip.hide();\n                }\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n            })\n            .on('select2-open', function () {\n                if (required) {\n                    choiceTooltip.hide();\n                }\n            })\n            .on('select2-close', function () {\n                if (required && $container.val() === '') {\n                    choiceTooltip.show();\n                }\n            });\n    };\n\n    const _setVal = function (interaction, choiceIdentifier) {\n        containerHelper.get(interaction).val(choiceIdentifier).select2('val', choiceIdentifier);\n    };\n\n    const resetResponse = function (interaction) {\n        _setVal(interaction, _emptyValue);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n    };\n\n    const _getRawResponse = function (interaction) {\n        const value = containerHelper.get(interaction).val();\n        return value && value !== _emptyValue ? [value] : [];\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const serial = $container.data('serial');\n\n        //remove event\n        $$1(document).off('.commonRenderer');\n        $$1(document).off(`.inlineChoiceInteraction-${serial}`);\n\n        $container.select2('destroy');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        let $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                //just in case the dropdown is opened\n                $container.select2('disable').select2('close');\n\n                $$1(optionSelector, $container)\n                    .sort(function (a, b) {\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($container);\n\n                $container.select2('enable');\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        let $container;\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1(optionSelector, $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the inline choice interaction\n     * @exports qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction\n     */\n    var InlineChoiceInteraction = {\n        qtiClass: 'inlineChoiceInteraction',\n        template: tpl,\n        render,\n        getContainer: containerHelper.get,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program9(depth0,data) {\n    \n    var stack1;\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program11(depth0,data,depth1) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"\\n      <tr>\\n        \";\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n        \";\n    stack1 = helpers.each.call(depth0, (depth1 && depth1.matchSet1), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tr>\\n      \";\n    return buffer;\n    }\n  function program12(depth0,data) {\n    \n    \n    return \"\\n        <td>\\n          <label>\\n            <input type=\\\"checkbox\\\" >\\n            <span class=\\\"icon-checkbox cross\\\"></span>\\n          </label>\\n        </td>\\n        \";\n    }\n\n    buffer += \"<div \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-matchInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\" data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" data-qti-class=\\\"matchInteraction\\\"\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \">\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"match-interaction-area\\\">\\n    <table class=\\\"matrix\\\">\\n      <thead>\\n      <tr>\\n        <th> </th>\\n        \";\n    options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n    if (helper = helpers.matchSet1) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.matchSet1); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.matchSet1) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tr>\\n      </thead>\\n      <tbody>\\n      \";\n    options={hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data};\n    if (helper = helpers.matchSet2) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.matchSet2); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.matchSet2) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  /**\n   * TODO do not use global context var, it's value is shared between interaction instances\n   *\n   * Flag to not throw warning instruction if already\n   * displaying the warning. If such a flag is not used,\n   * disturbances can be seen by the candidate if he clicks\n   * like hell on choices.\n   */\n  var inWarning = false;\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   */\n  var render = function(interaction) {\n      var $container = containerHelper.get(interaction);\n\n      // Initialize instructions system.\n      _setInstructions(interaction);\n\n      $container.on('click.commonRenderer', 'input[type=checkbox]', function(e) {\n          _onCheckboxSelected(interaction, e);\n      });\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  /**\n   * Set the response to the rendered interaction.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   * @param {object} response\n   */\n  var setResponse = function(interaction, response) {\n      var $container = containerHelper.get(interaction);\n      response = _filterResponse(response);\n\n      if (typeof response.list !== 'undefined' && typeof response.list.directedPair !== 'undefined') {\n          _(response.list.directedPair).forEach(function(directedPair) {\n              var x = $$1('th[data-identifier=\"' + directedPair[0] + '\"]', $container).index() - 1;\n              var y = $$1('th[data-identifier=\"' + directedPair[1] + '\"]', $container)\n                  .parent()\n                  .index();\n\n              $$1('.matrix > tbody tr', $container)\n                  .eq(y)\n                  .find('input[type=checkbox]')\n                  .eq(x)\n                  .prop('checked', true);\n          });\n      }\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   * @returns {object}\n   */\n  var getResponse = function(interaction) {\n      var response = pciResponse.serialize(_getRawResponse(interaction), interaction);\n      return response;\n  };\n\n  var resetResponse = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      $$1('input[type=checkbox]:checked', $container).each(function() {\n          $$1(this).prop('checked', false);\n      });\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  var _filterResponse = function(response) {\n      if (typeof response.list === 'undefined') {\n          // Maybe it's a base?\n          if (typeof response.base === 'undefined') {\n              // Oops, it is even not a base.\n              throw 'The given response is not compliant with PCI JSON representation.';\n          } else {\n              // It's a base, Is it a directedPair? Null?\n              if (response.base === null) {\n                  return { list: { directedPair: [] } };\n              } else if (typeof response.base.directedPair === 'undefined') {\n                  // Oops again, it is not a directedPair.\n                  throw 'The matchInteraction only accepts directedPair values as responses.';\n              } else {\n                  return { list: { directedPair: [response.base.directedPair] } };\n              }\n          }\n      } else if (typeof response.list.directedPair === 'undefined') {\n          // Oops, not a directedPair.\n          throw 'The matchInteraction only accept directedPair values as responses.';\n      } else {\n          return response;\n      }\n  };\n\n  var _getRawResponse = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      var values = [];\n\n      $container.find('input[type=checkbox]:checked').each(function() {\n          values.push(_inferValue(this));\n      });\n\n      return values;\n  };\n\n  var _inferValue = function(element) {\n      var $element = $$1(element);\n      var $container = $element.closest('.match-interaction-area');\n      var y = $element.closest('tr').index();\n      var x = $element.closest('td').index();\n      var firstId = $$1('.matrix > thead th', $container)\n          .eq(x)\n          .data('identifier');\n      var secondId = $$1('.matrix > tbody th', $container)\n          .eq(y)\n          .data('identifier');\n      return [firstId, secondId];\n  };\n\n  var _onCheckboxSelected = function(interaction, e) {\n      var choice;\n      var currentResponse = _getRawResponse(interaction);\n      var minAssociations = interaction.attr('minAssociations');\n      var maxAssociations = interaction.attr('maxAssociations');\n\n      if (maxAssociations === 0) {\n          maxAssociations = _countChoices(interaction);\n      }\n\n      if (_.size(currentResponse) > maxAssociations) {\n          // No more associations possible.\n          e.preventDefault();\n          instructionMgr.validateInstructions(interaction);\n      } else if ((choice = _maxMatchReached(interaction, e.target)) !== false) {\n          // Check if matchmax is respected for both choices\n          // involved in the selection.\n          e.preventDefault();\n          instructionMgr.validateInstructions(interaction, choice);\n      } else {\n          containerHelper.triggerResponseChangeEvent(interaction, {});\n          instructionMgr.validateInstructions(interaction);\n      }\n  };\n\n  var _maxMatchReached = function(interaction, input) {\n      var association = _inferValue(input);\n      var overflow = false;\n\n      _(association).forEach(function(identifier) {\n          var choice = _getChoiceDefinitionByIdentifier(interaction, identifier);\n          var matchMin = choice.attributes.matchMin;\n          var matchMax = choice.attributes.matchMax;\n          var assoc = _countAssociations(interaction, choice);\n\n          if (matchMax > 0 && assoc > matchMax) {\n              overflow = choice;\n          }\n      });\n\n      return overflow;\n  };\n\n  var _countAssociations = function(interaction, choice) {\n      var rawResponse = _getRawResponse(interaction);\n      var count = 0;\n\n      // How much time can we find rawChoice in rawResponses?\n      _(rawResponse).forEach(function(response) {\n          if (response[0] === choice.attributes.identifier || response[1] === choice.attributes.identifier) {\n              count++;\n          }\n      });\n\n      return count;\n  };\n\n  var _countChoices = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      return $container.find('input[type=checkbox]').length;\n  };\n\n  var _getChoiceDefinitionByIdentifier = function(interaction, identifier) {\n      var rawChoices = _getRawChoices(interaction);\n      return rawChoices[identifier];\n  };\n\n  var _getRawChoices = function(interaction) {\n      var rawChoices = {};\n\n      _(interaction.choices).forEach(function(matchset) {\n          _(matchset).forEach(function(choice) {\n              rawChoices[choice.attributes.identifier] = choice;\n          });\n      });\n\n      return rawChoices;\n  };\n\n  var _setInstructions = function(interaction) {\n      var msg;\n      var minAssociations = interaction.attr('minAssociations');\n      var maxAssociations = interaction.attr('maxAssociations');\n      var choiceCount = _countChoices(interaction);\n\n      // Super closure is here again to save our souls! Houray!\n      // ~~~~~~~ |==||||0__\n\n      var superClosure = function() {\n          var onMaxChoicesReached = function(report, msg) {\n              if (inWarning === false) {\n                  inWarning = true;\n\n                  report.update({\n                      level: 'warning',\n                      message: __('Maximum number of choices reached.'),\n                      timeout: 2000,\n                      stop: function() {\n                          report.update({ level: 'success', message: msg });\n                          inWarning = false;\n                      }\n                  });\n              }\n          };\n\n          var onMatchMaxReached = function(interaction, choice, report, msg, level) {\n              var $container = containerHelper.get(interaction);\n\n              if (inWarning === false) {\n                  inWarning = true;\n\n                  var $choice = $container.find(\n                      '.qti-simpleAssociableChoice[data-identifier=\"' + choice.attributes.identifier + '\"]'\n                  );\n                  var originalBackgroundColor = $choice.css('background-color');\n                  var originalColor = $choice.css('color');\n\n                  report.update({\n                      level: 'warning',\n                      message: __('The highlighted choice cannot be associated more than %d time(s).').replace(\n                          '%d',\n                          choice.attributes.matchMax\n                      ),\n                      timeout: 3000,\n                      start: function() {\n                          $choice.animate(\n                              {\n                                  backgroundColor: '#fff',\n                                  color: '#ba122b'\n                              },\n                              250,\n                              function() {\n                                  $choice.animate(\n                                      {\n                                          backgroundColor: '#ba122b',\n                                          color: '#fff'\n                                      },\n                                      250\n                                  );\n                              }\n                          );\n                      },\n                      stop: function() {\n                          $choice.animate(\n                              {\n                                  backgroundColor: originalBackgroundColor,\n                                  color: originalColor\n                              },\n                              500\n                          );\n                          report.update({ level: level, message: msg });\n                          inWarning = false;\n                      }\n                  });\n              }\n          };\n\n          if (minAssociations === 0 && maxAssociations > 0) {\n              // No minimum but maximum.\n              msg = __('You must select 0 to %d choices.').replace('%d', maxAssociations);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount <= maxAssociations) {\n                      this.setLevel('success');\n                  } else if (responseCount > maxAssociations) {\n                      onMaxChoicesReached(this, msg);\n                  } else {\n                      this.reset();\n                  }\n              });\n          } else if (minAssociations === 0 && maxAssociations === 0) {\n              // No minimum, no maximum.\n              msg = __('You must select 0 to %d choices.').replace('%d', choiceCount);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else {\n                      this.setLevel('success');\n                  }\n              });\n          } else if (minAssociations > 0 && maxAssociations === 0) {\n              // minimum but no maximum.\n              msg = __('You must select %1$d to %2$d choices.');\n              msg = msg.replace('%1$d', minAssociations);\n              msg = msg.replace('%2$d', choiceCount);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount < minAssociations) {\n                      this.setLevel('info');\n                  } else if (responseCount > choiceCount) {\n                      onMaxChoicesReached(this, msg);\n                  } else {\n                      this.setLevel('success');\n                  }\n              });\n          } else if (minAssociations > 0 && maxAssociations > 0) {\n              // minimum and maximum.\n              if (minAssociations !== maxAssociations) {\n                  msg = __('You must select %1$d to %2$d choices.');\n                  msg = msg.replace('%1$d', minAssociations);\n                  msg = msg.replace('%2$d', maxAssociations);\n              } else {\n                  msg = __('You must select exactly %d choice(s).');\n                  msg = msg.replace('%d', minAssociations);\n              }\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount < minAssociations) {\n                      this.setLevel('info');\n                  } else if (responseCount > maxAssociations) {\n                      onMaxChoicesReached(this, msg);\n                  } else if (responseCount >= minAssociations && responseCount <= maxAssociations) {\n                      this.setLevel('success');\n                  }\n              });\n          }\n      };\n\n      superClosure();\n  };\n\n  var destroy = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      $container.off('.commonRenderer');\n\n      instructionMgr.removeInstructions(interaction);\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  var setState = function setState(interaction, state) {\n      var $container;\n\n      if (_.isObject(state)) {\n          //restore order of previously shuffled choices\n          if (_.isArray(state.order) && state.order.length === 2) {\n              $container = containerHelper.get(interaction);\n\n              $$1('thead .qti-choice', $container)\n                  .sort(function(a, b) {\n                      var aIndex = _.indexOf(state.order[0], $$1(a).data('identifier'));\n                      var bIndex = _.indexOf(state.order[0], $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .appendTo($$1('thead tr', $container));\n\n              $$1('tbody .qti-choice', $container)\n                  .sort(function(a, b) {\n                      var aIndex = _.indexOf(state.order[1], $$1(a).data('identifier'));\n                      var bIndex = _.indexOf(state.order[1], $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .each(function(index, elt) {\n                      $$1(elt).prependTo($$1('tbody tr', $container).eq(index));\n                  });\n          }\n\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  var getState = function getState(interaction) {\n      var $container;\n      var state = {};\n      var response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n\n      //we store also the choice order if shuffled\n      if (interaction.attr('shuffle') === true) {\n          $container = containerHelper.get(interaction);\n\n          state.order = [[], []];\n          $$1('thead .qti-choice', $container).each(function() {\n              state.order[0].push($$1(this).data('identifier'));\n          });\n          $$1('tbody .qti-choice', $container).each(function() {\n              state.order[1].push($$1(this).data('identifier'));\n          });\n      }\n      return state;\n  };\n\n  /**\n   * Expose the common renderer for the match interaction\n   * @exports qtiCommonRenderer/renderers/interactions/MatchInteraction\n   */\n  var MatchInteraction = {\n      qtiClass: 'matchInteraction',\n      template: tpl,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState,\n      inferValue: _inferValue\n  };\n\n  return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/mediaplayer'], function ($$1, _, Handlebars, Helpers0, pciResponse, containerHelper, mediaplayer) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    mediaplayer = mediaplayer && Object.prototype.hasOwnProperty.call(mediaplayer, 'default') ? mediaplayer['default'] : mediaplayer;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-mediaInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"media-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2018 (original work) Open Assessment Technlogies SA\n     *\n     */\n\n    const qtiClass = 'mediaInteraction';\n    const getContainer = containerHelper.get;\n\n    //some default values\n    const defaults = {\n        type: 'video/mp4'\n    };\n\n    //some patterns to match context in which disable the media preview\n    const reWebM = /.*\\.webm/i;\n    const reFirefoxVersion = /firefox\\/([0-9]+\\.*[0-9]*)/i;\n\n    /**\n     * Checks if a media can be previewed safely\n     * @param {String} type - The type of media\n     * @param {String} url - The URL to the media\n     * @returns {Boolean}\n     */\n    function canPreviewMedia(type, url) {\n        const firefox = reFirefoxVersion.exec(navigator.userAgent);\n        const webm = reWebM.test(url);\n        return !(webm && firefox && parseFloat(firefox[1]) >= 87);\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10391\n     *\n     * @param {Object} interaction\n     * @fires playerrendered when the player is at least rendered\n     * @fires playerready when the player is sucessfully loaded and configured\n     * @returns {Promise}\n     */\n    function render(interaction) {\n        return new Promise(resolve => {\n            const $container = getContainer(interaction);\n            const media = interaction.object;\n            const $item = $container.parents('.qti-item');\n            const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\n\n            //check if the media can be played (using timesPlayed and maxPlays)\n            const canBePlayed = () => maxPlays === 0 || maxPlays > parseInt($container.data('timesPlayed'), 10);\n\n            /**\n             * Resize video player elements to fit container size\n             * @param {Object} mediaElement - player instance\n             * @param {jQueryElement} $container   - container element to adapt\n             */\n            const resize = _.debounce(() => {\n                // only resize when width in px\n                // new version has width in %\n                const  currentWidth = media.attr('width');\n                if (interaction.mediaElement && currentWidth && !currentWidth.includes('%')) {\n                    const height = $container.find('.media-container').height();\n                    const width = $container.find('.media-container').width();\n\n                    interaction.mediaElement.resize(width, height);\n                }\n            }, 200);\n\n            //intialize the player if not yet done\n            const initMediaPlayer = () => {\n                if (!interaction.mediaElement) {\n                    const type = media.attr('type') || defaults.type;\n                    const mediaUrl = media.attr('data') || '';\n                    const url = mediaUrl && this.resolveUrl(mediaUrl);\n                    const preview = canPreviewMedia(type, url);\n\n                    interaction.mediaElement = mediaplayer({\n                        url,\n                        type,\n                        preview,\n                        canPause: $container.hasClass('pause'),\n                        maxPlays: maxPlays,\n                        canSeek: !maxPlays,\n                        width: media.attr('width'),\n                        height: media.attr('height'),\n                        volume: 100,\n                        autoStart: !!interaction.attr('autostart') && canBePlayed(),\n                        loop: !!interaction.attr('loop'),\n                        renderTo: $$1('.media-container', $container)\n                    })\n                        .on('render', () => {\n                            resize();\n\n                            $$1(window)\n                                .off('resize.mediaInteraction')\n                                .on('resize.mediaInteraction', resize);\n\n                            $item.off('resize.gridEdit').on('resize.gridEdit', resize);\n                            /**\n                             * @event playerrendered\n                             */\n                            $container.trigger('playerrendered');\n                        })\n                        .on('ready', function () {\n                            /**\n                             * @event playerready\n                             */\n                            $container.trigger('playerready');\n\n                            if (!canBePlayed()) {\n                                this.disable();\n                            }\n\n                            // on slow network the resize runs before ready, so it should be called again\n                            resize();\n\n                            // declare the item ready when player is ready to play.\n                            resolve();\n                        })\n                        .on('update', _.throttle(() => containerHelper.triggerResponseChangeEvent(interaction), 1000))\n                        .on('ended', function () {\n                            $container.data('timesPlayed', $container.data('timesPlayed') + 1);\n                            containerHelper.triggerResponseChangeEvent(interaction);\n\n                            if (!canBePlayed()) {\n                                this.disable();\n                            }\n                        });\n                }\n            };\n\n\n            //set up the number of times played\n            if (!$container.data('timesPlayed')) {\n                $container.data('timesPlayed', 0);\n            }\n\n            //initialize the component\n            $container.on('responseSet', initMediaPlayer);\n\n            //gives a small chance to the responseSet event before initializing the player\n            initMediaPlayer();\n        });\n    }\n\n    /**\n     * Destroy the current interaction\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        const $container = getContainer(interaction);\n\n        if (interaction.mediaElement) {\n            interaction.mediaElement.destroy();\n            interaction.mediaElement = null;\n        }\n\n        $$1('.instruction-container', $container).empty();\n        $$1('.media-container', $container).empty();\n\n        $container.removeData('timesPlayed');\n\n        $$1(window).off('resize.video');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    function _getRawResponse(interaction) {\n        return [getContainer(interaction).data('timesPlayed') || 0];\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    function setResponse(interaction, response) {\n        if (response) {\n            try {\n                const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\n                const responseValues = pciResponse.unserialize(response, interaction);\n                const timesPlayed = parseInt(responseValues[0], 10) || 0;\n                getContainer(interaction).data('timesPlayed', timesPlayed);\n\n                if (interaction.mediaElement) {\n                    if (maxPlays !== 0 && maxPlays <= timesPlayed) {\n                        interaction.mediaElement.disable();\n                    } else if (interaction.mediaElement.is('disabled')) {\n                        interaction.mediaElement.enable();\n                    }\n                }\n            } catch (e) {\n                // something went wrong\n            }\n        }\n    }\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    function resetResponse(interaction) {\n        getContainer(interaction).data('timesPlayed', 0);\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    function getResponse(interaction) {\n        if (!getContainer(interaction).data('timesPlayed')) {\n            return { base: null };\n        }\n\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        /**\n         * Restore the media player state\n         * @private\n         * @param {Object} [playerState]\n         * @param {Boolean} [playerState.muted] - is the player muted\n         * @param {Number} [playerState.volume] - the current volume\n         * @param {Number} [playerState.position] - the position to seek to\n         */\n        const restorePlayerState = playerState => {\n            if (playerState && interaction.mediaElement) {\n                //Volume\n                if (_.isNumber(playerState.volume)) {\n                    interaction.mediaElement.setVolume(playerState.volume);\n                }\n\n                //Muted state (always after the volume)\n                if (_.isBoolean(playerState.muted)) {\n                    interaction.mediaElement.mute(playerState.muted);\n                    interaction.mediaElement.startMuted = playerState.muted;\n                }\n\n                //Position\n                if (playerState.position && playerState.position > 0) {\n                    interaction.mediaElement.seek(playerState.position);\n                    if (!interaction.attr('autostart')) {\n                        interaction.mediaElement.pause();\n                    }\n                }\n            }\n        };\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            if (_.isPlainObject(state.player) && interaction.mediaElement) {\n                if (interaction.mediaElement.is('ready')) {\n                    restorePlayerState(state.player);\n                } else {\n                    interaction.mediaElement.on('ready.state', () => {\n                        interaction.mediaElement.off('ready.state');\n                        restorePlayerState(state.player);\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //collect player's state\n        if (interaction.mediaElement) {\n            state.player = {\n                position: interaction.mediaElement.getPosition(),\n                muted: interaction.mediaElement.is('muted'),\n                volume: interaction.mediaElement.getVolume()\n            };\n        }\n        return state;\n    }\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/MediaInteraction\n     */\n    var MediaInteraction = {\n        qtiClass,\n        template,\n        render,\n        getContainer,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',['lodash', 'jquery', 'i18n', 'core/mouseEvent', 'services/features', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, $$1, __, mouseEvent, features, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      \n      return \" qti-horizontal\";\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \" qti-vertical\";\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      \n      return \" qti-single\";\n      }\n\n    function program11(depth0,data) {\n      \n      \n      return \"horizontal\";\n      }\n\n    function program13(depth0,data) {\n      \n      \n      return \"vertical\";\n      }\n\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program19(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program21(depth0,data) {\n      \n      \n      return \"icon-down\";\n      }\n\n    function program23(depth0,data) {\n      \n      \n      return \"icon-right\";\n      }\n\n    function program25(depth0,data) {\n      \n      \n      return \"icon-up\";\n      }\n\n    function program27(depth0,data) {\n      \n      \n      return \"icon-left\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-orderInteraction\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['data-order']), \"single\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['data-order']), \"single\", options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.order), \"single\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.order), \"single\", options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n     data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n     data-qti-class=\\\"orderInteraction\\\"\\n     data-orientation=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"order-interaction-area\\\">\\n        <ul class=\\\"choice-area square source solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n        <div class=\\\"arrow-bar middle\\\">\\n            <span class=\\\"icon-add-to-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(23, program23, data),fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\\n            <span class=\\\"icon-remove-from-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(27, program27, data),fn:self.program(25, program25, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n        </div>\\n        <ul class=\\\"drag-container block-listing\\\"></ul>\\n        <ul class=\\\"result-area decimal target solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n        </ul>\\n        <div class=\\\"arrow-bar\\\">\\n            <span class=\\\"icon-move-before \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(25, program25, data),fn:self.program(27, program27, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n            <span class=\\\"icon-move-after \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(21, program21, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const orientationSelectionEnabled = features.isVisible('taoQtiItem/creator/interaction/order/property/orientation');\n\n    const _freezeSize = function ($container) {\n        const $orderArea = $container.find('.order-interaction-area');\n        $orderArea.height($orderArea.height());\n    };\n\n    const _setInstructions = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const $choiceArea = $$1('.choice-area', $container),\n            $resultArea = $$1('.result-area', $container),\n            min = parseInt(interaction.attr('minChoices'), 10),\n            max = parseInt(interaction.attr('maxChoices'), 10);\n\n        if (min) {\n            instructionMgr.appendInstruction(interaction, __('You must use at least %d choices', min), function () {\n                if ($resultArea.find('>li').length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n\n        if (max && max < _.size(interaction.getChoices())) {\n            const instructionMax = instructionMgr.appendInstruction(\n                interaction,\n                __('You can use maximum %d choices', max),\n                function () {\n                    if ($resultArea.find('>li').length >= max) {\n                        $choiceArea.find('>li').addClass('deactivated');\n                        this.setMessage(__('Maximum choices reached'));\n                    } else {\n                        $choiceArea.find('>li').removeClass('deactivated');\n                        this.reset();\n                    }\n                }\n            );\n\n            interact(`${$choiceArea.selector} >li.deactivated`).on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n                $target.addClass('brd-error');\n                instructionMax.setLevel('warning', 2000);\n                setTimeout(function () {\n                    $target.removeClass('brd-error');\n                }, 150);\n            });\n\n            // we don't check for isDragAndDropEnabled on purpose, as this binding is not to allow dragging,\n            // but only to provide feedback in case of a drag action on an inactive choice\n            interact(`${$choiceArea.selector} >li.deactivated`)\n                .draggable({\n                    onstart: function (e) {\n                        const $target = $$1(e.target);\n                        $target.addClass('brd-error');\n                        instructionMax.setLevel('warning');\n                    },\n                    onend: function (e) {\n                        const $target = $$1(e.target);\n                        $target.removeClass('brd-error');\n                        instructionMax.setLevel('info');\n                    }\n                })\n                .styleCursor(false);\n        }\n    };\n\n    const resetResponse = function (interaction) {\n        const orderState = interaction.attr('data-order') || interaction.attr('order');\n        const isSingleOrder = orderState === 'single';\n        const $container = containerHelper.get(interaction);\n        const initialOrder = _.keys(interaction.getChoices());\n        const $resultArea = $$1('.result-area', $container);\n        const $resultItems = $$1('.result-area>li', $container);\n\n        $container.find('.qti-choice.active').each(function deactivateChoice() {\n            interactUtils.tapOn(this);\n        });\n\n        if (isSingleOrder) {\n            // if it's a single order interaction, sort the items in result-area in initial order\n            $resultItems.detach().sort(function (item1, item2) {\n                return _.indexOf(initialOrder, $$1(item1).data('serial')) - _.indexOf(initialOrder, $$1(item2).data('serial'));\n            });\n            $resultArea.empty();\n            $resultArea.append($resultItems);\n        } else {\n            const $choiceArea = $$1('.choice-area', $container).append($$1('.result-area>li', $container));\n            const $choices = $choiceArea.children('.qti-choice');\n            $choices.detach().sort(function (choice1, choice2) {\n                return _.indexOf(initialOrder, $$1(choice1).data('serial')) - _.indexOf(initialOrder, $$1(choice2).data('serial'));\n            });\n            $choiceArea.prepend($choices);\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {Object} interaction - the interaction instance\n     */\n    const render = function (interaction) {\n        const $container = containerHelper.get(interaction),\n            $choiceArea = $container.find('.choice-area'),\n            $resultArea = $container.find('.result-area'),\n            $iconAdd = $container.find('.icon-add-to-selection'),\n            $iconRemove = $container.find('.icon-remove-from-selection'),\n            $iconBefore = $container.find('.icon-move-before'),\n            $iconAfter = $container.find('.icon-move-after'),\n            choiceSelector = `${$choiceArea.selector} >li:not(.deactivated)`,\n            resultSelector = `${$resultArea.selector} >li`,\n            $dragContainer = $container.find('.drag-container'),\n            orderState = interaction.attr('data-order') || interaction.attr('order'),\n            isSingleOrder = orderState === 'single',\n            orientation =\n                interaction.attr('orientation') && orientationSelectionEnabled\n                    ? interaction.attr('orientation')\n                    : 'vertical';\n\n        if (isSingleOrder) {\n            const $choices = $choiceArea.children('.qti-choice');\n            $container.addClass('test-preview');\n            $resultArea.append($choices);\n        }\n\n        let $activeChoice = null,\n            scaleX,\n            scaleY,\n            isDragAndDropEnabled,\n            dragOptions,\n            $dropzoneElement;\n\n        const _activeControls = function _activeControls() {\n            $iconAdd.addClass('inactive');\n            $iconRemove.removeClass('inactive').addClass('active');\n            $iconBefore.removeClass('inactive').addClass('active');\n            $iconAfter.removeClass('inactive').addClass('active');\n        };\n\n        const _resetControls = function _resetControls() {\n            $iconAdd.removeClass('inactive');\n            $iconRemove.removeClass('active').addClass('inactive');\n            $iconBefore.removeClass('active').addClass('inactive');\n            $iconAfter.removeClass('active').addClass('inactive');\n        };\n\n        const _setSelection = function _setSelection($choice) {\n            if ($activeChoice) {\n                $activeChoice.removeClass('active');\n            }\n            $activeChoice = $choice;\n            $activeChoice.addClass('active');\n        };\n\n        const _resetSelection = function _resetSelection() {\n            if ($activeChoice) {\n                $activeChoice.removeClass('active');\n                $activeChoice = null;\n            }\n            _resetControls();\n        };\n\n        const _addChoiceToSelection = function _addChoiceToSelection($target, position) {\n            const $results = $$1(resultSelector);\n            _resetSelection();\n\n            //move choice to the result list:\n            if (typeof position !== 'undefined' && position < $results.length) {\n                $results.eq(position).before($target);\n            } else {\n                $resultArea.append($target);\n            }\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n\n            //update constraints :\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        const _toggleResultSelection = function _toggleResultSelection($target) {\n            if ($target.hasClass('active')) {\n                _resetSelection();\n            } else {\n                _setSelection($target);\n                _activeControls();\n            }\n        };\n\n        const _removeChoice = function _removeChoice() {\n            if ($activeChoice) {\n                //restore choice back to choice list\n                $choiceArea.append($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n\n                //update constraints :\n                instructionMgr.validateInstructions(interaction);\n            }\n\n            _resetSelection();\n        };\n\n        const _moveResultBefore = function _moveResultBefore() {\n            const $prev = $activeChoice.prev();\n\n            if ($prev.length) {\n                $prev.before($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        const _moveResultAfter = function _moveResultAfter() {\n            const $next = $activeChoice.next();\n\n            if ($next.length) {\n                $next.after($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function () {\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function (e) {\n            const $target = $$1(e.currentTarget);\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n\n            $iconAdd.addClass('triggered');\n            setTimeout(function () {\n                $iconAdd.removeClass('triggered');\n            }, 150);\n\n            _addChoiceToSelection($target);\n        });\n\n        interact(resultSelector).on('tap', function (e) {\n            const $target = $$1(e.currentTarget);\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _toggleResultSelection($target);\n        });\n\n        interact($iconRemove.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _removeChoice();\n        });\n\n        interact($iconBefore.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _moveResultBefore();\n        });\n\n        interact($iconAfter.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _moveResultAfter();\n        });\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').order) {\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').order;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function () {\n                if (_isDropzoneVisible()) {\n                    interact($resultArea.selector).fire({\n                        type: 'drop',\n                        target: $dropzoneElement.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            $dropzoneElement = $$1('<li>', { class: 'dropzone qti-choice' });\n            $$1('<div>', { class: 'qti-block' }).appendTo($dropzoneElement);\n\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function (e) {\n                            const $target = $$1(e.target);\n                            let scale;\n                            $target.addClass('dragged');\n\n                            _iFrameDragFix(choiceSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function (e) {\n                            const $target = $$1(e.target);\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            if (_isDropzoneVisible()) {\n                                _adjustDropzonePosition($target);\n                            }\n                        },\n                        onend: function (e) {\n                            const $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes result draggables\n            interact(resultSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function (e) {\n                            const $target = $$1(e.target);\n                            let scale;\n                            $target.addClass('dragged');\n\n                            _setSelection($target);\n\n                            // move dragged result to drag container\n                            $dragContainer.show();\n                            $dragContainer.offset($target.offset());\n                            if (orientation === 'horizontal') {\n                                $dragContainer.width($$1(e.currentTarget).width());\n                            } else {\n                                $dragContainer.width($target.parent().width());\n                            }\n                            $dragContainer.append($target);\n\n                            _iFrameDragFix(resultSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function (e) {\n                            const $target = $$1(e.target);\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            if (_isDropzoneVisible()) {\n                                _adjustDropzonePosition($target);\n                            }\n                        },\n                        onend: function (e) {\n                            const $target = $$1(e.target),\n                                hasBeenDroppedInResultArea = $target.parent === $resultArea;\n\n                            $target.removeClass('dragged');\n                            $dragContainer.hide();\n\n                            if (!hasBeenDroppedInResultArea) {\n                                _removeChoice();\n                            }\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes result area droppable\n            interact($resultArea.selector).dropzone({\n                overlap: 0.5,\n                ondragenter: function (e) {\n                    const $dragged = $$1(e.relatedTarget);\n                    _insertDropzone($dragged);\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function (e) {\n                    const $dragged = $$1(e.relatedTarget),\n                        dropzoneIndex = $$1(resultSelector).index($dropzoneElement);\n\n                    this.ondragleave(e);\n\n                    _addChoiceToSelection($dragged, dropzoneIndex);\n                    interactUtils.restoreOriginalPosition($dragged);\n                },\n                ondragleave: function (e) {\n                    const $dragged = $$1(e.relatedTarget);\n                    $dropzoneElement.remove();\n                    $dragged.removeClass('droppable');\n                }\n            });\n        }\n\n        function _isDropzoneVisible() {\n            return $$1.contains($container.get(0), $dropzoneElement.get(0));\n        }\n\n        function _insertDropzone($dragged) {\n            const draggedMiddle = _getMiddleOf($dragged),\n                previousMiddle = {\n                    x: 0,\n                    y: 0\n                };\n            let insertPosition;\n\n            // look for position where to insert dropzone\n            $$1(resultSelector).each(function (index) {\n                const currentMiddle = _getMiddleOf($$1(this));\n\n                if (orientation !== 'horizontal') {\n                    if (draggedMiddle.y > previousMiddle.y && draggedMiddle.y < currentMiddle.y) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.y = currentMiddle.y;\n                } else {\n                    if (draggedMiddle.x > previousMiddle.x && draggedMiddle.x < currentMiddle.x) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.x = currentMiddle.x;\n                }\n            });\n            // append dropzone to DOM\n            if (typeof insertPosition !== 'undefined') {\n                $$1(resultSelector).eq(insertPosition).before($dropzoneElement);\n            } else {\n                // no index found, we just append to the end\n                $resultArea.append($dropzoneElement);\n            }\n\n            // style dropzone\n            $dropzoneElement.height($dragged.height());\n            $dropzoneElement.find('div').text($dragged.text());\n        }\n\n        function _adjustDropzonePosition($dragged) {\n            const draggedBox = $dragged.get(0).getBoundingClientRect(),\n                $prevResult = $dropzoneElement.prev('.qti-choice'),\n                $nextResult = $dropzoneElement.next('.qti-choice'),\n                prevMiddle = $prevResult.length > 0 ? _getMiddleOf($prevResult) : false,\n                nextMiddle = $nextResult.length > 0 ? _getMiddleOf($nextResult) : false;\n\n            if (orientation !== 'horizontal') {\n                if (prevMiddle && draggedBox.top < prevMiddle.y) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && draggedBox.bottom > nextMiddle.y) {\n                    $nextResult.after($dropzoneElement);\n                }\n            } else {\n                if (prevMiddle && draggedBox.left < prevMiddle.x) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && draggedBox.right > nextMiddle.x) {\n                    $nextResult.after($dropzoneElement);\n                }\n            }\n        }\n\n        function _getMiddleOf($element) {\n            const elementBox = $element.get(0).getBoundingClientRect();\n            return {\n                x: elementBox.left + elementBox.width / 2,\n                y: elementBox.top + elementBox.height / 2\n            };\n        }\n\n        // rendering init\n\n        _setInstructions(interaction);\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function (e, data) {\n            if (data.element.getSerial() === interaction.getSerial()) {\n                if (data.key === 'maxChoices' || data.key === 'minChoices') {\n                    instructionMgr.removeInstructions(interaction);\n                    _setInstructions(interaction);\n                    instructionMgr.validateInstructions(interaction);\n                }\n            }\n        });\n\n        _freezeSize($container);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        const $container = containerHelper.get(interaction);\n        const $choiceArea = $$1('.choice-area', $container);\n        const $resultArea = $$1('.result-area', $container);\n        // legacy order attr support\n        const orderState = interaction.attr('data-order') || interaction.attr('order');\n        const isSingleOrder = orderState === 'single';\n\n        if (response === null || _.isEmpty(response)) {\n            resetResponse(interaction);\n        } else {\n            try {\n                _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n                    $resultArea.append(\n                        (isSingleOrder ? $resultArea : $choiceArea).find(`[data-identifier=\"${identifier}\"]`)\n                    );\n                });\n            } catch (e) {\n                throw new Error(`wrong response format in argument : ${e}`);\n            }\n        }\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    const _getRawResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const response = [];\n        $$1('.result-area>li', $container).each(function () {\n            response.push($$1(this).data('identifier'));\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Set additionnal data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     */\n    const getCustomData = function (interaction, data) {\n        return _.merge(data || {}, {\n            horizontal: interaction.attr('orientation') === 'horizontal' && orientationSelectionEnabled\n        });\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //first, remove all events\n        const selectors = [\n            '.choice-area >li:not(.deactivated)',\n            '.result-area >li',\n            '.icon-add-to-selection',\n            '.icon-remove-from-selection',\n            '.icon-move-before',\n            '.icon-move-after'\n        ];\n        selectors.forEach(function unbindInteractEvents(selector) {\n            interact($container.find(selector).selector).unset();\n        });\n\n        $$1(document).off('.commonRenderer');\n\n        $container.find('.order-interaction-area').removeAttr('style');\n\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                const $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function (a, b) {\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            const $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the order interaction\n     * @exports qtiCommonRenderer/renderers/interactions/OrderInteraction\n     */\n    var OrderInteraction = {\n        qtiClass: 'orderInteraction',\n        getData: getCustomData,\n        template: tpl,\n        render,\n        getContainer: containerHelper.get,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2020 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('qtiCustomInteractionContext',['lodash'], function(_) {\n    'use strict';\n\n    //need a global reference to have pciHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._pciHooks = window._pciHooks || {};\n\n    /**\n     * Global object accessible by all PCIs\n     *\n     * @type Object\n     */\n    return {\n        /**\n         * register a custom interaction (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} pciHook\n         * @returns {undefined}\n         */\n        register(pciHook) {\n            const typeIdentifier =\n                typeof pciHook.getTypeIdentifier === 'function' ? pciHook.getTypeIdentifier() : pciHook.typeIdentifier;\n            if (typeIdentifier) {\n                window._pciHooks[typeIdentifier] = pciHook;\n            } else {\n                throw new Error('invalid PCI hook');\n            }\n        },\n        /**\n         * notify when a custom interaction is ready for test taker interaction\n         *\n         * @param {string} pciInstance\n         * @fires custominteractionready\n         */\n        notifyReady(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n        /**\n         * notify when a custom interaction is completed by test taker\n         *\n         * @param {string} pciInstance\n         * @fires custominteractiondone\n         */\n        notifyDone(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n\n        onready(customInteraction, state) {\n            //to be implemented in future story\n        },\n        ondone(customInteraction, response, state, status) {\n            //to be implemented in future story\n        },\n\n        /**\n         * Get a cloned object representing the PCI model\n         *\n         * @param {string} pciTypeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance(pciTypeIdentifier) {\n            const registeredPCI = window._pciHooks[pciTypeIdentifier];\n\n            if (!registeredPCI) {\n                throw new Error('no portable custom interaction hook found with the id ' + pciTypeIdentifier);\n            }\n\n            return _.cloneDeep(registeredPCI);\n        }\n    };\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator',['qtiCustomInteractionContext'], function (qtiCustomInteractionContext) { 'use strict';\n\n    qtiCustomInteractionContext = qtiCustomInteractionContext && Object.prototype.hasOwnProperty.call(qtiCustomInteractionContext, 'default') ? qtiCustomInteractionContext['default'] : qtiCustomInteractionContext;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var instanciator = {\n        /**\n         * Get the PCI instance associated to the interaction object\n         * If none exists, create a new one based on the PCI typeIdentifier\n         *\n         * @param {Object} interaction - the js object representing the interaction\n         * @returns {Object} PCI instance\n         */\n        getPci(interaction) {\n            let pciTypeIdentifier;\n            let pci = interaction.data('pci');\n\n            if (!pci) {\n                pciTypeIdentifier = interaction.typeIdentifier;\n                pci = qtiCustomInteractionContext.createPciInstance(pciTypeIdentifier);\n                if (pci) {\n                    //binds the PCI instance to TAO interaction object and vice versa\n                    interaction.data('pci', pci);\n                    pci._taoCustomInteraction = interaction;\n                } else {\n                    throw new Error('no custom interaction hook found for the type ' + pciTypeIdentifier);\n                }\n            }\n\n            return pci;\n        },\n\n        /**\n         * Associate a PCI instance to the interaction object\n         * @param {Object} interaction - the js object representing the interaction\n         * @param {Object} instance - PCI instance\n         */\n        setPci(interaction, instance) {\n            interaction.data('pci', instance);\n        }\n    };\n\n    return instanciator;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator'], function (_, containerHelper, instanciator) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    function commonPciRenderer(runtime) {\n        return {\n            getRequiredModules: function getRequiredModules() {\n                var requireEntries = [];\n                //load hook if applicable\n                if (runtime.hook) {\n                    requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                }\n                //load libs\n                _.forEach(runtime.libraries, function(lib) {\n                    requireEntries.push(lib.replace(/\\.js$/, ''));\n                });\n                //load stylesheets\n                _.forEach(runtime.stylesheets, function(stylesheet) {\n                    requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\n                });\n                return requireEntries;\n            },\n            createInstance: function(interaction, context) {\n                var id = interaction.attr('responseIdentifier');\n                var pci = instanciator.getPci(interaction);\n                var properties = _.clone(interaction.properties);\n                var assetManager = context.assetManager;\n                var pciAssetManager = {\n                    resolve: function pciAssetResolve(url) {\n                        var resolved = assetManager.resolveBy('portableElementLocation', url);\n                        if (resolved === url || _.isUndefined(resolved)) {\n                            return assetManager.resolve(url);\n                        } else {\n                            return resolved;\n                        }\n                    }\n                };\n                pci.initialize(\n                    id,\n                    containerHelper\n                        .get(interaction)\n                        .children()\n                        .get(0),\n                    properties,\n                    pciAssetManager\n                );\n                return Promise.resolve(pci);\n            },\n            /**\n             *\n             * @param {Object }interaction\n             * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n             */\n            destroy: function destroy(interaction) {\n                return instanciator.getPci(interaction).destroy();\n            },\n            setState: function setState(interaction, state) {\n                instanciator.getPci(interaction).setSerializedState(state);\n            },\n            getState: function getState(interaction) {\n                return instanciator.getPci(interaction).getSerializedState();\n            }\n        };\n    }\n\n    return commonPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims',['lodash', 'core/logger', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'context'], function (_, loggerFactory, containerHelper, instanciator, sharedContext) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    sharedContext = sharedContext && Object.prototype.hasOwnProperty.call(sharedContext, 'default') ? sharedContext['default'] : sharedContext;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims');\n\n    const pciDoneCallback = pci => {\n        //standard callback function to be implemented in a future story\n        logger.info('pciDoneCallback called on PCI ' + pci.typeIdentifier);\n    };\n\n    /**\n     * Key under the IMS PCI constructor is stored on interaction\n     */\n    const pciConstructorDataKey = 'pciConstructor';\n\n    function defaultPciRenderer(runtime) {\n        return {\n            getRequiredModules() {\n                const requireEntries = [];\n                // load modules\n                _.forEach(runtime.modules, function (module, name) {\n                    requireEntries.push(name);\n                });\n                return requireEntries;\n            },\n            /**\n             * Saves the original IMS PCI module to be able to reinstanciate later\n             * @param {Object} interaction\n             * @param {Object} pciConstructor\n             */\n            setPCIConstructor(interaction, pciConstructor) {\n                interaction.data(pciConstructorDataKey, pciConstructor);\n            },\n            /**\n             * Returns with original IMS PCI module\n             * @param {Object} interaction\n             */\n            getPCIConstructor(interaction) {\n                return interaction.data(pciConstructorDataKey);\n            },\n            createInstance(interaction, context) {\n                let pciConstructor = this.getPCIConstructor(interaction);\n\n                //get interaction xml:lang prop to put it into pci instance config\n                const contentLanguage = interaction.attributes && interaction.attributes.language;\n                const itemLanguage = interaction.rootElement && interaction.rootElement.attributes && interaction.rootElement.attributes['xml:lang'];\n                const language = contentLanguage || itemLanguage;\n                const userLanguage = sharedContext && sharedContext.locale;\n\n                const properties = _.assign(_.clone(interaction.properties), {language, userLanguage});\n\n                // save original IMS PCI module first time to be able to reinstanciate later if necessary\n                if (!pciConstructor) {\n                    pciConstructor = instanciator.getPci(interaction);\n                    this.setPCIConstructor(interaction, pciConstructor);\n                }\n\n                // serialize any array or object properties\n                _.forOwn(properties, function (propVal, propKey) {\n                    properties[propKey] = _.isArray(propVal) || _.isObject(propVal) ? JSON.stringify(propVal) : propVal;\n                });\n\n                let pciReadyCallback;\n                const readyPromise = new Promise(resolve => {\n                    pciReadyCallback = resolve;\n                });\n\n                const config = {\n                    properties,\n                    templateVariables: {}, //not supported yet\n                    boundTo: context.response || {},\n                    onready: pciReadyCallback,\n                    ondone: pciDoneCallback,\n                    status: 'interacting' //only support interacting state currently(TODO: solution, review),\n                };\n\n                pciConstructor.getInstance(containerHelper.get(interaction).get(0), config, context.state);\n\n                return readyPromise.then(instance => {\n                    instanciator.setPci(interaction, instance);\n                    return instance;\n                });\n            },\n            destroy: function destroy(interaction) {\n                instanciator.getPci(interaction).oncompleted();\n            },\n            /**\n             * IMS PCI does not have setState, so PCI should be destroyed and reinstanciated with response.\n             * This function should run only in review mode.\n             * @param {Object} interaction\n             * @param {Object} state - state that should be set\n             * @returns {Promise<Object>} - Resolves with newly created instance\n             */\n            setReviewState(interaction, state) {\n                this.destroy(interaction);\n                return this.createInstance(interaction, { response: { RESPONSE: state.response } });\n            },\n            setState: _.noop,\n            getState(interaction) {\n                return instanciator.getPci(interaction).getState();\n            }\n        };\n    }\n\n    return defaultPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/ciRegistry'], function (_, Handlebars, Helpers0, containerHelper, PortableElement, instanciator, commonPciRenderer, imsPciRenderer, util, ciRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    commonPciRenderer = commonPciRenderer && Object.prototype.hasOwnProperty.call(commonPciRenderer, 'default') ? commonPciRenderer['default'] : commonPciRenderer;\n    imsPciRenderer = imsPciRenderer && Object.prototype.hasOwnProperty.call(imsPciRenderer, 'default') ? imsPciRenderer['default'] : imsPciRenderer;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n    lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-customInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2021 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _setPciModel = function _setPciModel(interaction, runtime) {\n        var pciRenderer;\n        if (runtime.model === 'IMSPCI') {\n            pciRenderer = imsPciRenderer(runtime);\n        } else {\n            pciRenderer = commonPciRenderer(runtime);\n        }\n        interaction.data('pci-model', runtime.model);\n        interaction.data('pci-renderer', pciRenderer);\n    };\n\n    var _getPciRenderer = function _getPciRenderer(interaction) {\n        return interaction.data('pci-renderer');\n    };\n\n    /**\n     * Execute javascript codes to bring the interaction to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. configure the paths\n     * 2. require all required libs\n     * 3. create a pci instance based on the interaction model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable (state and/or response)\n     *\n     * @param {Object} interaction\n     */\n    var render = function render(interaction, options) {\n        var self = this;\n\n        options = options || {};\n        return new Promise(function (resolve, reject) {\n            var id = interaction.attr('responseIdentifier');\n            var typeIdentifier = interaction.typeIdentifier;\n            var assetManager = self.getAssetManager();\n            var state;\n            var response = {};\n\n            if (options.state && options.state[id]) {\n                state = options.state[id];\n            }\n            response[id] = { base: null };\n\n            ciRegistry\n                .loadRuntimes({ include: [typeIdentifier] })\n                .then(function () {\n                    var pciRenderer;\n                    var runtime = ciRegistry.getRuntime(typeIdentifier);\n\n                    if (!runtime) {\n                        return reject('The runtime for the pci cannot be found : ' + typeIdentifier);\n                    }\n\n                    _setPciModel(interaction, runtime);\n\n                    pciRenderer = _getPciRenderer(interaction);\n\n                    window.require(\n                        pciRenderer.getRequiredModules(),\n                        function () {\n                            var pci = instanciator.getPci(interaction);\n                            if (pci) {\n                                pciRenderer.createInstance(interaction, {\n                                    response: response,\n                                    state: state,\n                                    assetManager: assetManager\n                                }).then(instance => {\n                                    //forward internal PCI event responseChange\n                                    if (_.isFunction(instance.on)) {\n                                        interaction.onPci('responseChange', function () {\n                                            containerHelper.triggerResponseChangeEvent(interaction);\n                                        });\n                                    }\n                                    resolve();\n                                });\n                            } else {\n                                reject('Unable to initialize pci \"' + id + '\"');\n                            }\n                        },\n                        reject\n                    );\n                })\n                .catch(function (error) {\n                    reject('Error loading runtime \"' + id + '\": ' + error);\n                });\n        });\n    };\n\n    /**\n     * Programmatically set the response following the json schema described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        instanciator.getPci(interaction).setResponse(response);\n    };\n\n    /**\n     * Get the response in the json format described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return instanciator.getPci(interaction).getResponse();\n    };\n\n    /**\n     * Remove the current response set in the interaction\n     * The state may not be restored at this point.\n     *\n     * @param {Object} interaction\n     */\n    var resetResponse = function resetResponse(interaction) {\n        instanciator.getPci(interaction).resetResponse();\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} interaction\n     * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n     */\n    var destroy = function destroy(interaction) {\n        return _getPciRenderer(interaction).destroy(interaction);\n    };\n\n    /**\n     * Restore the state of the interaction from the serializedState.\n     *\n     * @param {Object} interaction\n     * @param {Object} serializedState - json format\n     */\n    var setState = function setState(interaction, serializedState) {\n        _getPciRenderer(interaction).setState(interaction, serializedState);\n    };\n\n    /**\n     * Get the current state of the interaction as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} interaction\n     * @returns {Object} json format\n     */\n    var getState = function getState(interaction) {\n        return _getPciRenderer(interaction).getState(interaction);\n    };\n\n    var getData = function getData(customInteraction, data) {\n        //remove ns + fix media file path\n        var markup = data.markup;\n        markup = util.removeMarkupNamespaces(markup);\n        markup = PortableElement.fixMarkupMediaSources(markup, this);\n        data.markup = markup;\n\n        return data;\n    };\n\n    var PortableCustomInteraction = {\n        qtiClass: 'customInteraction',\n        template: tpl,\n        getData: getData,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        getState: getState,\n        setState: setState\n    };\n\n    return PortableCustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div\\n    class=\\\"qti-prompt-container\\\"\\n    data-html-editable-container\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <div class=\\\"qti-prompt\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-html-editable id=\\\"prompt-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Prompt = {\n        qtiClass: 'prompt',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return Prompt;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-selectPointInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Get the responses from the interaction\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    const getRawResponse = function getRawResponse(interaction) {\n        if (interaction && interaction.paper && _.isArray(interaction.paper.points)) {\n            return _.map(interaction.paper.points, function(point) {\n                return [point.x, point.y];\n            });\n        }\n        return [];\n    };\n\n    /**\n     * Add a new point to the interaction\n     * @param {Object} interaction\n     * @param {Object} point - the x/y point\n     */\n    const addPoint = function addPoint(interaction, point) {\n        const maxChoices = interaction.attr('maxChoices');\n\n        const pointChange = function pointChange() {\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        if (maxChoices > 0 && getRawResponse(interaction).length >= maxChoices) {\n            instructionMgr.validateInstructions(interaction);\n        } else {\n            if (!_.isArray(interaction.paper.points)) {\n                interaction.paper.points = [];\n            }\n\n            graphic.createTarget(interaction.paper, {\n                point: point,\n                create: function create(target) {\n                    if (interaction.isTouch && target && target.getBBox) {\n                        graphic.createTouchCircle(interaction.paper, target.getBBox());\n                    }\n\n                    interaction.paper.points.push(point);\n\n                    pointChange();\n                },\n                remove: function remove() {\n                    _.remove(interaction.paper.points, point);\n\n                    pointChange();\n                }\n            });\n        }\n    };\n\n    /**\n     * Make the image clickable and place targets at the given position.\n     * @param {Object} interaction\n     */\n    const enableSelection = function enableSelection(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $imageBox = $container.find('.main-image-box');\n        const isResponsive = $container.hasClass('responsive');\n        const image = interaction.paper.getById('bg-image-' + interaction.serial);\n\n        interaction.paper.isTouch = false;\n\n        //used to see if we are in a touch context\n        image.touchstart(function() {\n            interaction.paper.isTouch = true;\n            image.untouchstart();\n        });\n\n        //get the point on click\n        image.click(function imageClicked(event) {\n            addPoint(interaction, graphic.getPoint(event, interaction.paper, $imageBox, isResponsive));\n        });\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function(resolve) {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive  : $container.hasClass('responsive')\n            });\n\n            //enable to select the paper to position a target\n            enableSelection(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                choiceCount: false,\n                getResponse: getRawResponse,\n                onError: function(data) {\n                    if (data) {\n                        graphic.highlightError(data.target, 'success');\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    const setResponse = function(interaction, response) {\n        let responseValues;\n\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n\n                if (interaction.getResponseDeclaration().attr('cardinality') === 'single') {\n                    responseValues = [responseValues];\n                }\n                _(responseValues)\n                    .filter(function(point) {\n                        return _.isArray(point) && point.length === 2;\n                    })\n                    .forEach(function(point) {\n                        addPoint(interaction, {\n                            x: point[0],\n                            y: point[1]\n                        });\n                    });\n            } catch (err) {\n                return;\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    const resetResponse = function resetResponse(interaction) {\n        if (interaction && interaction.paper) {\n            interaction.paper.points = [];\n\n            interaction.paper.forEach(function(element) {\n                const point = element.data('point');\n                if (typeof point === 'object') {\n                    graphic.trigger(element, 'click');\n                }\n            });\n        }\n    };\n\n    /**\n         i* Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n         *\n         * @param {Object} interaction\n         * @returns {Object} the response\n         */\n    const getResponse = function(interaction) {\n        return pciResponse.serialize(getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container)\n                .empty()\n                .removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    var SelectPointInteraction = {\n        qtiClass: 'selectPointInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'nouislider'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, pciResponse, nouislider) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-sliderInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"sliderInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _slideTo = function(options) {\n        options.sliderCurrentValue.find('.qti-slider-cur-value').text(options.value);\n        options.sliderValue.val(options.value);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     */\n    const render = function(interaction) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            direction = window.getComputedStyle($container[0]).getPropertyValue('direction') || 'ltr',\n            $el = $$1('<div />').attr({ id: `${attributes.responseIdentifier}-qti-slider`, class: 'qti-slider' }), //slider element\n            $sliderLabels = $$1('<div />').attr({ class: 'qti-slider-values' }),\n            $sliderCurrentValue = $$1('<div />').attr({\n                id: `${attributes.responseIdentifier}-qti-slider-cur-value`,\n                class: 'qti-slider-cur-value'\n            }), //show the current selected value\n            $sliderValue = $$1('<input />').attr({ type: 'hidden', id: `${attributes.responseIdentifier}-qti-slider-value`, class: 'qti-slider-value' }); //the input that always holds the slider value\n\n        //getting the options\n        let orientation = 'horizontal';\n        const reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false, //setting the slider whether to be reverse or not\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            step = typeof attributes.step !== 'undefined' && attributes.step ? parseInt(attributes.step) : 1, //default value as per QTI standard\n            steps = (max - min) / step; //number of the steps\n\n        //add the containers\n        $sliderCurrentValue\n            .append(`<span class=\"qti-slider-cur-value-text\">${__('Current value:')}</span>`)\n            .append('<span class=\"qti-slider-cur-value\"></span>');\n\n        //setting the orientation of the slider\n        if (\n            typeof attributes.orientation !== 'undefined' &&\n            $$1.inArray(attributes.orientation, ['horizontal', 'vertical']) > -1\n        ) {\n            orientation = attributes.orientation;\n        }\n\n        let reversedLabels = false;\n        //for vertical only reverse matters\n        if(orientation === 'vertical') {\n            reversedLabels = reverse;\n        }else {\n            reversedLabels = ((!reverse && direction === 'rtl') || (reverse && direction !== 'rtl'));\n        }\n\n        $sliderLabels\n            .append(`<span class=\"slider-min\">${reversedLabels ? max : min }</span>`)\n            .append(`<span class=\"slider-max\">${reversedLabels ? min : max}</span>`);\n\n        interaction\n            .getContainer()\n            .append($el)\n            .append($sliderLabels)\n            .append($sliderCurrentValue)\n            .append($sliderValue);\n\n\n        let sliderSize = 0;\n\n        if (orientation === 'horizontal') {\n            $container.addClass('qti-slider-horizontal');\n        } else {\n            const maxHeight = 300;\n            sliderSize = steps * 20;\n            if (sliderSize > maxHeight) {\n                sliderSize = maxHeight;\n            }\n            $container.addClass('qti-slider-vertical');\n            $el.height(`${sliderSize}px`);\n            $sliderLabels.height(`${sliderSize}px`);\n        }\n\n        //set the middle value if the stepLabel attribute is enabled\n        if (typeof attributes.stepLabel !== 'undefined' && attributes.stepLabel) {\n            const middleStep = parseInt(steps / 2),\n                leftOffset = (100 / steps) * middleStep,\n                middleValue = reverse ? max - middleStep * step : min + middleStep * step;\n\n            if (orientation === 'horizontal') {\n                $sliderLabels\n                    .find('.slider-min')\n                    .after(`<span class=\"slider-middle\" style=\"left:'${leftOffset}%\">${middleValue}</span>`);\n            } else {\n                $sliderLabels\n                    .find('.slider-min')\n                    .after(`<span class=\"slider-middle\" style=\"top:${leftOffset}%\">${middleValue}</span>`);\n            }\n        }\n\n        //create the slider\n        $el.noUiSlider({\n            start: reverse ? max : min,\n            range: {\n                min: min,\n                max: max\n            },\n            step: step,\n            orientation,\n            direction\n        }).on('slide', function() {\n            let val = parseInt($$1(this).val());\n            if (interaction.attr('reverse')) {\n                val = max + min - val;\n            }\n            val = Math.round(val * 1000) / 1000;\n            _slideTo({\n                value: val,\n                sliderValue: $sliderValue,\n                sliderCurrentValue: $sliderCurrentValue\n            });\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n        });\n\n        _slideTo({\n            value: min,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function(e, data) {\n            if (data.element.getSerial() === interaction.getSerial()) {\n                if (data.key === 'responseIdentifier' && data.value) {\n                    const attributesNew = interaction.getAttributes();\n                    // data.value and attributesNew.responseIdentifier is the same\n                    $container.find('.qti-slider').attr({ id: `${attributesNew.responseIdentifier}-qti-slider`});\n                    $container.find('.qti-slider-cur-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-cur-value`});\n                    $container.find('.qti-slider-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-value`});\n                }\n            }\n        });\n    };\n\n    var resetResponse = function(interaction) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false,\n            startValue = reverse ? max : min;\n\n        _slideTo({\n            value: min,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        $el.val(startValue);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound);\n        let value;\n\n        value = pciResponse.unserialize(response, interaction)[0];\n\n        _slideTo({\n            value: value,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        $el.val(interaction.attr('reverse') ? max + min - value : value);\n    };\n\n    var _getRawResponse = function(interaction) {\n        let value;\n        const attributes = interaction.getAttributes(),\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\n            min = parseInt(attributes.lowerBound),\n            $container = interaction.getContainer(),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`);\n\n        if (baseType === 'integer') {\n            value = parseInt($sliderValue.val());\n        } else if (baseType === 'float') {\n            value = parseFloat($sliderValue.val());\n        }\n\n        return isNaN(value) ? min : value;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function(interaction) {\n        return pciResponse.serialize([_getRawResponse(interaction)], interaction);\n    };\n\n    const destroy = function(interaction) {\n        const $container = interaction.getContainer();\n\n        $container.empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    var SliderInteraction = {\n        qtiClass: 'sliderInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'util/locale', 'ui/tooltip', 'core/logger', 'util/converter'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, patternMaskHelper, locale, tooltip, loggerFactory, converter) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n    locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    converter = converter && Object.prototype.hasOwnProperty.call(converter, 'default') ? converter['default'] : converter;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n\n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n\n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<input\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        class=\\\"qti-interaction qti-inlineInteraction qti-textEntryInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n        data-qti-class=\\\"textEntryInteraction\\\"\\n        type=\\\"text\\\"\\n>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2022 Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Create a logger\n     */\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js');\n\n    /**\n     * If item has 'vertical-rl' writing mode\n     * @returns {Boolean}\n     */\n    const getIsVerticalWritingMode = () => {\n        const itemBody = $$1('.qti-itemBody');\n        return itemBody.hasClass('writing-mode-vertical-rl');\n    };\n\n    /**\n     * Hide the tooltip for the text input\n     * @param {jQuery} $input\n     */\n    function hideTooltip($input) {\n        if ($input.data('$tooltip')) {\n            $input.data('$tooltip').hide();\n            $input.data('textentry-tooltip-is-shown', false);\n        }\n    }\n\n    /**\n     * Create/Show tooltip for the text input\n     * @param {jQuery} $input\n     * @param {String} theme\n     * @param {String} message\n     */\n    function showTooltip($input, theme, message) {\n        if ($input.data('$tooltip')) {\n            $input.data('$tooltip').updateTitleContent(message);\n        } else {\n            const isVertical = getIsVerticalWritingMode();\n            let tooltipOptions = {\n                theme: theme,\n                trigger: 'manual',\n                placement: isVertical ? 'right' : 'top'\n            };\n            const textEntryTooltip = tooltip.create($input, message, tooltipOptions);\n\n            $input.data('$tooltip', textEntryTooltip);\n        }\n\n        $input.data('$tooltip').show();\n        $input.data('textentry-tooltip-is-shown', true);\n    }\n\n    /**\n     * Refresh tooltip position\n     * @param {jQuery} $input\n     */\n    function refreshTooltip($input) {\n        if ($input.data('$tooltip') && $input.data('textentry-tooltip-is-shown')) {\n            $input.data('$tooltip').hide();\n            $input.data('$tooltip').show();\n        }\n    }\n\n    /**\n     * Validate the input for decimal values.\n     *\n     * This function ensures that the input value is either empty or follows\n     * the rules for decimal numbers. It allows numbers with optional\n     * thousands separators (commas) and a mandatory decimal point (dot).\n     *\n     * @param {jQuery} $input\n     * @param {Object} options - `{ allowMinusOnly: boolean, withTooltip: boolean }`\n     */\n    function validateDecimalInput($input, { allowMinusOnly = false, withTooltip = true } = {}) {\n        const separatorName = {\n            '.': __('(dot)'),\n            ',': __('(comma)'),\n            ' ': __('(space)')\n        };\n        const value = converter.convert($input.val());\n        const thousandsSeparator = locale.getThousandsSeparator();\n        const decimalSeparator = locale.getDecimalSeparator();\n        const thousandsSeparatorName = separatorName[thousandsSeparator] ? separatorName[thousandsSeparator] : '';\n        const decimalSeparatorName = separatorName[decimalSeparator] ? separatorName[decimalSeparator] : '';\n\n        const escapedThousandsSeparator = thousandsSeparator.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        const escapedDecimalSeparator = decimalSeparator.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n        let regexPattern = `^$|^-?\\\\d+(${escapedDecimalSeparator}\\\\d+)?$|^-?\\\\d*${escapedDecimalSeparator}$|^-?${escapedDecimalSeparator}\\\\d+$`;\n        if (thousandsSeparator) {\n            regexPattern += `|^-?\\\\d{1,3}(${escapedThousandsSeparator}\\\\d{3})*(${escapedDecimalSeparator}\\\\d+)?$`;\n        }\n        if (allowMinusOnly) {\n            regexPattern += '|^-$';\n        }\n\n        const regex = new RegExp(regexPattern);\n\n        if (!regex.test(value)) {\n            $input.addClass('error');\n\n            if (withTooltip) {\n                const decimalError = thousandsSeparator\n                    ? __(\n                          'Invalid value, use %s %s for decimal point and %s %s for thousands separator.',\n                          decimalSeparator,\n                          decimalSeparatorName,\n                          thousandsSeparator,\n                          thousandsSeparatorName\n                      )\n                    : __('Invalid value, use %s %s for decimal point.', decimalSeparator, decimalSeparatorName);\n                showTooltip($input, 'error', decimalError);\n            } else {\n                hideTooltip($input);\n            }\n        } else {\n            $input.removeClass('error');\n            hideTooltip($input);\n        }\n    }\n\n    /**\n     * Validate the input for integer values.\n     * @param {jQuery} $input\n     * @param {Object} options - `{ allowMinusOnly: boolean, withTooltip: boolean }`\n     */\n    function validateIntegerInput($input, { allowMinusOnly = false, withTooltip = true } = {}) {\n        const value = converter.convert($input.val());\n        const regex = new RegExp(`^${allowMinusOnly ? '-?' : ''}$|^-?\\\\d+$`);\n        if (!regex.test(value)) {\n            $input.addClass('error');\n            if (withTooltip) {\n                showTooltip($input, 'error', __('Invalid value, should be an integer number.'));\n            } else {\n                hideTooltip($input);\n            }\n        } else {\n            $input.removeClass('error');\n            hideTooltip($input);\n        }\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     */\n    function render(interaction) {\n        const attributes = interaction.getAttributes();\n        const baseType = interaction.getResponseDeclaration().attr('baseType');\n        const $input = interaction.getContainer();\n        const serial = $input.data('serial');\n        const patternMask = interaction.attr('patternMask');\n        const maxChars = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\n        let expectedLength;\n\n        // Setting up baseType\n        switch (baseType) {\n            case 'integer':\n                $input.attr('inputmode', 'numeric');\n                $input\n                    .on('input.commonRenderer', () =>\n                        validateIntegerInput($input, { allowMinusOnly: true, withTooltip: true })\n                    )\n                    .on('focus.commonRenderer', () =>\n                        validateIntegerInput($input, { allowMinusOnly: false, withTooltip: true })\n                    )\n                    .on('blur.commonRenderer', () =>\n                        validateIntegerInput($input, { allowMinusOnly: false, withTooltip: false })\n                    );\n                break;\n            case 'float':\n                $input.attr('inputmode', 'decimal');\n                $input\n                    .on('input.commonRenderer', () =>\n                        validateDecimalInput($input, { allowMinusOnly: true, withTooltip: true })\n                    )\n                    .on('focus.commonRenderer', () =>\n                        validateDecimalInput($input, { allowMinusOnly: false, withTooltip: true })\n                    )\n                    .on('blur.commonRenderer', () =>\n                        validateDecimalInput($input, { allowMinusOnly: false, withTooltip: false })\n                    );\n                break;\n            default:\n                $input.attr('inputmode', 'text');\n        }\n\n        //setting up the width of the input field\n        if (attributes.expectedLength) {\n            //adding 2 chars to include reasonable padding size\n            expectedLength = parseInt(attributes.expectedLength) + 2;\n            $input.css('inline-size', expectedLength + 'ch');\n            $input.css('min-inline-size', expectedLength + 'ch');\n        }\n\n        //checking if there's a placeholder for the input\n        if (attributes.placeholderText) {\n            $input.attr('placeholder', attributes.placeholderText);\n        }\n\n        if (maxChars) {\n            const updateMaxCharsTooltip = () => {\n                const count = $input.val().length;\n                let message;\n                let messageType;\n\n                if (count) {\n                    message = __('%d/%d', count, maxChars);\n                } else {\n                    message = __('%d characters allowed', maxChars);\n                }\n\n                if (count >= maxChars) {\n                    $input.addClass('maxed');\n                    messageType = 'warning';\n                } else {\n                    $input.removeClass('maxed');\n                    messageType = 'info';\n                }\n\n                showTooltip($input, messageType, message);\n                if (count && messageType === 'warning') {\n                    hideTooltip($input);\n                }\n            };\n\n            $input\n                .attr('maxlength', maxChars)\n                .on('focus.commonRenderer', function () {\n                    updateMaxCharsTooltip();\n                })\n                .on('keyup.commonRenderer', function () {\n                    updateMaxCharsTooltip();\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                })\n                .on('blur.commonRenderer', function () {\n                    hideTooltip($input);\n                });\n        } else if (attributes.patternMask) {\n            const updatePatternMaskTooltip = () => {\n                const regex = new RegExp(attributes.patternMask);\n\n                hideTooltip($input);\n\n                if ($input.val()) {\n                    if (regex.test($input.val())) {\n                        $input.removeClass('error');\n                    } else {\n                        $input.addClass('error');\n                        showTooltip($input, 'error', __('This is not a valid answer'));\n                    }\n                }\n            };\n\n            $input\n                .on('focus.commonRenderer', function () {\n                    updatePatternMaskTooltip();\n                })\n                .on('keyup.commonRenderer', function () {\n                    updatePatternMaskTooltip();\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                })\n                .on('blur.commonRenderer', function () {\n                    hideTooltip($input);\n                });\n        } else {\n            $input.on('keyup.commonRenderer', function () {\n                containerHelper.triggerResponseChangeEvent(interaction);\n            });\n        }\n\n        //refresh tooltip position when all styles loaded.\n        $$1(document).on(`themeapplied.textEntryInteraction-${serial}`, () => {\n            refreshTooltip($input);\n        });\n    }\n\n    function resetResponse(interaction) {\n        interaction.getContainer().val('');\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    function setResponse(interaction, response) {\n        let responseValue;\n\n        try {\n            responseValue = pciResponse.unserialize(response, interaction);\n        } catch (e) {\n            logger.warn(`setResponse error ${e}`);\n        }\n\n        if (responseValue && responseValue.length) {\n            interaction.getContainer().val(responseValue[0]);\n        }\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    function getResponse(interaction) {\n        const ret = { base: {} };\n        const $input = interaction.getContainer();\n        const attributes = interaction.getAttributes();\n        const baseType = interaction.getResponseDeclaration().attr('baseType');\n        const numericBase = attributes.base || 10;\n\n        const inputValue = $input.val();\n        let value;\n\n        if (\n            (attributes.patternMask && $input.hasClass('error')) ||\n            (attributes.placeholderText && inputValue === attributes.placeholderText)\n        ) {\n            //invalid response or response equals to the placeholder text are considered empty\n            value = '';\n        } else {\n            const convertedValue = converter.convert(inputValue.trim());\n            if (baseType === 'integer') {\n                value = locale.parseInt(convertedValue, numericBase);\n            } else if (baseType === 'float') {\n                value = locale.parseFloat(convertedValue);\n            } else if (baseType === 'string') {\n                value = convertedValue;\n            }\n        }\n\n        ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n\n        return ret;\n    }\n\n    function destroy(interaction) {\n        const $interaction = containerHelper.get(interaction);\n        const serial = $interaction.data('serial');\n\n        $$1('input.qti-textEntryInteraction').each(function (index, el) {\n            const $input = $$1(el);\n            if ($input.data('$tooltip')) {\n                $input.data('$tooltip').dispose();\n                $input.removeData('$tooltip');\n            }\n        });\n\n        //remove event\n        $$1(document).off('.commonRenderer');\n        $interaction.off('.commonRenderer');\n        $$1(document).off(`.textEntryInteraction-${serial}`);\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        const $input = interaction.getContainer();\n        if ($input.hasClass('error')) {\n            state.validity = { isValid: false };\n        }\n\n        return state;\n    }\n\n    var TextEntryInteraction = {\n        qtiClass: 'textEntryInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',['jquery', 'lodash', 'i18n', 'core/mimetype', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/uploadMime', 'ui/progressbar', 'ui/previewer', 'ui/modal', 'ui/waitForMedia'], function ($$1, _, __, mimetype, Handlebars, Helpers0, containerHelper, instructionMgr, uploadHelper, progressbar, previewer, modal, waitForMedia) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimetype = mimetype && Object.prototype.hasOwnProperty.call(mimetype, 'default') ? mimetype['default'] : mimetype;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    uploadHelper = uploadHelper && Object.prototype.hasOwnProperty.call(uploadHelper, 'default') ? uploadHelper['default'] : uploadHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"accept=\\\"\";\n      if (helper = helpers.accept) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.accept); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-blockInteraction qti-uploadInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n\t\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\t<div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"file-upload fixed-grid-row lft\\\">\\n        <div class=\\\"progressbar\\\"></div>\\n        <span class=\\\"btn-info small col-4\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Browse...\", options) : helperMissing.call(depth0, \"__\", \"Browse...\", options)))\n        + \"</span>\\n        <span class=\\\"file-name placeholder col-8 truncate\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No file selected\", options) : helperMissing.call(depth0, \"__\", \"No file selected\", options)))\n        + \"</span>\\n        <input type=\\\"file\\\" \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.accept), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"/>\\n    </div>\\n    <div class=\\\"file-upload-preview lft visible-file-upload-preview runtime-visible-file-upload-preview\\\">\\n        <p class=\\\"nopreview\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No preview available\", options) : helperMissing.call(depth0, \"__\", \"No preview available\", options)))\n        + \"</p>\\n    </div>\\n    <div class=\\\"file-upload-preview-popup modal\\\">\\n        <div class=\\\"modal-body\\\">\\n        </div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _initialInstructions = __('Browse your computer and select the appropriate file.');\n\n    var _readyInstructions = __('The selected file is ready to be sent.');\n\n    /**\n     * Validate type of selected file\n     * @param file\n     * @param interaction\n     * @returns {boolean}\n     */\n    var validateFileType = function validateFileType(file, interaction) {\n        var expectedTypes = uploadHelper.getExpectedTypes(interaction, true);\n        var filetype = mimetype.getMimeType(file);\n        if (expectedTypes.length) {\n            return _.indexOf(expectedTypes, filetype) >= 0;\n        }\n        return true;\n    };\n\n    /**\n     * Compute the message to be displayed when an invalid file type has been selected\n     *\n     * @param {Object} interaction\n     * @param {Function} userSelectedType\n     * @param {Function} messageWrongType\n     * @returns {String}\n     */\n    var getMessageWrongType = function getMessageWrongType(interaction, userSelectedType, messageWrongType) {\n        var types = uploadHelper.getExpectedTypes(interaction);\n        var expectedTypeLabels = _.map(_.uniq(types), function (type) {\n            var mime = _.find(uploadHelper.getMimeTypes(), { mime: type });\n            if (mime) {\n                return mime.label;\n            } else {\n                return type;\n            }\n        });\n\n        if (messageWrongType && _.isFunction(messageWrongType)) {\n            return messageWrongType({\n                userSelectedType: userSelectedType,\n                types: expectedTypeLabels\n            });\n        } else {\n            return __(\n                'Wrong type of file. Expected %s. The selected file has the mimetype \"%s\".',\n                expectedTypeLabels.join(__(' or ')),\n                userSelectedType\n            );\n        }\n    };\n\n    var _handleSelectedFiles = function _handleSelectedFiles(interaction, file, messageWrongType) {\n        var reader;\n        var $container = containerHelper.get(interaction);\n\n        // Show information about the processed file to the candidate.\n        var filename = file.name;\n        var filetype = mimetype.getMimeType(file);\n        instructionMgr.removeInstructions(interaction);\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        if (!validateFileType(file, interaction)) {\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(\n                interaction,\n                getMessageWrongType(interaction, filetype, messageWrongType),\n                function () {\n                    this.setLevel('error');\n                    //clear preview\n                }\n            );\n            instructionMgr.validateInstructions(interaction);\n            return;\n        }\n\n        $container\n            .find('.file-name')\n            .empty()\n            .append(filename);\n\n        // Let's read the file to get its base64 encoded content.\n        reader = new FileReader();\n\n        // Update file processing progress.\n\n        reader.onload = function (e) {\n            var base64Data, commaPosition, base64Raw, $previewArea;\n\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(interaction, _readyInstructions, function () {\n                this.setLevel('success');\n            });\n            instructionMgr.validateInstructions(interaction);\n\n            $container.find('.progressbar').progressbar('value', 100);\n\n            base64Data = e.target.result;\n            commaPosition = base64Data.indexOf(',');\n\n            // Store the base64 encoded data for later use.\n            base64Raw = base64Data.substring(commaPosition + 1);\n            interaction.data('_response', { base: { file: { data: base64Raw, mime: filetype, name: filename } } });\n\n            $previewArea = $container.find('.file-upload-preview');\n            $previewArea.previewer({\n                url: base64Data,\n                name: filename,\n                mime: filetype\n            });\n\n            // we wait for the image to be completely loaded\n            $previewArea.waitForMedia(function () {\n                var $originalImg = $previewArea.find('img'),\n                    $largeDisplay = $$1('.file-upload-preview-popup'),\n                    $item = $$1('.qti-item'),\n                    itemWidth = $item.width(),\n                    winWidth = $$1(window).width() - 80,\n                    fullHeight = $$1('body').height(),\n                    imgNaturalWidth,\n                    isOversized,\n                    modalWidth;\n\n                if (!$originalImg.length) {\n                    return;\n                }\n\n                imgNaturalWidth = $originalImg[0].naturalWidth;\n                isOversized = imgNaturalWidth > itemWidth;\n                modalWidth = Math.min(winWidth, imgNaturalWidth);\n\n                $previewArea.toggleClass('clickable', isOversized);\n\n                if (!isOversized) {\n                    return;\n                }\n\n                $previewArea.on('click', function () {\n                    var $modalBody;\n\n                    $$1('.upload-ia-modal-bg').remove();\n\n                    // remove any previous unnecessary content before inserting the preview image\n                    $modalBody = $largeDisplay.find('.modal-body');\n                    $modalBody.empty().append($originalImg.clone());\n\n                    $largeDisplay\n                        .on('opened.modal', function () {\n                            // prevents the rest of the page from scrolling when modal is open\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'hidden');\n\n                            $largeDisplay.css({\n                                width: modalWidth,\n                                height: fullHeight,\n                                left: (modalWidth - itemWidth - 40) / -2\n                            });\n                        })\n                        .on('closed.modal', function () {\n                            // make the page scrollable again\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'auto');\n                        })\n                        .modal({ modalOverlayClass: 'modal-bg upload-ia-modal-bg' });\n                });\n            });\n        };\n\n        reader.onloadstart = function onloadstart() {\n            instructionMgr.removeInstructions(interaction);\n            $container.find('.progressbar').progressbar('value', 0);\n        };\n\n        reader.onprogress = function onprogress(e) {\n            var percentProgress = Math.ceil((Math.round(e.loaded) / Math.round(e.total)) * 100);\n            $container.find('.progressbar').progressbar('value', percentProgress);\n        };\n\n        reader.readAsDataURL(file);\n    };\n\n    /**\n     * Resets the GUI state to the default display.\n     *\n     * @param {Object} interaction\n     */\n    function resetGui(interaction) {\n        var $container = containerHelper.get(interaction);\n        $container.find('.file-name').text(__('No file selected'));\n        $container.find('.btn-info').text(__('Browse...'));\n    }\n    function callResetGui(interaction) {\n        const renderer = interaction.getRenderer();\n        if (_.isFunction(renderer.resetGui)) {\n            renderer.resetGui(interaction);\n        }\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    function render(interaction) {\n        var changeListener,\n            self = this,\n            $input;\n        var $container = containerHelper.get(interaction);\n        callResetGui(interaction);\n\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        //init response\n        interaction.data('_response', { base: null });\n\n        changeListener = function (e) {\n            var file = e.target.files[0];\n\n            // Are you really sure something was selected\n            // by the user... huh? :)\n            if (typeof file !== 'undefined') {\n                _handleSelectedFiles(interaction, file, self.getCustomMessage('upload', 'wrongType'));\n            }\n        };\n\n        $input = $container.find('input');\n\n        $container.find('.progressbar').progressbar();\n\n        if (!window.FileReader) {\n            throw new Error('FileReader API not supported! Please use a compliant browser!');\n        }\n        $input.bind('change', changeListener);\n\n        // IE Specific hack, prevents button to slightly move on click\n        $input.bind('mousedown', function (e) {\n            e.preventDefault();\n            $$1(this).blur();\n            return false;\n        });\n    }\n    var resetResponse = function resetResponse(interaction) {\n        callResetGui(interaction);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        var filename,\n            $container = containerHelper.get(interaction);\n\n        if (response.base !== null) {\n            filename =\n                typeof response.base.file.name !== 'undefined' ? response.base.file.name : 'previously-uploaded-file';\n            $container\n                .find('.file-name')\n                .empty()\n                .text(filename);\n        }\n\n        interaction.data('_response', response);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return interaction.data('_response');\n    };\n\n    var destroy = function destroy(interaction) {\n        //remove event\n        $$1(document).off('.commonRenderer');\n        containerHelper.get(interaction).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Set additional data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     * This way we could cover a lot more types. How could this be matched with the preview templates\n     * in tao/views/js/ui/previewer.js\n     */\n    var getCustomData = function getCustomData(interaction, data) {\n        return _.merge(data || {}, {\n            accept: uploadHelper.getExpectedTypes(interaction, true).join(',')\n        });\n    };\n\n    var UploadInteraction = {\n        qtiClass: 'uploadInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        getData: getCustomData,\n\n        // Exposed private methods for qtiCreator\n        resetGui: resetGui\n    };\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Item',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler'], function (Handlebars, Helpers0, containerHelper, itemStylesheetHandler) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    itemStylesheetHandler = itemStylesheetHandler && Object.prototype.hasOwnProperty.call(itemStylesheetHandler, 'default') ? itemStylesheetHandler['default'] : itemStylesheetHandler;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-item tao-scope runtime\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-itemBody \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n    <div id=\\\"modalFeedbacks\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var Item = {\n        qtiClass: 'assessmentItem',\n        template: tpl,\n        getContainer: containerHelper.get,\n\n        /**\n         * Rendering initializations for the item\n         * @param {Object} item - the item model\n         */\n        render: function render(item) {\n            //target blank for all <a>\n            containerHelper.targetBlank(containerHelper.get(item));\n\n            //add stylesheets\n            itemStylesheetHandler.attach(item.stylesheets);\n        },\n\n        /**\n         * Unrender\n         * @param {Object} item - the item model\n         */\n        destroy: function destroy(item) {\n            //clear the container cache\n            containerHelper.clear();\n\n            //detach stylesheets\n            if (item.stylesheets) {\n                itemStylesheetHandler.detach(item.stylesheets);\n            }\n        }\n    };\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Math',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'mathJax', 'jquery'], function (Handlebars, Helpers0, containerHelper, MathJax, $$1) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    MathJax = MathJax && Object.prototype.hasOwnProperty.call(MathJax, 'default') ? MathJax['default'] : MathJax;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math display=\\\"block\\\">\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math>\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.block), {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    // Do not wait between rendering each individual math element\n    // http://docs.mathjax.org/en/latest/api/hub.html\n    if (typeof MathJax !== 'undefined' && MathJax) {\n        MathJax.Hub.processSectionDelay = 0;\n    }\n\n    var _Math = {\n        qtiClass: 'math',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(math) {\n            $$1('body').on('mathjaxRendered', function (event, reference) {\n                if ($$1(reference).find('math').length !== 0) {\n                    $$1(reference).closest('.qti-choice').addClass('flexible-choice-width');\n                }\n            });\n\n            return new Promise(function (resolve) {\n                const $self = containerHelper.get(math);\n                if (typeof MathJax !== 'undefined' && MathJax) {\n                    //MathJax needs to be exported globally to integrate with tools like TTS, it's weird...\n                    if (!window.MathJax) {\n                        window.MathJax = MathJax;\n                    }\n                    //defer execution fix some rendering issue in chrome\n                    if ($self.length) {\n                        MathJax.Hub.Queue(['Typeset', MathJax.Hub, $self[0]]);\n                        MathJax.Hub.Queue(function () {\n                            $$1('body').trigger('mathjaxRendered', [$self[0]]);\n                            resolve();\n                        });\n                    } else {\n                        resolve();\n                    }\n                } else {\n                    resolve();\n                }\n            });\n        }\n    };\n\n    return _Math;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA\n     **/\n\n    /**\n     * Prefix used to the variable storage\n     * @type String\n     */\n    var _prefix = 'x-tao-';\n\n    /**\n     * Check if the element is of a qti container type\n     *\n     * @private\n     * @param {Object} element\n     * @returns {Boolean}\n     */\n    function _checkContainerType(element) {\n        if (_.isFunction(element.initContainer) && _.isFunction(element.body)) {\n            return true;\n        } else {\n            throw 'the element is not of a container type';\n        }\n    }\n\n    /**\n     * Get the body element of the container\n     *\n     * @private\n     * @param {Object} element\n     * @returns {JQuery}\n     */\n    function _getBodyDom(element) {\n        if (_checkContainerType(element)) {\n            return $('<div>')\n                .html(element.body())\n                .find('.x-tao-wrapper');\n        }\n    }\n\n    /**\n     * Add a class to the body element of the qti container\n     *\n     * @private\n     * @param {Object} element\n     * @param {String} newClass\n     * @param {String} [oldClass]\n     */\n    function _setBodyDomClass(element, newClass, oldClass) {\n        if (_checkContainerType(element) && (oldClass || newClass)) {\n            var $wrapper = $('<div>').html(element.body());\n            //set css class to element\n            _setDomClass($wrapper, newClass, oldClass);\n            //set to the model\n            element.body($wrapper.html());\n        }\n    }\n\n    /**\n     * Switch class to the wrapped DOM\n     *\n     * @param {JQuery} $wrapper\n     * @param {String} newClass\n     * @param {String} oldClass\n     * @returns {undefined}\n     */\n    function _setDomClass($wrapper, newClass, oldClass) {\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\n        if (!$bodyDom.length) {\n            //create one\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\n        }\n        if (oldClass) {\n            $bodyDom.removeClass(oldClass);\n        }\n        if (newClass) {\n            $bodyDom.addClass(newClass);\n        }\n    }\n\n    /**\n     * Add manually the encoded information to a dom element\n     *\n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\n     * @param {String} dataName - the name of the information\n     * @param {String} newValue - the new value to be added\n     * @param {String} [oldValue] - the old value to be removed\n     * @returns {undefined}\n     */\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue) {\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\n    }\n\n    /**\n     * Get the full variable name for the data store\n     *\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {String}\n     */\n    function _getEncodedDataString(dataName, value) {\n        if (dataName && value) {\n            return _prefix + dataName + '-' + value;\n        }\n        return '';\n    }\n\n    /**\n     * Set a data string to the element identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} newValue\n     * @returns {undefined}\n     */\n    function setEncodedData(element, dataName, newValue) {\n        var oldValue = getEncodedData(element, dataName);\n        return _setBodyDomClass(\n            element,\n            _getEncodedDataString(dataName, newValue),\n            _getEncodedDataString(dataName, oldValue)\n        );\n    }\n\n    /**\n     * Remove the stored data from the element by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {unresolved}\n     */\n    function removeEncodedData(element, dataName) {\n        var oldValue = getEncodedData(element, dataName);\n        if (dataName && oldValue) {\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\n        }\n    }\n\n    /**\n     * Check if the stored data exist\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {Boolean}\n     */\n    function hasEncodedData(element, dataName, value) {\n        var $body = _getBodyDom(element);\n        if ($body && $body.length && dataName && value) {\n            return $body.hasClass(_getEncodedDataString(dataName, value));\n        }\n        return false;\n    }\n\n    /**\n     * Get the encoded data identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {String}\n     */\n    function getEncodedData(element, dataName) {\n        var regex, matches;\n        var $body = _getBodyDom(element);\n        if (dataName && $body && $body.length && $body.attr('class')) {\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9-._]*)');\n            matches = $body.attr('class').match(regex);\n            if (matches) {\n                return matches[1];\n            }\n        }\n    }\n\n    /**\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\n     */\n    var container = {\n        setEncodedData: setEncodedData,\n        hasEncodedData: hasEncodedData,\n        getEncodedData: getEncodedData,\n        removeEncodedData: removeEncodedData,\n        setEncodedDataToDom: setEncodedDataToDom\n    };\n\n    return container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiItem/helper/container', 'ui/waitForMedia', 'ui/modal'], function (_, Handlebars, Helpers0, containerHelper, coreContainerHelper, waitForMedia, modal) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    coreContainerHelper = coreContainerHelper && Object.prototype.hasOwnProperty.call(coreContainerHelper, 'default') ? coreContainerHelper['default'] : coreContainerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"modal \";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"<h2 class=\\\"qti-title modal-title\\\">\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"</h2>\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.inline), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"qti-modalFeedback \";\n      if (helper = helpers.feedbackStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.feedbackStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"modal-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var modalFeedbackRenderer = {\n        qtiClass: 'modalFeedback',\n        template: tpl,\n        getContainer: containerHelper.get,\n        width: 600,\n        getData: function(fb, data) {\n            data.feedbackStyle = coreContainerHelper.getEncodedData(fb, 'modalFeedback');\n            return data;\n        },\n        render: function(modalFeedback, data) {\n            var $modal = containerHelper.get(modalFeedback);\n\n            $modal.waitForMedia(function() {\n                //when we are sure that media is loaded:\n                $modal\n                    .on('opened.modal', function() {\n                        //set item body height\n                        var $itemBody = containerHelper.get(modalFeedback.getRootElement()).children('.qti-itemBody');\n                        var requiredHeight = $modal.outerHeight() + parseInt($modal.css('top'));\n                        if (requiredHeight > $itemBody.height()) {\n                            $itemBody.height(requiredHeight);\n                        }\n                    })\n                    .on('closed.modal', function() {\n                        data = data || {};\n\n                        if (_.isFunction(data.callback)) {\n                            data.callback.call(this);\n                        }\n                    })\n                    .modal({\n                        startClosed: false,\n                        minHeight: modalFeedbackRenderer.minHeight,\n                        width: modalFeedbackRenderer.width\n                    });\n            });\n        }\n    };\n\n    return modalFeedbackRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Object',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/previewer'], function (Handlebars, Helpers0, containerHelper, previewer) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-object-container\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA\n     */\n\n    var _Object = {\n        qtiClass: 'object',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function(obj) {\n            var $container = containerHelper.get(obj);\n            var previewOptions = {\n                url: obj.renderer.resolveUrl(obj.attr('data')),\n                mime: obj.attr('type')\n            };\n            if (obj.attr('height')) {\n                previewOptions.height = obj.attr('height');\n            }\n            if (obj.attr('width')) {\n                previewOptions.width = obj.attr('width');\n            }\n            if (previewOptions.url && previewOptions.mime) {\n                $container.previewer(previewOptions);\n            }\n        }\n    };\n\n    return _Object;\n\n});\n\n","define('qtiInfoControlContext',[],function(){\n\n    //need a global reference to have picHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._picHooks = window._picHooks || {};\n\n    /**\n     * Global object accessible by all PICs\n     *\n     * @type Object\n     */\n    var taoQtiInfoControlContext = {\n        /**\n         * register a info control (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} picHook\n         * @returns {undefined}\n         */\n        register : function(picHook){\n            //@todo check picHook validity\n            window._picHooks[picHook.getTypeIdentifier()] = picHook;\n        },\n        /**\n         * notify when a info control is ready for test taker interaction\n         *\n         * @param {string} picInstance\n         * @fires custominteractionready\n         */\n        notifyReady : function(picInstance){\n            //@todo add pciInstance as event data and notify event to delivery engine\n        },\n        /**\n         * Get a cloned object representing the PIC model\n         *\n         * @param {string} typeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance : function(typeIdentifier){\n\n            if(window._picHooks[typeIdentifier]){\n\n                var instance = {},\n                    proto = window._picHooks[typeIdentifier];\n\n                for(var name in proto){\n                    if(typeof proto[name] === 'function'){\n                        //@todo : delegate function call for better performance ?\n                        instance[name] = proto[name];\n                    }else if(proto[name] !== null && typeof proto[name] === 'object'){\n                        //a plain object:\n                        instance[name] = proto[name].constructor();\n                    }else{\n                        //not an object (nor a function) : e.g. 0, 123, '123', null, undefined\n                        instance[name] = proto[name];\n                    }\n                }\n\n                return instance;\n\n            }else{\n                throw 'no portable info control hook found with the id ' + typeIdentifier;\n            }\n        }\n    };\n\n\n    return taoQtiInfoControlContext;\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'qtiInfoControlContext', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/icRegistry'], function (_, Handlebars, Helpers0, containerHelper, PortableElement, qtiInfoControlContext, util, icRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    qtiInfoControlContext = qtiInfoControlContext && Object.prototype.hasOwnProperty.call(qtiInfoControlContext, 'default') ? qtiInfoControlContext['default'] : qtiInfoControlContext;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-infoControl\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    /**\n     * Get the PIC instance associated to the infoControl object\n     * If none exists, create a new one based on the PIC typeIdentifier\n     *\n     * @param {Object} infoControl - the js object representing the infoControl\n     * @returns {Object} PIC instance\n     */\n    var _getPic = function(infoControl) {\n        var typeIdentifier,\n            pic = infoControl.data('pic') || undefined;\n\n        if (!pic) {\n            typeIdentifier = infoControl.typeIdentifier;\n            pic = qtiInfoControlContext.createPciInstance(typeIdentifier);\n\n            if (pic) {\n                //binds the PIC instance to TAO infoControl object and vice versa\n                infoControl.data('pic', pic);\n                pic._taoInfoControl = infoControl;\n            } else {\n                throw 'no custom infoControl hook found for the type ' + typeIdentifier;\n            }\n        }\n\n        return pic;\n    };\n\n    /**\n     * Execute javascript codes to bring the infoControl to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. ensure the context is configured correctly\n     * 2. require all required libs\n     * 3. create a pic instance based on the infoControl model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable\n     *\n     * @param {Object} infoControl\n     * @param {Object} [options]\n     */\n    var render = function(infoControl, options) {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var state = {}; //@todo pass state and response to renderer here:\n            var id = infoControl.attr('id');\n            var typeIdentifier = infoControl.typeIdentifier;\n            var config = infoControl.properties;\n            var $dom = containerHelper.get(infoControl).children();\n            var assetManager = self.getAssetManager();\n\n            icRegistry\n                .loadRuntimes()\n                .then(function() {\n                    var requireEntries = [];\n                    var runtime = icRegistry.getRuntime(typeIdentifier);\n\n                    if (!runtime) {\n                        return reject('The runtime for the pic cannot be found : ' + typeIdentifier);\n                    }\n\n                    //load the entrypoint, becomes optional per IMS PCI v1\n                    if (runtime.hook) {\n                        requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                    }\n\n                    //load required libraries\n                    _.forEach(runtime.libraries, function(module) {\n                        requireEntries.push(module.replace(/\\.js$/, ''));\n                    });\n\n                    //load stylesheets\n                    _.forEach(runtime.stylesheets, function(stylesheet) {\n                        requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\n                    });\n\n                    //load the entrypoint\n                    window.require(requireEntries, function() {\n                        var pic = _getPic(infoControl);\n                        var picAssetManager = {\n                            resolve: function resolve(url) {\n                                var resolved = assetManager.resolveBy('portableElementLocation', url);\n                                if (resolved === url) {\n                                    return assetManager.resolveBy('baseUrl', url);\n                                } else {\n                                    return resolved;\n                                }\n                            }\n                        };\n\n                        if (pic) {\n                            //call pic initialize() to render the pic\n                            pic.initialize(id, $dom[0], config, picAssetManager);\n                            //restore context (state + response)\n                            pic.setSerializedState(state);\n\n                            return resolve();\n                        }\n\n                        return reject('Unable to initialize pic : ' + id);\n                    }, reject);\n                })\n                .catch(function(error) {\n                    reject('Error loading runtime : ' + id);\n                });\n        });\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} infoControl\n     */\n    var destroy = function destroy(infoControl) {\n        _getPic(infoControl).destroy();\n    };\n\n    /**\n     * Restore the state of the infoControl from the serializedState.\n     *\n     * @param {Object} infoControl - the element instance\n     * @param {Object} state - the state to set\n     */\n    var setState = function setState(infoControl, state) {\n        _getPic(infoControl).setSerializedState(state);\n    };\n\n    /**\n     * Get the current state of the infoControl as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} infoControl - the element instance\n     * @returns {Object} the state\n     */\n    var getState = function getState(infoControl) {\n        return _getPic(infoControl).getSerializedState();\n    };\n\n    var PortableInfoControl = {\n        qtiClass: 'infoControl',\n        template: tpl,\n        getData: function(infoControl, data) {\n            //remove ns + fix media file path\n            var markup = data.markup;\n            markup = util.removeMarkupNamespaces(markup);\n            markup = PortableElement.fixMarkupMediaSources(markup, this);\n            data.markup = markup;\n            return data;\n        },\n        render: render,\n        getContainer: containerHelper.get,\n        destroy: destroy,\n        getState: getState,\n        setState: setState\n    };\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"printedVariable\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var PrintedVariable = {\n        qtiClass: 'printedVariable',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function (_, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * Common helper functions\n     */\n    var interactionHelper = {\n        convertChoices: function (choices, outputType) {\n            var ret = [],\n                _this = this;\n\n            _.forEach(choices, function (c) {\n                if (Element.isA(c, 'choice')) {\n                    switch (outputType) {\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices: function (interaction, choices, inputType) {\n            var ret = [],\n                _this = this;\n\n            _.forEach(choices, function (c) {\n                var choice;\n                if (_.isString(c)) {\n                    if (inputType === 'serial') {\n                        choice = interaction.getChoice(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else if (inputType === 'identifier') {\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else {\n                        ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                } else {\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices: function (choices) {\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for (var i in choices) {\n                if (Element.isA(choices[i], 'choice')) {\n                    var choice = choices[i];\n                    if (choice.attr('fixed')) {\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                } else {\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for (var n = 0; n < r.length - 1; n++) {\n                if (f[n]) {\n                    continue;\n                }\n                var k = -1;\n                do {\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                } while (f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier: function (interaction, choiceSerial) {\n            var choice = interaction.getChoice(choiceSerial);\n            if (choice) {\n                return choice.id();\n            } else {\n                return '';\n            }\n        }\n    };\n\n    return interactionHelper;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/Renderer',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/interactionHelper', 'ui/themeLoader', 'ui/themes', 'core/moduleLoader', 'handlebars'], function (_, $, Element, interactionHelper, themeLoader, themesHelper, moduleLoader, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    interactionHelper = interactionHelper && Object.prototype.hasOwnProperty.call(interactionHelper, 'default') ? interactionHelper['default'] : interactionHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n    themesHelper = themesHelper && Object.prototype.hasOwnProperty.call(themesHelper, 'default') ? themesHelper['default'] : themesHelper;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //webpack trick : handlebar is usale only from cjs.\n    //but anyway we should deprecate the practice to invoke\n    //directly Handlebars at runtimej\n    let hb = Handlebars;\n    if (typeof hb.compile !== 'function') {\n        hb = require('handlebars');\n    }\n\n    const _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        '_tooltip',\n        'figure',\n        'img',\n        'figcaption',\n        'math',\n        'object',\n        'table',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include',\n        'printedVariable'\n    ];\n\n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    const _dependencies = {\n        assessmentItem: ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock: ['_container'],\n        associateInteraction: ['simpleAssociableChoice'],\n        choiceInteraction: ['simpleChoice'],\n        gapMatchInteraction: ['gap', 'gapText'],\n        graphicAssociateInteraction: ['associableHotspot'],\n        graphicGapMatchInteraction: ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction: ['hotspotChoice'],\n        hotspotInteraction: ['hotspotChoice'],\n        hottextInteraction: ['hottext'],\n        inlineChoiceInteraction: ['inlineChoice'],\n        matchInteraction: ['simpleAssociableChoice'],\n        orderInteraction: ['simpleChoice']\n    };\n\n    /**\n     * The list of supported qti subclasses.\n     */\n    const _renderableSubclasses = {\n        simpleAssociableChoice: ['associateInteraction', 'matchInteraction'],\n        simpleChoice: ['choiceInteraction', 'orderInteraction']\n    };\n\n    /**\n     * List of the default properties for the item\n     */\n    const _defaults = {\n        shuffleChoices: true\n    };\n\n    const _isValidRenderer = function (renderer) {\n        let valid = true;\n\n        if (typeof renderer !== 'object') {\n            return false;\n        }\n\n        let classCorrect = false;\n        if (renderer.qtiClass) {\n            if (_.indexOf(_renderableClasses, renderer.qtiClass) >= 0) {\n                classCorrect = true;\n            } else {\n                const pos = renderer.qtiClass.indexOf('.');\n                if (pos > 0) {\n                    const qtiClass = renderer.qtiClass.slice(0, pos);\n                    const subClass = renderer.qtiClass.slice(pos + 1);\n                    if (_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0) {\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if (!classCorrect) {\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if (!renderer.template) {\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl() {\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    const Renderer = function (options) {\n        /**\n         * Store the registered renderer location\n         */\n        const _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        const _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        const _getClassRenderer = function (qtiClass) {\n            let ret = null;\n            if (_renderers[qtiClass]) {\n                ret = _renderers[qtiClass];\n            } else {\n                const pos = qtiClass.indexOf('.');\n                if (pos > 0) {\n                    qtiClass = qtiClass.slice(0, pos);\n                    if (_renderers[qtiClass]) {\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Registers a QTI renderer class\n         * @param {String} qtiClass\n         * @param {Array} list\n         * @returns {Boolean} `true` if the class has been successfully registered\n         */\n        function registerRendererClass(qtiClass, list) {\n            let success = false;\n            if (_locations[qtiClass] === false) {\n                //mark this class as not renderable\n                _renderers[qtiClass] = false;\n                success = true;\n            } else if (_locations[qtiClass]) {\n                list.push(_locations[qtiClass]);\n                success = true;\n            }\n            return success;\n        }\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function (key, value) {\n            if (typeof key === 'string') {\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function (opts) {\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function (key) {\n            if (typeof key === 'string' && options[key]) {\n                return options[key];\n            }\n            return null;\n        };\n\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey) {\n            const messages = this.getOption('messages');\n            if (messages && elementName && messages[elementName] && _.isString(messages[elementName][messageKey])) {\n                //currently not translatable but potentially could be if the need raises\n                return hb.compile(messages[elementName][messageKey]);\n            } else {\n                return null;\n            }\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager() {\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader() {\n            return this.themeLoader;\n        };\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function (element, data, qtiSubclass) {\n            let res;\n            let ret = '';\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n            const decorators = this.getOption('decorators');\n\n            if (!renderer || !_.isFunction(renderer.template)) {\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.before)) {\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n            //post rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.after)) {\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function (element, data, qtiSubclass) {\n            let ret = data;\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getData === 'function') {\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function (tpl, data) {\n            return hb.compile(tpl)(data);\n        };\n\n        this.getContainer = function (qtiElement, $scope, qtiSubclass) {\n            let ret = null;\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                ret = renderer.getContainer(qtiElement, $scope);\n            } else {\n                throw new Error('no renderer found for the class : ' + qtiElement.qtiClass);\n            }\n            return ret;\n        };\n\n        this.postRender = function (qtiElement, data, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer && typeof renderer.render === 'function') {\n                return renderer.render.call(this, qtiElement, data);\n            }\n        };\n\n        this.setResponse = function (qtiInteraction, response, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.setResponse === 'function') {\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    const $container = renderer.getContainer.call(this, qtiInteraction);\n                    if ($container instanceof $ && $container.length) {\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getResponse = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getResponse === 'function') {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.resetResponse = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.resetResponse === 'function') {\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState = function (qtiInteraction, state, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function () {\n            return _renderers;\n        };\n\n        this.register = function (renderersLocations) {\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function (callback, requiredClasses) {\n            const self = this;\n            let required = [];\n\n            const themeData = themesHelper.getCurrentThemeData();\n            if (themeData) {\n                options.themes = themeData;\n            }\n            if (options.themes) {\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function (theme, index) {\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load(options.preload);\n            }\n\n            if (requiredClasses) {\n                if (_.isArray(requiredClasses)) {\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.forEach(requiredClasses, function (reqClass) {\n                        const deps = _dependencies[reqClass];\n                        if (deps) {\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function (qtiClass) {\n                        let requiredSubClasses;\n                        if (_renderableSubclasses[qtiClass]) {\n                            requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.forEach(requiredSubClasses, function (subclass) {\n                                if (\n                                    !registerRendererClass(qtiClass + '.' + subclass, required) &&\n                                    !registerRendererClass(qtiClass, required)\n                                ) {\n                                    throw new Error(\n                                        self.name +\n                                            ' : missing qti class location declaration: ' +\n                                            qtiClass +\n                                            ', subclass: ' +\n                                            subclass\n                                    );\n                                }\n                            });\n                        } else {\n                            if (!registerRendererClass(qtiClass, required)) {\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n            } else {\n                required = _.values(_locations);\n            }\n\n            moduleLoader([], () => true)\n                .addList(required.map(module => ({ module, category: 'qti' })))\n                .load()\n                .then(loaded => {\n                    loaded.forEach(clazz => {\n                        if (_isValidRenderer(clazz)) {\n                            _renderers[clazz.qtiClass] = clazz;\n                        }\n                    });\n                    if (typeof callback === 'function') {\n                        callback.call(self, _renderers);\n                    }\n                });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload() {\n            if (this.themeLoader) {\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function (interaction, choices, identificationType) {\n            if (Element.isA(interaction, 'interaction')) {\n                this.shuffledChoices[interaction.getSerial()] = interactionHelper\n                    .findChoices(interaction, choices, identificationType)\n                    .map(val => val.serial);\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function (interaction, reshuffle, returnedType) {\n            let choices = [];\n            let serial, i;\n\n            if (Element.isA(interaction, 'interaction')) {\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if (!this.shuffledChoices[serial] || reshuffle) {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        this.shuffledChoices[serial] = [];\n                        for (i = 0; i < 2; i++) {\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = choices[i].map(val => val.serial);\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = choices.map(val => val.serial);\n                    }\n\n                    //otherwise get the choices from the serials\n                } else {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        _.forEach(choices, function (choice, index) {\n                            if (index < 2) {\n                                _.forEach(this.shuffledChoices[serial][i], function (choiceSerial) {\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function (choiceSerial) {\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if (returnedType === 'serial' || returnedType === 'identifier') {\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function () {\n            return _renderers;\n        };\n\n        this.getLocations = function () {\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url) {\n            if (!options.assetManager) {\n                return url;\n            }\n            if (typeof url === 'string' && url.length > 0) {\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function (relUrl) {\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if (this.getOption('userRelativeUrl')) {\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if (/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)) {\n                //already absolute or base64 encoded\n                return relUrl;\n            } else {\n                let absUrl = '';\n                const runtimeLocations = this.getOption('runtimeLocations');\n\n                if (runtimeLocations && _.size(runtimeLocations)) {\n                    _.forIn(runtimeLocations, function (runtimeLocation, typeIdentifier) {\n                        if (relUrl.indexOf(typeIdentifier) === 0) {\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false; //break\n                        }\n                    });\n                }\n\n                if (absUrl) {\n                    return absUrl;\n                } else {\n                    const baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n            }\n        };\n\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\n            this._areaBroker = areaBroker;\n        };\n\n        this.getAreaBroker = function getAreaBroker() {\n            if (this._areaBroker) {\n                return this._areaBroker;\n            }\n        };\n\n        this.getItemCreator = function getItemCreator() {\n            return this.getOption('itemCreator');\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    var Renderer$1 = {\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build: function (renderersLocations, name, defaultOptions) {\n            const NewRenderer = function () {\n                const options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n\n    return Renderer$1;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/**\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/rendererProvider',['taoQtiItem/qtiCommonRenderer/renderers/Renderer'], function (QtiRenderer) { 'use strict';\n\n    QtiRenderer = QtiRenderer && Object.prototype.hasOwnProperty.call(QtiRenderer, 'default') ? QtiRenderer['default'] : QtiRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * This is a provider wrapper for qtiCommonRenderer\n     */\n    var rendererProvider = {\n        name: 'commonRenderer',\n        init: () => {},\n        getRenderer: () => QtiRenderer\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<div class=\\\"grid-row qti-rubricBlock\\\" data-use=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.use)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"rubricBlock\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"qti-rubricBlock-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var RubricBlock = {\n        qtiClass: 'rubricBlock',\n        getContainer: containerHelper.get,\n        template: tpl,\n        getData: function getData(rubric, data) {\n            if (rubric.isEmpty()) {\n                data.empty = true;\n            }\n            return data;\n        }\n    };\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"media=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<link \\n    href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n    type=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.type)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n    rel=\\\"stylesheet\\\" \\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Stylesheet = {\n        qtiClass: 'stylesheet',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Table',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"summary=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<table\\n    class=\\\"qti-table\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    data-qti-class=\\\"table\\\"\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    >\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</table>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Table = {\n        qtiClass: 'table',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Table;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Tooltip',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/tooltip'], function (Handlebars, Helpers0, containerHelper, tooltip) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"_tooltip\\\"\\n    data-role=\\\"tooltip-target\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Tooltip = {\n        qtiClass: '_tooltip',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(tooltipDOM) {\n            var $container = containerHelper.get(tooltipDOM);\n            var renderedTooltip = tooltip.create($container, tooltipDOM.content(), {\n                theme: 'default',\n                placement: 'top'\n            });\n\n            if ($container.data('$tooltip')) {\n                $container.data('$tooltip').dispose();\n                $container.removeData('$tooltip');\n            }\n            $container.data('$tooltip', renderedTooltip);\n        }\n    };\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/IdentifiedElement',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/util'], function (Element, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    /**\n     * IdentifiedElement model\n     */\n    var IdentifiedElement = Element.extend({\n        /**\n         * Generates and assign an identifier\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {Object} for chaining\n         */\n        buildIdentifier: function buildIdentifier(prefix, useSuffix) {\n            var item = this.getRootElement();\n            var id = util.buildIdentifier(item, prefix || this.qtiClass, useSuffix);\n            if (id) {\n                this.attr('identifier', id);\n            }\n            return this;\n        },\n\n        /**\n         * Get/set and identifier. It will be generated if it doesn't exists.\n         * @param {String} [value] - set the value or get it if not set.\n         * @returns {String} the identifier\n         */\n        id: function id(value) {\n            if (!value && !this.attr('identifier')) {\n                this.buildIdentifier(this.qtiClass, true);\n            }\n            return this.attr('identifier', value);\n        }\n    });\n\n    return IdentifiedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Choice',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Choice = IdentifiedElement.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'choice' || this._super(qtiClass);\n        },\n        getInteraction: function() {\n            var found,\n                ret = null,\n                item = this.getRootElement();\n            if (item) {\n                found = item.find(this.serial);\n                if (found) {\n                    ret = found.parent;\n                }\n            }\n            return ret;\n        }\n    });\n\n    return Choice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hotspot',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n\tQtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n\tvar QtiHotspot = QtiChoice.extend({});\n\n\treturn QtiHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/AssociableHotspot',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiAssociableHotspot = QtiHotspot.extend({\n        qtiClass: 'associableHotspot'\n    });\n\n    return QtiAssociableHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Mixin',[],function () { 'use strict';\n\n    //@todo : need refactoring of qti item mixin with lodash.mixin()\n    var Mixin = {\n        augment: function(targetClass, methods, options) {\n            if (typeof targetClass === 'function' && typeof methods === 'object') {\n                for (var methodName in methods) {\n                    if (!Object.hasOwnProperty(targetClass.prototype, methodName)) {\n                        targetClass.prototype[methodName] = methods[methodName];\n                    } else {\n                        if (options && options.append) {\n                            var _parent = targetClass.prototype[methodName];\n                            targetClass.prototype[methodName] = function() {\n                                methods[methodName].apply(this, arguments);\n                                return _parent.apply(this, arguments);\n                            };\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    return Mixin;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Container',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, Element, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Container = Element.extend({\n        qtiClass: '_container',\n        init: function (body) {\n            this._super(); //generate serial, attributes array always empty\n            if (body && typeof body !== 'string') {\n                throw 'the body of a container must be a string';\n            }\n            this.bdy = body || '';\n            this.elements = {};\n        },\n        body: function (body) {\n            if (typeof body === 'undefined') {\n                return this.bdy;\n            } else {\n                if (typeof body === 'string') {\n                    this.bdy = body;\n                    $(document).trigger('containerBodyChange', {\n                        body: body,\n                        container: this,\n                        parent: this.parent()\n                    });\n                } else {\n                    throw 'body must be a string';\n                }\n            }\n        },\n        setElements: function (elements, body) {\n            var returnValue = false;\n\n            for (var i in elements) {\n                var elt = elements[i];\n                if (elt instanceof Element) {\n                    body = body || this.bdy;\n                    if (body.indexOf(elt.placeholder()) === -1) {\n                        body += elt.placeholder(); //append the element if no placeholder found\n                    }\n\n                    elt.setRootElement(this.getRootElement() || null);\n                    this.elements[elt.getSerial()] = elt;\n                    $(document).trigger('containerElementAdded', {\n                        element: elt,\n                        container: this\n                    });\n\n                    returnValue = true;\n                } else {\n                    returnValue = false;\n                    throw 'expected a qti element';\n                }\n            }\n\n            this.body(body);\n\n            return returnValue;\n        },\n        setElement: function (element, body) {\n            return this.setElements([element], body);\n        },\n        removeElement: function (element) {\n            var serial = '';\n            if (typeof element === 'string') {\n                serial = element;\n            } else if (element instanceof Element) {\n                serial = element.getSerial();\n            }\n            delete this.elements[serial];\n            this.body(this.body().replace('{{' + serial + '}}', ''));\n            return this;\n        },\n        getElements: function (qtiClass) {\n            var elts = {};\n            if (typeof qtiClass === 'string') {\n                for (var serial in this.elements) {\n                    if (Element.isA(this.elements[serial], qtiClass)) {\n                        elts[serial] = this.elements[serial];\n                    }\n                }\n            } else {\n                elts = _.clone(this.elements);\n            }\n            return elts;\n        },\n        getElement: function (serial) {\n            return this.elements[serial] ? this.elements[serial] : null;\n        },\n        getComposingElements: function () {\n            var elements = this.getElements();\n            var elts = {};\n            for (var serial in elements) {\n                elts[serial] = elements[serial]; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, elements[serial].getComposingElements());\n            }\n            return elts;\n        },\n        render: function () {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                elementsData = [],\n                tpl = this.body();\n\n            for (var serial in this.elements) {\n                var elt = this.elements[serial];\n                if (typeof elt.render === 'function') {\n                    if (elt.qtiClass === '_container') {\n                        //@todo : container rendering merging, to be tested\n                        tpl = tpl.replace(elt.placeholder(), elt.render(renderer));\n                    } else {\n                        tpl = tpl\n                            .replace(elt.placeholder(), serial)\n                            .replace(new RegExp(`{${serial}`), `&lcub;${serial}`)\n                            .replace(serial, '{{{' + serial + '}}}');\n                        elementsData[serial] = elt.render(renderer);\n                    }\n                } else {\n                    throw 'render() is not defined for the qti element: ' + serial;\n                }\n            }\n\n            if (renderer.isRenderer) {\n                return this._super(\n                    {\n                        body: renderer.renderDirect(tpl, elementsData),\n                        contentModel: this.contentModel || 'flow'\n                    },\n                    renderer,\n                    args.placeholder\n                );\n            } else {\n                throw 'invalid qti renderer for qti container';\n            }\n        },\n        postRender: function (data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n\n            var res = _(this.elements)\n                .filter(function (elt) {\n                    return typeof elt.postRender === 'function';\n                })\n                .map(function (elt) {\n                    return elt.postRender(data, '', renderer);\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n            return res;\n        },\n        toArray: function () {\n            var arr = {\n                serial: this.serial,\n                body: this.bdy,\n                elements: {}\n            };\n\n            for (var serial in this.elements) {\n                arr.elements[serial] = this.elements[serial].toArray();\n            }\n\n            return arr;\n        },\n        find: function (serial, parent) {\n            var found = null;\n\n            if (this.elements[serial]) {\n                found = { parent: parent || this, element: this.elements[serial], location: 'body' };\n            } else {\n                _.forEach(this.elements, function (elt) {\n                    found = elt.find(serial);\n                    if (found) {\n                        return false; //break loop\n                    }\n                });\n            }\n\n            return found;\n        },\n        isEmpty: function () {\n            return !this.bdy;\n        }\n    });\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Container',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/core/Container'], function (Mixin, Container$1) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container$1 = Container$1 && Object.prototype.hasOwnProperty.call(Container$1, 'default') ? Container$1['default'] : Container$1;\n\n    var methods = {\n        initContainer: function(body) {\n            this.bdy = new Container$1(body || '');\n            this.bdy.setRootElement(this.getRootElement() || null);\n            this.bdy.contentModel = 'blockStatic';\n        },\n        getBody: function() {\n            return this.bdy;\n        },\n        body: function(body) {\n            var ret = this.bdy.body(body);\n            return body ? this : ret; //for method chaining on get\n        },\n        setElement: function(element, body) {\n            this.bdy.setElement(element, body);\n            return this;\n        },\n        removeElement: function(element) {\n            return this.bdy.removeElement(element);\n        },\n        getElements: function(qtiClass) {\n            return this.bdy.getElements(qtiClass);\n        },\n        getElement: function(serial) {\n            return this.bdy.getElement(serial);\n        }\n    };\n\n    var Container = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/ContainerChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/Container'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ContainerChoice = Choice.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'containerChoice' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ContainerChoice);\n\n    return ContainerChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerInline',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'inlineStatic';\n        }\n    });\n\n    var ContainerInline = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/ContainerInlineChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ContainerChoice = Choice.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'containerChoice' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ContainerChoice);\n\n    return ContainerChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Gap',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n    var QtiGap = QtiChoice.extend({\n        qtiClass: 'gap'\n    });\n\n    return QtiGap;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Object',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiObject = Element.extend({\n        qtiClass: 'object',\n        getMediaType: function() {\n            var type = 'undefined';\n            var mimetype = this.attr('type');\n            if (mimetype) {\n                if (mimetype.indexOf('video') === 0) {\n                    type = 'video';\n                } else if (mimetype.indexOf('audio') === 0) {\n                    type = 'audio';\n                } else if (mimetype.indexOf('image') === 0) {\n                    type = 'image';\n                } else if (mimetype.indexOf('text/html') === 0) {\n                    type = 'html';\n                } else {\n                    type = 'object';\n                }\n            }\n            return type;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            switch (this.getMediaType()) {\n                case 'video':\n                    defaultData.video = true;\n                    break;\n                case 'audio':\n                    defaultData.audio = true;\n                    break;\n                case 'html':\n                    defaultData.html = true;\n                    break;\n                case 'image':\n                default:\n                    defaultData.object = true;\n            }\n\n            defaultData.attributes = { data: renderer.resolveUrl(this.attr('data')) };\n            defaultData.body = this._alt;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return !this.attr('data');\n        }\n    });\n\n    return QtiObject;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapImg',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/core/Object'], function (QtiChoice, QtiObject) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiGapImg = QtiChoice.extend({\n        qtiClass: 'gapImg',\n        //common methods to object containers (start)\n        initObject: function(object) {\n            this.object = object || new QtiObject();\n        },\n        getObject: function() {\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n\n    return QtiGapImg;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapText',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var QtiGapText = QtiContainerChoice.extend({\n        qtiClass: 'gapText'\n    });\n\n    return QtiGapText;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/HotspotChoice',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiHotspotChoice = QtiHotspot.extend({\n        qtiClass: 'hotspotChoice'\n    });\n\n    return QtiHotspotChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hottext',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var Hottext = Choice.extend({\n        qtiClass: 'hottext'\n    });\n\n    Container.augment(Hottext);\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/InlineChoice',['taoQtiItem/qtiItem/core/choices/ContainerInlineChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiInlineChoice = QtiContainerChoice.extend({\n        qtiClass: 'inlineChoice'\n    });\n\n    return QtiInlineChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleAssociableChoice = QtiContainerChoice.extend({\n        qtiClass: 'simpleAssociableChoice'\n    });\n\n    return QtiSimpleAssociableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleChoice = QtiContainerChoice.extend({\n        qtiClass: 'simpleChoice'\n    });\n\n    return QtiSimpleChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextVariableChoice',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, QtiChoice, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiTextVariableChoice = QtiChoice.extend({\n        init: function(serial, attributes, text) {\n            this._super(serial, attributes);\n            this.val(text || '');\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'textVariableChoice' || this._super(qtiClass);\n        },\n        val: function(text) {\n            if (typeof text === 'undefined') {\n                return this.text;\n            } else {\n                if (typeof text === 'string') {\n                    this.text = text;\n                    $(document).trigger('choiceTextChange', {\n                        choice: this,\n                        text: text\n                    });\n                } else {\n                    throw 'text must be a string';\n                }\n            }\n            return this;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    body: this.text\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiTextVariableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextEntry',['taoQtiItem/qtiItem/core/choices/TextVariableChoice'], function (QtiTextVariableChoice) { 'use strict';\n\n    QtiTextVariableChoice = QtiTextVariableChoice && Object.prototype.hasOwnProperty.call(QtiTextVariableChoice, 'default') ? QtiTextVariableChoice['default'] : QtiTextVariableChoice;\n\n    var QtiTextEntry = QtiTextVariableChoice.extend({\r\n        qtiClass: 'textEntry'\r\n    });\n\n    return QtiTextEntry;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/Feedback',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Feedback = IdentifiedElement.extend({\n        is: function(qtiClass) {\n            return qtiClass === 'feedback' || this._super(qtiClass);\n        }\n    });\n\n    return Feedback;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackBlock = Feedback.extend({});\n\n\treturn FeedbackBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackInline = Feedback.extend({});\n\n\treturn FeedbackInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',['taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/Container'], function (IdentifiedElement, Container) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ModalFeedback = IdentifiedElement.extend({\n        qtiClass: 'modalFeedback',\n        is: function(qtiClass) {\n            return qtiClass === 'feedback' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ModalFeedback);\n\n    return ModalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigcaption',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function (body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'figcaption';\n        }\n    });\n\n    var ContainerFigcaption = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerFigcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/NamespacedElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    var methods = {\n        getNamespace: function() {\n            var relatedItem;\n            var namespaces;\n            var ns;\n\n            if (this.ns && (this.ns.name || this.ns.uri)) {\n                return _.clone(this.ns);\n            } else {\n                relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    namespaces = relatedItem.getNamespaces();\n                    for (ns in namespaces) {\n                        if (namespaces[ns].indexOf(this.nsUriFragment) > 0) {\n                            return {\n                                name: ns,\n                                uri: namespaces[ns]\n                            };\n                        }\n                    }\n                    //if no ns found in the item, set the default one!\n                    relatedItem.namespaces[this.defaultNsName] = this.defaultNsUri;\n                    return {\n                        name: this.defaultNsName,\n                        uri: this.defaultNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setNamespace: function(name, uri) {\n            this.ns = {\n                name: name,\n                uri: uri\n            };\n        }\n    };\n\n    var NamespacedElement = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return NamespacedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figcaption',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigcaption', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const Figcaption = Element.extend({\n        qtiClass: 'figcaption',\n        defaultNsName: 'qh5',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'figcaption' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(Figcaption);\n    NamespacedElement.augment(Figcaption);\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigure',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function (body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'figure';\n        }\n    });\n\n    var ContainerFigure = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerFigure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figure',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigure', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const Figure = Element.extend({\n        qtiClass: 'figure',\n        defaultNsName: 'qh5',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'figure' || this._super(qtiClass);\n        },\n        isEmpty: function () {\n            const imgElements = this.getElements('img');\n            if (imgElements && Object.values(imgElements).length) {\n                return Object.values(imgElements)[0].isEmpty();\n            } else {\n                return true;\n            }\n        }\n    });\n    Container.augment(Figure);\n    NamespacedElement.augment(Figure);\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Img',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Img = Element.extend({\n        qtiClass: 'img',\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = {\n                src: renderer.resolveUrl(this.attr('src'))\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return !this.attr('src');\n        }\n    });\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Include',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Include = Element.extend({\n        qtiClass: 'include',\n        defaultNsName: 'xi',\n        defaultNsUri: 'http://www.w3.org/2001/XInclude',\n        nsUriFragment: 'XInclude',\n        isEmpty: function() {\n            return !this.attr('href') || this.getBody().isEmpty();\n        }\n    });\n    Container.augment(Include);\n    NamespacedElement.augment(Include);\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Interaction',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util'], function (Element, _, rendererConfig, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    var QtiInteraction = Element.extend({\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n            this.choices = {};\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'interaction' || this._super(qtiClass);\n        },\n        addChoice: function (choice) {\n            choice.setRootElement(this.getRootElement() || null);\n            this.choices[choice.getSerial()] = choice;\n            return this;\n        },\n        getChoices: function () {\n            var choices = {};\n            for (var i in this.choices) {\n                //prevent passing the whole array by ref\n                choices[i] = this.choices[i];\n            }\n            return choices;\n        },\n        getChoice: function (serial) {\n            var ret = null;\n            if (this.choices[serial]) {\n                ret = this.choices[serial];\n            }\n            return ret;\n        },\n        getChoiceByIdentifier: function (identifier) {\n            for (var i in this.choices) {\n                if (this.choices[i].id() === identifier) {\n                    return this.choices[i];\n                }\n            }\n            return null;\n        },\n        getComposingElements: function () {\n            var elts = this._super();\n            //recursive to choices:\n            for (var serial in this.choices) {\n                if (Element.isA(this.choices[serial], 'choice')) {\n                    elts[serial] = this.choices[serial];\n                    elts = _.extend(elts, this.choices[serial].getComposingElements());\n                }\n            }\n            return elts;\n        },\n        find: function (serial) {\n            var found = this._super(serial);\n            if (!found) {\n                found = util.findInCollection(this, 'choices', serial);\n            }\n            return found;\n        },\n        getResponseDeclaration: function () {\n            var response = null;\n            var responseId = this.attr('responseIdentifier');\n            if (responseId) {\n                var item = this.getRootElement();\n                if (item) {\n                    response = item.getResponseDeclaration(responseId);\n                } else {\n                    throw 'cannot get response of an interaction out of its item context';\n                }\n            }\n            return response;\n        },\n        /**\n         * Render the interaction to the view.\n         * The optional argument \"subClass\" allows distinguishing customInteraction: e.g. customInteraction.matrix, customInteraction.likertScale ...\n         */\n        render: function () {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    _type: this.qtiClass.replace(/([A-Z])/g, function ($1) {\n                        return '_' + $1.toLowerCase();\n                    }),\n                    choices: [],\n                    choiceShuffle: true\n                };\n\n            if (!renderer) {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            var choices =\n                this.attr('shuffle') && renderer.getOption('shuffleChoices')\n                    ? renderer.getShuffledChoices(this)\n                    : this.getChoices();\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\n            var _this = this;\n            _.forEach(choices, function (choice) {\n                if (Element.isA(choice, 'choice')) {\n                    try {\n                        var renderedChoice = choice.render(\n                            _.clone(interactionData, true),\n                            null,\n                            choice.qtiClass + '.' + _this.qtiClass,\n                            renderer\n                        ); //use interaction type as choice subclass\n                        defaultData.choices.push(renderedChoice);\n                    } catch (e) {\n                        //leave choices empty in case of error\n                    }\n                }\n            });\n\n            var tplName = args.subclass ? this.qtiClass + '.' + args.subclass : this.qtiClass;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, tplName, renderer);\n        },\n        postRender: function (data, altClassName, renderer) {\n            var self = this;\n            renderer = renderer || this.getRenderer();\n\n            return _(this.getChoices())\n                .filter(function (elt) {\n                    return Element.isA(elt, 'choice');\n                })\n                .map(function (choice) {\n                    return choice.postRender({}, choice.qtiClass + '.' + self.qtiClass, renderer);\n                })\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        setResponse: function (values) {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.setResponse(this, values);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        getResponse: function () {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.getResponse(this);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        resetResponse: function () {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.resetResponse(this);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state is provided by the interaction's renderer.\n         *\n         * @returns {Object} the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        getState: function () {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState(this);\n                }\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state will be given to the interaction's renderer.\n         *\n         * @param {Object} state - the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        setState: function (state) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState(this, state);\n                }\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n        },\n\n        /**\n         * Clean up an interaction rendering.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n         */\n        clear: function () {\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.destroy)) {\n                return renderer.destroy(this);\n            }\n        },\n\n        toArray: function () {\n            var arr = this._super();\n            arr.choices = {};\n            for (var serial in this.choices) {\n                if (Element.isA(this.choices[serial], 'choice')) {\n                    arr.choices[serial] = this.choices[serial].toArray();\n                }\n            }\n            return arr;\n        },\n\n        getNormalMaximum: function getNormalMaximum() {\n            //by default\n            return false;\n        }\n    });\n\n    return QtiInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Prompt',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Element, Container) { 'use strict';\n\n\tElement = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar Prompt = Element.extend({ qtiClass: 'prompt' });\n\tContainer.augment(Prompt);\n\n\treturn Prompt;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/BlockInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/core/interactions/Prompt', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Interaction, Prompt, _, rendererConfig) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    Prompt = Prompt && Object.prototype.hasOwnProperty.call(Prompt, 'default') ? Prompt['default'] : Prompt;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var BlockInteraction = Interaction.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.prompt = new Prompt('');\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'blockInteraction' || this._super(qtiClass);\n        },\n        getComposingElements: function() {\n            var elts = this._super();\n            elts = _.extend(elts, this.prompt.getComposingElements());\n            elts[this.prompt.getSerial()] = this.prompt;\n            return elts;\n        },\n        find: function(serial) {\n            return this._super(serial) || this.prompt.find(serial);\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    promptId: `prompt-${this.prompt.getSerial()}`,\n                    prompt: this.prompt.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender: function(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n            return [].concat(this.prompt.postRender({}, '', renderer)).concat(this._super(data, altClassName, renderer));\n        },\n        toArray: function() {\n            var arr = this._super();\n            arr.prompt = this.prompt.toArray();\n            return arr;\n        }\n    });\n\n    return BlockInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/responseRules',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n    var responseRules = {\n        MATCH_CORRECT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'match',\n                    expressions: [\n                        {\n                            qtiClass: 'variable',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                        {\n                            qtiClass: 'correct',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    },\n                                },\n                                {\n                                    qtiClass: 'baseValue',\n                                    attributes: {\n                                        baseType: 'integer'\n                                    },\n                                    value: '1',\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponse',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE_POINT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponsePoint',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n    };\n\n    return responseRules;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/response',['lodash', 'taoQtiItem/qtiItem/helper/responseRules'], function (_, responseRulesHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    responseRulesHelper = responseRulesHelper && Object.prototype.hasOwnProperty.call(responseRulesHelper, 'default') ? responseRulesHelper['default'] : responseRulesHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const _templateNames = {\n        MATCH_CORRECT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\n        MAP_RESPONSE: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\n        MAP_RESPONSE_POINT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\n        NONE: 'no_response_processing'\n    };\n\n\n    var response = {\n        isUsingTemplate(response, tpl) {\n            if (_.isString(tpl)) {\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n        isValidTemplateName(tplName) {\n            return !!this.getTemplateUriFromName(tplName);\n        },\n        getTemplateUriFromName(tplName) {\n            return _templateNames[tplName] || '';\n        },\n        getTemplateNameFromUri(tplUri) {\n            let tplName = '';\n\n            _.forIn(_templateNames, (uri, name) => {\n                if (uri === tplUri) {\n                    tplName = name;\n                    return false;\n                }\n            });\n\n            return tplName;\n        },\n        getTemplateNameFromResponseRules(responseIdentifier, responseRules) {\n            if (!responseRules) {\n                return 'NONE';\n            }\n\n            const {\n                responseIf: {\n                    responseRules: [outcomeRules = {}] = [],\n                } = {}\n            } = responseRules;\n            const {\n                attributes: {\n                    identifier: outcomeIdentifier,\n                } = {},\n            } = outcomeRules;\n\n            if (!outcomeIdentifier) {\n                return '';\n            }\n\n            return Object.keys(responseRulesHelper).find(\n                (key) => _.isEqual(responseRules, responseRulesHelper[key](responseIdentifier, outcomeIdentifier))\n            );\n        }\n    };\n\n    return response;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/VariableDeclaration',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * It is the top abstract class for all variable classes\n     * (so not renderable and qtiClass undefined)\n     */\n    var VariableDeclaration = IdentifiedElement.extend({\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.defaultValue = null;\n        },\n        is: function is(qtiClass) {\n            return qtiClass === 'variableDeclaration' || this._super(qtiClass);\n        },\n        toArray: function toArray() {\n            var arr = this._super();\n            arr.defaultValue = this.defaultValue;\n            return arr;\n        },\n        setDefaultValue: function setDefaultValue(value) {\n            this.defaultValue = value;\n        },\n        getDefaultValue: function getDefaultValue() {\n            return this.defaultValue;\n        }\n    });\n\n    return VariableDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration'], function (VariableDeclaration) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n\n    var OutcomeDeclaration = VariableDeclaration.extend({\n        qtiClass: 'outcomeDeclaration'\n    });\n\n    return OutcomeDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/maxScore',['lodash', 'lib/gamp/gamp', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration'], function (_, gamp, responseHelper, OutcomeDeclaration) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    gamp = gamp && Object.prototype.hasOwnProperty.call(gamp, 'default') ? gamp['default'] : gamp;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    OutcomeDeclaration = OutcomeDeclaration && Object.prototype.hasOwnProperty.call(OutcomeDeclaration, 'default') ? OutcomeDeclaration['default'] : OutcomeDeclaration;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var pairExists = function pairExists(collection, pair) {\n        if (pair.length !== 2) {\n            return false;\n        }\n        return collection[pair[0] + ' ' + pair[1]] || collection[pair[1] + ' ' + pair[0]];\n    };\n    const externalScoredValues = ['human', 'externalMachine'];\n\n    var maxScore = {\n        /**\n         * Set the normal maximum to the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setNormalMaximum(item) {\n            var normalMaximum,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE');\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (\n                scoreOutcome &&\n                item.responseProcessing &&\n                item.responseProcessing.processingType === 'templateDriven' &&\n                !externalScoredValues.includes(scoreOutcome.attr('externalScored'))\n            ) {\n                const interactions = item.getInteractions();\n                normalMaximum = _.reduce(\n                    interactions,\n                    function (acc, interaction) {\n                        var interactionMaxScore = interaction.getNormalMaximum();\n                        if (_.isNumber(interactionMaxScore)) {\n                            return gamp.add(acc, interactionMaxScore);\n                        } else {\n                            return false;\n                        }\n                    },\n                    0\n                );\n\n                if (_.isNumber(normalMaximum)) {\n                    scoreOutcome.attr('normalMaximum', normalMaximum);\n                } else {\n                    scoreOutcome.removeAttr('normalMaximum');\n                }\n            }\n        },\n\n        /**\n         * Set the maximum score of the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setMaxScore(item) {\n            var hasInvalidInteraction = false,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE'),\n                maxScore,\n                maxScoreOutcome;\n\n            if (!scoreOutcome) {\n                // add new score outcome if not already defined\n                scoreOutcome = new OutcomeDeclaration({\n                    cardinality: 'single',\n                    baseType: 'float',\n                    normalMinimum: 0.0,\n                    normalMaximum: 0.0\n                });\n                item.addOutcomeDeclaration(scoreOutcome);\n                scoreOutcome.buildIdentifier('SCORE', false);\n            }\n            const customOutcomes = _(item.getOutcomes()).filter(function (outcome) {\n                return outcome.id() !== 'SCORE' && outcome.id() !== 'MAXSCORE';\n            });\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n                const interactions = item.getInteractions();\n                maxScore = _.reduce(\n                    interactions,\n                    function (acc, interaction) {\n                        var interactionMaxScore = interaction.getNormalMaximum();\n                        if (_.isNumber(interactionMaxScore)) {\n                            return gamp.add(acc, interactionMaxScore);\n                        } else {\n                            hasInvalidInteraction = true;\n                            return acc;\n                        }\n                    },\n                    0\n                );\n                if (externalScoredValues.includes(scoreOutcome.attr('externalScored'))) {\n                    maxScore = maxScore + (scoreOutcome.attr('normalMaximum') || 0);\n                } else {\n                    if (customOutcomes.size()) {\n                        maxScore = customOutcomes.reduce(function (acc, outcome) {\n                            return gamp.add(acc, parseFloat(outcome.attr('normalMaximum') || 0));\n                        }, maxScore);\n                    }\n                }\n\n                maxScoreOutcome = item.getOutcomeDeclaration('MAXSCORE');\n                if (!hasInvalidInteraction || customOutcomes.size()) {\n                    if (!maxScoreOutcome) {\n                        //add new outcome\n                        maxScoreOutcome = new OutcomeDeclaration({\n                            cardinality: 'single',\n                            baseType: 'float'\n                        });\n\n                        //attach the outcome to the item before generating item-level unique id\n                        item.addOutcomeDeclaration(maxScoreOutcome);\n                        maxScoreOutcome.buildIdentifier('MAXSCORE', false);\n                    }\n                    maxScoreOutcome.setDefaultValue(maxScore);\n                }\n\n                //handle special case when MAXSCORE is set up manually for some interaction like ExtendedText\n                if (hasInvalidInteraction && maxScoreOutcome) {\n                    if (maxScoreOutcome.attributes && maxScoreOutcome.attributes.externalScored) {\n                        if (_.isUndefined(maxScoreOutcome.defaultValue)) {\n                            maxScoreOutcome.setDefaultValue(1);\n                        }\n                    } else {\n                        item.removeOutcome('MAXSCORE');\n                    }\n                }\n\n                const isAllResponseProcessingRulesNone = !interactions.some(interaction => {\n                    const responseDeclaration = interaction.getResponseDeclaration();\n                    const template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n                    return template !== 'NONE';\n                });\n\n                const outcomesWithExternalScored = customOutcomes.filter(outcome => {\n                    return externalScoredValues.includes(outcome.attr('externalScored'));\n                });\n                const isResponsesEmpty = _.isEmpty(item.responses);\n                // remove MAXSCORE and SCORE outcome variables when all interactions are configured with none response processing rule,\n                // and the externalScored property of the SCORE variable is set to None\n                // and there are no other outcome variables with externalScored property set to human or externalMachine\n                // or in case all interactions are without responses\n                if (\n                    (!scoreOutcome.attr('externalScored') &&\n                        isAllResponseProcessingRulesNone &&\n                        outcomesWithExternalScored.size() === 0) ||\n                    isResponsesEmpty\n                ) {\n                    item.removeOutcome('MAXSCORE');\n                    item.removeOutcome('SCORE');\n                }\n                // remove custom outcomes if all interactions are without responses\n                if (isResponsesEmpty) {\n                    customOutcomes.forEach(outcome => {\n                        item.removeOutcome(outcome.id());\n                    });\n                }\n            }\n        },\n\n        /**\n         * Sort an array of associable choices by its matchMax attr value\n         * @param {Array} choiceCollection\n         * @returns {Array}\n         */\n        getMatchMaxOrderedChoices(choiceCollection) {\n            return _(choiceCollection)\n                .map(function (choice) {\n                    var matchMax = parseInt(choice.attr('matchMax'), 10);\n                    if (_.isNaN(matchMax)) {\n                        matchMax = 0;\n                    }\n                    return {\n                        matchMax: matchMax === 0 ? Infinity : matchMax,\n                        id: choice.id()\n                    };\n                })\n                .sortBy('matchMax')\n                .reverse()\n                .valueOf();\n        },\n\n        /**\n         * Compute the maximum score of a \"choice\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        choiceInteractionBased(interaction, options) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max,\n                maxChoice,\n                minChoice,\n                scoreMaps,\n                requiredChoiceCount,\n                totalAnswerableResponse,\n                sortedMapEntries,\n                missingMapsCount;\n\n            options = _.defaults(options || {}, { maxChoices: 0, minChoices: 0 });\n            maxChoice = parseInt(interaction.attr('maxChoices') || options.maxChoices, 10);\n            minChoice =  0 ;\n            if (maxChoice && minChoice && maxChoice < minChoice) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    maxChoice &&\n                    _.isArray(responseDeclaration.correctResponse) &&\n                    (responseDeclaration.correctResponse.length > maxChoice ||\n                        responseDeclaration.correctResponse.length < minChoice)\n                ) {\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                } else if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //prepare constraint params\n                requiredChoiceCount = minChoice;\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\n\n                //sort the score map entries by the score\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n\n                sortedMapEntries = _(scoreMaps)\n                    .map(function (v) {\n                        return parseFloat(v);\n                    })\n                    .sortBy()\n                    .reverse()\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse);\n\n                //if there is not enough map defined, compared to the minChoice constraint, fill in the rest of required choices with the default map\n                missingMapsCount = minChoice - sortedMapEntries.length;\n                _.times(missingMapsCount, function () {\n                    sortedMapEntries.push(mapDefault);\n                });\n\n                //if the map default is positive, the optimal strategy involves using as much mapDefault as possible\n                if (mapDefault && mapDefault > 0) {\n                    if (maxChoice) {\n                        missingMapsCount = maxChoice - sortedMapEntries.length;\n                    } else {\n                        missingMapsCount = _.size(interaction.getChoices()) - sortedMapEntries.length;\n                    }\n                    if (missingMapsCount > 0) {\n                        _.times(missingMapsCount, function () {\n                            sortedMapEntries.push(mapDefault);\n                        });\n                    }\n                }\n\n                //calculate the maximum reachable score by choice map\n                max = sortedMapEntries.reduce(function (acc, v) {\n                    var score = v;\n                    if (score < 0 && requiredChoiceCount <= 0) {\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredChoiceCount--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                //map point response processing does not work on choice based interaction\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"order\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        orderInteractionBased(interaction) {\n            var minChoice =  0 ;\n            var maxChoice = parseInt(interaction.attr('maxChoices') || 0, 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max;\n\n            if (maxChoice && minChoice && maxChoice < minChoice) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    (_.isArray(responseDeclaration.correctResponse) &&\n                        maxChoice &&\n                        responseDeclaration.correctResponse.length > maxChoice) ||\n                    (minChoice )\n                ) {\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                } else if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE' || template === 'MAP_RESPONSE_POINT') {\n                //map response processing does not work on order based interaction\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"associate\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        associateInteractionBased(interaction, options) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var maxAssoc = parseInt(interaction.attr('maxAssociations') || 0, 10);\n            var minAssoc =  0 ;\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var max,\n                requiredAssoc,\n                totalAnswerableResponse,\n                usedChoices,\n                choicesIdentifiers,\n                sortedMapEntries,\n                i,\n                allPossibleMapEntries,\n                infiniteScoringPair;\n\n            options = _.defaults(options || {}, { possiblePairs: [], checkInfinitePair: false });\n\n            if (maxAssoc && minAssoc && maxAssoc < minAssoc) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) &&\n                        (!responseDeclaration.correctResponse.length ||\n                            (maxAssoc && responseDeclaration.correctResponse.length > maxAssoc) ||\n                            (minAssoc )))\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1; //is possible until proven otherwise\n\n                    //get the list of choices used in map entries\n                    choicesIdentifiers = [];\n                    _.forEach(responseDeclaration.correctResponse, function (pair) {\n                        var choices;\n                        if (!_.isString(pair)) {\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            choicesIdentifiers.push(choices[0].trim());\n                            choicesIdentifiers.push(choices[1].trim());\n                        }\n                    });\n\n                    //check if the choices usage are possible within the constraint defined in the interaction\n                    _.forEach(_.countBy(choicesIdentifiers), function (count, identifier) {\n                        var matchMax;\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        if (!choice) {\n                            max = 0;\n                            return false;\n                        }\n                        matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if (matchMax && matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                requiredAssoc = minAssoc;\n                totalAnswerableResponse = maxAssoc === 0 ? Infinity : maxAssoc;\n                usedChoices = {};\n\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if (mapDefault && mapDefault > 0) {\n                    _.forEachRight(options.possiblePairs, function (pair) {\n                        if (!pairExists(allPossibleMapEntries, pair)) {\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                //get the sorted list of mapentries ordered by the score\n                sortedMapEntries = _(allPossibleMapEntries)\n                    .map(function (score, pair) {\n                        return {\n                            score: parseFloat(score),\n                            pair: pair\n                        };\n                    })\n                    .sortBy('score')\n                    .reverse()\n                    .filter(function (mapEntry) {\n                        var pair = mapEntry.pair;\n                        var choices, choiceId, choice, _usedChoices;\n\n                        if (!_.isString(pair)) {\n                            return false;\n                        }\n\n                        //check that the pair is possible in term of matchMax\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            //clone the global used choices array to brings the changes in that object first before storing in the actual object\n                            _usedChoices = _.cloneDeep(usedChoices);\n\n                            for (i = 0; i < 2; i++) {\n                                choiceId = choices[i];\n\n                                //collect choices usage to check if the pair is possible\n                                if (!_usedChoices[choiceId]) {\n                                    choice = interaction.getChoiceByIdentifier(choiceId);\n                                    if (!choice) {\n                                        //unexisting choice, skip\n                                        return false;\n                                    }\n                                    _usedChoices[choiceId] = {\n                                        used: 0,\n                                        max: parseInt(choice.attr('matchMax'), 10)\n                                    };\n                                }\n                                if (\n                                    _usedChoices[choiceId].max &&\n                                    _usedChoices[choiceId].used === _usedChoices[choiceId].max\n                                ) {\n                                    //skip\n                                    return false;\n                                } else {\n                                    _usedChoices[choiceId].used++;\n                                }\n                            }\n\n                            //identify the edge case when we can get infinite association pair that create an infinite score\n                            infiniteScoringPair =\n                                infiniteScoringPair ||\n                                (options.checkInfinitePair &&\n                                    mapEntry.score > 0 &&\n                                    _usedChoices[choices[0]].max === 0 &&\n                                    _usedChoices[choices[1]].max === 0);\n\n                            //update the global used choices array\n                            _.assign(usedChoices, _usedChoices);\n                            return true;\n                        } else {\n                            //is not a correct response pair\n                            return false;\n                        }\n                    })\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse);\n\n                //infinite score => no normalMaximum should be generated for it\n                if (infiniteScoringPair) {\n                    return false;\n                }\n\n                //reduce the ordered list of map entries to calculate the max score\n                max = sortedMapEntries.reduce(function (acc, v) {\n                    var score = v.score;\n                    if (v.score < 0 && requiredAssoc <= 0) {\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredAssoc--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"gap match\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        gapMatchInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var max,\n                skippableWrongResponse,\n                totalAnswerableResponse,\n                usedChoices,\n                usedGaps,\n                group1,\n                group2,\n                allPossibleMapEntries;\n            var getMatchMaxOrderedChoices = function getMatchMaxOrderedChoices(choiceCollection) {\n                return _(choiceCollection)\n                    .map(function (choice) {\n                        return {\n                            matchMax: choice.attr('matchMax') === 0 ? Infinity : choice.attr('matchMax') || 0,\n                            id: choice.id()\n                        };\n                    })\n                    .sortBy('matchMax')\n                    .reverse()\n                    .valueOf();\n            };\n            var calculatePossiblePairs = function calculatePossiblePairs(gapMatchInteraction) {\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = getMatchMaxOrderedChoices(gapMatchInteraction.getChoices());\n                var matchSet2 = getMatchMaxOrderedChoices(gapMatchInteraction.getGaps());\n\n                _.forEach(matchSet1, function (choice1) {\n                    _.forEach(matchSet2, function (choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1; //is possible until proven otherwise\n                    group1 = [];\n                    group2 = [];\n                    _.forEach(responseDeclaration.correctResponse, function (pair) {\n                        var choices;\n                        if (!_.isString(pair)) {\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            group1.push(choices[0].trim());\n                            group2.push(choices[1].trim());\n                        }\n                    });\n\n                    _.forEach(_.countBy(group1), function (count, identifier) {\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        var matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if (matchMax && matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n\n                    _.forEach(_.countBy(group2), function (count) {\n                        var matchMax = 1; //match max for a gap is always 1\n                        if ( matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                skippableWrongResponse =  Infinity ;\n                totalAnswerableResponse =  Infinity ;\n                usedChoices = {};\n                usedGaps = {};\n\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if (mapDefault && mapDefault > 0) {\n                    _.forEachRight(calculatePossiblePairs(interaction), function (pair) {\n                        if (!pairExists(allPossibleMapEntries, pair)) {\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                max = _(allPossibleMapEntries)\n                    .map(function (score, pair) {\n                        return {\n                            score: parseFloat(score),\n                            pair: pair\n                        };\n                    })\n                    .sortBy('score')\n                    .reverse()\n                    .filter(function (mapEntry) {\n                        var pair = mapEntry.pair;\n                        var _usedChoices = _.cloneDeep(usedChoices);\n                        var choices, choiceId, gapId, choice;\n\n                        if (!_.isString(pair)) {\n                            return false;\n                        }\n\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            choiceId = choices[0];\n                            gapId = choices[1];\n                            if (!_usedChoices[choiceId]) {\n                                choice = interaction.getChoiceByIdentifier(choiceId);\n                                if (!choice) {\n                                    //inexisting choice, skip\n                                    return false;\n                                }\n                                _usedChoices[choiceId] = {\n                                    used: 0,\n                                    max: parseInt(choice.attr('matchMax'), 10)\n                                };\n                            }\n                            if (_usedChoices[choiceId].max && _usedChoices[choiceId].used === _usedChoices[choiceId].max) {\n                                //skip\n                                return false;\n                            }\n                            _usedChoices[choiceId].used++;\n\n                            if (!usedGaps[gapId]) {\n                                usedGaps[gapId] = {\n                                    used: 0,\n                                    max: 1\n                                };\n                            }\n                            if (usedGaps[gapId].max && usedGaps[gapId].used === usedGaps[gapId].max) {\n                                //skip\n                                return false;\n                            }\n                            usedGaps[gapId].used++;\n\n                            //if an only if it is ok, we merge the temporary used choices array into the global one\n                            _.assign(usedChoices, _usedChoices);\n                            return true;\n                        } else {\n                            //is not a correct response pair\n                            return false;\n                        }\n                    })\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse)\n                    .reduce(function (acc, v) {\n                        var score = v.score;\n                        if (score >= 0) {\n                            return acc + score;\n                        } else if (skippableWrongResponse > 0) {\n                            skippableWrongResponse--;\n                            return acc;\n                        } else {\n                            return acc + score;\n                        }\n                    }, 0);\n\n                //console.log(usedChoices, allPossibleMapEntries, sortedMaps);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = false;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"select point\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        selectPointInteractionBased(interaction) {\n            var maxChoice = parseInt(interaction.attr('maxChoices'), 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, skippableWrongResponse, totalAnswerableResponse;\n\n            if (template === 'MATCH_CORRECT' || template === 'MAP_RESPONSE') {\n                //such templates are not allowed\n                return 0;\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                //calculate the maximum reachable score by choice map\n                skippableWrongResponse =  Infinity ;\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\n\n                max = _(responseDeclaration.mapEntries)\n                    .map(function (v) {\n                        return parseFloat(v.mappedValue);\n                    })\n                    .sortBy()\n                    .reverse()\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse)\n                    .reduce(function (acc, v) {\n                        if (v >= 0) {\n                            return acc + v;\n                        } else if (skippableWrongResponse > 0) {\n                            skippableWrongResponse--;\n                            return acc;\n                        } else {\n                            return acc + v;\n                        }\n                    }, 0);\n                max = parseFloat(max);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"slider\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        sliderInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                max = _(scoreMaps)\n                    .map(function (v) {\n                        return parseFloat(v);\n                    })\n                    .max();\n                max = parseFloat(max);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"text entry\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        textEntryInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            /**\n             * Check that a response is possible or not according to the defined patternmask\n             * @param {String} value\n             * @returns {Boolean}\n             */\n            var isPossibleResponse = function isPossibleResponse(value) {\n                var patternMask = interaction.attr('patternMask');\n                if (patternMask) {\n                    return !!value.match(new RegExp(patternMask));\n                } else {\n                    //no restriction by pattern so always possible\n                    return true;\n                }\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = isPossibleResponse(responseDeclaration.correctResponse[0]) ? 1 : 0;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(\n                    _.filter(responseDeclaration.mapEntries, function (score, key) {\n                        return isPossibleResponse(key);\n                    })\n                );\n                max = _(scoreMaps)\n                    .map(function (v) {\n                        return parseFloat(v);\n                    })\n                    .max();\n                max = parseFloat(max);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"custom\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        customInteractionBased(interaction) {\n            const responseDeclaration = interaction.getResponseDeclaration();\n            const template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            let max;\n            if (template === 'MATCH_CORRECT') {\n                if (Array.isArray(responseDeclaration.correctResponse) && responseDeclaration.correctResponse.length) {\n                    max = 1;\n                } else {\n                    max = 0;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                const values = _.values(responseDeclaration.mapEntries).map(function (v) {\n                    return parseFloat(v);\n                });\n                max = _.max(values);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            } else {\n                max = 0;\n            }\n            return max;\n        },\n\n        getMaxCutByUpperBound(max, responseDeclaration) {\n            if (!_.has(responseDeclaration, 'mappingAttributes.upperBound')) {\n                return max;\n            }\n\n            //compare the calculated maximum with the mapping upperbound\n            return Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n        }\n    };\n\n    return maxScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/AssociateInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var AssociateInteraction = BlockInteraction.extend({\n        qtiClass: 'associateInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\n                var i,\n                    j,\n                    pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for (i = 0; i < choices.length; i++) {\n                    for (j = i; j < choices.length; j++) {\n                        pairs.push([choices[i].id, choices[j].id]);\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var ChoiceInteraction = BlockInteraction.extend({\n        qtiClass: 'choiceInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ContainerInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/mixin/Container'], function (BlockInteraction, Container) { 'use strict';\n\n\tBlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar ContainerInteraction = BlockInteraction.extend({});\n\tContainer.augment(ContainerInteraction);\n\n\treturn ContainerInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/CustomElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {\n        prop: function (name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.properties[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.prop(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.properties[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.properties[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeProp: function (propNames) {\n            var _this = this;\n            if (typeof propNames === 'string') {\n                propNames = [propNames];\n            }\n            _.forEach(propNames, function (propName) {\n                delete _this.attributes[propName];\n            });\n            return this;\n        },\n        getProperties: function () {\n            return _.clone(this.properties);\n        },\n        getMarkupNamespace: function () {\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\n                return _.clone(this.markupNs);\n            } else {\n                var relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name: this.defaultMarkupNsName,\n                        uri: this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace: function (name, uri) {\n            this.markupNs = {\n                name: name,\n                uri: uri\n            };\n        }\n    };\n\n    var CustomElement = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return CustomElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/CustomInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, Interaction, CustomElement, NamespacedElement, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    var CustomInteraction = Interaction.extend({\n        qtiClass: 'customInteraction',\n        defaultNsName: 'pci',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableCustomInteraction',\n        nsUriFragment: 'portableCustomInteraction',\n        defaultMarkupNsName: 'html5',\n        defaultMarkupNsUri: 'html5',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            this.pciReadyCallbacks = [];\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'customInteraction' || this._super(qtiClass);\n        },\n        render: function () {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier: this.typeIdentifier,\n                    markup: this.markup,\n                    properties: this.properties,\n                    libraries: this.libraries,\n                    entryPoint: this.entryPoint,\n                    ns: {\n                        pci: this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray: function () {\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n        getMarkupNamespace: function () {\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\n                return _.clone(this.markupNs);\n            } else {\n                var relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name: this.defaultMarkupNsName,\n                        uri: this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace: function (name, uri) {\n            this.markupNs = {\n                name: name,\n                uri: uri\n            };\n        },\n        onPciReady: function (callback) {\n            this.pciReadyCallbacks.push(callback);\n\n            if (this.data('pci')) {\n                //if pci is already ready, call it immediately\n                this.triggerPciReady();\n            }\n        },\n        triggerPciReady: function () {\n            var _this = this,\n                pci = this.data('pci');\n\n            if (pci) {\n                _.forEach(this.pciReadyCallbacks, function (fn) {\n                    fn.call(_this, pci);\n                });\n\n                //empty the stack of ready callbacks\n                this.pciReadyCallbacks = [];\n\n                //mark the interaction as ready\n                this.data('pciReady', true);\n            } else {\n                throw 'cannot trigger pci ready when no pci is actually attached to the interaction';\n            }\n        },\n        onPci: function (event, callback) {\n            this.onPciReady(function (pci) {\n                if (_.isFunction(pci.on)) {\n                    pci.on(event, callback);\n                } else {\n                    throw 'the pci does not implement on() function';\n                }\n            });\n            return this;\n        },\n        offPci: function (event) {\n            this.onPciReady(function (pci) {\n                if (_.isFunction(pci.off)) {\n                    pci.off(event);\n                } else {\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        triggerPci: function (event, args) {\n            this.onPciReady(function (pci) {\n                if (_.isFunction(pci.off)) {\n                    pci.trigger(event, args);\n                } else {\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        getNormalMaximum() {\n            return maxScore.customInteractionBased(this);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(CustomInteraction);\n    NamespacedElement.augment(CustomInteraction);\n\n    return CustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction'], function (Interaction) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var InlineInteraction = Interaction.extend({\n        is: function(qtiClass) {\n            return qtiClass === 'inlineInteraction' || this._super(qtiClass);\n        }\n    });\n\n    return InlineInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var EndAttemptInteraction = InlineInteraction.extend({\n        qtiClass: 'endAttemptInteraction',\n        getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, BlockInteraction, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var ExtendedTextInteraction = BlockInteraction.extend({\n        qtiClass: 'extendedTextInteraction',\n        render: function render() {\n            var i,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    multiple: false,\n                    maxStringLoop: []\n                },\n                response = this.getResponseDeclaration();\n\n            if (\n                this.attr('maxStrings') &&\n                (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\n            ) {\n                defaultData.multiple = true;\n                for (i = 0; i < this.attr('maxStrings'); i++) {\n                    defaultData.maxStringLoop.push(i + ''); //need to convert to string. The tpl engine fails otherwise\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapMatchInteraction = ContainerInteraction.extend({\n        qtiClass: 'gapMatchInteraction',\n        getGaps: function getGaps() {\n            return this.getBody().getElements('gap');\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.gapMatchInteractionBased(this);\n        }\n    });\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ObjectInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/Object'], function (QtiBlockInteraction, QtiObject) { 'use strict';\n\n    QtiBlockInteraction = QtiBlockInteraction && Object.prototype.hasOwnProperty.call(QtiBlockInteraction, 'default') ? QtiBlockInteraction['default'] : QtiBlockInteraction;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiObjectInteraction = QtiBlockInteraction.extend({\n        //common methods to object containers (start)\n        initObject: function(object) {\n            this.object = object || new QtiObject();\n        },\n        getObject: function() {\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n\n    return QtiObjectInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicInteraction',['taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (QtiObjectInteraction, _, rendererConfig) { 'use strict';\n\n    QtiObjectInteraction = QtiObjectInteraction && Object.prototype.hasOwnProperty.call(QtiObjectInteraction, 'default') ? QtiObjectInteraction['default'] : QtiObjectInteraction;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiGraphicInteraction = QtiObjectInteraction.extend({\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    backgroundImage: this.object.getAttributes(),\n                    object: this.object.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiGraphicInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicAssociateInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicAssociateInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\n                var i,\n                    j,\n                    pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for (i = 0; i < choices.length; i++) {\n                    for (j = i; j < choices.length; j++) {\n                        if (i !== j) {\n                            pairs.push([choices[i].id, choices[j].id]);\n                        }\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, Element, _, rendererConfig, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicGapMatchInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicGapMatchInteraction',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.gapImgs = {};\n        },\n        addGapImg: function addGapImg(gapImg) {\n            if (Element.isA(gapImg, 'gapImg')) {\n                gapImg.setRootElement(this.getRootElement() || null);\n                this.gapImgs[gapImg.getSerial()] = gapImg;\n            }\n        },\n        removeGapImg: function removeGapImg(gapImg) {\n            var serial = '';\n            if (typeof gapImg === 'string') {\n                serial = gapImg;\n            } else if (Element.isA(gapImg, 'gapImg')) {\n                serial = gapImg.getSerial();\n            }\n            delete this.gapImgs[serial];\n            return this;\n        },\n        getGapImgs: function getGapImgs() {\n            return _.clone(this.gapImgs);\n        },\n        getGapImg: function getGapImg(serial) {\n            return this.gapImgs[serial];\n        },\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\n            var choice = this._super(identifier);\n            if (!choice) {\n                //if not found among the choices, search the gapImgs\n                choice = _.find(this.gapImgs, function(elt) {\n                    return elt && elt.id() === identifier;\n                });\n            }\n            return choice;\n        },\n        getComposingElements: function getComposingElements() {\n            var serial,\n                elts = this._super();\n            //recursive to choices:\n            for (serial in this.gapImgs) {\n                elts[serial] = this.gapImgs[serial];\n                elts = _.extend(elts, this.gapImgs[serial].getComposingElements());\n            }\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                if (this.gapImgs[serial]) {\n                    found = { parent: this, element: this.gapImgs[serial] };\n                }\n            }\n            return found;\n        },\n        render: function render() {\n            var serial,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    gapImgs: []\n                };\n\n            //note: no choice shuffling option available for graphic gap match\n            var gapImgs = this.getGapImgs();\n            for (serial in gapImgs) {\n                if (Element.isA(gapImgs[serial], 'choice')) {\n                    defaultData.gapImgs.push(gapImgs[serial].render({}, null, '', renderer));\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray: function toArray() {\n            var serial,\n                gapImgs,\n                arr = this._super();\n            arr.gapImgs = {};\n            gapImgs = this.getGapImgs();\n            for (serial in gapImgs) {\n                arr.gapImgs[serial] = gapImgs[serial].toArray();\n            }\n            return arr;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(graphicGapInteraction) {\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getGapImgs());\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getChoices());\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, {\n                possiblePairs: calculatePossiblePairs(this),\n                checkInfinitePair: true\n            });\n        }\n    });\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicOrderInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicOrderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HotspotInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var HotspotInteraction = GraphicInteraction.extend({\n        qtiClass: 'hotspotInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HottextInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, Element, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var HottextInteraction = ContainerInteraction.extend({\n        qtiClass: 'hottextInteraction',\n        getChoices: function() {\n            return this.getBody().getElements('hottext');\n        },\n        getChoice: function(serial) {\n            var element = this.getBody().getElement(serial);\n            return Element.isA(element, 'choice') ? element : null;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var InlineChoiceInteraction = InlineInteraction.extend({\n        qtiClass: 'inlineChoiceInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this, { maxChoices: 1 });\n        }\n    });\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MatchInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, SimpleAssociableChoice, _, rendererConfig, util, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    SimpleAssociableChoice = SimpleAssociableChoice && Object.prototype.hasOwnProperty.call(SimpleAssociableChoice, 'default') ? SimpleAssociableChoice['default'] : SimpleAssociableChoice;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var MatchInteraction = BlockInteraction.extend({\n        qtiClass: 'matchInteraction',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.choices = [{}, {}];\n        },\n        addChoice: function addChoice(choice, matchSet) {\n            matchSet = parseInt(matchSet);\n            if (this.choices[matchSet]) {\n                choice.setRootElement(this.getRootElement() || null);\n                this.choices[matchSet][choice.getSerial()] = choice;\n            }\n        },\n        getChoices: function getChoices(matchSet) {\n            matchSet = parseInt(matchSet);\n            if (this.choices[matchSet]) {\n                return _.clone(this.choices[matchSet]);\n            } else {\n                return _.clone(this.choices);\n            }\n        },\n        getChoice: function getChoice(serial) {\n            return this.choices[0][serial] || this.choices[1][serial] || null;\n        },\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\n            var i, matchSet, serial;\n            //recursive to both match sets:\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice && matchSet[serial].id() === identifier) {\n                        return matchSet[serial];\n                    }\n                }\n            }\n            return null;\n        },\n        getComposingElements: function getComposingElements() {\n            var i, matchSet, serial;\n            var elts = this._super();\n            //recursive to both match sets:\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        elts[serial] = matchSet[serial];\n                        elts = _.extend(elts, matchSet[serial].getComposingElements());\n                    }\n                }\n            }\n\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                found = util.findInCollection(this, ['choices.0', 'choices.1'], serial);\n            }\n            return found;\n        },\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var renderer = args.renderer || this.getRenderer();\n            var defaultData = {\n                matchSet1: [],\n                matchSet2: []\n            };\n            var choices, i, matchSet, serial;\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\n\n            if (!renderer) {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            if (this.attr('shuffle') && renderer.getOption('shuffleChoices')) {\n                choices = renderer.getShuffledChoices(this);\n            } else {\n                choices = this.getChoices();\n            }\n\n            for (i = 0; i < 2; i++) {\n                matchSet = choices[i];\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        defaultData['matchSet' + (i + 1)].push(\n                            matchSet[serial].render(\n                                _.clone(interactionData, true),\n                                null,\n                                'simpleAssociableChoice.matchInteraction',\n                                renderer\n                            )\n                        );\n                    }\n                }\n            }\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender: function postRender(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n            return _(this.getChoices())\n                .map(function(choices) {\n                    return _(choices)\n                        .filter(function(choice) {\n                            return choice instanceof SimpleAssociableChoice;\n                        })\n                        .map(function(choice) {\n                            return choice.postRender({}, 'simpleAssociableChoice.matchInteraction', renderer);\n                        })\n                        .value();\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        toArray: function toArray() {\n            var i, matchSet, serial;\n            var arr = this._super();\n            arr.choices = { 0: {}, 1: {} };\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        arr.choices[i][serial] = matchSet[serial].toArray();\n                    }\n                }\n            }\n            return arr;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(matchInteraction) {\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(0));\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(1));\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MediaInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, ObjectInteraction, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    ObjectInteraction = ObjectInteraction && Object.prototype.hasOwnProperty.call(ObjectInteraction, 'default') ? ObjectInteraction['default'] : ObjectInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA ;\n     */\n\n    var MediaInteraction = ObjectInteraction.extend({\n        qtiClass: 'mediaInteraction',\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    object: this.object.render({}, null, '', renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/OrderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var OrderInteraction = BlockInteraction.extend({\n        qtiClass: 'orderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n\n    return OrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SelectPointInteraction = GraphicInteraction.extend({\n        qtiClass: 'selectPointInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.selectPointInteractionBased(this);\n        }\n    });\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SliderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SliderInteraction = BlockInteraction.extend({\n        qtiClass: 'sliderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.sliderInteractionBased(this);\n        }\n    });\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var TextEntryInteraction = InlineInteraction.extend({\n        qtiClass: 'textEntryInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n\n    return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/UploadInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var UploadInteraction = InlineInteraction.extend({\n        qtiClass: 'uploadInteraction',\n        getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerItemBody',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'itemBody';\n        }\n    });\n\n    var ContainerItemBody = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerItemBody;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Item',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/ContainerItemBody', 'lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util'], function (Element, IdentifiedElement, Container, _, $, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Item = IdentifiedElement.extend({\n        qtiClass: 'assessmentItem',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.rootElement = this;\n            this.stylesheets = {};\n            this.responses = {};\n            this.outcomes = {};\n            this.modalFeedbacks = {};\n            this.namespaces = {};\n            this.schemaLocations = {};\n            this.responseProcessing = null;\n            this.apipAccessibility = null;\n        },\n        getInteractions: function getInteractions() {\n            var interactions = [];\n            var elts = this.getComposingElements();\n            for (var serial in elts) {\n                if (Element.isA(elts[serial], 'interaction')) {\n                    interactions.push(elts[serial]);\n                }\n            }\n            return interactions;\n        },\n        addResponseDeclaration: function addResponseDeclaration(response) {\n            if (Element.isA(response, 'responseDeclaration')) {\n                response.setRootElement(this);\n                this.responses[response.getSerial()] = response;\n            } else {\n                throw 'is not a qti response declaration';\n            }\n            return this;\n        },\n        getResponseDeclaration: function getResponseDeclaration(identifier) {\n            for (var i in this.responses) {\n                if (this.responses[i].attr('identifier') === identifier) {\n                    return this.responses[i];\n                }\n            }\n            return null;\n        },\n        addOutcomeDeclaration: function addOutcomeDeclaration(outcome) {\n            if (Element.isA(outcome, 'outcomeDeclaration')) {\n                outcome.setRootElement(this);\n                this.outcomes[outcome.getSerial()] = outcome;\n            } else {\n                throw 'is not a qti outcome declaration';\n            }\n            return this;\n        },\n        getOutcomeDeclaration: function getOutcomeDeclaration(identifier) {\n            var found;\n            _.forEach(this.outcomes, function(outcome) {\n                if (outcome.id() === identifier) {\n                    found = outcome;\n                    return false;\n                }\n            });\n            return found;\n        },\n        getOutcomes: function getOutcomes() {\n            return _.clone(this.outcomes);\n        },\n        removeOutcome: function removeOutcome(identifier) {\n            var outcome = this.getOutcomeDeclaration(identifier);\n            if (outcome) {\n                this.outcomes = _.omit(this.outcomes, outcome.getSerial());\n            }\n        },\n        addModalFeedback: function addModalFeedback(feedback) {\n            if (Element.isA(feedback, 'modalFeedback')) {\n                feedback.setRootElement(this);\n                this.modalFeedbacks[feedback.getSerial()] = feedback;\n            } else {\n                throw 'is not a qti modal feedback';\n            }\n            return this;\n        },\n        getComposingElements: function getComposingElements() {\n            var elts = this._super(),\n                _this = this;\n            _.forEach(['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], function(elementCollection) {\n                for (var i in _this[elementCollection]) {\n                    var elt = _this[elementCollection][i];\n                    elts[i] = elt;\n                    elts = _.extend(elts, elt.getComposingElements());\n                }\n            });\n            if (this.responseProcessing instanceof Element) {\n                elts[this.responseProcessing.getSerial()] = this.responseProcessing;\n            }\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n\n            if (!found) {\n                found = util.findInCollection(this, ['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], serial);\n            }\n\n            return found;\n        },\n        getResponses: function getResponses() {\n            return _.clone(this.responses);\n        },\n        getRootElement: function getRootElement() {\n            return this;\n        },\n        addNamespace: function addNamespace(name, uri) {\n            this.namespaces[name] = uri;\n        },\n        setNamespaces: function setNamespaces(namespaces) {\n            this.namespaces = namespaces;\n        },\n        getNamespaces: function getNamespaces() {\n            return _.clone(this.namespaces);\n        },\n        setSchemaLocations: function setSchemaLocations(locations) {\n            this.schemaLocations = locations;\n        },\n        getSchemaLocations: function getSchemaLocations() {\n            return _.clone(this.schemaLocations);\n        },\n        setApipAccessibility: function setApipAccessibility(apip) {\n            this.apipAccessibility = apip || null;\n        },\n        getApipAccessibility: function getApipAccessibility() {\n            return this.apipAccessibility;\n        },\n        addStylesheet: function addStylesheet(stylesheet) {\n            if (Element.isA(stylesheet, 'stylesheet')) {\n                stylesheet.setRootElement(this);\n                this.stylesheets[stylesheet.getSerial()] = stylesheet;\n            } else {\n                throw 'is not a qti stylesheet declaration';\n            }\n            return this;\n        },\n        removeStyleSheet: function removeStyleSheet(stylesheet) {\n            delete this.stylesheets[stylesheet.getSerial()];\n            return this;\n        },\n        stylesheetExists: function stylesheetExists(href) {\n            var exists = false;\n            _.forEach(this.stylesheets, function(stylesheet) {\n                if (stylesheet.attr('href') === href) {\n                    exists = true;\n                    return false; //break each loop\n                }\n            });\n            return exists;\n        },\n        setResponseProcessing: function setResponseProcessing(rp) {\n            if (Element.isA(rp, 'responseProcessing')) {\n                rp.setRootElement(this);\n                this.responseProcessing = rp;\n            } else {\n                throw 'is not a response processing';\n            }\n            return this;\n        },\n        toArray: function toArray() {\n            var arr = this._super();\n            var toArray = function(elt) {\n                return elt.toArray();\n            };\n            arr.namespaces = this.namespaces;\n            arr.schemaLocations = this.schemaLocations;\n            arr.outcomes = _.map(this.outcomes, toArray);\n            arr.responses = _.map(this.responses, toArray);\n            arr.stylesheets = _.map(this.stylesheets, toArray);\n            arr.modalFeedbacks = _.map(this.modalFeedbacks, toArray);\n            arr.responseProcessing = this.responseProcessing.toArray();\n            return arr;\n        },\n        isEmpty: function isEmpty() {\n            var body = this.body().trim();\n\n            if (body) {\n                //hack to fix #2652\n                var $dummy = $('<div>').html(body),\n                    $children = $dummy.children();\n\n                if ($children.length === 1 && $children.hasClass('empty')) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return true;\n            }\n        },\n\n        /**\n         * Clean up an item rendering.\n         * Ask the renderer to run destroy if exists.\n         */\n        clear: function clear() {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    renderer.destroy(this);\n                }\n            }\n        }\n    });\n\n    Container.augment(Item);\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[],function () { 'use strict';\n\n    var qtiClasses = {\n        _container: 'taoQtiItem/qtiItem/core/Container',\n        assessmentItem: 'taoQtiItem/qtiItem/core/Item',\n        responseProcessing: 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        _simpleFeedbackRule: 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        stylesheet: 'taoQtiItem/qtiItem/core/Stylesheet',\n        math: 'taoQtiItem/qtiItem/core/Math',\n        figure: 'taoQtiItem/qtiItem/core/Figure',\n        img: 'taoQtiItem/qtiItem/core/Img',\n        figcaption: 'taoQtiItem/qtiItem/core/Figcaption',\n        object: 'taoQtiItem/qtiItem/core/Object',\n        outcomeDeclaration: 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        responseDeclaration: 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        rubricBlock: 'taoQtiItem/qtiItem/core/RubricBlock',\n        associableHotspot: 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        gap: 'taoQtiItem/qtiItem/core/choices/Gap',\n        gapImg: 'taoQtiItem/qtiItem/core/choices/GapImg',\n        gapText: 'taoQtiItem/qtiItem/core/choices/GapText',\n        hotspotChoice: 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        hottext: 'taoQtiItem/qtiItem/core/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        simpleAssociableChoice: 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        simpleChoice: 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        associateInteraction: 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        choiceInteraction: 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        endAttemptInteraction: 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        gapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        hottextInteraction: 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        matchInteraction: 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        mediaInteraction: 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        orderInteraction: 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        prompt: 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        selectPointInteraction: 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        sliderInteraction: 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        uploadInteraction: 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        feedbackBlock: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        feedbackInline: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        modalFeedback: 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        customInteraction: 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        infoControl: 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        include: 'taoQtiItem/qtiItem/core/Include',\n        table: 'taoQtiItem/qtiItem/core/Table',\n        printedVariable: 'taoQtiItem/qtiItem/core/PrintedVariable',\n        _tooltip: 'taoQtiItem/qtiItem/core/Tooltip'\n    };\n\n    return qtiClasses;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xmlNsHandler',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA\n     */\n\n    /**\n     * XML namespace handling\n     */\n\n    /**\n     * Elements that need to be prefixed\n     *\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\n     * @type {string}\n     */\n    const prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\n\n    /**\n     * Find a possibly existing prefix\n     *\n     * @param namespaces\n     * @param html5Ns\n     * @returns {*}\n     */\n    function getPrefix(namespaces, html5Ns) {\n        let key;\n        for (key in namespaces) {\n            if (namespaces[key] === html5Ns) {\n                return key;\n            }\n        }\n        return 'qh5';\n    }\n\n    var xmlNsHandler = {\n        /**\n         * Remove prefix to make sure elements are properly displayed\n         *\n         * @param body\n         */\n        stripNs: function stripNs(body) {\n            const pattern = '([\\\\w]+)\\\\:(' + prefixed + ')';\n            const openRegEx = new RegExp('(<' + pattern + ')', 'gi');\n            const closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\n        },\n\n        /**\n         * Add a prefix to those elements that require one\n         *\n         * @param xml\n         * @param namespaces\n         * @returns {*}\n         */\n        restoreNs: function restoreNs(xml, namespaces, ignoreMarkup = false) {\n            let xmlCopy = xml;\n            if (ignoreMarkup) {\n                // cut from xmlCopy <markup...>...</markup>\n                // because markup should be html without namespace qh5\n                xmlCopy = xml.replace(/((?=<markup)(.|\\n)*?(?:<\\/markup>)+)/gim, '');\n            }\n            const xmlRe = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\n            const tagRe = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\n            const xmlMatch = xmlCopy.match(xmlRe);\n            const imsXsd = 'http://www.imsglobal.org/xsd';\n            const html5Ns = imsXsd + '/imsqtiv2p2_html5_v1p0';\n            const prefix = getPrefix(namespaces, html5Ns);\n            const prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\n            let i = xmlMatch ? xmlMatch.length : 0;\n\n            if (!xmlMatch) {\n                return xml;\n            }\n\n            while (i--) {\n                const tagMatch = xmlMatch[i].match(tagRe);\n                xml = xml.replace(\n                    xmlMatch[i],\n                    tagMatch[5]\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\n                );\n            }\n\n            // we found matches but no namespace has been set\n            if (xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\n            }\n\n            // make sure the item is set to qti 2.2\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\n            xml = xml.replace(\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\n            );\n\n            return xml;\n        }\n    };\n\n    return xmlNsHandler;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/itemScore',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Returns iteraction score response rule object\n     *\n     * @param {String} responseIdentifiers interactions reponse indentifiers\n     * @returns {Obeject}\n     */\n    var itemScore = (responseIdentifiers) => {\n        const outcomeExpressions = responseIdentifiers.map((outcomeIdentifier) => ({\n            qtiClass: 'variable',\n            attributes: {\n                identifier: `SCORE_${outcomeIdentifier}`,\n            },\n        }));\n\n        return {\n            qtiClass: 'setOutcomeValue',\n            attributes: {\n                identifier: 'SCORE',\n            },\n            expression: {\n                qtiClass: 'sum',\n                expressions: outcomeExpressions,\n            },\n        };\n    };\n\n    return itemScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/xmlNsHandler', 'core/moduleLoader', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/helper/itemScore'], function (_, _class, qtiClasses, Element, xmlNsHandler, moduleLoader, responseHelper, itemScoreHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    qtiClasses = qtiClasses && Object.prototype.hasOwnProperty.call(qtiClasses, 'default') ? qtiClasses['default'] : qtiClasses;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    xmlNsHandler = xmlNsHandler && Object.prototype.hasOwnProperty.call(xmlNsHandler, 'default') ? xmlNsHandler['default'] : xmlNsHandler;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    itemScoreHelper = itemScoreHelper && Object.prototype.hasOwnProperty.call(itemScoreHelper, 'default') ? itemScoreHelper['default'] : itemScoreHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\n     */\n    const loadPortableCustomElementProperties = (portableElement, rawProperties) => {\n        var properties = {};\n\n        _.forOwn(rawProperties, (value, key) => {\n            try {\n                properties[key] = JSON.parse(value);\n            } catch (e) {\n                properties[key] = value;\n            }\n        });\n        portableElement.properties = properties;\n    };\n\n    const loadPortableCustomElementData = (portableElement, data) => {\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.libraries = data.libraries;\n        portableElement.setNamespace('', data.xmlns);\n\n        loadPortableCustomElementProperties(portableElement, data.properties);\n    };\n\n    var Loader = Class.extend({\n        init(item, classesLocation) {\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n            this.item = item || null; //starts either from scratch or with an existing item object\n\n            this.setClassesLocation(classesLocation || qtiClasses); //load default location for qti classes model\n        },\n        setClassesLocation(qtiClassesList) {\n            _.extend(this.classesLocation, qtiClassesList);\n\n            return this;\n        },\n        getRequiredClasses(data) {\n            let ret = [];\n\n            for (let i in data) {\n                if (i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement') {\n                    //although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                } else if (typeof data[i] === 'object' && i !== 'responseRules') {\n                    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n\n            return ret;\n        },\n        loadRequiredClasses(data, callback, reload) {\n            let requiredClass;\n            const requiredClasses = this.getRequiredClasses(data, reload);\n            const required = [];\n\n            for (let i in requiredClasses) {\n                requiredClass = requiredClasses[i];\n                if (this.classesLocation[requiredClass]) {\n                    required.push({\n                        module: this.classesLocation[requiredClass],\n                        category: 'qti'\n                    });\n                } else {\n                    throw new Error(`missing qti class location declaration : ${requiredClass}`);\n                }\n            }\n\n            moduleLoader([], () => true).addList(required).load().then(loadeded => {\n                loadeded.forEach(QtiClass => {\n                    this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(this, this.qti);\n            });\n        },\n        getLoadedClasses() {\n            return _.keys(this.qti);\n        },\n        loadItemData(data, callback) {\n            this.loadRequiredClasses(data, Qti => {\n                if (typeof data === 'object' && data.qtiClass === 'assessmentItem') {\n                    //unload an item from it's serial (in case of a reload)\n                    if (data.serial) {\n                        Element.unsetElement(data.serial);\n                    }\n\n                    this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    this.loadContainer(this.item.getBody(), data.body);\n\n                    for (let i in data.outcomes) {\n                        const outcome = this.buildOutcome(data.outcomes[i]);\n\n                        if (outcome) {\n                            this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n\n                    for (let i in data.feedbacks) {\n                        const feedback = this.buildElement(data.feedbacks[i]);\n\n                        if (feedback) {\n                            this.item.addModalFeedback(feedback);\n                        }\n                    }\n\n                    for (let i in data.stylesheets) {\n                        const stylesheet = this.buildElement(data.stylesheets[i]);\n\n                        if (stylesheet) {\n                            this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    let responseRules = data.responseProcessing && data.responseProcessing.responseRules\n                        ? [...data.responseProcessing.responseRules]\n                        : [];\n                    for (let i in data.responses) {\n                        const responseIdentifier = data.responses[i].identifier;\n                        const responseRuleItemIndex = responseRules.findIndex(({ responseIf: {\n                            expression: {\n                                expressions: [expression = {}] = [],\n                            } = {}\n                        } = {} }) => expression.attributes\n                        && expression.attributes.identifier === responseIdentifier\n                            || (\n                                expression.expressions\n                                && expression.expressions[0]\n                                && expression.expressions[0].attributes\n                                && expression.expressions[0].attributes.identifier === responseIdentifier\n                            )\n                        );\n                        const [responseRule] = responseRuleItemIndex !== -1\n                            ? responseRules.splice(responseRuleItemIndex, 1)\n                            : [];\n\n                        const response = this.buildResponse(\n                            data.responses[i],\n                            responseRule\n                        );\n\n                        if (response) {\n                            this.item.addResponseDeclaration(response);\n\n                            const feedbackRules = data.responses[i].feedbackRules;\n\n                            if (feedbackRules) {\n                                _.forIn(feedbackRules, (fbData, serial) => {\n                                    const {\n                                        attributes: {\n                                            identifier: feedbackOutcomeIdentifier,\n                                        } = {}\n                                    } = data.outcomes[fbData.feedbackOutcome] || {};\n                                    response.feedbackRules[serial] = this.buildSimpleFeedbackRule(fbData, response);\n\n                                    // remove feedback response rule from response rules array\n                                    const feedbackResponseRuleIndex = responseRules.findIndex(({\n                                        responseIf: {\n                                            responseRules: [setOutcomeResponseRule = {}] = [],\n                                        } = {}\n                                    }) => {\n                                        const { attributes = {}, qtiClass } = setOutcomeResponseRule;\n                                        const outcomeIdentifier = attributes.identifier;\n\n                                        return feedbackOutcomeIdentifier === outcomeIdentifier\n                                            && qtiClass === 'setOutcomeValue';\n                                    });\n\n                                    if (feedbackResponseRuleIndex !== -1) {\n                                        responseRules.splice(feedbackResponseRuleIndex, 1);\n                                    }\n                                });\n                            }\n                        }\n                    }\n\n                    const responseIdentifiers = Object.keys(this.item.responses || {})\n                        .map((responseKey) => this.item.responses[responseKey].attributes.identifier);\n\n                    if (data.responseProcessing) {\n                        const customResponseProcessing =\n                            (\n                                responseRules.length > 0\n                                && !(\n                                    responseRules.length === 1\n                                    && _.isEqual(\n                                        responseRules[0],\n                                        itemScoreHelper(\n                                            responseIdentifiers\n                                        )\n                                    )\n                                )\n                            )\n                            || (\n                                this.item.responses\n                                && Object.keys(this.item.responses)\n                                    .some((responseKey) => !this.item.responses[responseKey].template)\n                            );\n\n                        this.item.setResponseProcessing(this.buildResponseProcessing(data.responseProcessing, customResponseProcessing));\n                    }\n                    this.item.setNamespaces(data.namespaces);\n                    this.item.setSchemaLocations(data.schemaLocations);\n                    this.item.setApipAccessibility(data.apipAccessibility);\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        loadAndBuildElement(data, callback) {\n            this.loadRequiredClasses(data, () => {\n                const element = this.buildElement(data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        loadElement(element, data, callback) {\n            this.loadRequiredClasses(data, () => {\n                this.loadElementData(element, data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements(data, callback) {\n            if (!this.item) {\n                throw new Error('QtiLoader : cannot load elements in empty item');\n            }\n\n            this.loadRequiredClasses(data, () => {\n                const allElements = this.item.getComposingElements();\n\n                for (let i in data) {\n                    const elementData = data[i];\n\n                    if (elementData && elementData.qtiClass && elementData.serial) {\n                        //find and update element\n                        if (allElements[elementData.serial]) {\n                            this.loadElementData(allElements[elementData.serial], elementData);\n                        }\n                    }\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        buildResponse(data, responseRule) {\n            const response = this.buildElement(data);\n\n            response.template = responseHelper.getTemplateUriFromName(\n                responseHelper.getTemplateNameFromResponseRules(data.identifier, responseRule)\n            )\n                || data.howMatch\n                || null;\n\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if (_.size(data.mapping)) {\n                response.mapEntries = data.mapping;\n            } else if (_.size(data.areaMapping)) {\n                response.mapEntries = data.areaMapping;\n            } else {\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule(data, response) {\n            const feedbackRule = this.buildElement(data);\n\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\n\n            //            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            //associate the compared outcome to the feedbacks if applicable\n            const comparedOutcome = feedbackRule.comparedOutcome;\n\n            if (feedbackRule.feedbackThen) {\n                feedbackRule.feedbackThen.data('relatedResponse', comparedOutcome);\n            }\n\n            if (feedbackRule.feedbackElse) {\n                feedbackRule.feedbackElse.data('relatedResponse', comparedOutcome);\n            }\n\n            return feedbackRule;\n        },\n        buildOutcome(data) {\n            const outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n\n            return outcome;\n        },\n        buildResponseProcessing(data, customResponseProcessing) {\n            const rp = this.buildElement(data);\n\n            if (customResponseProcessing) {\n                rp.xml = data.data;\n                rp.processingType = 'custom';\n            } else {\n                rp.processingType = 'templateDriven';\n            }\n\n            return rp;\n        },\n        loadContainer(bodyObject, bodyData) {\n            if (!Element.isA(bodyObject, '_container')) {\n                throw new Error('bodyObject must be a QTI Container');\n            }\n\n            if (!(bodyData && typeof bodyData.body === 'string' && typeof bodyData.elements === 'object')) {\n                throw new Error('wrong bodydata format');\n            }\n            //merge attributes when loading element data\n            const attributes = _.defaults(bodyData.attributes || {}, bodyObject.attributes || {});\n            bodyObject.setAttributes(attributes);\n\n            for (let serial in bodyData.elements) {\n                const eltData = bodyData.elements[serial];\n                const element = this.buildElement(eltData);\n\n                //check if class is loaded:\n                if (element) {\n                    bodyObject.setElement(element, bodyData.body);\n                }\n            }\n\n            bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\n        },\n        buildElement(elementData) {\n            if (!(elementData && elementData.qtiClass && elementData.serial)) {\n                throw new Error('wrong elementData format');\n            }\n\n            const className = elementData.qtiClass;\n\n            if (!this.qti[className]) {\n                throw new Error(`the qti element class does not exist: ${className}`);\n            }\n\n            const elt = new this.qti[className](elementData.serial);\n            this.loadElementData(elt, elementData);\n\n            return elt;\n        },\n        loadElementData(element, data) {\n            //merge attributes when loading element data\n            const attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            let body = data.body;\n            if (!body && data.text && data.qtiClass === 'inlineChoice') {\n                body = { body: data.text, elements: {} };\n            }\n            if (element.body && body) {\n                if (element.bdy) {\n                    this.loadContainer(element.getBody(), body);\n                }\n            }\n\n            if (element.object && data.object) {\n                if (element.object) {\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if (Element.isA(element, 'interaction')) {\n                this.loadInteractionData(element, data);\n            } else if (Element.isA(element, 'choice')) {\n                this.loadChoiceData(element, data);\n            } else if (Element.isA(element, 'math')) {\n                this.loadMathData(element, data);\n            } else if (Element.isA(element, 'infoControl')) {\n                this.loadPicData(element, data);\n            } else if (Element.isA(element, '_tooltip')) {\n                this.loadTooltipData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData(interaction, data) {\n            if (Element.isA(interaction, 'blockInteraction')) {\n                if (data.prompt) {\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if (Element.isA(interaction, 'customInteraction')) {\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices(interaction, data) {\n            // note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if (data.choices) {\n                if (Element.isA(interaction, 'matchInteraction')) {\n                    for (let set = 0; set < 2; set++) {\n                        if (!data.choices[set]) {\n                            throw new Error(`missing match set #${set}`);\n                        }\n\n                        const matchSet = data.choices[set];\n\n                        for (let serial in matchSet) {\n                            const choice = this.buildElement(matchSet[serial]);\n\n                            if (choice) {\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                } else {\n                    for (let serial in data.choices) {\n                        const choice = this.buildElement(data.choices[serial]);\n\n                        if (choice) {\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if (Element.isA(interaction, 'graphicGapMatchInteraction')) {\n                    if (data.gapImgs) {\n                        for (let serial in data.gapImgs) {\n                            const gapImg = this.buildElement(data.gapImgs[serial]);\n\n                            if (gapImg) {\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        loadChoiceData(choice, data) {\n            if (Element.isA(choice, 'textVariableChoice')) {\n                choice.val(data.text);\n            } else if (Element.isA(choice, 'gapImg')) ; else if (Element.isA(choice, 'gapText')) {\n                // this ensure compatibility of Qti 2.1 items\n                if (!choice.body()) {\n                    choice.body(data.text);\n                }\n            } else if (Element.isA(choice, 'containerChoice')) ;\n        },\n        loadObjectData(object, data) {\n            object.setAttributes(data.attributes);\n\n            //@todo: manage object like a container\n            if (data._alt) {\n                if (data._alt.qtiClass === 'object') {\n                    object._alt = Loader.buildElement(data._alt);\n                } else {\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData(math, data) {\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, (value, encoding) => {\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadTooltipData(tooltip, data) {\n            tooltip.content(data.content);\n        },\n        loadPciData(pci, data) {\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData(pic, data) {\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    return Loader;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Math',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function ($, _, Element, rendererConfig, NamespacedElement) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Math;\n\n    /**\n     * Remove the closing MathML tags and remove useless line breaks before and after it\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripMathTags(mathML, nsName) {\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : '') + 'math[^>]*>', 'g');\n        return mathML\n            .replace(regex, '')\n            .replace(/^\\s*[\\r\\n]/gm, '') //remove first blank line\n            .replace(/\\s*[\\r\\n]$/gm, ''); //last blank line\n    }\n\n    /**\n     * Remove mathML ns name prefix from the mathML\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripNamespace(mathML, nsName) {\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : ''), 'g');\n        return mathML.replace(regex, '<$1');\n    }\n\n    /**\n     * Check if the mathML string is to be considered empty\n     *\n     * @param {String} mathStr\n     * @returns {Boolean}\n     */\n    function _isEmptyMathML(mathStr) {\n        var $math,\n            mathText,\n            hasContent = false;\n\n        if (mathStr && mathStr.trim()) {\n            $math = $($.parseHTML(mathStr));\n            mathText = $math.text();\n            hasContent = _.isString(mathText) && !!mathText.trim();\n        }\n\n        return !hasContent;\n    }\n\n    Math = Element.extend({\n        qtiClass: 'math',\n        defaultNsName: 'm',\n        defaultNsUri: 'http://www.w3.org/1998/Math/MathML',\n        nsUriFragment: 'MathML',\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.ns = null;\n            this.mathML = '';\n            this.annotations = {};\n        },\n        setAnnotation: function(encoding, value) {\n            this.annotations[encoding] = _.unescape(value);\n        },\n        getAnnotation: function(encoding) {\n            return this.annotations[encoding];\n        },\n        removeAnnotation: function(encoding) {\n            delete this.annotations[encoding];\n        },\n        setMathML: function(mathML) {\n            var ns = this.getNamespace(),\n                nsName = ns.name && ns.uri ? ns.name : '';\n\n            mathML = _stripMathTags(mathML, nsName);\n            if (ns) {\n                mathML = _stripNamespace(mathML, nsName);\n            }\n            this.mathML = mathML;\n        },\n        getMathML: function() {\n            return this.mathML;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                tag = this.qtiClass,\n                raw = this.mathML,\n                body = raw,\n                ns = this.getNamespace(),\n                annotations = '',\n                encoding,\n                defaultData;\n\n            for (encoding in this.annotations) {\n                annotations +=\n                    '<annotation encoding=\"' + encoding + '\">' + _.escape(this.annotations[encoding]) + '</annotation>';\n            }\n\n            if (annotations) {\n                if (raw.indexOf('</semantics>') > 0) {\n                    raw = raw.replace('</semantics>', annotations + '</semantics>');\n                } else {\n                    raw = '<semantics>' + raw + annotations + '</semantics>';\n                }\n            }\n\n            if (ns && ns.name) {\n                body = raw.replace(/<(\\/)?([^!<])/g, '<$1' + ns.name + ':$2');\n                tag = ns.name + ':' + tag;\n            }\n\n            body = body.replace(/<!--.*?-->/g, ''); // remove Mathjax-generated comments\n            body = body.replace(/&lt;!--.*?--&gt;/g, ''); // fix for broken items because of Mathjax comments\n\n            defaultData = {\n                block: this.attr('display') === 'block' ? true : false,\n                body: body,\n                raw: raw,\n                tag: tag,\n                ns: ns\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return _isEmptyMathML(this.mathML) && (!this.annotations.latex || !this.annotations.latex.trim());\n        }\n    });\n\n    NamespacedElement.augment(Math);\n\n    var Math$1 = Math;\n\n    return Math$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PortableInfoControl',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, CustomElement, NamespacedElement, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var PortableInfoControl = Element.extend({\n        qtiClass: 'infoControl',\n        defaultNsName: 'pic',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableInfoControl',\n        nsUriFragment: 'portableInfoControl',\n        defaultMarkupNsName: 'html5',\n        defaultMarkupNsUri: 'html5',\n\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            //stack of callback waiting to be ready\n            this.readyStack = [];\n        },\n\n        is: function(qtiClass) {\n            return qtiClass === 'infoControl' || this._super(qtiClass);\n        },\n\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier: this.typeIdentifier,\n                    markup: this.markup,\n                    properties: this.properties,\n                    libraries: this.libraries,\n                    entryPoint: this.entryPoint,\n                    ns: {\n                        pic: this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n\n        /**\n         * Retrieve the state of the infoControl\n         * The call will be delegated to the infoControl's renderer.\n         *\n         * @returns {Object} the state\n         */\n        getState: function getState() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.getState)) {\n                ret = renderer.getState(this);\n            }\n            return ret;\n        },\n\n        /**\n         * Set the state of the infoControl\n         * The state will be set to the infoControl's renderer.\n         *\n         * @param {Object} state - the infoControl's state\n         */\n        setState: function setState(state) {\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.getState)) {\n                renderer.setState(this, state);\n            }\n        },\n\n        toArray: function() {\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n\n        /**\n         * Execute a callback when the PIC is ready (ie. registered, loaded and rendererd)\n         * @param {Function} cb - the function to execute once ready\n         */\n        onReady: function onReady(cb) {\n            this.readyStack.push(cb);\n\n            //if we are ready this will pop the stack\n            if (this.data('_ready') && this.data('pic')) {\n                this.triggerReady();\n            }\n        },\n\n        /**\n         * Define the PIC as ready and consume the waiting functions in the stack.\n         */\n        triggerReady: function triggerReady() {\n            var self = this;\n            _.forEach(this.readyStack, function(cb) {\n                cb.call(self, self.data('pic'));\n            });\n\n            //empty the stack\n            this.readyStack = [];\n\n            //mark the infoControl as ready\n            this.data('_ready', true);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(PortableInfoControl);\n    NamespacedElement.augment(PortableInfoControl);\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PrintedVariable',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var PrintedVariable = Element.extend({\n        qtiClass: 'printedVariable'\n    });\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',['taoQtiItem/qtiItem/core/Element', 'lodash'], function (Element, _) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var SimpleFeedbackRule = Element.extend({\n        qtiClass: '_simpleFeedbackRule',\n        serial: '',\n        rootElement: null,\n        init: function (serial, feedbackOutcome, feedbackThen, feedbackElse) {\n            this._super(serial, {});\n\n            this.condition = 'correct';\n            this.comparedOutcome = null;\n            this.comparedValue = 0.0;\n\n            this.feedbackOutcome = feedbackOutcome;\n            if (Element.isA(feedbackThen, 'feedback')) {\n                this.feedbackThen = feedbackThen;\n            } else {\n                this.feedbackThen = null;\n            }\n            if (Element.isA(feedbackElse, 'feedback')) {\n                this.feedbackElse = feedbackThen;\n            } else {\n                this.feedbackElse = null;\n            }\n        },\n        setCondition: function (comparedOutcome, condition, comparedValue) {\n            var _comparedValues = [];\n            if (Element.isA(comparedOutcome, 'variableDeclaration')) {\n                switch (condition) {\n                    case 'correct':\n                    case 'incorrect':\n                        if (Element.isA(comparedOutcome, 'responseDeclaration')) {\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                        } else {\n                            throw 'invalid outcome type: must be a responseDeclaration';\n                        }\n                        break;\n                    case 'lt':\n                    case 'lte':\n                    case 'equal':\n                    case 'gte':\n                    case 'gt':\n                        if (comparedValue !== null && comparedValue !== undefined) {\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            this.comparedValue = comparedValue;\n                        } else {\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    case 'choices':\n                        if (\n                            Element.isA(comparedOutcome, 'responseDeclaration') &&\n                            comparedValue !== null &&\n                            _.isArray(comparedValue)\n                        ) {\n                            var choices = _.values(comparedOutcome.getInteraction().getChoices());\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            _.forEach(comparedValue, function (v) {\n                                if (v instanceof Element) {\n                                    _comparedValues.push(v);\n                                } else if (_.isString(v)) {\n                                    _.forEach(choices, function (c) {\n                                        if (c.attr('identifier') === v) {\n                                            _comparedValues.push(c);\n                                            return false; //break\n                                        }\n                                    });\n                                }\n                            });\n\n                            this.comparedValue = _comparedValues;\n                        } else {\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    default:\n                        throw 'unknown condition type : '.condition;\n                }\n            } else {\n                throw 'invalid outcome type: must be a variableDeclaration';\n            }\n\n            return this;\n        },\n        setFeedbackElse: function (feedback) {\n            if (Element.isA(feedback, 'feedback')) {\n                this.feedbackElse = feedback;\n            }\n        },\n        toArray: function () {\n            var val = this.comparedValue;\n            var _toString = function (v) {\n                if (val instanceof Element) {\n                    return val.attr('identifier');\n                } else {\n                    return val + '';\n                }\n            };\n            if (_.isArray(val)) {\n                val = _.map(val, _toString);\n            } else {\n                val = _toString();\n            }\n            return {\n                condition: this.condition,\n                comparedOutcome: this.comparedOutcome.id(),\n                comparedValue: val\n            };\n        }\n    });\n\n    return SimpleFeedbackRule;\n\n});\n\n","define('taoQtiItem/qtiItem/core/ResponseProcessing',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    var ResponseProcessing = Element.extend({\n        qtiClass: 'responseProcessing',\n        processingType: '',\n        xml: '',\n        toArray: function() {\n            var arr = this._super();\n            arr.processingType = this.processingType;\n            arr.xml = this.xml;\n            return arr;\n        }\n    });\n\n    return ResponseProcessing;\n\n});\n\n","define('taoQtiItem/qtiItem/core/RubricBlock',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/Container'], function (Element, Container) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var RubricBlock = Element.extend({\n        qtiClass: 'rubricBlock',\n        isEmpty: function isEmpty() {\n            return !(this.bdy && this.bdy.body());\n        }\n    });\n\n    Container.augment(RubricBlock);\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Stylesheet',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Stylesheet = Element.extend({\n        qtiClass: 'stylesheet',\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = { href: renderer.resolveUrl(this.attr('href')) };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerTable',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'table';\n        }\n    });\n\n    var ContainerTable = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerTable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Table',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerTable'], function (_, Element, Container) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Table = Element.extend({\n        qtiClass: 'table'\n    });\n\n    Container.augment(Table);\n\n    Table = Table.extend({\n        // on table creation, we might get a body wrapped in a table element, that we need to get rid of\n        body: function(newBody) {\n            if (_.isString(newBody)) {\n                newBody = newBody.replace('<table>', '').replace('</table>', '');\n            }\n            return this._super(newBody);\n        }\n    });\n\n    var Table$1 = Table;\n\n    return Table$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Tooltip',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, ContainerInline, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ContainerInline = ContainerInline && Object.prototype.hasOwnProperty.call(ContainerInline, 'default') ? ContainerInline['default'] : ContainerInline;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Tooltip = Element.extend({\n        qtiClass: '_tooltip',\n\n        init: function(serial, attributes, newContent) {\n            this._super(serial, attributes);\n            this.content(newContent || '');\n        },\n\n        /**\n         * Set/get the content of the tooltip\n         * @param {String} newContent - as HTML\n         * @returns {Element|String}\n         */\n        content: function content(newContent) {\n            if (typeof newContent === 'undefined') {\n                return this.tooltipContent;\n            } else {\n                if (typeof newContent === 'string') {\n                    this.tooltipContent = newContent;\n                } else {\n                    throw new Error('newContent must be a string');\n                }\n            }\n            return this;\n        },\n\n        /**\n         * Adds the tooltip content to the template data\n         */\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    content: this.tooltipContent\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    ContainerInline.augment(Tooltip);\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/ResponseDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration', 'lodash'], function (VariableDeclaration, _) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var ResponseDeclaration = VariableDeclaration.extend({\n        qtiClass: 'responseDeclaration',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n\n            //MATCH_CORRECT, MAP_RESPONSE, MAP_RESPONSE_POINT\n            this.template = ''; //previously called 'howMatch'\n\n            //when template equals ont of the \"map\" one (MAP_RESPONSE, MAP_RESPONSE_POINT)\n            this.mappingAttributes = {};\n            this.mapEntries = {};\n\n            //correct response [0..*]\n            this.correctResponse = null;\n\n            //tao internal usage:\n            this.feedbackRules = {};\n        },\n        getFeedbackRules: function () {\n            return _.values(this.feedbackRules);\n        },\n        getComposingElements: function () {\n            var elts = this._super();\n            elts = _.extend(elts, this.feedbackRules);\n            return elts;\n        },\n        toArray: function () {\n            var arr = this._super();\n            arr.howMatch = this.template;\n            arr.correctResponses = this.correctResponse;\n            arr.mapping = this.mapEntries;\n            arr.mappingAttributes = this.mappingAttributes;\n            arr.feedbackRules = _.map(this.feedbackRules, function (rule) {\n                return rule.toArray();\n            });\n            return arr;\n        },\n        getInteraction: function () {\n            var interaction = null;\n            var responseId = this.id();\n            var item = this.getRootElement();\n            var interactions = item.getInteractions();\n            _.forEach(interactions, function (i) {\n                if (i.attributes.responseIdentifier === responseId) {\n                    interaction = i;\n                    return false; //break\n                }\n            });\n            return interaction;\n        },\n        isCardinality: function (cardinalities) {\n            var comparison;\n            if (_.isArray(cardinalities)) {\n                comparison = cardinalities;\n            } else if (_.isString(cardinalities)) {\n                cardinalities = [cardinalities];\n            } else {\n                return false;\n            }\n            return _.indexOf(comparison, this.attr('cardinality')) >= 0;\n        }\n    });\n\n    return ResponseDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/EventMgr',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    //@todo : complete with namespace managements\n    function EventMgr() {\n        var events = {};\n\n        this.get = function (event) {\n            if (event && events[event]) {\n                return _.clone(events[event]);\n            } else {\n                return [];\n            }\n        };\n\n        this.on = function (event, callback) {\n            var tokens = event.split('.');\n            if (tokens[0]) {\n                var name = tokens.shift();\n                events[name] = events[name] || [];\n                events[name].push({\n                    ns: tokens,\n                    callback: callback\n                });\n            }\n        };\n\n        this.off = function (event) {\n            if (event && events[event]) {\n                events[event] = [];\n            }\n        };\n\n        this.trigger = function (event, data) {\n            if (events[event]) {\n                _.forEach(events[event], function (e) {\n                    //@todo check ns:\n                    e.callback.apply(\n                        {\n                            type: event,\n                            ns: []\n                        },\n                        data\n                    );\n                });\n            }\n        };\n    }\n\n    return EventMgr;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/pci',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var pci = {\n        getRawValues: function (pciVar) {\n            if (_.isPlainObject(pciVar)) {\n                if (typeof pciVar.base !== 'undefined') {\n                    return _.values(pciVar.base);\n                } else if (pciVar.list) {\n                    return _.values(pciVar.list);\n                }\n            }\n            throw new Error('unsupported type ');\n        }\n    };\n\n    return pci;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/modalFeedback',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/pci', 'taoQtiItem/qtiItem/helper/container'], function ($, _, pci, containerHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n\n    /**\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\n     *\n     * @param {type} feedback\n     * @returns {String}\n     */\n    var getFeedbackMessageSignature = function getFeedbackMessageSignature(feedback) {\n        return ('' + feedback.body() + feedback.attr('title'))\n            .toLowerCase()\n            .trim()\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\n    };\n\n    /**\n     * Extract the display information for an interaction-related feedback\n     *\n     * @private\n     * @param {Object} interaction - a qti interaction object\n     * @returns {Object} Object containing useful display information\n     */\n    var extractDisplayInfo = function extractDisplayInfo(interaction) {\n        var $interactionContainer = interaction.getContainer();\n        var responseIdentifier = interaction.attr('responseIdentifier');\n        var messageGroupId, $displayContainer;\n\n        if (interaction.is('inlineInteraction')) {\n            $displayContainer = $interactionContainer.closest('[class*=\" col-\"], [class^=\"col-\"]');\n            messageGroupId = $displayContainer.attr('data-messageGroupId');\n            if (!messageGroupId) {\n                //generate a messageFromId\n                messageGroupId = _.uniqueId('inline_message_group_');\n                $displayContainer.attr('data-messageGroupId', messageGroupId);\n            }\n        } else {\n            messageGroupId = responseIdentifier;\n            $displayContainer = $interactionContainer;\n        }\n\n        return {\n            responseIdentifier: responseIdentifier,\n            interactionContainer: $interactionContainer,\n            displayContainer: $displayContainer,\n            messageGroupId: messageGroupId,\n            order: -1\n        };\n    };\n\n    /**\n     * Get interaction display information sorted in the order of appearance within the item\n     *\n     * @param {Object} item\n     * @returns {Array}\n     */\n    var getInteractionsDisplayInfo = function getInteractionsDisplayInfo(item) {\n        var interactionsDisplayInfo = [];\n        var $itemContainer = item.getContainer();\n        var interactionOrder = 0;\n\n        //extract all interaction related information needed to display their\n        _.forEach(item.getComposingElements(), function (element) {\n            if (element.is('interaction')) {\n                interactionsDisplayInfo.push(extractDisplayInfo(element));\n            }\n        });\n\n        //sort interactionsDisplayInfo on the item level\n        $itemContainer.find('.qti-interaction').each(function () {\n            var self = this;\n            _.forEach(interactionsDisplayInfo, function (_interactionInfo) {\n                if (_interactionInfo.interactionContainer[0] === self) {\n                    _interactionInfo.order = interactionOrder;\n                    return false;\n                }\n            });\n            interactionOrder++;\n        });\n        interactionsDisplayInfo = _.sortBy(interactionsDisplayInfo, 'order');\n\n        return interactionsDisplayInfo;\n    };\n\n    /**\n     * Returns feedbacks according to the given itemSession variables\n     *\n     * @param {Object} item - the standard tao qti item object\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\n     * @returns {Array} renderingFeedbacks - feedbacks to be displayed\n     */\n    var getFeedbacks = function getFeedbacks(item, itemSession) {\n        var messages = {};\n        var $itemContainer = item.getContainer();\n        var $itemBody = $('.qti-itemBody', $itemContainer);\n        var interactionsDisplayInfo = getInteractionsDisplayInfo(item);\n        var renderingQueue = [];\n\n        _.forEach(item.modalFeedbacks, function (feedback) {\n            var feedbackIds, message, $container, comparedOutcome, _currentMessageGroupId, interactionInfo;\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\n            var order = -1;\n\n            //verify if the feedback should be displayed\n            if (itemSession[outcomeIdentifier]) {\n                //is the feedback in the list of feedbacks to be displayed ?\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\n                if (!feedbackIds.includes(feedback.id())) {\n                    return true; //continue with next feedback\n                }\n\n                //which group of feedbacks (interaction related) the feedback belongs to ?\n                message = getFeedbackMessageSignature(feedback);\n                comparedOutcome = containerHelper.getEncodedData(feedback, 'relatedOutcome');\n                interactionInfo = _.find(interactionsDisplayInfo, { responseIdentifier: comparedOutcome });\n                if (comparedOutcome && interactionInfo) {\n                    $container = interactionInfo.displayContainer;\n                    _currentMessageGroupId = interactionInfo.messageGroupId;\n                    order = interactionInfo.order;\n                } else {\n                    $container = $itemBody;\n                    _currentMessageGroupId = '__item__';\n                }\n                //is this message already displayed ?\n                if (!messages[_currentMessageGroupId]) {\n                    messages[_currentMessageGroupId] = [];\n                }\n\n                if (messages[_currentMessageGroupId] && messages[_currentMessageGroupId].includes(message)) {\n                    return true; //continue\n                } else {\n                    messages[_currentMessageGroupId].push(message);\n                }\n\n                //ok, display feedback\n                renderingQueue.push({\n                    feedback: feedback,\n                    $container: $container,\n                    order: order\n                });\n            }\n        });\n\n        renderingQueue = _.sortBy(renderingQueue, 'order');\n\n        return renderingQueue;\n    };\n\n    /**\n     * Provide helper function for collecting feedbacks\n     */\n    var modalFeedback = {\n        getFeedbacks: getFeedbacks\n    };\n\n    return modalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/Parser',['jquery'], function ($) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /**\n     * Experimental parser\n     *\n     */\n\n    var Parser = function() {\n        var _$xml = null;\n        this.loadXML = function(xml) {\n            _$xml = $.parseXML(xml);\n        };\n        this.getDOM = function() {\n            return _$xml;\n        };\n    };\n\n    return Parser;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/simpleParser',['lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/core/Loader'], function (_, $, util, Loader) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2021 (original work) Open Assessment Technologies SA\n     **/\n\n    const _parsableElements = ['img', 'object', 'printedVariable'];\n    const _qtiClassNames = {\n        rubricblock: 'rubricBlock',\n        printedvariable: 'printedVariable'\n    };\n    const _qtiAttributesNames = {\n        powerform: 'powerForm',\n        mappingindicator: 'mappingIndicator'\n    };\n\n    const _defaultOptions = {\n        ns: {\n            math: '',\n            include: 'xi',\n            table: 'table',\n            image: 'img',\n            object: '',\n            figure: 'qh5',\n            figcaption: 'qh5'\n        },\n        loaded: null,\n        model: null\n    };\n\n    let parser;\n\n    function _getElementSelector(qtiClass, ns) {\n        return ns ? ns + '\\\\:' + qtiClass + ',' + qtiClass : qtiClass;\n    }\n\n    function getQtiClassFromXmlDom($node) {\n        let qtiClass = $node.prop('tagName').toLowerCase();\n\n        //remove ns :\n        qtiClass = qtiClass.replace(/.*:/, '');\n\n        return _qtiClassNames[qtiClass] ? _qtiClassNames[qtiClass] : qtiClass;\n    }\n\n    function buildElement($elt) {\n        const qtiClass = getQtiClassFromXmlDom($elt);\n\n        const elt = {\n            qtiClass: qtiClass,\n            serial: util.buildSerial(qtiClass + '_'),\n            attributes: {}\n        };\n\n        $.each($elt[0].attributes, function () {\n            let attrName;\n            if (this.specified) {\n                attrName = _qtiAttributesNames[this.name] || this.name;\n                elt.attributes[attrName] = this.value;\n            }\n        });\n\n        return elt;\n    }\n\n    function buildMath($elt, options) {\n        const elt = buildElement($elt);\n\n        //set annotations:\n        elt.annotations = {};\n        $elt.find(_getElementSelector('annotation', options.ns.math)).each(function () {\n            const $annotation = $(this);\n            const encoding = $annotation.attr('encoding');\n            if (encoding) {\n                elt.annotations[encoding] = _.unescape($annotation.html());\n            }\n            $annotation.remove();\n        });\n\n        //set math xml\n        elt.mathML = $elt.html();\n\n        //set ns:\n        elt.ns = {\n            name: 'm',\n            uri: 'http://www.w3.org/1998/Math/MathML' //@todo : remove hardcoding there\n        };\n\n        return elt;\n    }\n\n    function buildTooltip(targetHtml, contentId, contentHtml) {\n        const qtiClass = '_tooltip';\n\n        return {\n            elements: {},\n            qtiClass: qtiClass,\n            serial: util.buildSerial(qtiClass + '_'),\n            attributes: {\n                'aria-describedby': contentId\n            },\n            content: contentHtml,\n            body: {\n                elements: {},\n                serial: util.buildSerial('container'),\n                body: targetHtml\n            }\n        };\n    }\n\n    function parseTable($elt, elt, options) {\n        elt.body = {\n            body: '',\n            elements: {}\n        };\n\n        const $parsedTable = parseContainer($elt, options);\n        elt.body.body = $parsedTable.body;\n        elt.body.elements = $parsedTable.elements;\n        return elt;\n    }\n\n    function parseFigure($elt, elt, options) {\n        elt.body = {\n            body: '',\n            elements: {}\n        };\n\n        const $parsedFigure = parseContainer($elt, options);\n        elt.body.body = $parsedFigure.body;\n        elt.body.elements = $parsedFigure.elements;\n        const $figcaption = $elt.find(_getElementSelector('figcaption', options.ns.figcaption));\n        if ($figcaption.length) {\n            const element = buildElement($figcaption);\n            element.body = {\n                body: $figcaption.html(),\n                elements: {}\n            };\n            elt.body.elements[element.serial] = element;\n            $figcaption.replaceWith(_placeholder(element));\n        }\n        elt.body.body = $elt.html();\n        return elt;\n    }\n\n    function parseContainer($container, options) {\n        const ret = {\n            serial: util.buildSerial('_container_'),\n            body: '',\n            elements: {}\n        };\n        // table should be in top as it needs to be parsed first\n        $container.find('table').each(function () {\n            const $qtiElement = $(this);\n            let element = buildElement($qtiElement);\n\n            element = parseTable($qtiElement, element, options);\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        // figure should be in top as it needs to be parsed first\n        $container.find(_getElementSelector('figure', options.ns.figure)).each(function () {\n            const $qtiElement = $(this);\n            let element = buildElement($qtiElement);\n\n            element = parseFigure($qtiElement, element, options);\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find(_getElementSelector('math', options.ns.math)).each(function () {\n            const $qtiElement = $(this);\n            const element = buildMath($qtiElement, options);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find(_getElementSelector('include', options.ns.include)).each(function () {\n            const $qtiElement = $(this);\n            const element = buildElement($qtiElement);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find('[data-role=\"tooltip-target\"]').each(function () {\n            let element,\n                $target = $(this),\n                $content,\n                contentId = $target.attr('aria-describedBy'),\n                contentHtml;\n\n            if (contentId) {\n                $content = $container.find('#' + contentId);\n                if ($content.length) {\n                    contentHtml = $content.html();\n\n                    element = buildTooltip($target.html(), contentId, contentHtml);\n\n                    ret.elements[element.serial] = element;\n                    $target.replaceWith(_placeholder(element));\n                    $content.remove();\n                }\n            }\n        });\n\n        _.forEach(_parsableElements, function (qtiClass) {\n            $container.find(qtiClass).each(function () {\n                const $qtiElement = $(this);\n                const element = buildElement($qtiElement);\n                ret.elements[element.serial] = element;\n                $qtiElement.replaceWith(_placeholder(element));\n            });\n        });\n\n        ret.body = $container.html();\n        return ret;\n    }\n\n    function _placeholder(element) {\n        return '{{' + element.serial + '}}';\n    }\n\n    parser = {\n        parse: function (xmlStr, opts) {\n            const options = _.merge(_.clone(_defaultOptions), opts || {});\n\n            const $container = $(xmlStr);\n\n            const element = buildElement($container);\n\n            const data = parseContainer($container, options);\n\n            let loader;\n\n            if (!_.isUndefined(data.body)) {\n                element.body = data;\n            }\n\n            if (_.isFunction(options.loaded) && options.model) {\n                loader = new Loader().setClassesLocation(options.model);\n                loader.loadAndBuildElement(element, options.loaded);\n            }\n\n            return element;\n        }\n    };\n\n    var parser$1 = parser;\n\n    return parser$1;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xincludeLoader',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/simpleParser', 'taoQtiItem/qtiItem/core/Loader'], function ($, _, simpleParser, Loader) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    simpleParser = simpleParser && Object.prototype.hasOwnProperty.call(simpleParser, 'default') ? simpleParser['default'] : simpleParser;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    function load(xinclude, baseUrl, callback) {\n        const href = xinclude.attr('href');\n        if (href && baseUrl) {\n            const fileUrl = `text!${baseUrl}${href}`;\n            // reset the previous definition of the XML, to receive updated passage\n            require.undef(fileUrl);\n            // require xml\n            require([fileUrl], function (stimulusXml) {\n                const $wrapper = $.parseXML(stimulusXml);\n                const $sampleXMLrootNode = $wrapper.children;\n                const $stimulus = $('<include>').append($sampleXMLrootNode);\n                const mathNs = 'm'; //for 'http://www.w3.org/1998/Math/MathML'\n                const data = simpleParser.parse($stimulus, {\n                    ns: {\n                        math: mathNs\n                    }\n                });\n\n                new Loader().loadElement(xinclude, data, function () {\n                    if (_.isFunction(callback)) {\n                        const loadedClasses = this.getLoadedClasses();\n                        loadedClasses.push('_container'); //the _container class is always required\n                        callback(xinclude, data, loadedClasses);\n                    }\n                });\n            }, function () {\n                //in case the file does not exist\n                callback(xinclude, false, []);\n            });\n        }\n    }\n\n    var xincludeLoader = {\n        load\n    };\n\n    return xincludeLoader;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/picManager',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element'], function ($, _, Element) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The template of a PicManager instance\n     * @type {picManager}\n     */\n    var picManager = {\n        /**\n         * Creates a manager for a particular PIC\n         *\n         * @param {Object} pic\n         * @param {QtiItem} item\n         * @returns {picManager}\n         */\n        init: function init(pic, item) {\n            if (Element.isA(pic, 'infoControl')) {\n                this._pic = pic;\n            }\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this._item = item;\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets the managed PIC\n         *\n         * @returns {Object} the descriptor of the PIC\n         */\n        getPic: function getPic() {\n            return this._pic;\n        },\n\n        /**\n         * Gets the related Item\n         *\n         * @returns {QtiItem} the Item\n         */\n        getItem: function getItem() {\n            return this._item;\n        },\n\n        /**\n         * Gets the PIC serial\n         * @returns {String}\n         */\n        getSerial: function getSerial() {\n            return this._pic && this._pic.serial;\n        },\n\n        /**\n         * Gets the PIC type identifier\n         * @returns {String}\n         */\n        getTypeIdentifier: function getTypeIdentifier() {\n            return this._pic && this._pic.typeIdentifier;\n        },\n\n        /**\n         * Gets the underlying DOM element of the managed PIC\n         * @returns {{pic: (jQuery), tool: (jQuery), button: (jQuery), broken: (Boolean))}|*} An object providing the underlying DOM elements of the PIC and its tool\n         */\n        getDom: function getDom() {\n            if (!this._dom) {\n                var serial = this.getSerial();\n                var pic, tool;\n\n                if (serial) {\n                    pic = $('[data-serial=\"' + serial + '\"]');\n                    if (pic.length) {\n                        tool = $('[data-pic-serial=\"' + serial + '\"]');\n\n                        if (!tool.length) {\n                            tool = pic.children().first();\n                        }\n\n                        this._dom = {\n                            pic: pic,\n                            tool: tool,\n                            button: tool.find('.sts-button'),\n                            broken: pic.is(':empty') // tells if the tool has been moved outside of the PIC\n                        };\n                    }\n                }\n            }\n\n            return this._dom;\n        },\n\n        /**\n         * Enables the PIC.\n         * @fires enable\n         * @returns {picManager}\n         */\n        enable: function enable() {\n            // @todo: find a better solution for disabling/enabling a PIC\n            var dom = this.getDom();\n            if (dom) {\n                // just remove the disabled state and destroy the disable mask\n                dom.button.removeClass('disabled');\n                dom.tool.find('.sts-button-disable-mask').remove();\n\n                this.disabled = false;\n                this.trigger('enable');\n            }\n\n            return this;\n        },\n\n        /**\n         * Disables the PIC\n         * @fires disable\n         * @returns {picManager}\n         */\n        disable: function disable() {\n            // @todo: find a better solution for disabling/enabling a PIC\n            var dom = this.getDom();\n            var button;\n            if (dom) {\n                // set a disabled state by adding a CSS class, then mask the button with a top-level element\n                button = dom.button.addClass('disabled');\n\n                $('<div class=\"sts-button-disable-mask\" style=\"position:absolute;z-index:10000000000000\"></div>')\n                    .appendTo(dom.tool)\n                    .offset(button.offset())\n                    .width(button.outerWidth())\n                    .height(button.outerHeight());\n\n                // also hide any sub component\n                dom.tool.find('.sts-container, .sts-menu-container').addClass('sts-hidden-container');\n\n                this.disabled = true;\n                this.trigger('disable');\n            }\n\n            return this;\n        },\n\n        /**\n         * Shows the PIC\n         * @fires show\n         * @returns {picManager}\n         */\n        show: function show() {\n            var dom = this.getDom();\n            if (dom) {\n                dom.tool.show();\n\n                this.trigger('show');\n            }\n\n            return this;\n        },\n\n        /**\n         * Hides the PIC\n         * @fires hide\n         * @returns {picManager}\n         */\n        hide: function hide() {\n            var dom = this.getDom();\n            if (dom) {\n                dom.tool.hide();\n\n                this.trigger('hide');\n            }\n\n            return this;\n        },\n\n        /**\n         * Triggers an event on the underlying DOM element\n         * @param {String} eventName\n         * @returns {picManager}\n         */\n        trigger: function trigger(eventName) {\n            var dom = this.getDom();\n            var args = _.rest(arguments, 1);\n\n            args.unshift(this);\n\n            if (dom) {\n                // trigger the event, if the tool has been moved outside of the PIC, trigger also the event on the PIC\n                dom.tool.trigger(eventName, args);\n                if (dom.broken) {\n                    dom.pic.trigger(eventName, args);\n                }\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     * The template of a PicManagerCollection instance\n     * @type {picManagerCollection}\n     */\n    var picManagerCollection = {\n        /**\n         * Creates the collection of PIC from an Item\n         *\n         * @param {QtiItem} item\n         * @returns {picManagerCollection}\n         */\n        init: function init(item) {\n            if (Element.isA(item, 'assessmentItem')) {\n                this._item = item;\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets the list of PIC managers for the PIC provided by the running item.\n         *\n         * @param {Boolean} [force] Force a list rebuild\n         * @returns {Array} Returns the list of managers for the provided PIC\n         */\n        getList: function getList(force) {\n            var self = this;\n\n            // build the list if empty\n            if (force || !self._list) {\n                self._map = {};\n                self._list = [];\n                if (self._item) {\n                    _.forEach(self._item.getElements(), function(element) {\n                        var manager;\n\n                        if (Element.isA(element, 'infoControl')) {\n                            manager = managerFactory(element, self._item);\n                            self._list.push(manager);\n                            self._map[element.serial] = manager;\n                            self._map[element.typeIdentifier] = manager;\n                        }\n                    });\n                }\n            }\n\n            return this._list;\n        },\n\n        /**\n         * Gets the manager of the first PIC matching the identifier from the list provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {Object} The manager of the PIC\n         */\n        getPic: function getPic(picId) {\n            this.getList();\n            return this._map[picId];\n        },\n\n        /**\n         * Executes an action on a particular PIC from the running item.\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @param {String} action The name of the action to call\n         * @returns {*} Returns the action result\n         */\n        execute: function execute(picId, action) {\n            var pic = this.getPic(picId);\n            if (pic && pic[action]) {\n                return pic[action].apply(pic, _.rest(arguments, 2));\n            }\n        },\n\n        /**\n         * Executes an action on each PIC provided by the running item.\n         * @param {String} action The name of the action to call\n         * @param {Function} [filter] An optional filter to reduce the list\n         * @returns {picManagerCollection}\n         */\n        executeAll: function executeAll(action, filter) {\n            var args = _.rest(arguments, 2);\n            var cb;\n\n            if (typeof filter === 'function') {\n                cb = function(pic) {\n                    if (filter.call(pic, pic) && pic[action]) {\n                        pic[action].apply(pic, args);\n                    }\n                };\n            } else {\n                cb = function(pic) {\n                    if (pic[action]) {\n                        pic[action].apply(pic, args);\n                    }\n                };\n            }\n\n            return this.each(cb);\n        },\n\n        /**\n         * Calls a callback function on each listed PIC from the running item.\n         * @param {Function} cb The callback function to apply on each listed PIC\n         * @returns {picManagerCollection}\n         */\n        each: function each(cb) {\n            _.forEach(this.getList(), cb);\n            return this;\n        },\n\n        /**\n         * Enables a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        enablePic: function enablePic(picId) {\n            this.execute(picId, 'enable');\n            return this;\n        },\n\n        /**\n         * Disables a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        disablePic: function disablePic(picId) {\n            this.execute(picId, 'disable');\n            return this;\n        },\n\n        /**\n         * Shows a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        showPic: function showPic(picId) {\n            this.execute(picId, 'show');\n            return this;\n        },\n\n        /**\n         * Hides a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        hidePic: function hidePic(picId) {\n            this.execute(picId, 'hide');\n            return this;\n        },\n\n        /**\n         * Enables all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to enable\n         * @returns {picManagerCollection}\n         */\n        enableAll: function enableAll(filter) {\n            this.executeAll('enable', filter);\n            return this;\n        },\n\n        /**\n         * Disables all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to disable\n         * @returns {picManagerCollection}\n         */\n        disableAll: function disableAll(filter) {\n            this.executeAll('disable', filter);\n            return this;\n        },\n\n        /**\n         * Shows all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to show\n         * @returns {picManagerCollection}\n         */\n        showAll: function showAll(filter) {\n            this.executeAll('show', filter);\n            return this;\n        },\n\n        /**\n         * Hides all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to hide\n         * @returns {picManagerCollection}\n         */\n        hideAll: function hideAll(filter) {\n            this.executeAll('hide', filter);\n            return this;\n        }\n    };\n\n    /**\n     * Creates a PIC manager for a particular Item.\n     * @param {Object} pic\n     * @param {QtiItem} item\n     * @returns {picManager} Returns the instance of the PIC manager\n     */\n    var managerFactory = function managerFactory(pic, item) {\n        var manager = _.clone(picManager, true);\n        return manager.init(pic, item);\n    };\n\n    /**\n     * Creates a PIC manager for a particular Item.\n     * @param {QtiItem} item\n     * @returns {picManager} Returns the instance of the PIC manager\n     */\n    var collectionFactory = function collectionFactory(item) {\n        var collection = _.clone(picManagerCollection, true);\n        return collection.init(item);\n    };\n\n    var picManager$1 = {\n        collection: collectionFactory,\n        manager: managerFactory\n    };\n\n    return picManager$1;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/userModules',['lodash', 'module'], function (_, module) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var userModules = {\n        /**\n         * Load user modules defined in the module config\n         * @param {Array} [userModules] - manually specify user modules to load instead of getting them from the module config\n         * @returns {Promise}\n         */\n        load: function load(userModules) {\n            var config = module.config();\n\n            if (!userModules || !_.isArray(userModules)) {\n                if (config && config.userModules && _.isArray(config.userModules)) {\n                    userModules = config.userModules;\n                } else {\n                    userModules = [];\n                }\n            }\n            if(!userModules.length){\n                return Promise.resolve();\n            }\n            return new Promise(function(resolve, reject) {\n                window.require(userModules, function() {\n                    _.forEach(arguments, function(dependency) {\n                        if (dependency && _.isFunction(dependency.exec)) {\n                            dependency.exec();\n                        }\n                    });\n                    resolve();\n                }, function(err) {\n                    reject(err.message);\n                });\n            });\n        }\n    };\n\n    return userModules;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory',[],function(){\n    'use strict';\n\n    /**\n     * Generic portable element provider than loads portable elements directly on the client side\n     *\n     * Sample usage :\n     * var pciProvider = sideLoadingProviderFactory(pciManifestArray);\n     * pciProvider.add('anotherPciXYZ', anotherPciXYZObject);\n     *\n     */\n    return function sideLoadingProviderFactory(portableElements){\n\n        var _registry = portableElements;\n\n        return {\n            /**\n             * Side load the portable element here\n             * @param id\n             * @param pathToManifest\n             */\n            add : function add(id, portableElement){\n                _registry[id] = portableElement;\n                return this;\n            },\n            /**\n             * Implementation of the mandatory method load() of a portable element provider\n             *\n             * @returns {Promise} resolved when the added pci registered through their manifest are loaded\n             */\n            load : function load(){\n                return _registry;\n            }\n        };\n    };\n});\n","define('taoQtiItem/reviewRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (lodash, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    lodash = lodash && Object.prototype.hasOwnProperty.call(lodash, 'default') ? lodash['default'] : lodash;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const itemThemes = themes.get('items');\n    const moduleConfig = module.config();\n\n    //Create asset manager stack\n    const assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: url => {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base ||\n                            (itemThemes.available && itemThemes.available.map(val => val.path).includes(url.path)))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    const locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n\n        // Interactions/Choices customised for reviewRenderer\n\n        choiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/reviewRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        hottext: 'taoQtiItem/reviewRenderer/renderers/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        associableHotspot: false,\n        gapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicOrderInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        uploadInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/UploadInteraction',\n        customInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/PortableCustomInteraction',\n        mediaInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MediaInteraction',\n\n        // Interactions/Choices inherited from qtiCommonRenderer\n\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    var config = {\n        name: 'reviewRenderer',\n        locations,\n        options: {\n            assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/reviewRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n\t *\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/rendererProvider',['taoQtiItem/reviewRenderer/renderers/Renderer'], function (ReviewRenderer) { 'use strict';\n\n    ReviewRenderer = ReviewRenderer && Object.prototype.hasOwnProperty.call(ReviewRenderer, 'default') ? ReviewRenderer['default'] : ReviewRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * This is a provider wrapper for reviewRenderer\n     */\n    var rendererProvider = {\n        name: 'reviewRenderer',\n        init: () => {},\n        getRenderer: () => ReviewRenderer\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/runner/rendererStrategies',['core/logger', 'core/providerRegistry', 'taoQtiItem/qtiCommonRenderer/renderers/rendererProvider', 'taoQtiItem/reviewRenderer/renderers/rendererProvider'], function (loggerFactory, providerRegistry, qtiRenderer, reviewRenderer) { 'use strict';\n\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    providerRegistry = providerRegistry && Object.prototype.hasOwnProperty.call(providerRegistry, 'default') ? providerRegistry['default'] : providerRegistry;\n    qtiRenderer = qtiRenderer && Object.prototype.hasOwnProperty.call(qtiRenderer, 'default') ? qtiRenderer['default'] : qtiRenderer;\n    reviewRenderer = reviewRenderer && Object.prototype.hasOwnProperty.call(reviewRenderer, 'default') ? reviewRenderer['default'] : reviewRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const logger = loggerFactory('taoQtiItem/runner/rendererStrategies');\n\n    /**\n     * The default renderer provider. It should be the QTI common renderer.\n     * @type string\n     */\n    const defaultRenderer = qtiRenderer.name;\n\n    /**\n     * Alias mapping for particular names.\n     * Gives the appropriate renderer based on the IMS view property.\n     * Read more about IMS view here:\n     * https://www.imsglobal.org/question/qtiv2p2p2/QTIv2p2p2-ASI-InformationModelv1p0/imsqtiv2p2p2_asi_v1p0_InfoModelv1p0.html#FigEnumeratedListClass_DataModel_View\n     *\n     * @type {Object}\n     */\n    const alias = {\n        author: qtiRenderer.name,\n        candidate: qtiRenderer.name,\n        proctor: reviewRenderer.name,\n        scorer: reviewRenderer.name,\n        testConstructor: qtiRenderer.name,\n        tutor: reviewRenderer.name\n    };\n\n    /**\n     * Gets the name of an existing renderer.\n     * If the wanted renderer does not exist, it will fallback to the default one.\n     * A warning will be issue for unknown names.\n     * @param {String} name\n     * @returns {String}\n     */\n    function getProviderName(name) {\n        const providers = rendererStrategies.getAvailableProviders();\n\n        if (providers.includes(name)) {\n            return name;\n        }\n\n        if (alias[name]) {\n            return alias[name];\n        }\n\n        if (name) {\n            logger.warn(`Unknown QTI Item Runner renderer ${name}!`);\n        }\n\n        return defaultRenderer;\n    }\n\n    /**\n     * This renderer manager registers two different renderers at the moment:\n     * - qtiCommonRenderer: Standard renderer used for test taker view\n     * - reviewRenderer: This renderer is meant to render items in review mode (which is ready-only with some enhancement)\n     *\n     * @param {string} rendererName\n     * @returns {*|{init(): *, getRenderer(): *}|init}\n     */\n    function rendererStrategies(rendererName) {\n        const providerName = getProviderName(rendererName);\n        const provider = rendererStrategies.getProvider(providerName);\n        const renderer = {\n            /**\n             * Initializes the renderer.\n             * @returns {renderer}\n             */\n            init() {\n                provider.init.call(this);\n                return this;\n            },\n\n            /**\n             * Gets the renderer's name\n             * @returns {String}\n             */\n            getName() {\n                return provider.name;\n            },\n\n            /**\n             * Gets the renderer\n             * @returns {renderer}\n             */\n            getRenderer() {\n                return provider.getRenderer();\n            }\n        };\n\n        return renderer.init();\n    }\n\n    providerRegistry(rendererStrategies);\n\n    rendererStrategies.registerProvider(qtiRenderer.name, qtiRenderer);\n    rendererStrategies.registerProvider(reviewRenderer.name, reviewRenderer);\n\n    return rendererStrategies;\n\n});\n\n","define('taoQtiItem/runner/provider/qti',['jquery', 'lodash', 'i18n', 'context', 'taoQtiItem/qtiItem/core/Loader', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/portableElementRegistry/ciRegistry', 'taoQtiItem/portableElementRegistry/icRegistry', 'taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory', 'taoQtiItem/runner/rendererStrategies', 'taoQtiItem/runner/provider/manager/picManager', 'taoQtiItem/runner/provider/manager/userModules', 'taoQtiItem/qtiItem/helper/modalFeedback', 'taoItems/assets/manager', 'util/locale'], function ($, _, __, context, QtiLoader, Element, ciRegistry, icRegistry, sideLoadingProviderFactory, rendererStrategies, picManager, userModules, modalFeedbackHelper, manager, locale) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    QtiLoader = QtiLoader && Object.prototype.hasOwnProperty.call(QtiLoader, 'default') ? QtiLoader['default'] : QtiLoader;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n    sideLoadingProviderFactory = sideLoadingProviderFactory && Object.prototype.hasOwnProperty.call(sideLoadingProviderFactory, 'default') ? sideLoadingProviderFactory['default'] : sideLoadingProviderFactory;\n    rendererStrategies = rendererStrategies && Object.prototype.hasOwnProperty.call(rendererStrategies, 'default') ? rendererStrategies['default'] : rendererStrategies;\n    picManager = picManager && Object.prototype.hasOwnProperty.call(picManager, 'default') ? picManager['default'] : picManager;\n    userModules = userModules && Object.prototype.hasOwnProperty.call(userModules, 'default') ? userModules['default'] : userModules;\n    modalFeedbackHelper = modalFeedbackHelper && Object.prototype.hasOwnProperty.call(modalFeedbackHelper, 'default') ? modalFeedbackHelper['default'] : modalFeedbackHelper;\n    locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\n\n    /**\n     * @exports taoQtiItem/runner/provider/qti\n     */\n    var qtiItemRuntimeProvider = {\n        init: function (itemData, done) {\n            var self = this;\n\n            var rendererOptions = _.merge(\n                {\n                    assetManager: this.assetManager\n                },\n                _.pick(this.options, ['themes', 'preload', 'view'])\n            );\n\n            const Renderer = rendererStrategies(rendererOptions.view).getRenderer();\n\n            this._renderer = new Renderer(rendererOptions);\n\n            this._loader = new QtiLoader();\n\n            this._loader.loadItemData(itemData, function (item) {\n                if (!item) {\n                    return self.trigger('error', __('Unable to load item from the given data.'));\n                }\n\n                self._item = item;\n                self._renderer.load(function () {\n                    self._item.setRenderer(this);\n\n                    done();\n                }, this.getLoadedClasses());\n            });\n        },\n\n        render: function (elt, done, options) {\n            var self = this;\n\n            options = _.defaults(options || {}, { state: {} });\n\n            if (this._item) {\n                try {\n                    //render item html\n                    elt.innerHTML = this._item.render({});\n\n                    // apply RTL layout according to item language\n                    const $item = $(elt).find('.qti-item');\n                    const $itemBody = $item.find('.qti-itemBody');\n                    const itemDir = $itemBody.attr('dir');\n                    if (!itemDir) {\n                        const itemLang = $item.attr('lang');\n                        $itemBody.attr('dir', locale.getLanguageDirection(itemLang));\n                    }\n                    if ($itemBody.hasClass('writing-mode-vertical-rl')) {\n                        document.body.classList.add('item-writing-mode-vertical-rl');\n                    }\n                } catch (e) {\n                    self.trigger('error', __('Error in template rendering: %s', e.message));\n                }\n                try {\n                    if (options.portableElements) {\n                        //if the option to directly load portable elements is provided, use only this one\n                        if (options.portableElements.pci) {\n                            ciRegistry.resetProviders();\n                            ciRegistry.registerProvider(\n                                'pciDeliveryProvider',\n                                sideLoadingProviderFactory(options.portableElements.pci)\n                            );\n                        }\n                        if (options.portableElements.pic) {\n                            icRegistry.resetProviders();\n                            icRegistry.registerProvider(\n                                'picDeliveryProvider',\n                                sideLoadingProviderFactory(options.portableElements.pic)\n                            );\n                        }\n                    }\n\n                    // Race between postRendering and timeout\n                    // postRendering waits for everything to be resolved or one reject\n                    Promise.race([\n                        Promise.all(this._item.postRender(options)),\n                        new Promise(function (resolve, reject) {\n                            _.delay(\n                                reject,\n                                timeout,\n                                new Error(__('It seems that there is an error during item loading. The error has been reported. The test will be paused.'))\n                            );\n                        })\n                    ])\n                        .then(function () {\n                            $(elt)\n                                .off('responseChange')\n                                .on('responseChange', function () {\n                                    self.trigger('statechange', self.getState());\n                                    self.trigger('responsechange', self.getResponses());\n                                })\n                                .off('endattempt')\n                                .on('endattempt', function (e, responseIdentifier) {\n                                    self.trigger('endattempt', responseIdentifier || e.originalEvent.detail);\n                                })\n                                .off('themechange')\n                                .on('themechange', function (e, themeName) {\n                                    var themeLoader = self._renderer.getThemeLoader();\n                                    themeName = themeName || e.originalEvent.detail;\n                                    if (themeLoader) {\n                                        themeLoader.change(themeName);\n                                    }\n                                });\n\n                            /**\n                             * Lists the PIC provided by this item.\n                             * @event qti#listpic\n                             */\n                            self.trigger('listpic', picManager.collection(self._item));\n\n                            return userModules.load().then(done);\n                        })\n                        .catch(function (renderingError) {\n                            done(); // in case of postRendering issue, we are also done\n                            const errorMsg = renderingError instanceof Error\n                                ? renderingError.message\n                                : renderingError;\n                            const error = new Error(__('Error in post rendering: %s', errorMsg));\n                            error.unrecoverable = true;\n                            self.trigger('error', error);\n                        });\n                } catch (err) {\n                    self.trigger('error', __('Error in post rendering: %s', err.message));\n                }\n            }\n        },\n\n        /**\n         * Clean up stuffs\n         */\n        clear: function (elt, done) {\n            var self = this;\n\n            if (self._item) {\n                Promise.all(\n                    this._item.getInteractions().map(function (interaction) {\n                        return interaction.clear();\n                    })\n                )\n                    .then(function () {\n                        self._item.clear();\n\n                        $(elt).off('responseChange').off('endattempt').off('themechange').off('feedback').empty();\n\n                        if (self._renderer) {\n                            self._renderer.unload();\n                        }\n\n                        document.body.classList.remove('item-writing-mode-vertical-rl');\n\n                        self._item = null;\n                    })\n                    .then(done)\n                    .catch(function (err) {\n                        self.trigger('error', __('Something went wrong while destroying an interaction: %s', err.message));\n                    });\n            } else {\n                done();\n            }\n        },\n\n        /**\n         * Get state implementation.\n         * @returns {Object} that represents the state\n         */\n        getState: function getState() {\n            var state = {};\n            if (this._item) {\n                //get the state from interactions\n                _.forEach(this._item.getInteractions(), function (interaction) {\n                    state[interaction.attr('responseIdentifier')] = interaction.getState();\n                });\n\n                //get the state from infoControls\n                _.forEach(this._item.getElements(), function (element) {\n                    if (Element.isA(element, 'infoControl') && element.attr('id')) {\n                        state.pic = state.pic || {};\n                        state.pic[element.attr('id')] = element.getState();\n                    }\n                });\n            }\n            return state;\n        },\n\n        /**\n         * Set state implementation.\n         * @param {Object} state - the state\n         */\n        setState: function setState(state) {\n            if (this._item && state) {\n                //set interaction state\n                _.forEach(this._item.getInteractions(), function (interaction) {\n                    var id = interaction.attr('responseIdentifier');\n                    if (id && state[id]) {\n                        interaction.setState(state[id]);\n                    }\n                });\n\n                //set info control state\n                if (state.pic) {\n                    _.forEach(this._item.getElements(), function (element) {\n                        if (Element.isA(element, 'infoControl') && state.pic[element.attr('id')]) {\n                            element.setState(state.pic[element.attr('id')]);\n                        }\n                    });\n                }\n            }\n        },\n\n        getResponses: function () {\n            var responses = {};\n            if (this._item) {\n                _.reduce(\n                    this._item.getInteractions(),\n                    function (res, interaction) {\n                        responses[interaction.attr('responseIdentifier')] = interaction.getResponse();\n                        return responses;\n                    },\n                    responses\n                );\n            }\n            return responses;\n        },\n\n        renderFeedbacks: function (feedbacks, itemSession, done) {\n            var self = this;\n\n            var _renderer = self._item.getRenderer();\n            var _loader = new QtiLoader(self._item);\n\n            // loading feedbacks from response into the current item\n            _loader.loadElements(feedbacks, function (item) {\n                _renderer.load(function () {\n                    var renderingQueue = modalFeedbackHelper.getFeedbacks(item, itemSession);\n\n                    done(renderingQueue);\n                }, this.getLoadedClasses());\n            });\n        }\n    };\n\n    return qtiItemRuntimeProvider;\n\n});\n\n","define('taoQtiItem/runner/qtiItemRunner',['taoItems/runner/api/itemRunner', 'taoQtiItem/runner/provider/qti'], function (itemRunner, qtiRuntimeProvider) { 'use strict';\n\n\titemRunner = itemRunner && Object.prototype.hasOwnProperty.call(itemRunner, 'default') ? itemRunner['default'] : itemRunner;\n\tqtiRuntimeProvider = qtiRuntimeProvider && Object.prototype.hasOwnProperty.call(qtiRuntimeProvider, 'default') ? qtiRuntimeProvider['default'] : qtiRuntimeProvider;\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n\t *\n\t */\n\n\t//register the QTI Provider\n\titemRunner.register('qti', qtiRuntimeProvider);\n\n\treturn itemRunner;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2024 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Helper for loading xinclude elements for PCI\n */\ndefine('taoQtiItem/qtiCreator/helper/xincludeLoader',[],function () {\n    'use strict';\n\n    function convertXMLToHTML(xmlNode) {\n        const htmlNode = document.createElement(xmlNode.nodeName);\n        Array.from(xmlNode.attributes).forEach(attr => {\n            htmlNode.setAttribute(attr.name, attr.value);\n        });\n        xmlNode.childNodes.forEach(childNode => {\n            if (childNode.nodeType === Node.ELEMENT_NODE) {\n                htmlNode.appendChild(convertXMLToHTML(childNode));\n            } else if (childNode.nodeType === Node.TEXT_NODE) {\n                htmlNode.appendChild(document.createTextNode(childNode.nodeValue));\n            }\n        });\n\n        return htmlNode;\n    }\n\n    function parseXmlToDom(xmlString) {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\n\n        return convertXMLToHTML(xmlDoc.documentElement);\n    }\n\n    function loadXIncludeElement(xiIncludeElementHref, baseUrl) {\n        if (!xiIncludeElementHref || !baseUrl) {\n            return Promise.reject(new Error('href or baseUrl is missing'));\n        }\n        return new Promise((resolve, reject) => {\n            const fileUrl = `text!${baseUrl}${xiIncludeElementHref}`;\n            require.undef(fileUrl);\n            require([fileUrl], stimulusXml => {\n                const data = parseXmlToDom(stimulusXml);\n                resolve(data);\n            }, () => {\n                reject(new Error('File not found'));\n            });\n        });\n    }\n\n    function processContentItem(contentItem, baseUrl) {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = contentItem;\n        const xiIncludeElements = tempDiv.querySelectorAll('xi\\\\:include');\n\n        const xiIncludePromises = Array.from(xiIncludeElements).flatMap(xiElement => {\n            const xiIncludeElementHref = xiElement.getAttribute('href')\n            if (!xiIncludeElementHref) {\n                return [];\n            }\n            return loadXIncludeElement(xiIncludeElementHref, baseUrl).then(newContent => {\n                xiElement.replaceWith(newContent);\n            });\n        });\n\n        return Promise.all(xiIncludePromises).then(() => tempDiv.innerHTML);\n    }\n\n    return {\n        name: 'xincludeLoader',\n        loadXIncludeElement,\n        parseXmlToDom,\n        loadByElementPages(pages, baseUrl) {\n            if (!baseUrl) {\n                return Promise.reject(new Error('baseUrl is missing'));\n            }\n            function containsXIInclude(contentItem) {\n                const tempDiv = document.createElement('div');\n                tempDiv.innerHTML = contentItem;\n                const xiIncludeElements = tempDiv.querySelectorAll('xi\\\\:include');\n                return xiIncludeElements.length > 0;\n            }\n            const pageUpdatePromises = pages.map(page => {\n                const hasXIInclude = page.content.some(containsXIInclude);\n                if (!hasXIInclude) {\n                    return Promise.resolve(page);\n                }\n                const contentPromises = page.content.map(contentItem => processContentItem(contentItem, baseUrl));\n                return Promise.all(contentPromises).then(updatedContentItems => {\n                    page.content = updatedContentItems;\n                    return page;\n                });\n            });\n\n            return Promise.all(pageUpdatePromises);\n        }\n    };\n});\n\n","\ndefine(\"taoQtiItem/loader/taoQtiItemRunner.bundle\", function(){});\n","define(\"taoQtiItem/loader/taoQtiItemRunner.min\", [\"taoItems/loader/taoItemsRunner.min\"], function(){});\n"],"mappings":"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"}